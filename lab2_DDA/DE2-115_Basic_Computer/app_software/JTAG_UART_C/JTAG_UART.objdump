
C:/ECE5760_Epiphyte/lab2_DDA/DE2-115_Basic_Computer/app_software/JTAG_UART_C/JTAG_UART.elf:     file format elf32-littlenios2
C:/ECE5760_Epiphyte/lab2_DDA/DE2-115_Basic_Computer/app_software/JTAG_UART_C/JTAG_UART.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000168

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000f2cc memsz 0x0000f2cc flags r-x
    LOAD off    0x000102ec vaddr 0x0000f2ec paddr 0x00010df8 align 2**12
         filesz 0x00001b0c memsz 0x00001b0c flags rw-
    LOAD off    0x00012904 vaddr 0x00012904 paddr 0x00012904 align 2**12
         filesz 0x00000000 memsz 0x0000025c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000148  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000ece4  00000168  00000168  00001168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000004a0  0000ee4c  0000ee4c  0000fe4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b0c  0000f2ec  00010df8  000102ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000025c  00012904  00012904  00012904  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00011df8  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000e78  00000000  00000000  00011e20  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 0000156b  00000000  00000000  00012c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000251a8  00000000  00000000  00014203  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000094d3  00000000  00000000  000393ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00016a24  00000000  00000000  0004287e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001990  00000000  00000000  000592a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000030c6  00000000  00000000  0005ac34  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00010983  00000000  00000000  0005dcfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0006e680  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000d40  00000000  00000000  0006e690  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007251c  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0007251f  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00072522  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00072523  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00072524  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00072528  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0007252c  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00072530  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00072539  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00072542  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000b  00000000  00000000  0007254b  2**0
                  CONTENTS, READONLY
 28 .jdi          00004aa8  00000000  00000000  00072556  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     00047e89  00000000  00000000  00076ffe  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000168 l    d  .text	00000000 .text
0000ee4c l    d  .rodata	00000000 .rodata
0000f2ec l    d  .rwdata	00000000 .rwdata
00012904 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000001a0 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 JTAG_UART.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 atof.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strstr.c
000014e4 l     F .text	00000134 critical_factorization
00000000 l    df *ABS*	00000000 strtod.c
00001c78 l     F .text	00000048 match
0000f708 l     O .rwdata	00000014 fpi.1950
0000ef4c l     O .rodata	00000028 tinytens
0000f6f4 l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 vfprintf.c
000033cc l     F .text	00000058 __sprint_r
0000efe4 l     O .rodata	00000010 blanks.3452
0000efd4 l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00005448 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00006e70 l     F .text	00000058 std
00006f7c l     F .text	00000008 __fp_lock
00006f84 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00007bc0 l     F .text	00000024 htinit
00007c4c l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
000084f8 l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 impure.c
0000f71c l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
00010dcc l     O .rwdata	00000004 charset
0000f034 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000f17c l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0000bde4 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0000cf98 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
00000000 l    df *ABS*	00000000 alt_dev.c
0000d824 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_lseek.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00010de8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000fcd0 l     O .rwdata	00001060 JTAG_UART
00010d30 l     O .rwdata	0000002c DDA_Options
00010d5c l     O .rwdata	0000002c Green_LEDs
00010d88 l     O .rwdata	0000002c HEX3_HEX0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000df74 l     F .text	00000054 altera_avalon_jtag_uart_timeout
0000e048 l     F .text	00000134 altera_avalon_jtag_uart_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000e700 l     F .text	00000078 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0000ec80 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
00001328 g     F .text	0000001c putchar
00009160 g     F .text	00000094 _mprec_log10
0000924c g     F .text	00000088 __any_on
0000adac g     F .text	00000070 _isatty_r
0000f154 g     O .rodata	00000028 __mprec_tinytens
0000dad0 g     F .text	00000050 alt_main
0000134c g     F .text	000000a0 _puts_r
00012a60 g     O .bss	00000100 alt_irq
0000ae1c g     F .text	00000078 _lseek_r
00010df8 g       *ABS*	00000000 __flash_rwdata_start
0000c904 g     F .text	00000088 __eqdf2
00012b60 g       *ABS*	00000000 __alt_heap_start
000012b0 g     F .text	00000044 printf
0000a638 g     F .text	00000068 __sseek
00006ed8 g     F .text	000000a4 __sinit
0000a918 g     F .text	00000130 __swbuf_r
000087b0 g     F .text	00000084 _setlocale_r
00006fd8 g     F .text	0000009c __sfmoreglue
0000db24 g     F .text	00000004 __malloc_unlock
00001cc0 g     F .text	000015cc _strtod_r
00008bdc g     F .text	000000e0 memmove
00006fc8 g     F .text	00000010 _cleanup
000092d4 g     F .text	000000bc _Balloc
000006ac g     F .text	00000094 __fixsfsi
0000ca14 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
0000ad38 g     F .text	00000074 _fstat_r
00012910 g     O .bss	00000004 errno
0000087c g     F .text	0000002c __make_fp
00012924 g     O .bss	00000004 alt_argv
00018db4 g       *ABS*	00000000 _gp
0000fb50 g     O .rwdata	00000180 alt_fd_list
00001344 g     F .text	00000008 _putchar_r
0000ea7c g     F .text	00000070 alt_find_dev
00008b3c g     F .text	000000a0 memcpy
00008544 g     F .text	00000248 __hexnan
00006fbc g     F .text	0000000c _cleanup_r
0000cc34 g     F .text	000000f8 __floatsidf
0000e778 g     F .text	00000098 alt_io_redirect
0000cb24 g     F .text	00000088 __ltdf2
000013ec g     F .text	00000014 puts
000090b0 g     F .text	000000b0 __ratio
0000e1f0 g     F .text	00000168 altera_avalon_jtag_uart_read
00000b5c g     F .text	00000014 malloc
000012f4 g     F .text	00000034 _printf_r
0000d0d4 g     F .text	00000008 __udivsi3
0000d8c0 g     F .text	00000098 isatty
0000f064 g     O .rodata	000000c8 __mprec_tens
0000878c g     F .text	00000008 __locale_charset
0000af0c g     F .text	000000a4 __fixunsdfsi
00012904 g     O .bss	00000004 __malloc_top_pad
00010dc8 g     O .rwdata	00000004 __mb_cur_max
00008794 g     F .text	0000000c _localeconv_r
00009a38 g     F .text	0000003c __i2b
000075a4 g     F .text	0000049c __sfvwrite_r
00001400 g     F .text	00000070 _sbrk_r
0000ae94 g     F .text	00000078 _read_r
0000fb1c g     O .rwdata	0000000c __lc_ctype
00010de0 g     O .rwdata	00000004 alt_max_fd
000008a8 g     F .text	00000138 __unpack_d
0000ac14 g     F .text	00000110 _fclose_r
00006e3c g     F .text	00000034 fflush
00012908 g     O .bss	00000004 __malloc_max_sbrked_mem
0000c274 g     F .text	00000074 __adddf3
0000bc7c g     F .text	00000078 __nesf2
00008f90 g     F .text	00000120 __b2d
0000b61c g     F .text	00000660 __umoddi3
0000da1c g     F .text	000000b4 lseek
00010dc4 g     O .rwdata	00000004 _global_impure_ptr
00009fcc g     F .text	000005f4 _realloc_r
00012b60 g       *ABS*	00000000 __bss_end
0000e698 g     F .text	00000068 alt_iic_isr_register
0000e9c8 g     F .text	000000ac alt_tick
00012960 g     O .bss	00000100 __hexdig
0000afb0 g     F .text	0000066c __udivdi3
0000f12c g     O .rodata	00000028 __mprec_bigtens
00009cc0 g     F .text	00000120 __s2b
0000ce04 g     F .text	00000194 __floatunsidf
00008eb0 g     F .text	00000060 __mcmp
00006fa4 g     F .text	00000018 __fp_lock_all
0000e5e0 g     F .text	00000018 alt_ic_irq_enabled
0000e994 g     F .text	00000034 alt_alarm_stop
0001292c g     O .bss	00000004 alt_irq_active
000000ec g     F .exceptions	0000007c alt_irq_handler
0000fb28 g     O .rwdata	00000028 alt_dev_null
000007b4 g     F .text	000000c8 __unpack_f
0000e568 g     F .text	00000004 alt_dcache_flush_all
00008d7c g     F .text	00000070 __hi0bits
0000cd2c g     F .text	000000d8 __fixdfsi
000033b0 g     F .text	0000001c strtod
00010df8 g       *ABS*	00000000 __ram_rwdata_end
00010dd8 g     O .rwdata	00000008 alt_dev_list
0000dcf4 g     F .text	00000110 write
00009ee4 g     F .text	000000e8 _putc_r
00000b40 g     F .text	00000008 atof
0000bcf4 g     F .text	00000078 __gtsf2
0000f2ec g       *ABS*	00000000 __ram_rodata_end
0000d82c g     F .text	00000094 fstat
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
0000cbac g     F .text	00000088 __ledf2
00009ba0 g     F .text	00000120 __pow5mult
00012914 g     O .bss	00000004 __nlocale_changed
0000d0dc g     F .text	00000008 __umodsi3
00012b60 g       *ABS*	00000000 end
000009e0 g     F .text	00000160 __pack_f
0000dfc8 g     F .text	00000080 altera_avalon_jtag_uart_init
08000000 g       *ABS*	00000000 __alt_stack_pointer
0000d240 g     F .text	00000080 __clzsi2
0000e358 g     F .text	0000017c altera_avalon_jtag_uart_write
00006ec8 g     F .text	00000004 __sfp_lock_acquire
000089e4 g     F .text	000000e4 memchr
00003424 g     F .text	00001ec4 ___vfprintf_internal_r
00007290 g     F .text	00000314 _free_r
0000ec84 g     F .text	000001b0 __call_exitprocs
00012918 g     O .bss	00000004 __mlocale_changed
00010dbc g     O .rwdata	00000004 __malloc_sbrk_base
00000168 g     F .text	0000003c _start
00012930 g     O .bss	00000004 _alt_tick_rate
00001618 g     F .text	00000660 strstr
00009698 g     F .text	0000014c __lshift
00012934 g     O .bss	00000004 _alt_nticks
0000db28 g     F .text	00000114 read
0000de24 g     F .text	00000080 alt_sys_init
000097e4 g     F .text	00000254 __multiply
0000df3c g     F .text	00000038 altera_avalon_jtag_uart_close
0000d0e4 g     F .text	00000038 __mulsi3
0000f2ec g       *ABS*	00000000 __ram_rwdata_start
0000ee4c g       *ABS*	00000000 __ram_rodata_start
00012938 g     O .bss	00000028 __malloc_current_mallinfo
00009390 g     F .text	0000017c __d2b
0000df14 g     F .text	00000028 altera_avalon_jtag_uart_read_fd
0000eba8 g     F .text	000000a0 alt_get_fd
0000d67c g     F .text	000000c8 __fpcmp_parts_d
0000aba4 g     F .text	00000070 _close_r
00008ac8 g     F .text	00000074 memcmp
0000dec4 g     F .text	00000028 altera_avalon_jtag_uart_close_fd
00012b60 g       *ABS*	00000000 __alt_stack_base
0000dea4 g     F .text	00000020 altera_avalon_jtag_uart_ioctl_fd
0000530c g     F .text	0000013c __swsetup_r
0000c6ac g     F .text	00000258 __divdf3
00007074 g     F .text	000000f0 __sfp
000091f4 g     F .text	00000058 __copybits
0000f2ec g     O .rwdata	00000408 __malloc_av_
00006ed4 g     F .text	00000004 __sinit_lock_release
0000c2e8 g     F .text	000003c4 __muldf3
0000a71c g     F .text	00000060 __sread
0000eaec g     F .text	000000bc alt_find_file
0000e56c g     F .text	00000070 alt_dev_llist_insert
0000db20 g     F .text	00000004 __malloc_lock
0000dca4 g     F .text	00000050 sbrk
00006c40 g     F .text	000001fc _fflush_r
0000aadc g     F .text	000000c8 _calloc_r
00012904 g       *ABS*	00000000 __bss_start
00008cbc g     F .text	00000098 memset
000001c8 g     F .text	000004e4 main
00012928 g     O .bss	00000004 alt_envp
0001290c g     O .bss	00000004 __malloc_max_total_mem
0000deec g     F .text	00000028 altera_avalon_jtag_uart_write_fd
0000aa48 g     F .text	0000001c __swbuf
0000bd6c g     F .text	00000078 __ltsf2
0000a630 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
0000ad24 g     F .text	00000014 fclose
00000740 g     F .text	00000074 __truncdfsf2
0000568c g     F .text	000015b4 _dtoa_r
00000b70 g     F .text	00000740 _malloc_r
00010de4 g     O .rwdata	00000004 alt_errno
00007b08 g     F .text	000000b8 _fwalk
00010db4 g     O .rwdata	00000004 dda_ptr
00009de0 g     F .text	00000104 putc
0000d014 g     F .text	00000060 __divsi3
0000f188 g     O .rodata	00000014 __thenan_df
00007164 g     F .text	0000012c _malloc_trim_r
0000a85c g     F .text	000000bc strcmp
0000ee4c g       *ABS*	00000000 __flash_rodata_start
0000c98c g     F .text	00000088 __nedf2
0000de04 g     F .text	00000020 alt_irq_init
0000dc3c g     F .text	00000068 alt_release_fd
0000f19c g     O .rodata	00000100 __clz_tab
0001291c g     O .bss	00000004 _PathLocale
0000328c g     F .text	00000124 strtof
0000aa64 g     F .text	00000078 _write_r
00008834 g     F .text	0000001c setlocale
00010dc0 g     O .rwdata	00000004 _impure_ptr
00012920 g     O .bss	00000004 alt_argc
00000020 g       .exceptions	00000000 alt_irq_entry
00008f10 g     F .text	00000080 __ulp
0000a5c0 g     F .text	00000040 __isinfd
00006f8c g     F .text	00000018 __fp_unlock_all
00010dd0 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
000087a0 g     F .text	00000010 localeconv
0000e678 g     F .text	00000020 alt_ic_isr_register
00007be4 g     F .text	00000068 __hexdig_init
00010df8 g       *ABS*	00000000 _edata
00012b60 g       *ABS*	00000000 _end
00000168 g       *ABS*	00000000 __ram_exceptions_end
0000e17c g     F .text	00000074 altera_avalon_jtag_uart_ioctl
0000e638 g     F .text	00000040 alt_ic_irq_disable
0000a6a0 g     F .text	0000007c __swrite
00010db8 g     O .rwdata	00000004 __malloc_trim_threshold
0000ea74 g     F .text	00000008 altera_nios2_qsys_irq_init
0000ec48 g     F .text	00000038 exit
00007a40 g     F .text	000000c8 _fwalk_reent
0000950c g     F .text	0000018c __mdiff
0000d074 g     F .text	00000060 __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00006ecc g     F .text	00000004 __sfp_lock_release
0000d2c0 g     F .text	000000a8 __fpcmp_parts_f
0000ee34 g     F .text	00000014 _exit
0000a600 g     F .text	00000030 __isnand
0000e4d4 g     F .text	00000094 alt_alarm_start
0000d11c g     F .text	00000124 __muldi3
00008850 g     F .text	00000194 __smakebuf_r
00001470 g     F .text	00000074 strlen
0000e810 g     F .text	00000184 open
0000ca9c g     F .text	00000088 __gedf2
00007cfc g     F .text	000007fc __gethex
0000e5dc g     F .text	00000004 alt_icache_flush_all
0000a77c g     F .text	000000e0 strchr
00010dec g     O .rwdata	00000004 alt_priority_mask
0000e5f8 g     F .text	00000040 alt_ic_irq_enable
000052e8 g     F .text	00000024 __vfprintf_internal
0000c1f4 g     F .text	00000080 __subdf3
000001a4 g     F .text	00000024 put_jtag
00008dec g     F .text	000000c4 __lo0bits
00010df0 g     O .rwdata	00000008 alt_alarm_list
09000000 g       *ABS*	00000000 __alt_mem_Onchip_memory
0000d744 g     F .text	000000e0 close
0000d958 g     F .text	000000c4 alt_load
0000d368 g     F .text	00000314 __pack_d
00000b48 g     F .text	00000014 free
00006ed0 g     F .text	00000004 __sinit_lock_acquire
00009a74 g     F .text	0000012c __multadd
00008d54 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08405a14 	ori	at,at,360
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
  44:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000ec0 	call	ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000306 	br	98 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  94:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  98:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  9c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
  c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
  e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  e8:	ef80083a 	eret

000000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  ec:	defffe04 	addi	sp,sp,-8
  f0:	dfc00115 	stw	ra,4(sp)
  f4:	dc000015 	stw	r16,0(sp)
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  f8:	000d313a 	rdctl	r6,ipending
  fc:	04000074 	movhi	r16,1
 100:	840a9804 	addi	r16,r16,10848
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 104:	3080004c 	andi	r2,r6,1
 108:	1005003a 	cmpeq	r2,r2,zero
 10c:	10000a1e 	bne	r2,zero,138 <alt_irq_handler+0x4c>
 110:	0009883a 	mov	r4,zero
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 114:	200490fa 	slli	r2,r4,3
 118:	1405883a 	add	r2,r2,r16
 11c:	10c00017 	ldw	r3,0(r2)
 120:	11000117 	ldw	r4,4(r2)
 124:	183ee83a 	callr	r3
 128:	0005313a 	rdctl	r2,ipending

    } while (1);

    active = alt_irq_pending ();
    
  } while (active);
 12c:	10000a26 	beq	r2,zero,158 <alt_irq_handler+0x6c>
 130:	100d883a 	mov	r6,r2
 134:	003ff306 	br	104 <alt_irq_handler+0x18>
 138:	00c00044 	movi	r3,1
 13c:	0009883a 	mov	r4,zero
 140:	180b883a 	mov	r5,r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 144:	18c7883a 	add	r3,r3,r3
      i++;
 148:	2149883a 	add	r4,r4,r5
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 14c:	30c4703a 	and	r2,r6,r3
 150:	103ff01e 	bne	r2,zero,114 <alt_irq_handler+0x28>
 154:	003ffb06 	br	144 <alt_irq_handler+0x58>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 158:	dfc00117 	ldw	ra,4(sp)
 15c:	dc000017 	ldw	r16,0(sp)
 160:	dec00204 	addi	sp,sp,8
 164:	f800283a 	ret

Disassembly of section .text:

00000168 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     168:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
     16c:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
     170:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     174:	d6a36d14 	ori	gp,gp,36276
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     178:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     17c:	108a4114 	ori	r2,r2,10500

    movhi r3, %hi(__bss_end)
     180:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     184:	18cad814 	ori	r3,r3,11104

    beq r2, r3, 1f
     188:	10c00326 	beq	r2,r3,198 <_start+0x30>

0:
    stw zero, (r2)
     18c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     190:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     194:	10fffd36 	bltu	r2,r3,18c <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     198:	000d9580 	call	d958 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     19c:	000dad00 	call	dad0 <alt_main>

000001a0 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     1a0:	003fff06 	br	1a0 <alt_after_alt_main>

000001a4 <put_jtag>:
 * Subroutine to send a character to the JTAG UART
********************************************************************************/
void put_jtag( volatile int * JTAG_UART_ptr, char c )
{
	int control;
	control = *(JTAG_UART_ptr + 1);			// read the JTAG_UART control register
     1a4:	20800104 	addi	r2,r4,4
     1a8:	10800017 	ldw	r2,0(r2)
	if (control & 0xFFFF0000)					// if space, then echo character, else ignore 
     1ac:	10bfffec 	andhi	r2,r2,65535
     1b0:	10000426 	beq	r2,zero,1c4 <put_jtag+0x20>
		*(JTAG_UART_ptr) = c;
     1b4:	28803fcc 	andi	r2,r5,255
     1b8:	1080201c 	xori	r2,r2,128
     1bc:	10bfe004 	addi	r2,r2,-128
     1c0:	20800015 	stw	r2,0(r4)
     1c4:	f800283a 	ret

000001c8 <main>:
 * 	2. reads character data from the JTAG UART
 * 	3. echos the character data back to the JTAG UART
********************************************************************************/
volatile int * dda_ptr = (int *) DDA_OPTIONS_BASE;
int main(void)
{
     1c8:	deffe304 	addi	sp,sp,-116
     1cc:	dfc01c15 	stw	ra,112(sp)
     1d0:	dd401b15 	stw	r21,108(sp)
     1d4:	dd001a15 	stw	r20,104(sp)
     1d8:	dcc01915 	stw	r19,100(sp)
     1dc:	dc801815 	stw	r18,96(sp)
     1e0:	dc401715 	stw	r17,92(sp)
     1e4:	dc001615 	stw	r16,88(sp)
	uint32_t dataLine;

	int data, i, n;
	int k1, k2, k13, kmid, x1, v1, x2, v2;
	char command_index = 0;
	char text_string[] = "\nInput Spring-Mass System Parameters\n> \0";
     1e8:	00c00074 	movhi	r3,1
     1ec:	18fbc304 	addi	r3,r3,-4340
     1f0:	18800017 	ldw	r2,0(r3)
     1f4:	d8800115 	stw	r2,4(sp)
     1f8:	18800117 	ldw	r2,4(r3)
     1fc:	d8800215 	stw	r2,8(sp)
     200:	18800217 	ldw	r2,8(r3)
     204:	d8800315 	stw	r2,12(sp)
     208:	18800317 	ldw	r2,12(r3)
     20c:	d8800415 	stw	r2,16(sp)
     210:	18800417 	ldw	r2,16(r3)
     214:	d8800515 	stw	r2,20(sp)
     218:	18800517 	ldw	r2,20(r3)
     21c:	d8800615 	stw	r2,24(sp)
     220:	18800617 	ldw	r2,24(r3)
     224:	d8800715 	stw	r2,28(sp)
     228:	18800717 	ldw	r2,28(r3)
     22c:	d8800815 	stw	r2,32(sp)
     230:	18800817 	ldw	r2,32(r3)
     234:	d8800915 	stw	r2,36(sp)
     238:	18800917 	ldw	r2,36(r3)
     23c:	d8800a15 	stw	r2,40(sp)
     240:	18800a03 	ldbu	r2,40(r3)
     244:	d8800b05 	stb	r2,44(sp)
	char * command_string;//[20];
	char go_string[] = "go:";
     248:	00800074 	movhi	r2,1
     24c:	10bbb904 	addi	r2,r2,-4380
     250:	10800017 	ldw	r2,0(r2)
     254:	d8800c15 	stw	r2,48(sp)
	char stop_string[] = "st:";
     258:	00800074 	movhi	r2,1
     25c:	10bbba04 	addi	r2,r2,-4376
     260:	10800017 	ldw	r2,0(r2)
     264:	d8800d15 	stw	r2,52(sp)
	char k1_string[] = "k1:";
     268:	00800074 	movhi	r2,1
     26c:	10bbbb04 	addi	r2,r2,-4372
     270:	10800017 	ldw	r2,0(r2)
     274:	d8800e15 	stw	r2,56(sp)
	char k2_string[] = "k2:";
     278:	00800074 	movhi	r2,1
     27c:	10bbbc04 	addi	r2,r2,-4368
     280:	10800017 	ldw	r2,0(r2)
     284:	d8800f15 	stw	r2,60(sp)
	char kmid_string[] = "km:";
     288:	00800074 	movhi	r2,1
     28c:	10bbbd04 	addi	r2,r2,-4364
     290:	10800017 	ldw	r2,0(r2)
     294:	d8801015 	stw	r2,64(sp)
	char k13_string[] = "k3:";
     298:	00800074 	movhi	r2,1
     29c:	10bbbe04 	addi	r2,r2,-4360
     2a0:	10800017 	ldw	r2,0(r2)
     2a4:	d8801115 	stw	r2,68(sp)
	char x1_string[] = "x1:";
     2a8:	00800074 	movhi	r2,1
     2ac:	10bbbf04 	addi	r2,r2,-4356
     2b0:	10800017 	ldw	r2,0(r2)
     2b4:	d8801215 	stw	r2,72(sp)
	char v1_string[] = "v1:";
     2b8:	00800074 	movhi	r2,1
     2bc:	10bbc004 	addi	r2,r2,-4352
     2c0:	10800017 	ldw	r2,0(r2)
     2c4:	d8801315 	stw	r2,76(sp)
	char x2_string[] = "x2:";
     2c8:	00800074 	movhi	r2,1
     2cc:	10bbc104 	addi	r2,r2,-4348
     2d0:	10800017 	ldw	r2,0(r2)
     2d4:	d8801415 	stw	r2,80(sp)
	char v2_string[] = "v2:";
     2d8:	00800074 	movhi	r2,1
     2dc:	10bbc204 	addi	r2,r2,-4344
     2e0:	10800017 	ldw	r2,0(r2)
     2e4:	d8801515 	stw	r2,84(sp)
  	char* pEnd;

	command_string = malloc( sizeof(char)*20);
     2e8:	01000504 	movi	r4,20
     2ec:	0000b5c0 	call	b5c <malloc>
     2f0:	1023883a 	mov	r17,r2
	/* print a text string */
	for (i = 0; text_string[i] != 0; ++i)
     2f4:	d9400103 	ldbu	r5,4(sp)
     2f8:	28803fcc 	andi	r2,r5,255
     2fc:	1080201c 	xori	r2,r2,128
     300:	10bfe004 	addi	r2,r2,-128
     304:	10000d26 	beq	r2,zero,33c <main+0x174>
     308:	dc000144 	addi	r16,sp,5
		put_jtag (JTAG_UART_ptr, text_string[i]);
     30c:	01040034 	movhi	r4,4096
     310:	21040004 	addi	r4,r4,4096
     314:	29403fcc 	andi	r5,r5,255
     318:	2940201c 	xori	r5,r5,128
     31c:	297fe004 	addi	r5,r5,-128
     320:	00001a40 	call	1a4 <put_jtag>
	char v2_string[] = "v2:";
  	char* pEnd;

	command_string = malloc( sizeof(char)*20);
	/* print a text string */
	for (i = 0; text_string[i] != 0; ++i)
     324:	81400003 	ldbu	r5,0(r16)
     328:	84000044 	addi	r16,r16,1
     32c:	28803fcc 	andi	r2,r5,255
     330:	1080201c 	xori	r2,r2,128
     334:	10bfe004 	addi	r2,r2,-128
     338:	103ff41e 	bne	r2,zero,30c <main+0x144>
     33c:	0029883a 	mov	r20,zero
     340:	0021883a 	mov	r16,zero
     344:	054000c4 	movi	r21,3
		put_jtag (JTAG_UART_ptr, text_string[i]);
	/* read and echo characters */
	while(1)
	{
		data = *(JTAG_UART_ptr);		 		// read the JTAG_UART data register
     348:	00840034 	movhi	r2,4096
     34c:	10840004 	addi	r2,r2,4096
     350:	11400017 	ldw	r5,0(r2)
		if (data & 0x00008000)					// check RVALID to see if there is new data
     354:	28a0000c 	andi	r2,r5,32768
     358:	103ffb26 	beq	r2,zero,348 <main+0x180>
		{
			data = data & 0x000000FF;			// the data is in the least significant byte
     35c:	2cc03fcc 	andi	r19,r5,255
			/* echo the character */

			// Add the data to the current command string if not return
			if ((data != '\n') && (data != '\r') && (command_index <19))
     360:	00800284 	movi	r2,10
     364:	98800b26 	beq	r19,r2,394 <main+0x1cc>
     368:	00800344 	movi	r2,13
     36c:	98800926 	beq	r19,r2,394 <main+0x1cc>
     370:	80c03fcc 	andi	r3,r16,255
     374:	18c0201c 	xori	r3,r3,128
     378:	18ffe004 	addi	r3,r3,-128
     37c:	00800484 	movi	r2,18
     380:	10c00416 	blt	r2,r3,394 <main+0x1cc>
			{
				command_string[command_index] = data;
     384:	88c5883a 	add	r2,r17,r3
     388:	14c00005 	stb	r19,0(r2)
				command_index++;
     38c:	84000044 	addi	r16,r16,1
     390:	0000bd06 	br	688 <main+0x4c0>
			}
			// clear the command string if there is a return
			else
			{
				command_string[command_index] = '\0';
     394:	80803fcc 	andi	r2,r16,255
     398:	1080201c 	xori	r2,r2,128
     39c:	10bfe004 	addi	r2,r2,-128
     3a0:	8885883a 	add	r2,r17,r2
     3a4:	10000005 	stb	zero,0(r2)
				// check for a match on any of the special strings in the command string
				if (strstr(command_string,k1_string) == command_string)
     3a8:	8809883a 	mov	r4,r17
     3ac:	d9400e04 	addi	r5,sp,56
     3b0:	00016180 	call	1618 <strstr>
     3b4:	88800e1e 	bne	r17,r2,3f0 <main+0x228>
				{

					printf("\nfound k1 match\n");
     3b8:	01000074 	movhi	r4,1
     3bc:	213b9304 	addi	r4,r4,-4532
     3c0:	00013ec0 	call	13ec <puts>
					tempFloat = atof(&command_string[3]); //strtod(&command_string[3],&pEnd);
     3c4:	890000c4 	addi	r4,r17,3
     3c8:	0000b400 	call	b40 <atof>
     3cc:	1009883a 	mov	r4,r2
     3d0:	180b883a 	mov	r5,r3
     3d4:	00007400 	call	740 <__truncdfsf2>
     3d8:	d8800015 	stw	r2,0(sp)
					printf("completed strtod call\n");
     3dc:	01000074 	movhi	r4,1
     3e0:	213b9704 	addi	r4,r4,-4516
     3e4:	00013ec0 	call	13ec <puts>
     3e8:	05000044 	movi	r20,1
     3ec:	00006606 	br	588 <main+0x3c0>
					//sscanf(command_string,"%f", &tempFloat);
					select_line = 0x1;

				}
				
				else if (strstr(command_string,k2_string) == command_string)
     3f0:	8809883a 	mov	r4,r17
     3f4:	d9400f04 	addi	r5,sp,60
     3f8:	00016180 	call	1618 <strstr>
     3fc:	8880091e 	bne	r17,r2,424 <main+0x25c>
				{
					tempFloat = strtod(command_string + 3,NULL);
     400:	890000c4 	addi	r4,r17,3
     404:	000b883a 	mov	r5,zero
     408:	00033b00 	call	33b0 <strtod>
     40c:	1009883a 	mov	r4,r2
     410:	180b883a 	mov	r5,r3
     414:	00007400 	call	740 <__truncdfsf2>
     418:	d8800015 	stw	r2,0(sp)
     41c:	05000084 	movi	r20,2
     420:	00005906 	br	588 <main+0x3c0>
					select_line = 0x2;
				}
				else if (strstr(command_string,k13_string) == command_string)
     424:	8809883a 	mov	r4,r17
     428:	d9401104 	addi	r5,sp,68
     42c:	00016180 	call	1618 <strstr>
     430:	8880091e 	bne	r17,r2,458 <main+0x290>
				{
					tempFloat = strtod(command_string + 3,NULL);
     434:	8d49883a 	add	r4,r17,r21
     438:	000b883a 	mov	r5,zero
     43c:	00033b00 	call	33b0 <strtod>
     440:	1009883a 	mov	r4,r2
     444:	180b883a 	mov	r5,r3
     448:	00007400 	call	740 <__truncdfsf2>
     44c:	d8800015 	stw	r2,0(sp)
     450:	a829883a 	mov	r20,r21
     454:	00004c06 	br	588 <main+0x3c0>
					select_line = 0x3;
				}

				else if (strstr(command_string,kmid_string) == command_string)
     458:	8809883a 	mov	r4,r17
     45c:	d9401004 	addi	r5,sp,64
     460:	00016180 	call	1618 <strstr>
     464:	8880091e 	bne	r17,r2,48c <main+0x2c4>
				{
					tempFloat = strtod(command_string + 3,NULL);
     468:	890000c4 	addi	r4,r17,3
     46c:	000b883a 	mov	r5,zero
     470:	00033b00 	call	33b0 <strtod>
     474:	1009883a 	mov	r4,r2
     478:	180b883a 	mov	r5,r3
     47c:	00007400 	call	740 <__truncdfsf2>
     480:	d8800015 	stw	r2,0(sp)
     484:	05000104 	movi	r20,4
     488:	00003f06 	br	588 <main+0x3c0>
					select_line = 0x4;

				}
				else if (strstr(command_string,x1_string) == command_string)
     48c:	8809883a 	mov	r4,r17
     490:	d9401204 	addi	r5,sp,72
     494:	00016180 	call	1618 <strstr>
     498:	8880091e 	bne	r17,r2,4c0 <main+0x2f8>
				{
					tempFloat = strtod(command_string + 3,NULL);
     49c:	890000c4 	addi	r4,r17,3
     4a0:	000b883a 	mov	r5,zero
     4a4:	00033b00 	call	33b0 <strtod>
     4a8:	1009883a 	mov	r4,r2
     4ac:	180b883a 	mov	r5,r3
     4b0:	00007400 	call	740 <__truncdfsf2>
     4b4:	d8800015 	stw	r2,0(sp)
     4b8:	05000144 	movi	r20,5
     4bc:	00003206 	br	588 <main+0x3c0>
					select_line = 0x5;
				}
				else if (strstr(command_string,v1_string) == command_string)
     4c0:	8809883a 	mov	r4,r17
     4c4:	d9401304 	addi	r5,sp,76
     4c8:	00016180 	call	1618 <strstr>
     4cc:	8880091e 	bne	r17,r2,4f4 <main+0x32c>
				{
					tempFloat = strtod(command_string + 3,NULL);
     4d0:	890000c4 	addi	r4,r17,3
     4d4:	000b883a 	mov	r5,zero
     4d8:	00033b00 	call	33b0 <strtod>
     4dc:	1009883a 	mov	r4,r2
     4e0:	180b883a 	mov	r5,r3
     4e4:	00007400 	call	740 <__truncdfsf2>
     4e8:	d8800015 	stw	r2,0(sp)
     4ec:	05000184 	movi	r20,6
     4f0:	00002506 	br	588 <main+0x3c0>
				select_line = 0x6;
				}
				else if (strstr(command_string,x2_string) == command_string)
     4f4:	8809883a 	mov	r4,r17
     4f8:	d9401404 	addi	r5,sp,80
     4fc:	00016180 	call	1618 <strstr>
     500:	8880091e 	bne	r17,r2,528 <main+0x360>
				{
					tempFloat = strtod(command_string + 3,NULL);
     504:	890000c4 	addi	r4,r17,3
     508:	000b883a 	mov	r5,zero
     50c:	00033b00 	call	33b0 <strtod>
     510:	1009883a 	mov	r4,r2
     514:	180b883a 	mov	r5,r3
     518:	00007400 	call	740 <__truncdfsf2>
     51c:	d8800015 	stw	r2,0(sp)
     520:	050001c4 	movi	r20,7
     524:	00001806 	br	588 <main+0x3c0>
					select_line = 0x7;
				}
				else if (strstr(command_string,v2_string) == command_string)
     528:	8809883a 	mov	r4,r17
     52c:	d9401504 	addi	r5,sp,84
     530:	00016180 	call	1618 <strstr>
     534:	8880091e 	bne	r17,r2,55c <main+0x394>
				{
					tempFloat = strtod(command_string + 3,NULL);
     538:	890000c4 	addi	r4,r17,3
     53c:	000b883a 	mov	r5,zero
     540:	00033b00 	call	33b0 <strtod>
     544:	1009883a 	mov	r4,r2
     548:	180b883a 	mov	r5,r3
     54c:	00007400 	call	740 <__truncdfsf2>
     550:	d8800015 	stw	r2,0(sp)
     554:	05000204 	movi	r20,8
     558:	00000b06 	br	588 <main+0x3c0>
					select_line = 0x8;
				}
				else if (strstr(command_string,go_string) == command_string)
     55c:	8809883a 	mov	r4,r17
     560:	d9400c04 	addi	r5,sp,48
     564:	00016180 	call	1618 <strstr>
     568:	8880021e 	bne	r17,r2,574 <main+0x3ac>
     56c:	05000244 	movi	r20,9
     570:	00000506 	br	588 <main+0x3c0>
				{
					select_line = 0x9;
				}
				else if (strstr(command_string,stop_string) == command_string)
     574:	8809883a 	mov	r4,r17
     578:	d9400d04 	addi	r5,sp,52
     57c:	00016180 	call	1618 <strstr>
     580:	8880011e 	bne	r17,r2,588 <main+0x3c0>
     584:	05000284 	movi	r20,10
				}
				else
				{
					//select_line = 0x0;
				}
				printf("about to convert to fixed\n");
     588:	01000074 	movhi	r4,1
     58c:	213b9d04 	addi	r4,r4,-4492
     590:	00013ec0 	call	13ec <puts>
				dataLine = FLOAT2_DDA_FIXED(tempFloat);
     594:	d8800017 	ldw	r2,0(sp)
     598:	0111e034 	movhi	r4,18304
     59c:	1109ff32 	custom	252,r4,r2,r4
     5a0:	00006ac0 	call	6ac <__fixsfsi>
     5a4:	00c00134 	movhi	r3,4
     5a8:	18ffffc4 	addi	r3,r3,-1
     5ac:	10e4703a 	and	r18,r2,r3
				// after reading a value, zero the index and clear the command string
				//printf("tempFloat = %f\ndataLine = ",tempFloat);
				*(dda_ptr)= (dataLine << 4) | select_line;
     5b0:	9004913a 	slli	r2,r18,4
     5b4:	a0c03fcc 	andi	r3,r20,255
     5b8:	18c0201c 	xori	r3,r3,128
     5bc:	18ffe004 	addi	r3,r3,-128
     5c0:	10c4b03a 	or	r2,r2,r3
     5c4:	d0e00017 	ldw	r3,-32768(gp)
     5c8:	18800015 	stw	r2,0(r3)
				command_index = 0;
				printf("converted to fixed and sent to ports\ndataLine = ");
     5cc:	01000074 	movhi	r4,1
     5d0:	213ba404 	addi	r4,r4,-4464
     5d4:	00012b00 	call	12b0 <printf>
     5d8:	04000444 	movi	r16,17

				// print out the value sent to ports on JTAG
				for (n=17;n>=0;n--){
					if (dataLine & (1<<n))
     5dc:	00800044 	movi	r2,1
     5e0:	1404983a 	sll	r2,r2,r16
     5e4:	9084703a 	and	r2,r18,r2
     5e8:	10000326 	beq	r2,zero,5f8 <main+0x430>
					{
						printf("1");
     5ec:	01000c44 	movi	r4,49
     5f0:	00013280 	call	1328 <putchar>
     5f4:	00000206 	br	600 <main+0x438>
					}
					else
					{
						printf("0");
     5f8:	01000c04 	movi	r4,48
     5fc:	00013280 	call	1328 <putchar>
					}
					if (n==16) {printf("_");}
     600:	00800404 	movi	r2,16
     604:	8080031e 	bne	r16,r2,614 <main+0x44c>
     608:	010017c4 	movi	r4,95
     60c:	00013280 	call	1328 <putchar>
     610:	00001006 	br	654 <main+0x48c>
					if (n==12) {printf(" ");}
     614:	00800304 	movi	r2,12
     618:	8080041e 	bne	r16,r2,62c <main+0x464>
     61c:	01000804 	movi	r4,32
     620:	00013280 	call	1328 <putchar>
				*(dda_ptr)= (dataLine << 4) | select_line;
				command_index = 0;
				printf("converted to fixed and sent to ports\ndataLine = ");

				// print out the value sent to ports on JTAG
				for (n=17;n>=0;n--){
     624:	843fffc4 	addi	r16,r16,-1
     628:	003fec06 	br	5dc <main+0x414>
					{
						printf("0");
					}
					if (n==16) {printf("_");}
					if (n==12) {printf(" ");}
					if (n==8) {printf(" ");}
     62c:	00800204 	movi	r2,8
     630:	8080031e 	bne	r16,r2,640 <main+0x478>
     634:	01000804 	movi	r4,32
     638:	00013280 	call	1328 <putchar>
     63c:	00001906 	br	6a4 <main+0x4dc>
					if (n==4) {printf(" ");}
     640:	00800104 	movi	r2,4
     644:	8080031e 	bne	r16,r2,654 <main+0x48c>
     648:	01000804 	movi	r4,32
     64c:	00013280 	call	1328 <putchar>
     650:	00001406 	br	6a4 <main+0x4dc>
				*(dda_ptr)= (dataLine << 4) | select_line;
				command_index = 0;
				printf("converted to fixed and sent to ports\ndataLine = ");

				// print out the value sent to ports on JTAG
				for (n=17;n>=0;n--){
     654:	843fffc4 	addi	r16,r16,-1
     658:	803fe00e 	bge	r16,zero,5dc <main+0x414>
					if (n==16) {printf("_");}
					if (n==12) {printf(" ");}
					if (n==8) {printf(" ");}
					if (n==4) {printf(" ");}
				}
				printf("\nPort output displayed above\n");
     65c:	01000074 	movhi	r4,1
     660:	213bb104 	addi	r4,r4,-4412
     664:	00013ec0 	call	13ec <puts>
     668:	0007883a 	mov	r3,zero
     66c:	01400044 	movi	r5,1
     670:	01000504 	movi	r4,20
				
				// zero the command string
				for (n=0;n<20;n++){
					command_string[n] = '\0';
     674:	88c5883a 	add	r2,r17,r3
     678:	10000005 	stb	zero,0(r2)
					if (n==4) {printf(" ");}
				}
				printf("\nPort output displayed above\n");
				
				// zero the command string
				for (n=0;n<20;n++){
     67c:	1947883a 	add	r3,r3,r5
     680:	193ffc1e 	bne	r3,r4,674 <main+0x4ac>
     684:	0021883a 	mov	r16,zero
					command_string[n] = '\0';
				}
			}

			put_jtag (JTAG_UART_ptr, (char) data & 0xFF );
     688:	01040034 	movhi	r4,4096
     68c:	21040004 	addi	r4,r4,4096
     690:	99403fcc 	andi	r5,r19,255
     694:	2940201c 	xori	r5,r5,128
     698:	297fe004 	addi	r5,r5,-128
     69c:	00001a40 	call	1a4 <put_jtag>
     6a0:	003f2906 	br	348 <main+0x180>
				*(dda_ptr)= (dataLine << 4) | select_line;
				command_index = 0;
				printf("converted to fixed and sent to ports\ndataLine = ");

				// print out the value sent to ports on JTAG
				for (n=17;n>=0;n--){
     6a4:	843fffc4 	addi	r16,r16,-1
     6a8:	003fcc06 	br	5dc <main+0x414>

000006ac <__fixsfsi>:
     6ac:	defffa04 	addi	sp,sp,-24
     6b0:	d9000015 	stw	r4,0(sp)
     6b4:	d9400104 	addi	r5,sp,4
     6b8:	d809883a 	mov	r4,sp
     6bc:	dfc00515 	stw	ra,20(sp)
     6c0:	00007b40 	call	7b4 <__unpack_f>
     6c4:	d8c00117 	ldw	r3,4(sp)
     6c8:	00800084 	movi	r2,2
     6cc:	1880041e 	bne	r3,r2,6e0 <__fixsfsi+0x34>
     6d0:	0005883a 	mov	r2,zero
     6d4:	dfc00517 	ldw	ra,20(sp)
     6d8:	dec00604 	addi	sp,sp,24
     6dc:	f800283a 	ret
     6e0:	00800044 	movi	r2,1
     6e4:	10fffa2e 	bgeu	r2,r3,6d0 <__fixsfsi+0x24>
     6e8:	00800104 	movi	r2,4
     6ec:	18800426 	beq	r3,r2,700 <__fixsfsi+0x54>
     6f0:	d8800317 	ldw	r2,12(sp)
     6f4:	103ff616 	blt	r2,zero,6d0 <__fixsfsi+0x24>
     6f8:	00c00784 	movi	r3,30
     6fc:	1880070e 	bge	r3,r2,71c <__fixsfsi+0x70>
     700:	d8800217 	ldw	r2,8(sp)
     704:	10000c1e 	bne	r2,zero,738 <__fixsfsi+0x8c>
     708:	00a00034 	movhi	r2,32768
     70c:	10bfffc4 	addi	r2,r2,-1
     710:	dfc00517 	ldw	ra,20(sp)
     714:	dec00604 	addi	sp,sp,24
     718:	f800283a 	ret
     71c:	1885c83a 	sub	r2,r3,r2
     720:	d9000217 	ldw	r4,8(sp)
     724:	d8c00417 	ldw	r3,16(sp)
     728:	1884d83a 	srl	r2,r3,r2
     72c:	203fe926 	beq	r4,zero,6d4 <__fixsfsi+0x28>
     730:	0085c83a 	sub	r2,zero,r2
     734:	003fe706 	br	6d4 <__fixsfsi+0x28>
     738:	00a00034 	movhi	r2,32768
     73c:	003fe506 	br	6d4 <__fixsfsi+0x28>

00000740 <__truncdfsf2>:
     740:	defff804 	addi	sp,sp,-32
     744:	2005883a 	mov	r2,r4
     748:	2807883a 	mov	r3,r5
     74c:	d809883a 	mov	r4,sp
     750:	d9400204 	addi	r5,sp,8
     754:	d8c00115 	stw	r3,4(sp)
     758:	d8800015 	stw	r2,0(sp)
     75c:	dfc00715 	stw	ra,28(sp)
     760:	00008a80 	call	8a8 <__unpack_d>
     764:	d9c00517 	ldw	r7,20(sp)
     768:	da000617 	ldw	r8,24(sp)
     76c:	02d00034 	movhi	r11,16384
     770:	5affffc4 	addi	r11,r11,-1
     774:	3812d7ba 	srli	r9,r7,30
     778:	401a90ba 	slli	r13,r8,2
     77c:	3ac4703a 	and	r2,r7,r11
     780:	0007883a 	mov	r3,zero
     784:	6a52b03a 	or	r9,r13,r9
     788:	10c4b03a 	or	r2,r2,r3
     78c:	d9000217 	ldw	r4,8(sp)
     790:	d9400317 	ldw	r5,12(sp)
     794:	d9800417 	ldw	r6,16(sp)
     798:	480f883a 	mov	r7,r9
     79c:	10000126 	beq	r2,zero,7a4 <__truncdfsf2+0x64>
     7a0:	49c00054 	ori	r7,r9,1
     7a4:	000087c0 	call	87c <__make_fp>
     7a8:	dfc00717 	ldw	ra,28(sp)
     7ac:	dec00804 	addi	sp,sp,32
     7b0:	f800283a 	ret

000007b4 <__unpack_f>:
     7b4:	21800017 	ldw	r6,0(r4)
     7b8:	00c02034 	movhi	r3,128
     7bc:	18ffffc4 	addi	r3,r3,-1
     7c0:	3004d5fa 	srli	r2,r6,23
     7c4:	3008d7fa 	srli	r4,r6,31
     7c8:	30ce703a 	and	r7,r6,r3
     7cc:	10c03fcc 	andi	r3,r2,255
     7d0:	29000115 	stw	r4,4(r5)
     7d4:	1800131e 	bne	r3,zero,824 <__unpack_f+0x70>
     7d8:	38000f26 	beq	r7,zero,818 <__unpack_f+0x64>
     7dc:	380691fa 	slli	r3,r7,7
     7e0:	01bfe084 	movi	r6,-126
     7e4:	008000c4 	movi	r2,3
     7e8:	01100034 	movhi	r4,16384
     7ec:	213fffc4 	addi	r4,r4,-1
     7f0:	28800015 	stw	r2,0(r5)
     7f4:	29800215 	stw	r6,8(r5)
     7f8:	20c00536 	bltu	r4,r3,810 <__unpack_f+0x5c>
     7fc:	3005883a 	mov	r2,r6
     800:	18c7883a 	add	r3,r3,r3
     804:	10bfffc4 	addi	r2,r2,-1
     808:	20fffd2e 	bgeu	r4,r3,800 <__unpack_f+0x4c>
     80c:	28800215 	stw	r2,8(r5)
     810:	28c00315 	stw	r3,12(r5)
     814:	f800283a 	ret
     818:	00800084 	movi	r2,2
     81c:	28800015 	stw	r2,0(r5)
     820:	f800283a 	ret
     824:	00803fc4 	movi	r2,255
     828:	18800826 	beq	r3,r2,84c <__unpack_f+0x98>
     82c:	380491fa 	slli	r2,r7,7
     830:	18ffe044 	addi	r3,r3,-127
     834:	28c00215 	stw	r3,8(r5)
     838:	10900034 	orhi	r2,r2,16384
     83c:	28800315 	stw	r2,12(r5)
     840:	008000c4 	movi	r2,3
     844:	28800015 	stw	r2,0(r5)
     848:	f800283a 	ret
     84c:	3800031e 	bne	r7,zero,85c <__unpack_f+0xa8>
     850:	00800104 	movi	r2,4
     854:	28800015 	stw	r2,0(r5)
     858:	f800283a 	ret
     85c:	3080042c 	andhi	r2,r6,16
     860:	10000426 	beq	r2,zero,874 <__unpack_f+0xc0>
     864:	00800044 	movi	r2,1
     868:	28800015 	stw	r2,0(r5)
     86c:	29c00315 	stw	r7,12(r5)
     870:	f800283a 	ret
     874:	28000015 	stw	zero,0(r5)
     878:	003ffc06 	br	86c <__unpack_f+0xb8>

0000087c <__make_fp>:
     87c:	defffb04 	addi	sp,sp,-20
     880:	d9000015 	stw	r4,0(sp)
     884:	d809883a 	mov	r4,sp
     888:	dfc00415 	stw	ra,16(sp)
     88c:	d9400115 	stw	r5,4(sp)
     890:	d9800215 	stw	r6,8(sp)
     894:	d9c00315 	stw	r7,12(sp)
     898:	00009e00 	call	9e0 <__pack_f>
     89c:	dfc00417 	ldw	ra,16(sp)
     8a0:	dec00504 	addi	sp,sp,20
     8a4:	f800283a 	ret

000008a8 <__unpack_d>:
     8a8:	20c00117 	ldw	r3,4(r4)
     8ac:	22400017 	ldw	r9,0(r4)
     8b0:	00800434 	movhi	r2,16
     8b4:	10bfffc4 	addi	r2,r2,-1
     8b8:	1808d53a 	srli	r4,r3,20
     8bc:	180cd7fa 	srli	r6,r3,31
     8c0:	1894703a 	and	r10,r3,r2
     8c4:	2201ffcc 	andi	r8,r4,2047
     8c8:	281b883a 	mov	r13,r5
     8cc:	4817883a 	mov	r11,r9
     8d0:	29800115 	stw	r6,4(r5)
     8d4:	5019883a 	mov	r12,r10
     8d8:	40001e1e 	bne	r8,zero,954 <__unpack_d+0xac>
     8dc:	4a84b03a 	or	r2,r9,r10
     8e0:	10001926 	beq	r2,zero,948 <__unpack_d+0xa0>
     8e4:	4804d63a 	srli	r2,r9,24
     8e8:	500c923a 	slli	r6,r10,8
     8ec:	013f0084 	movi	r4,-1022
     8f0:	00c40034 	movhi	r3,4096
     8f4:	18ffffc4 	addi	r3,r3,-1
     8f8:	118cb03a 	or	r6,r2,r6
     8fc:	008000c4 	movi	r2,3
     900:	480a923a 	slli	r5,r9,8
     904:	68800015 	stw	r2,0(r13)
     908:	69000215 	stw	r4,8(r13)
     90c:	19800b36 	bltu	r3,r6,93c <__unpack_d+0x94>
     910:	200f883a 	mov	r7,r4
     914:	1811883a 	mov	r8,r3
     918:	2945883a 	add	r2,r5,r5
     91c:	1149803a 	cmpltu	r4,r2,r5
     920:	3187883a 	add	r3,r6,r6
     924:	20c9883a 	add	r4,r4,r3
     928:	100b883a 	mov	r5,r2
     92c:	200d883a 	mov	r6,r4
     930:	39ffffc4 	addi	r7,r7,-1
     934:	413ff82e 	bgeu	r8,r4,918 <__unpack_d+0x70>
     938:	69c00215 	stw	r7,8(r13)
     93c:	69800415 	stw	r6,16(r13)
     940:	69400315 	stw	r5,12(r13)
     944:	f800283a 	ret
     948:	00800084 	movi	r2,2
     94c:	28800015 	stw	r2,0(r5)
     950:	f800283a 	ret
     954:	0081ffc4 	movi	r2,2047
     958:	40800f26 	beq	r8,r2,998 <__unpack_d+0xf0>
     95c:	480cd63a 	srli	r6,r9,24
     960:	5006923a 	slli	r3,r10,8
     964:	4804923a 	slli	r2,r9,8
     968:	0009883a 	mov	r4,zero
     96c:	30c6b03a 	or	r3,r6,r3
     970:	01440034 	movhi	r5,4096
     974:	110cb03a 	or	r6,r2,r4
     978:	423f0044 	addi	r8,r8,-1023
     97c:	194eb03a 	or	r7,r3,r5
     980:	008000c4 	movi	r2,3
     984:	69c00415 	stw	r7,16(r13)
     988:	6a000215 	stw	r8,8(r13)
     98c:	68800015 	stw	r2,0(r13)
     990:	69800315 	stw	r6,12(r13)
     994:	f800283a 	ret
     998:	4a84b03a 	or	r2,r9,r10
     99c:	1000031e 	bne	r2,zero,9ac <__unpack_d+0x104>
     9a0:	00800104 	movi	r2,4
     9a4:	28800015 	stw	r2,0(r5)
     9a8:	f800283a 	ret
     9ac:	0009883a 	mov	r4,zero
     9b0:	01400234 	movhi	r5,8
     9b4:	4904703a 	and	r2,r9,r4
     9b8:	5146703a 	and	r3,r10,r5
     9bc:	10c4b03a 	or	r2,r2,r3
     9c0:	10000526 	beq	r2,zero,9d8 <__unpack_d+0x130>
     9c4:	00800044 	movi	r2,1
     9c8:	68800015 	stw	r2,0(r13)
     9cc:	6b000415 	stw	r12,16(r13)
     9d0:	6ac00315 	stw	r11,12(r13)
     9d4:	f800283a 	ret
     9d8:	68000015 	stw	zero,0(r13)
     9dc:	003ffb06 	br	9cc <__unpack_d+0x124>

000009e0 <__pack_f>:
     9e0:	20c00017 	ldw	r3,0(r4)
     9e4:	01c00044 	movi	r7,1
     9e8:	21800317 	ldw	r6,12(r4)
     9ec:	21400117 	ldw	r5,4(r4)
     9f0:	38c02d2e 	bgeu	r7,r3,aa8 <__pack_f+0xc8>
     9f4:	00800104 	movi	r2,4
     9f8:	18802826 	beq	r3,r2,a9c <__pack_f+0xbc>
     9fc:	00800084 	movi	r2,2
     a00:	18800126 	beq	r3,r2,a08 <__pack_f+0x28>
     a04:	3000101e 	bne	r6,zero,a48 <__pack_f+0x68>
     a08:	000d883a 	mov	r6,zero
     a0c:	0007883a 	mov	r3,zero
     a10:	19003fcc 	andi	r4,r3,255
     a14:	200895fa 	slli	r4,r4,23
     a18:	00c02034 	movhi	r3,128
     a1c:	18ffffc4 	addi	r3,r3,-1
     a20:	30c6703a 	and	r3,r6,r3
     a24:	10a0002c 	andhi	r2,r2,32768
     a28:	10c4b03a 	or	r2,r2,r3
     a2c:	280a97fa 	slli	r5,r5,31
     a30:	1104b03a 	or	r2,r2,r4
     a34:	00e00034 	movhi	r3,32768
     a38:	18ffffc4 	addi	r3,r3,-1
     a3c:	10c4703a 	and	r2,r2,r3
     a40:	1144b03a 	or	r2,r2,r5
     a44:	f800283a 	ret
     a48:	21000217 	ldw	r4,8(r4)
     a4c:	00bfe084 	movi	r2,-126
     a50:	20801b16 	blt	r4,r2,ac0 <__pack_f+0xe0>
     a54:	00801fc4 	movi	r2,127
     a58:	11001016 	blt	r2,r4,a9c <__pack_f+0xbc>
     a5c:	308e703a 	and	r7,r6,r2
     a60:	2087883a 	add	r3,r4,r2
     a64:	00801004 	movi	r2,64
     a68:	38800526 	beq	r7,r2,a80 <__pack_f+0xa0>
     a6c:	31800fc4 	addi	r6,r6,63
     a70:	30000716 	blt	r6,zero,a90 <__pack_f+0xb0>
     a74:	300490ba 	slli	r2,r6,2
     a78:	100cd27a 	srli	r6,r2,9
     a7c:	003fe406 	br	a10 <__pack_f+0x30>
     a80:	3080200c 	andi	r2,r6,128
     a84:	103ffa26 	beq	r2,zero,a70 <__pack_f+0x90>
     a88:	31cd883a 	add	r6,r6,r7
     a8c:	003ff806 	br	a70 <__pack_f+0x90>
     a90:	300cd07a 	srli	r6,r6,1
     a94:	18c00044 	addi	r3,r3,1
     a98:	003ff606 	br	a74 <__pack_f+0x94>
     a9c:	000d883a 	mov	r6,zero
     aa0:	00ffffc4 	movi	r3,-1
     aa4:	003fda06 	br	a10 <__pack_f+0x30>
     aa8:	31800434 	orhi	r6,r6,16
     aac:	00802034 	movhi	r2,128
     ab0:	10bfffc4 	addi	r2,r2,-1
     ab4:	308c703a 	and	r6,r6,r2
     ab8:	00ffffc4 	movi	r3,-1
     abc:	003fd406 	br	a10 <__pack_f+0x30>
     ac0:	1109c83a 	sub	r4,r2,r4
     ac4:	00800644 	movi	r2,25
     ac8:	11001216 	blt	r2,r4,b14 <__pack_f+0x134>
     acc:	3904983a 	sll	r2,r7,r4
     ad0:	3106d83a 	srl	r3,r6,r4
     ad4:	10bfffc4 	addi	r2,r2,-1
     ad8:	3084703a 	and	r2,r6,r2
     adc:	1004c03a 	cmpne	r2,r2,zero
     ae0:	1886b03a 	or	r3,r3,r2
     ae4:	19001fcc 	andi	r4,r3,127
     ae8:	00801004 	movi	r2,64
     aec:	20800c26 	beq	r4,r2,b20 <__pack_f+0x140>
     af0:	18c00fc4 	addi	r3,r3,63
     af4:	00900034 	movhi	r2,16384
     af8:	10bfffc4 	addi	r2,r2,-1
     afc:	180cd1fa 	srli	r6,r3,7
     b00:	10c7803a 	cmpltu	r3,r2,r3
     b04:	00802034 	movhi	r2,128
     b08:	10bfffc4 	addi	r2,r2,-1
     b0c:	308c703a 	and	r6,r6,r2
     b10:	003fbf06 	br	a10 <__pack_f+0x30>
     b14:	0007883a 	mov	r3,zero
     b18:	000d883a 	mov	r6,zero
     b1c:	003ff906 	br	b04 <__pack_f+0x124>
     b20:	1880200c 	andi	r2,r3,128
     b24:	10000126 	beq	r2,zero,b2c <__pack_f+0x14c>
     b28:	1907883a 	add	r3,r3,r4
     b2c:	180cd1fa 	srli	r6,r3,7
     b30:	00900034 	movhi	r2,16384
     b34:	10bfffc4 	addi	r2,r2,-1
     b38:	10c7803a 	cmpltu	r3,r2,r3
     b3c:	003ff106 	br	b04 <__pack_f+0x124>

00000b40 <atof>:
     b40:	000b883a 	mov	r5,zero
     b44:	00033b01 	jmpi	33b0 <strtod>

00000b48 <free>:
     b48:	00800074 	movhi	r2,1
     b4c:	10837004 	addi	r2,r2,3520
     b50:	200b883a 	mov	r5,r4
     b54:	11000017 	ldw	r4,0(r2)
     b58:	00072901 	jmpi	7290 <_free_r>

00000b5c <malloc>:
     b5c:	00800074 	movhi	r2,1
     b60:	10837004 	addi	r2,r2,3520
     b64:	200b883a 	mov	r5,r4
     b68:	11000017 	ldw	r4,0(r2)
     b6c:	0000b701 	jmpi	b70 <_malloc_r>

00000b70 <_malloc_r>:
     b70:	defff604 	addi	sp,sp,-40
     b74:	28c002c4 	addi	r3,r5,11
     b78:	00800584 	movi	r2,22
     b7c:	dc800215 	stw	r18,8(sp)
     b80:	dfc00915 	stw	ra,36(sp)
     b84:	df000815 	stw	fp,32(sp)
     b88:	ddc00715 	stw	r23,28(sp)
     b8c:	dd800615 	stw	r22,24(sp)
     b90:	dd400515 	stw	r21,20(sp)
     b94:	dd000415 	stw	r20,16(sp)
     b98:	dcc00315 	stw	r19,12(sp)
     b9c:	dc400115 	stw	r17,4(sp)
     ba0:	dc000015 	stw	r16,0(sp)
     ba4:	2025883a 	mov	r18,r4
     ba8:	10c01236 	bltu	r2,r3,bf4 <_malloc_r+0x84>
     bac:	04400404 	movi	r17,16
     bb0:	8940142e 	bgeu	r17,r5,c04 <_malloc_r+0x94>
     bb4:	00800304 	movi	r2,12
     bb8:	0007883a 	mov	r3,zero
     bbc:	90800015 	stw	r2,0(r18)
     bc0:	1805883a 	mov	r2,r3
     bc4:	dfc00917 	ldw	ra,36(sp)
     bc8:	df000817 	ldw	fp,32(sp)
     bcc:	ddc00717 	ldw	r23,28(sp)
     bd0:	dd800617 	ldw	r22,24(sp)
     bd4:	dd400517 	ldw	r21,20(sp)
     bd8:	dd000417 	ldw	r20,16(sp)
     bdc:	dcc00317 	ldw	r19,12(sp)
     be0:	dc800217 	ldw	r18,8(sp)
     be4:	dc400117 	ldw	r17,4(sp)
     be8:	dc000017 	ldw	r16,0(sp)
     bec:	dec00a04 	addi	sp,sp,40
     bf0:	f800283a 	ret
     bf4:	00bffe04 	movi	r2,-8
     bf8:	18a2703a 	and	r17,r3,r2
     bfc:	883fed16 	blt	r17,zero,bb4 <_malloc_r+0x44>
     c00:	897fec36 	bltu	r17,r5,bb4 <_malloc_r+0x44>
     c04:	9009883a 	mov	r4,r18
     c08:	000db200 	call	db20 <__malloc_lock>
     c0c:	00807dc4 	movi	r2,503
     c10:	14402b2e 	bgeu	r2,r17,cc0 <_malloc_r+0x150>
     c14:	8806d27a 	srli	r3,r17,9
     c18:	18003f1e 	bne	r3,zero,d18 <_malloc_r+0x1a8>
     c1c:	880cd0fa 	srli	r6,r17,3
     c20:	300490fa 	slli	r2,r6,3
     c24:	02c00074 	movhi	r11,1
     c28:	5afcbb04 	addi	r11,r11,-3348
     c2c:	12cb883a 	add	r5,r2,r11
     c30:	2c000317 	ldw	r16,12(r5)
     c34:	580f883a 	mov	r7,r11
     c38:	2c00041e 	bne	r5,r16,c4c <_malloc_r+0xdc>
     c3c:	00000a06 	br	c68 <_malloc_r+0xf8>
     c40:	1800860e 	bge	r3,zero,e5c <_malloc_r+0x2ec>
     c44:	84000317 	ldw	r16,12(r16)
     c48:	2c000726 	beq	r5,r16,c68 <_malloc_r+0xf8>
     c4c:	80800117 	ldw	r2,4(r16)
     c50:	00ffff04 	movi	r3,-4
     c54:	10c8703a 	and	r4,r2,r3
     c58:	2447c83a 	sub	r3,r4,r17
     c5c:	008003c4 	movi	r2,15
     c60:	10fff70e 	bge	r2,r3,c40 <_malloc_r+0xd0>
     c64:	31bfffc4 	addi	r6,r6,-1
     c68:	32400044 	addi	r9,r6,1
     c6c:	02800074 	movhi	r10,1
     c70:	52bcbd04 	addi	r10,r10,-3340
     c74:	54000217 	ldw	r16,8(r10)
     c78:	8280a026 	beq	r16,r10,efc <_malloc_r+0x38c>
     c7c:	80800117 	ldw	r2,4(r16)
     c80:	00ffff04 	movi	r3,-4
     c84:	10ca703a 	and	r5,r2,r3
     c88:	2c4dc83a 	sub	r6,r5,r17
     c8c:	008003c4 	movi	r2,15
     c90:	11808316 	blt	r2,r6,ea0 <_malloc_r+0x330>
     c94:	52800315 	stw	r10,12(r10)
     c98:	52800215 	stw	r10,8(r10)
     c9c:	30002916 	blt	r6,zero,d44 <_malloc_r+0x1d4>
     ca0:	8147883a 	add	r3,r16,r5
     ca4:	18800117 	ldw	r2,4(r3)
     ca8:	9009883a 	mov	r4,r18
     cac:	10800054 	ori	r2,r2,1
     cb0:	18800115 	stw	r2,4(r3)
     cb4:	000db240 	call	db24 <__malloc_unlock>
     cb8:	80c00204 	addi	r3,r16,8
     cbc:	003fc006 	br	bc0 <_malloc_r+0x50>
     cc0:	02c00074 	movhi	r11,1
     cc4:	5afcbb04 	addi	r11,r11,-3348
     cc8:	8ac5883a 	add	r2,r17,r11
     ccc:	14000317 	ldw	r16,12(r2)
     cd0:	580f883a 	mov	r7,r11
     cd4:	8806d0fa 	srli	r3,r17,3
     cd8:	14006c26 	beq	r2,r16,e8c <_malloc_r+0x31c>
     cdc:	80c00117 	ldw	r3,4(r16)
     ce0:	00bfff04 	movi	r2,-4
     ce4:	81800317 	ldw	r6,12(r16)
     ce8:	1886703a 	and	r3,r3,r2
     cec:	80c7883a 	add	r3,r16,r3
     cf0:	18800117 	ldw	r2,4(r3)
     cf4:	81400217 	ldw	r5,8(r16)
     cf8:	9009883a 	mov	r4,r18
     cfc:	10800054 	ori	r2,r2,1
     d00:	18800115 	stw	r2,4(r3)
     d04:	31400215 	stw	r5,8(r6)
     d08:	29800315 	stw	r6,12(r5)
     d0c:	000db240 	call	db24 <__malloc_unlock>
     d10:	80c00204 	addi	r3,r16,8
     d14:	003faa06 	br	bc0 <_malloc_r+0x50>
     d18:	00800104 	movi	r2,4
     d1c:	10c0052e 	bgeu	r2,r3,d34 <_malloc_r+0x1c4>
     d20:	00800504 	movi	r2,20
     d24:	10c07836 	bltu	r2,r3,f08 <_malloc_r+0x398>
     d28:	198016c4 	addi	r6,r3,91
     d2c:	300490fa 	slli	r2,r6,3
     d30:	003fbc06 	br	c24 <_malloc_r+0xb4>
     d34:	8804d1ba 	srli	r2,r17,6
     d38:	11800e04 	addi	r6,r2,56
     d3c:	300490fa 	slli	r2,r6,3
     d40:	003fb806 	br	c24 <_malloc_r+0xb4>
     d44:	00807fc4 	movi	r2,511
     d48:	1140bb36 	bltu	r2,r5,1038 <_malloc_r+0x4c8>
     d4c:	2806d0fa 	srli	r3,r5,3
     d50:	573ffe04 	addi	fp,r10,-8
     d54:	00800044 	movi	r2,1
     d58:	180890fa 	slli	r4,r3,3
     d5c:	1807d0ba 	srai	r3,r3,2
     d60:	e1c00117 	ldw	r7,4(fp)
     d64:	5909883a 	add	r4,r11,r4
     d68:	21400217 	ldw	r5,8(r4)
     d6c:	10c4983a 	sll	r2,r2,r3
     d70:	81000315 	stw	r4,12(r16)
     d74:	81400215 	stw	r5,8(r16)
     d78:	388eb03a 	or	r7,r7,r2
     d7c:	2c000315 	stw	r16,12(r5)
     d80:	24000215 	stw	r16,8(r4)
     d84:	e1c00115 	stw	r7,4(fp)
     d88:	4807883a 	mov	r3,r9
     d8c:	4800cd16 	blt	r9,zero,10c4 <_malloc_r+0x554>
     d90:	1807d0ba 	srai	r3,r3,2
     d94:	00800044 	movi	r2,1
     d98:	10c8983a 	sll	r4,r2,r3
     d9c:	39004436 	bltu	r7,r4,eb0 <_malloc_r+0x340>
     da0:	21c4703a 	and	r2,r4,r7
     da4:	10000a1e 	bne	r2,zero,dd0 <_malloc_r+0x260>
     da8:	2109883a 	add	r4,r4,r4
     dac:	00bfff04 	movi	r2,-4
     db0:	4884703a 	and	r2,r9,r2
     db4:	3906703a 	and	r3,r7,r4
     db8:	12400104 	addi	r9,r2,4
     dbc:	1800041e 	bne	r3,zero,dd0 <_malloc_r+0x260>
     dc0:	2109883a 	add	r4,r4,r4
     dc4:	3904703a 	and	r2,r7,r4
     dc8:	4a400104 	addi	r9,r9,4
     dcc:	103ffc26 	beq	r2,zero,dc0 <_malloc_r+0x250>
     dd0:	480490fa 	slli	r2,r9,3
     dd4:	4819883a 	mov	r12,r9
     dd8:	023fff04 	movi	r8,-4
     ddc:	589b883a 	add	r13,r11,r2
     de0:	6807883a 	mov	r3,r13
     de4:	014003c4 	movi	r5,15
     de8:	1c000317 	ldw	r16,12(r3)
     dec:	1c00041e 	bne	r3,r16,e00 <_malloc_r+0x290>
     df0:	0000a706 	br	1090 <_malloc_r+0x520>
     df4:	3000ab0e 	bge	r6,zero,10a4 <_malloc_r+0x534>
     df8:	84000317 	ldw	r16,12(r16)
     dfc:	1c00a426 	beq	r3,r16,1090 <_malloc_r+0x520>
     e00:	80800117 	ldw	r2,4(r16)
     e04:	1204703a 	and	r2,r2,r8
     e08:	144dc83a 	sub	r6,r2,r17
     e0c:	29bff90e 	bge	r5,r6,df4 <_malloc_r+0x284>
     e10:	81000317 	ldw	r4,12(r16)
     e14:	80c00217 	ldw	r3,8(r16)
     e18:	89400054 	ori	r5,r17,1
     e1c:	8445883a 	add	r2,r16,r17
     e20:	20c00215 	stw	r3,8(r4)
     e24:	19000315 	stw	r4,12(r3)
     e28:	81400115 	stw	r5,4(r16)
     e2c:	1187883a 	add	r3,r2,r6
     e30:	31000054 	ori	r4,r6,1
     e34:	50800315 	stw	r2,12(r10)
     e38:	50800215 	stw	r2,8(r10)
     e3c:	19800015 	stw	r6,0(r3)
     e40:	11000115 	stw	r4,4(r2)
     e44:	12800215 	stw	r10,8(r2)
     e48:	12800315 	stw	r10,12(r2)
     e4c:	9009883a 	mov	r4,r18
     e50:	000db240 	call	db24 <__malloc_unlock>
     e54:	80c00204 	addi	r3,r16,8
     e58:	003f5906 	br	bc0 <_malloc_r+0x50>
     e5c:	8109883a 	add	r4,r16,r4
     e60:	20800117 	ldw	r2,4(r4)
     e64:	80c00217 	ldw	r3,8(r16)
     e68:	81400317 	ldw	r5,12(r16)
     e6c:	10800054 	ori	r2,r2,1
     e70:	20800115 	stw	r2,4(r4)
     e74:	28c00215 	stw	r3,8(r5)
     e78:	19400315 	stw	r5,12(r3)
     e7c:	9009883a 	mov	r4,r18
     e80:	000db240 	call	db24 <__malloc_unlock>
     e84:	80c00204 	addi	r3,r16,8
     e88:	003f4d06 	br	bc0 <_malloc_r+0x50>
     e8c:	80800204 	addi	r2,r16,8
     e90:	14000317 	ldw	r16,12(r2)
     e94:	143f911e 	bne	r2,r16,cdc <_malloc_r+0x16c>
     e98:	1a400084 	addi	r9,r3,2
     e9c:	003f7306 	br	c6c <_malloc_r+0xfc>
     ea0:	88c00054 	ori	r3,r17,1
     ea4:	8445883a 	add	r2,r16,r17
     ea8:	80c00115 	stw	r3,4(r16)
     eac:	003fdf06 	br	e2c <_malloc_r+0x2bc>
     eb0:	e4000217 	ldw	r16,8(fp)
     eb4:	00bfff04 	movi	r2,-4
     eb8:	80c00117 	ldw	r3,4(r16)
     ebc:	802d883a 	mov	r22,r16
     ec0:	18aa703a 	and	r21,r3,r2
     ec4:	ac401636 	bltu	r21,r17,f20 <_malloc_r+0x3b0>
     ec8:	ac49c83a 	sub	r4,r21,r17
     ecc:	008003c4 	movi	r2,15
     ed0:	1100130e 	bge	r2,r4,f20 <_malloc_r+0x3b0>
     ed4:	88800054 	ori	r2,r17,1
     ed8:	8447883a 	add	r3,r16,r17
     edc:	80800115 	stw	r2,4(r16)
     ee0:	20800054 	ori	r2,r4,1
     ee4:	18800115 	stw	r2,4(r3)
     ee8:	e0c00215 	stw	r3,8(fp)
     eec:	9009883a 	mov	r4,r18
     ef0:	000db240 	call	db24 <__malloc_unlock>
     ef4:	80c00204 	addi	r3,r16,8
     ef8:	003f3106 	br	bc0 <_malloc_r+0x50>
     efc:	39c00117 	ldw	r7,4(r7)
     f00:	573ffe04 	addi	fp,r10,-8
     f04:	003fa006 	br	d88 <_malloc_r+0x218>
     f08:	00801504 	movi	r2,84
     f0c:	10c06736 	bltu	r2,r3,10ac <_malloc_r+0x53c>
     f10:	8804d33a 	srli	r2,r17,12
     f14:	11801b84 	addi	r6,r2,110
     f18:	300490fa 	slli	r2,r6,3
     f1c:	003f4106 	br	c24 <_malloc_r+0xb4>
     f20:	d0a6d417 	ldw	r2,-25776(gp)
     f24:	d0e00217 	ldw	r3,-32760(gp)
     f28:	053fffc4 	movi	r20,-1
     f2c:	10800404 	addi	r2,r2,16
     f30:	88a7883a 	add	r19,r17,r2
     f34:	1d000326 	beq	r3,r20,f44 <_malloc_r+0x3d4>
     f38:	98c3ffc4 	addi	r3,r19,4095
     f3c:	00bc0004 	movi	r2,-4096
     f40:	18a6703a 	and	r19,r3,r2
     f44:	9009883a 	mov	r4,r18
     f48:	980b883a 	mov	r5,r19
     f4c:	00014000 	call	1400 <_sbrk_r>
     f50:	1009883a 	mov	r4,r2
     f54:	15000426 	beq	r2,r20,f68 <_malloc_r+0x3f8>
     f58:	854b883a 	add	r5,r16,r21
     f5c:	1029883a 	mov	r20,r2
     f60:	11405a2e 	bgeu	r2,r5,10cc <_malloc_r+0x55c>
     f64:	87000c26 	beq	r16,fp,f98 <_malloc_r+0x428>
     f68:	e4000217 	ldw	r16,8(fp)
     f6c:	80c00117 	ldw	r3,4(r16)
     f70:	00bfff04 	movi	r2,-4
     f74:	1884703a 	and	r2,r3,r2
     f78:	14400336 	bltu	r2,r17,f88 <_malloc_r+0x418>
     f7c:	1449c83a 	sub	r4,r2,r17
     f80:	008003c4 	movi	r2,15
     f84:	113fd316 	blt	r2,r4,ed4 <_malloc_r+0x364>
     f88:	9009883a 	mov	r4,r18
     f8c:	000db240 	call	db24 <__malloc_unlock>
     f90:	0007883a 	mov	r3,zero
     f94:	003f0a06 	br	bc0 <_malloc_r+0x50>
     f98:	05c00074 	movhi	r23,1
     f9c:	bdca4e04 	addi	r23,r23,10552
     fa0:	b8800017 	ldw	r2,0(r23)
     fa4:	988d883a 	add	r6,r19,r2
     fa8:	b9800015 	stw	r6,0(r23)
     fac:	d0e00217 	ldw	r3,-32760(gp)
     fb0:	00bfffc4 	movi	r2,-1
     fb4:	18808e26 	beq	r3,r2,11f0 <_malloc_r+0x680>
     fb8:	2145c83a 	sub	r2,r4,r5
     fbc:	3085883a 	add	r2,r6,r2
     fc0:	b8800015 	stw	r2,0(r23)
     fc4:	20c001cc 	andi	r3,r4,7
     fc8:	18005f1e 	bne	r3,zero,1148 <_malloc_r+0x5d8>
     fcc:	000b883a 	mov	r5,zero
     fd0:	a4c5883a 	add	r2,r20,r19
     fd4:	1083ffcc 	andi	r2,r2,4095
     fd8:	00c40004 	movi	r3,4096
     fdc:	1887c83a 	sub	r3,r3,r2
     fe0:	28e7883a 	add	r19,r5,r3
     fe4:	9009883a 	mov	r4,r18
     fe8:	980b883a 	mov	r5,r19
     fec:	00014000 	call	1400 <_sbrk_r>
     ff0:	1007883a 	mov	r3,r2
     ff4:	00bfffc4 	movi	r2,-1
     ff8:	18807a26 	beq	r3,r2,11e4 <_malloc_r+0x674>
     ffc:	1d05c83a 	sub	r2,r3,r20
    1000:	9885883a 	add	r2,r19,r2
    1004:	10c00054 	ori	r3,r2,1
    1008:	b8800017 	ldw	r2,0(r23)
    100c:	a021883a 	mov	r16,r20
    1010:	a0c00115 	stw	r3,4(r20)
    1014:	9885883a 	add	r2,r19,r2
    1018:	b8800015 	stw	r2,0(r23)
    101c:	e5000215 	stw	r20,8(fp)
    1020:	b7003626 	beq	r22,fp,10fc <_malloc_r+0x58c>
    1024:	018003c4 	movi	r6,15
    1028:	35404b36 	bltu	r6,r21,1158 <_malloc_r+0x5e8>
    102c:	00800044 	movi	r2,1
    1030:	a0800115 	stw	r2,4(r20)
    1034:	003fcd06 	br	f6c <_malloc_r+0x3fc>
    1038:	2808d27a 	srli	r4,r5,9
    103c:	2000371e 	bne	r4,zero,111c <_malloc_r+0x5ac>
    1040:	2808d0fa 	srli	r4,r5,3
    1044:	200690fa 	slli	r3,r4,3
    1048:	1ad1883a 	add	r8,r3,r11
    104c:	41800217 	ldw	r6,8(r8)
    1050:	41805b26 	beq	r8,r6,11c0 <_malloc_r+0x650>
    1054:	30800117 	ldw	r2,4(r6)
    1058:	00ffff04 	movi	r3,-4
    105c:	10c4703a 	and	r2,r2,r3
    1060:	2880022e 	bgeu	r5,r2,106c <_malloc_r+0x4fc>
    1064:	31800217 	ldw	r6,8(r6)
    1068:	41bffa1e 	bne	r8,r6,1054 <_malloc_r+0x4e4>
    106c:	32000317 	ldw	r8,12(r6)
    1070:	39c00117 	ldw	r7,4(r7)
    1074:	82000315 	stw	r8,12(r16)
    1078:	81800215 	stw	r6,8(r16)
    107c:	07000074 	movhi	fp,1
    1080:	e73cbb04 	addi	fp,fp,-3348
    1084:	34000315 	stw	r16,12(r6)
    1088:	44000215 	stw	r16,8(r8)
    108c:	003f3e06 	br	d88 <_malloc_r+0x218>
    1090:	63000044 	addi	r12,r12,1
    1094:	608000cc 	andi	r2,r12,3
    1098:	10005d26 	beq	r2,zero,1210 <_malloc_r+0x6a0>
    109c:	18c00204 	addi	r3,r3,8
    10a0:	003f5106 	br	de8 <_malloc_r+0x278>
    10a4:	8089883a 	add	r4,r16,r2
    10a8:	003f6d06 	br	e60 <_malloc_r+0x2f0>
    10ac:	00805504 	movi	r2,340
    10b0:	10c02036 	bltu	r2,r3,1134 <_malloc_r+0x5c4>
    10b4:	8804d3fa 	srli	r2,r17,15
    10b8:	11801dc4 	addi	r6,r2,119
    10bc:	300490fa 	slli	r2,r6,3
    10c0:	003ed806 	br	c24 <_malloc_r+0xb4>
    10c4:	48c000c4 	addi	r3,r9,3
    10c8:	003f3106 	br	d90 <_malloc_r+0x220>
    10cc:	05c00074 	movhi	r23,1
    10d0:	bdca4e04 	addi	r23,r23,10552
    10d4:	b8800017 	ldw	r2,0(r23)
    10d8:	988d883a 	add	r6,r19,r2
    10dc:	b9800015 	stw	r6,0(r23)
    10e0:	293fb21e 	bne	r5,r4,fac <_malloc_r+0x43c>
    10e4:	2083ffcc 	andi	r2,r4,4095
    10e8:	103fb01e 	bne	r2,zero,fac <_malloc_r+0x43c>
    10ec:	e4000217 	ldw	r16,8(fp)
    10f0:	9d45883a 	add	r2,r19,r21
    10f4:	10800054 	ori	r2,r2,1
    10f8:	80800115 	stw	r2,4(r16)
    10fc:	b8c00017 	ldw	r3,0(r23)
    1100:	d0a6d517 	ldw	r2,-25772(gp)
    1104:	10c0012e 	bgeu	r2,r3,110c <_malloc_r+0x59c>
    1108:	d0e6d515 	stw	r3,-25772(gp)
    110c:	d0a6d617 	ldw	r2,-25768(gp)
    1110:	10ff962e 	bgeu	r2,r3,f6c <_malloc_r+0x3fc>
    1114:	d0e6d615 	stw	r3,-25768(gp)
    1118:	003f9406 	br	f6c <_malloc_r+0x3fc>
    111c:	00800104 	movi	r2,4
    1120:	11001e36 	bltu	r2,r4,119c <_malloc_r+0x62c>
    1124:	2804d1ba 	srli	r2,r5,6
    1128:	11000e04 	addi	r4,r2,56
    112c:	200690fa 	slli	r3,r4,3
    1130:	003fc506 	br	1048 <_malloc_r+0x4d8>
    1134:	00815504 	movi	r2,1364
    1138:	10c01d2e 	bgeu	r2,r3,11b0 <_malloc_r+0x640>
    113c:	01801f84 	movi	r6,126
    1140:	0080fc04 	movi	r2,1008
    1144:	003eb706 	br	c24 <_malloc_r+0xb4>
    1148:	00800204 	movi	r2,8
    114c:	10cbc83a 	sub	r5,r2,r3
    1150:	2169883a 	add	r20,r4,r5
    1154:	003f9e06 	br	fd0 <_malloc_r+0x460>
    1158:	00bffe04 	movi	r2,-8
    115c:	a93ffd04 	addi	r4,r21,-12
    1160:	2088703a 	and	r4,r4,r2
    1164:	b10b883a 	add	r5,r22,r4
    1168:	00c00144 	movi	r3,5
    116c:	28c00215 	stw	r3,8(r5)
    1170:	28c00115 	stw	r3,4(r5)
    1174:	b0800117 	ldw	r2,4(r22)
    1178:	1080004c 	andi	r2,r2,1
    117c:	2084b03a 	or	r2,r4,r2
    1180:	b0800115 	stw	r2,4(r22)
    1184:	313fdd2e 	bgeu	r6,r4,10fc <_malloc_r+0x58c>
    1188:	b1400204 	addi	r5,r22,8
    118c:	9009883a 	mov	r4,r18
    1190:	00072900 	call	7290 <_free_r>
    1194:	e4000217 	ldw	r16,8(fp)
    1198:	003fd806 	br	10fc <_malloc_r+0x58c>
    119c:	00800504 	movi	r2,20
    11a0:	11001536 	bltu	r2,r4,11f8 <_malloc_r+0x688>
    11a4:	210016c4 	addi	r4,r4,91
    11a8:	200690fa 	slli	r3,r4,3
    11ac:	003fa606 	br	1048 <_malloc_r+0x4d8>
    11b0:	8804d4ba 	srli	r2,r17,18
    11b4:	11801f04 	addi	r6,r2,124
    11b8:	300490fa 	slli	r2,r6,3
    11bc:	003e9906 	br	c24 <_malloc_r+0xb4>
    11c0:	2009d0ba 	srai	r4,r4,2
    11c4:	01400074 	movhi	r5,1
    11c8:	297cbb04 	addi	r5,r5,-3348
    11cc:	00c00044 	movi	r3,1
    11d0:	28800117 	ldw	r2,4(r5)
    11d4:	1906983a 	sll	r3,r3,r4
    11d8:	10c4b03a 	or	r2,r2,r3
    11dc:	28800115 	stw	r2,4(r5)
    11e0:	003fa306 	br	1070 <_malloc_r+0x500>
    11e4:	0027883a 	mov	r19,zero
    11e8:	00c00044 	movi	r3,1
    11ec:	003f8606 	br	1008 <_malloc_r+0x498>
    11f0:	d1200215 	stw	r4,-32760(gp)
    11f4:	003f7306 	br	fc4 <_malloc_r+0x454>
    11f8:	00801504 	movi	r2,84
    11fc:	11001936 	bltu	r2,r4,1264 <_malloc_r+0x6f4>
    1200:	2804d33a 	srli	r2,r5,12
    1204:	11001b84 	addi	r4,r2,110
    1208:	200690fa 	slli	r3,r4,3
    120c:	003f8e06 	br	1048 <_malloc_r+0x4d8>
    1210:	480b883a 	mov	r5,r9
    1214:	6807883a 	mov	r3,r13
    1218:	288000cc 	andi	r2,r5,3
    121c:	18fffe04 	addi	r3,r3,-8
    1220:	297fffc4 	addi	r5,r5,-1
    1224:	10001526 	beq	r2,zero,127c <_malloc_r+0x70c>
    1228:	18800217 	ldw	r2,8(r3)
    122c:	10fffa26 	beq	r2,r3,1218 <_malloc_r+0x6a8>
    1230:	2109883a 	add	r4,r4,r4
    1234:	393f1e36 	bltu	r7,r4,eb0 <_malloc_r+0x340>
    1238:	203f1d26 	beq	r4,zero,eb0 <_malloc_r+0x340>
    123c:	21c4703a 	and	r2,r4,r7
    1240:	10000226 	beq	r2,zero,124c <_malloc_r+0x6dc>
    1244:	6013883a 	mov	r9,r12
    1248:	003ee106 	br	dd0 <_malloc_r+0x260>
    124c:	2109883a 	add	r4,r4,r4
    1250:	3904703a 	and	r2,r7,r4
    1254:	63000104 	addi	r12,r12,4
    1258:	103ffc26 	beq	r2,zero,124c <_malloc_r+0x6dc>
    125c:	6013883a 	mov	r9,r12
    1260:	003edb06 	br	dd0 <_malloc_r+0x260>
    1264:	00805504 	movi	r2,340
    1268:	11000836 	bltu	r2,r4,128c <_malloc_r+0x71c>
    126c:	2804d3fa 	srli	r2,r5,15
    1270:	11001dc4 	addi	r4,r2,119
    1274:	200690fa 	slli	r3,r4,3
    1278:	003f7306 	br	1048 <_malloc_r+0x4d8>
    127c:	0104303a 	nor	r2,zero,r4
    1280:	388e703a 	and	r7,r7,r2
    1284:	e1c00115 	stw	r7,4(fp)
    1288:	003fe906 	br	1230 <_malloc_r+0x6c0>
    128c:	00815504 	movi	r2,1364
    1290:	1100032e 	bgeu	r2,r4,12a0 <_malloc_r+0x730>
    1294:	01001f84 	movi	r4,126
    1298:	00c0fc04 	movi	r3,1008
    129c:	003f6a06 	br	1048 <_malloc_r+0x4d8>
    12a0:	2804d4ba 	srli	r2,r5,18
    12a4:	11001f04 	addi	r4,r2,124
    12a8:	200690fa 	slli	r3,r4,3
    12ac:	003f6606 	br	1048 <_malloc_r+0x4d8>

000012b0 <printf>:
    12b0:	defffb04 	addi	sp,sp,-20
    12b4:	dfc00115 	stw	ra,4(sp)
    12b8:	d9400215 	stw	r5,8(sp)
    12bc:	d9800315 	stw	r6,12(sp)
    12c0:	d9c00415 	stw	r7,16(sp)
    12c4:	00800074 	movhi	r2,1
    12c8:	10837004 	addi	r2,r2,3520
    12cc:	10c00017 	ldw	r3,0(r2)
    12d0:	200b883a 	mov	r5,r4
    12d4:	d8800204 	addi	r2,sp,8
    12d8:	19000217 	ldw	r4,8(r3)
    12dc:	100d883a 	mov	r6,r2
    12e0:	d8800015 	stw	r2,0(sp)
    12e4:	00052e80 	call	52e8 <__vfprintf_internal>
    12e8:	dfc00117 	ldw	ra,4(sp)
    12ec:	dec00504 	addi	sp,sp,20
    12f0:	f800283a 	ret

000012f4 <_printf_r>:
    12f4:	defffc04 	addi	sp,sp,-16
    12f8:	dfc00115 	stw	ra,4(sp)
    12fc:	d9800215 	stw	r6,8(sp)
    1300:	d9c00315 	stw	r7,12(sp)
    1304:	280d883a 	mov	r6,r5
    1308:	21400217 	ldw	r5,8(r4)
    130c:	d8c00204 	addi	r3,sp,8
    1310:	180f883a 	mov	r7,r3
    1314:	d8c00015 	stw	r3,0(sp)
    1318:	00034240 	call	3424 <___vfprintf_internal_r>
    131c:	dfc00117 	ldw	ra,4(sp)
    1320:	dec00404 	addi	sp,sp,16
    1324:	f800283a 	ret

00001328 <putchar>:
    1328:	00800074 	movhi	r2,1
    132c:	10837004 	addi	r2,r2,3520
    1330:	11800017 	ldw	r6,0(r2)
    1334:	200b883a 	mov	r5,r4
    1338:	3009883a 	mov	r4,r6
    133c:	31800217 	ldw	r6,8(r6)
    1340:	0009ee41 	jmpi	9ee4 <_putc_r>

00001344 <_putchar_r>:
    1344:	21800217 	ldw	r6,8(r4)
    1348:	0009ee41 	jmpi	9ee4 <_putc_r>

0000134c <_puts_r>:
    134c:	defff604 	addi	sp,sp,-40
    1350:	dc400715 	stw	r17,28(sp)
    1354:	2023883a 	mov	r17,r4
    1358:	2809883a 	mov	r4,r5
    135c:	dfc00915 	stw	ra,36(sp)
    1360:	dcc00815 	stw	r19,32(sp)
    1364:	2827883a 	mov	r19,r5
    1368:	00014700 	call	1470 <strlen>
    136c:	89400217 	ldw	r5,8(r17)
    1370:	00c00074 	movhi	r3,1
    1374:	18fbce04 	addi	r3,r3,-4296
    1378:	01c00044 	movi	r7,1
    137c:	12000044 	addi	r8,r2,1
    1380:	d8c00515 	stw	r3,20(sp)
    1384:	d9c00615 	stw	r7,24(sp)
    1388:	d8c00304 	addi	r3,sp,12
    138c:	01c00084 	movi	r7,2
    1390:	8809883a 	mov	r4,r17
    1394:	d80d883a 	mov	r6,sp
    1398:	d8c00015 	stw	r3,0(sp)
    139c:	dcc00315 	stw	r19,12(sp)
    13a0:	da000215 	stw	r8,8(sp)
    13a4:	d9c00115 	stw	r7,4(sp)
    13a8:	d8800415 	stw	r2,16(sp)
    13ac:	00075a40 	call	75a4 <__sfvwrite_r>
    13b0:	00ffffc4 	movi	r3,-1
    13b4:	10000626 	beq	r2,zero,13d0 <_puts_r+0x84>
    13b8:	1805883a 	mov	r2,r3
    13bc:	dfc00917 	ldw	ra,36(sp)
    13c0:	dcc00817 	ldw	r19,32(sp)
    13c4:	dc400717 	ldw	r17,28(sp)
    13c8:	dec00a04 	addi	sp,sp,40
    13cc:	f800283a 	ret
    13d0:	00c00284 	movi	r3,10
    13d4:	1805883a 	mov	r2,r3
    13d8:	dfc00917 	ldw	ra,36(sp)
    13dc:	dcc00817 	ldw	r19,32(sp)
    13e0:	dc400717 	ldw	r17,28(sp)
    13e4:	dec00a04 	addi	sp,sp,40
    13e8:	f800283a 	ret

000013ec <puts>:
    13ec:	00800074 	movhi	r2,1
    13f0:	10837004 	addi	r2,r2,3520
    13f4:	200b883a 	mov	r5,r4
    13f8:	11000017 	ldw	r4,0(r2)
    13fc:	000134c1 	jmpi	134c <_puts_r>

00001400 <_sbrk_r>:
    1400:	defffd04 	addi	sp,sp,-12
    1404:	dc000015 	stw	r16,0(sp)
    1408:	04000074 	movhi	r16,1
    140c:	840a4404 	addi	r16,r16,10512
    1410:	dc400115 	stw	r17,4(sp)
    1414:	80000015 	stw	zero,0(r16)
    1418:	2023883a 	mov	r17,r4
    141c:	2809883a 	mov	r4,r5
    1420:	dfc00215 	stw	ra,8(sp)
    1424:	000dca40 	call	dca4 <sbrk>
    1428:	1007883a 	mov	r3,r2
    142c:	00bfffc4 	movi	r2,-1
    1430:	18800626 	beq	r3,r2,144c <_sbrk_r+0x4c>
    1434:	1805883a 	mov	r2,r3
    1438:	dfc00217 	ldw	ra,8(sp)
    143c:	dc400117 	ldw	r17,4(sp)
    1440:	dc000017 	ldw	r16,0(sp)
    1444:	dec00304 	addi	sp,sp,12
    1448:	f800283a 	ret
    144c:	80800017 	ldw	r2,0(r16)
    1450:	103ff826 	beq	r2,zero,1434 <_sbrk_r+0x34>
    1454:	88800015 	stw	r2,0(r17)
    1458:	1805883a 	mov	r2,r3
    145c:	dfc00217 	ldw	ra,8(sp)
    1460:	dc400117 	ldw	r17,4(sp)
    1464:	dc000017 	ldw	r16,0(sp)
    1468:	dec00304 	addi	sp,sp,12
    146c:	f800283a 	ret

00001470 <strlen>:
    1470:	208000cc 	andi	r2,r4,3
    1474:	2011883a 	mov	r8,r4
    1478:	1000161e 	bne	r2,zero,14d4 <strlen+0x64>
    147c:	20c00017 	ldw	r3,0(r4)
    1480:	017fbff4 	movhi	r5,65279
    1484:	297fbfc4 	addi	r5,r5,-257
    1488:	01e02074 	movhi	r7,32897
    148c:	39e02004 	addi	r7,r7,-32640
    1490:	1945883a 	add	r2,r3,r5
    1494:	11c4703a 	and	r2,r2,r7
    1498:	00c6303a 	nor	r3,zero,r3
    149c:	1886703a 	and	r3,r3,r2
    14a0:	18000c1e 	bne	r3,zero,14d4 <strlen+0x64>
    14a4:	280d883a 	mov	r6,r5
    14a8:	380b883a 	mov	r5,r7
    14ac:	21000104 	addi	r4,r4,4
    14b0:	20800017 	ldw	r2,0(r4)
    14b4:	1187883a 	add	r3,r2,r6
    14b8:	1946703a 	and	r3,r3,r5
    14bc:	0084303a 	nor	r2,zero,r2
    14c0:	10c4703a 	and	r2,r2,r3
    14c4:	103ff926 	beq	r2,zero,14ac <strlen+0x3c>
    14c8:	20800007 	ldb	r2,0(r4)
    14cc:	10000326 	beq	r2,zero,14dc <strlen+0x6c>
    14d0:	21000044 	addi	r4,r4,1
    14d4:	20800007 	ldb	r2,0(r4)
    14d8:	103ffd1e 	bne	r2,zero,14d0 <strlen+0x60>
    14dc:	2205c83a 	sub	r2,r4,r8
    14e0:	f800283a 	ret

000014e4 <critical_factorization>:
    14e4:	03000044 	movi	r12,1
    14e8:	6013883a 	mov	r9,r12
    14ec:	037fffc4 	movi	r13,-1
    14f0:	0011883a 	mov	r8,zero
    14f4:	6905883a 	add	r2,r13,r4
    14f8:	424f883a 	add	r7,r8,r9
    14fc:	1245883a 	add	r2,r2,r9
    1500:	21c7883a 	add	r3,r4,r7
    1504:	39400b2e 	bgeu	r7,r5,1534 <critical_factorization+0x50>
    1508:	18c00003 	ldbu	r3,0(r3)
    150c:	10800003 	ldbu	r2,0(r2)
    1510:	1880232e 	bgeu	r3,r2,15a0 <critical_factorization+0xbc>
    1514:	3b59c83a 	sub	r12,r7,r13
    1518:	02400044 	movi	r9,1
    151c:	3811883a 	mov	r8,r7
    1520:	6905883a 	add	r2,r13,r4
    1524:	424f883a 	add	r7,r8,r9
    1528:	1245883a 	add	r2,r2,r9
    152c:	21c7883a 	add	r3,r4,r7
    1530:	397ff536 	bltu	r7,r5,1508 <critical_factorization+0x24>
    1534:	02c00044 	movi	r11,1
    1538:	5815883a 	mov	r10,r11
    153c:	027fffc4 	movi	r9,-1
    1540:	0011883a 	mov	r8,zero
    1544:	4905883a 	add	r2,r9,r4
    1548:	428f883a 	add	r7,r8,r10
    154c:	33000015 	stw	r12,0(r6)
    1550:	1285883a 	add	r2,r2,r10
    1554:	3907883a 	add	r3,r7,r4
    1558:	39400b2e 	bgeu	r7,r5,1588 <critical_factorization+0xa4>
    155c:	18c00003 	ldbu	r3,0(r3)
    1560:	10800003 	ldbu	r2,0(r2)
    1564:	10c01a2e 	bgeu	r2,r3,15d0 <critical_factorization+0xec>
    1568:	3a57c83a 	sub	r11,r7,r9
    156c:	02800044 	movi	r10,1
    1570:	3811883a 	mov	r8,r7
    1574:	4905883a 	add	r2,r9,r4
    1578:	428f883a 	add	r7,r8,r10
    157c:	1285883a 	add	r2,r2,r10
    1580:	3907883a 	add	r3,r7,r4
    1584:	397ff536 	bltu	r7,r5,155c <critical_factorization+0x78>
    1588:	48c00044 	addi	r3,r9,1
    158c:	68800044 	addi	r2,r13,1
    1590:	18800236 	bltu	r3,r2,159c <critical_factorization+0xb8>
    1594:	32c00015 	stw	r11,0(r6)
    1598:	1805883a 	mov	r2,r3
    159c:	f800283a 	ret
    15a0:	18800626 	beq	r3,r2,15bc <critical_factorization+0xd8>
    15a4:	03000044 	movi	r12,1
    15a8:	430f883a 	add	r7,r8,r12
    15ac:	401b883a 	mov	r13,r8
    15b0:	6013883a 	mov	r9,r12
    15b4:	3811883a 	mov	r8,r7
    15b8:	003fd906 	br	1520 <critical_factorization+0x3c>
    15bc:	4b001026 	beq	r9,r12,1600 <critical_factorization+0x11c>
    15c0:	400f883a 	mov	r7,r8
    15c4:	4a400044 	addi	r9,r9,1
    15c8:	3811883a 	mov	r8,r7
    15cc:	003fd406 	br	1520 <critical_factorization+0x3c>
    15d0:	18800626 	beq	r3,r2,15ec <critical_factorization+0x108>
    15d4:	02c00044 	movi	r11,1
    15d8:	42cf883a 	add	r7,r8,r11
    15dc:	4013883a 	mov	r9,r8
    15e0:	5815883a 	mov	r10,r11
    15e4:	3811883a 	mov	r8,r7
    15e8:	003fe206 	br	1574 <critical_factorization+0x90>
    15ec:	52c00726 	beq	r10,r11,160c <critical_factorization+0x128>
    15f0:	400f883a 	mov	r7,r8
    15f4:	52800044 	addi	r10,r10,1
    15f8:	3811883a 	mov	r8,r7
    15fc:	003fdd06 	br	1574 <critical_factorization+0x90>
    1600:	02400044 	movi	r9,1
    1604:	3811883a 	mov	r8,r7
    1608:	003fc506 	br	1520 <critical_factorization+0x3c>
    160c:	02800044 	movi	r10,1
    1610:	3811883a 	mov	r8,r7
    1614:	003fd706 	br	1574 <critical_factorization+0x90>

00001618 <strstr>:
    1618:	defef404 	addi	sp,sp,-1072
    161c:	dd810815 	stw	r22,1056(sp)
    1620:	dc410315 	stw	r17,1036(sp)
    1624:	dfc10b15 	stw	ra,1068(sp)
    1628:	df010a15 	stw	fp,1064(sp)
    162c:	ddc10915 	stw	r23,1060(sp)
    1630:	dd410715 	stw	r21,1052(sp)
    1634:	dd010615 	stw	r20,1048(sp)
    1638:	dcc10515 	stw	r19,1044(sp)
    163c:	dc810415 	stw	r18,1040(sp)
    1640:	dc010215 	stw	r16,1032(sp)
    1644:	2023883a 	mov	r17,r4
    1648:	21000007 	ldb	r4,0(r4)
    164c:	282d883a 	mov	r22,r5
    1650:	2000d026 	beq	r4,zero,1994 <strstr+0x37c>
    1654:	28800007 	ldb	r2,0(r5)
    1658:	10001026 	beq	r2,zero,169c <strstr+0x84>
    165c:	2821883a 	mov	r16,r5
    1660:	8807883a 	mov	r3,r17
    1664:	01400044 	movi	r5,1
    1668:	00000206 	br	1674 <strstr+0x5c>
    166c:	80800007 	ldb	r2,0(r16)
    1670:	10000826 	beq	r2,zero,1694 <strstr+0x7c>
    1674:	18c00044 	addi	r3,r3,1
    1678:	2085003a 	cmpeq	r2,r4,r2
    167c:	19000007 	ldb	r4,0(r3)
    1680:	288a703a 	and	r5,r5,r2
    1684:	84000044 	addi	r16,r16,1
    1688:	203ff81e 	bne	r4,zero,166c <strstr+0x54>
    168c:	80800007 	ldb	r2,0(r16)
    1690:	1000611e 	bne	r2,zero,1818 <strstr+0x200>
    1694:	2805003a 	cmpeq	r2,r5,zero
    1698:	10000e1e 	bne	r2,zero,16d4 <strstr+0xbc>
    169c:	8825883a 	mov	r18,r17
    16a0:	9005883a 	mov	r2,r18
    16a4:	dfc10b17 	ldw	ra,1068(sp)
    16a8:	df010a17 	ldw	fp,1064(sp)
    16ac:	ddc10917 	ldw	r23,1060(sp)
    16b0:	dd810817 	ldw	r22,1056(sp)
    16b4:	dd410717 	ldw	r21,1052(sp)
    16b8:	dd010617 	ldw	r20,1048(sp)
    16bc:	dcc10517 	ldw	r19,1044(sp)
    16c0:	dc810417 	ldw	r18,1040(sp)
    16c4:	dc410317 	ldw	r17,1036(sp)
    16c8:	dc010217 	ldw	r16,1032(sp)
    16cc:	dec10c04 	addi	sp,sp,1072
    16d0:	f800283a 	ret
    16d4:	b1400007 	ldb	r5,0(r22)
    16d8:	89000044 	addi	r4,r17,1
    16dc:	04c00044 	movi	r19,1
    16e0:	000a77c0 	call	a77c <strchr>
    16e4:	1025883a 	mov	r18,r2
    16e8:	103fed26 	beq	r2,zero,16a0 <strstr+0x88>
    16ec:	85a1c83a 	sub	r16,r16,r22
    16f0:	84ffeb26 	beq	r16,r19,16a0 <strstr+0x88>
    16f4:	8c09883a 	add	r4,r17,r16
    16f8:	2080492e 	bgeu	r4,r2,1820 <strstr+0x208>
    16fc:	9829883a 	mov	r20,r19
    1700:	008007c4 	movi	r2,31
    1704:	14004836 	bltu	r2,r16,1828 <strstr+0x210>
    1708:	b009883a 	mov	r4,r22
    170c:	800b883a 	mov	r5,r16
    1710:	d80d883a 	mov	r6,sp
    1714:	00014e40 	call	14e4 <critical_factorization>
    1718:	d9400017 	ldw	r5,0(sp)
    171c:	b009883a 	mov	r4,r22
    1720:	100d883a 	mov	r6,r2
    1724:	b14b883a 	add	r5,r22,r5
    1728:	1027883a 	mov	r19,r2
    172c:	0008ac80 	call	8ac8 <memcmp>
    1730:	1000b526 	beq	r2,zero,1a08 <strstr+0x3f0>
    1734:	84efc83a 	sub	r23,r16,r19
    1738:	9805883a 	mov	r2,r19
    173c:	9dc0012e 	bgeu	r19,r23,1744 <strstr+0x12c>
    1740:	b805883a 	mov	r2,r23
    1744:	10800044 	addi	r2,r2,1
    1748:	002b883a 	mov	r21,zero
    174c:	d8800015 	stw	r2,0(sp)
    1750:	ac23883a 	add	r17,r21,r16
    1754:	8d0dc83a 	sub	r6,r17,r20
    1758:	9509883a 	add	r4,r18,r20
    175c:	000b883a 	mov	r5,zero
    1760:	00089e40 	call	89e4 <memchr>
    1764:	10002c1e 	bne	r2,zero,1818 <strstr+0x200>
    1768:	88002b26 	beq	r17,zero,1818 <strstr+0x200>
    176c:	9c00122e 	bgeu	r19,r16,17b8 <strstr+0x1a0>
    1770:	acc5883a 	add	r2,r21,r19
    1774:	908b883a 	add	r5,r18,r2
    1778:	b4c9883a 	add	r4,r22,r19
    177c:	20c00003 	ldbu	r3,0(r4)
    1780:	28800003 	ldbu	r2,0(r5)
    1784:	1881331e 	bne	r3,r2,1c54 <strstr+0x63c>
    1788:	200d883a 	mov	r6,r4
    178c:	29400044 	addi	r5,r5,1
    1790:	9809883a 	mov	r4,r19
    1794:	9dcf883a 	add	r7,r19,r23
    1798:	00000506 	br	17b0 <strstr+0x198>
    179c:	30c00043 	ldbu	r3,1(r6)
    17a0:	28800003 	ldbu	r2,0(r5)
    17a4:	31800044 	addi	r6,r6,1
    17a8:	29400044 	addi	r5,r5,1
    17ac:	10c1161e 	bne	r2,r3,1c08 <strstr+0x5f0>
    17b0:	21000044 	addi	r4,r4,1
    17b4:	21fff91e 	bne	r4,r7,179c <strstr+0x184>
    17b8:	01ffffc4 	movi	r7,-1
    17bc:	99cd883a 	add	r6,r19,r7
    17c0:	31c12726 	beq	r6,r7,1c60 <strstr+0x648>
    17c4:	ac91883a 	add	r8,r21,r18
    17c8:	b187883a 	add	r3,r22,r6
    17cc:	4189883a 	add	r4,r8,r6
    17d0:	19400003 	ldbu	r5,0(r3)
    17d4:	20800003 	ldbu	r2,0(r4)
    17d8:	2881141e 	bne	r5,r2,1c2c <strstr+0x614>
    17dc:	acc5883a 	add	r2,r21,r19
    17e0:	9085883a 	add	r2,r18,r2
    17e4:	b4c7883a 	add	r3,r22,r19
    17e8:	197fff84 	addi	r5,r3,-2
    17ec:	113fff84 	addi	r4,r2,-2
    17f0:	00000506 	br	1808 <strstr+0x1f0>
    17f4:	28c00003 	ldbu	r3,0(r5)
    17f8:	20800003 	ldbu	r2,0(r4)
    17fc:	297fffc4 	addi	r5,r5,-1
    1800:	213fffc4 	addi	r4,r4,-1
    1804:	10c1091e 	bne	r2,r3,1c2c <strstr+0x614>
    1808:	31bfffc4 	addi	r6,r6,-1
    180c:	31fff91e 	bne	r6,r7,17f4 <strstr+0x1dc>
    1810:	4025883a 	mov	r18,r8
    1814:	003fa206 	br	16a0 <strstr+0x88>
    1818:	0025883a 	mov	r18,zero
    181c:	003fa006 	br	16a0 <strstr+0x88>
    1820:	20a9c83a 	sub	r20,r4,r2
    1824:	003fb606 	br	1700 <strstr+0xe8>
    1828:	b009883a 	mov	r4,r22
    182c:	800b883a 	mov	r5,r16
    1830:	d80d883a 	mov	r6,sp
    1834:	00014e40 	call	14e4 <critical_factorization>
    1838:	102b883a 	mov	r21,r2
    183c:	d8c10104 	addi	r3,sp,1028
    1840:	d8800104 	addi	r2,sp,4
    1844:	14000015 	stw	r16,0(r2)
    1848:	10800104 	addi	r2,r2,4
    184c:	10fffd1e 	bne	r2,r3,1844 <strstr+0x22c>
    1850:	84ffffc4 	addi	r19,r16,-1
    1854:	b009883a 	mov	r4,r22
    1858:	9807883a 	mov	r3,r19
    185c:	017fffc4 	movi	r5,-1
    1860:	20800003 	ldbu	r2,0(r4)
    1864:	21000044 	addi	r4,r4,1
    1868:	1085883a 	add	r2,r2,r2
    186c:	1085883a 	add	r2,r2,r2
    1870:	16c5883a 	add	r2,r2,sp
    1874:	10c00115 	stw	r3,4(r2)
    1878:	18ffffc4 	addi	r3,r3,-1
    187c:	197ff81e 	bne	r3,r5,1860 <strstr+0x248>
    1880:	d9400017 	ldw	r5,0(sp)
    1884:	b009883a 	mov	r4,r22
    1888:	a80d883a 	mov	r6,r21
    188c:	b14b883a 	add	r5,r22,r5
    1890:	0008ac80 	call	8ac8 <memcmp>
    1894:	10004226 	beq	r2,zero,19a0 <strstr+0x388>
    1898:	8547c83a 	sub	r3,r16,r21
    189c:	a805883a 	mov	r2,r21
    18a0:	a8c0012e 	bgeu	r21,r3,18a8 <strstr+0x290>
    18a4:	1805883a 	mov	r2,r3
    18a8:	10800044 	addi	r2,r2,1
    18ac:	002f883a 	mov	r23,zero
    18b0:	b579883a 	add	fp,r22,r21
    18b4:	d8800015 	stw	r2,0(sp)
    18b8:	bc23883a 	add	r17,r23,r16
    18bc:	8d0dc83a 	sub	r6,r17,r20
    18c0:	9509883a 	add	r4,r18,r20
    18c4:	000b883a 	mov	r5,zero
    18c8:	00089e40 	call	89e4 <memchr>
    18cc:	103fd21e 	bne	r2,zero,1818 <strstr+0x200>
    18d0:	883fd126 	beq	r17,zero,1818 <strstr+0x200>
    18d4:	9447883a 	add	r3,r18,r17
    18d8:	18bfffc3 	ldbu	r2,-1(r3)
    18dc:	1085883a 	add	r2,r2,r2
    18e0:	1085883a 	add	r2,r2,r2
    18e4:	16c5883a 	add	r2,r2,sp
    18e8:	10800117 	ldw	r2,4(r2)
    18ec:	1000b61e 	bne	r2,zero,1bc8 <strstr+0x5b0>
    18f0:	acc0102e 	bgeu	r21,r19,1934 <strstr+0x31c>
    18f4:	bd45883a 	add	r2,r23,r21
    18f8:	9089883a 	add	r4,r18,r2
    18fc:	20c00003 	ldbu	r3,0(r4)
    1900:	e0800003 	ldbu	r2,0(fp)
    1904:	1880af1e 	bne	r3,r2,1bc4 <strstr+0x5ac>
    1908:	21800044 	addi	r6,r4,1
    190c:	e00b883a 	mov	r5,fp
    1910:	a809883a 	mov	r4,r21
    1914:	00000506 	br	192c <strstr+0x314>
    1918:	28c00043 	ldbu	r3,1(r5)
    191c:	30800003 	ldbu	r2,0(r6)
    1920:	29400044 	addi	r5,r5,1
    1924:	31800044 	addi	r6,r6,1
    1928:	10c0bc1e 	bne	r2,r3,1c1c <strstr+0x604>
    192c:	21000044 	addi	r4,r4,1
    1930:	24fff936 	bltu	r4,r19,1918 <strstr+0x300>
    1934:	01ffffc4 	movi	r7,-1
    1938:	a9cd883a 	add	r6,r21,r7
    193c:	31c0cb26 	beq	r6,r7,1c6c <strstr+0x654>
    1940:	bc91883a 	add	r8,r23,r18
    1944:	b187883a 	add	r3,r22,r6
    1948:	4189883a 	add	r4,r8,r6
    194c:	19400003 	ldbu	r5,0(r3)
    1950:	20800003 	ldbu	r2,0(r4)
    1954:	2880b91e 	bne	r5,r2,1c3c <strstr+0x624>
    1958:	bd45883a 	add	r2,r23,r21
    195c:	9085883a 	add	r2,r18,r2
    1960:	b547883a 	add	r3,r22,r21
    1964:	197fff84 	addi	r5,r3,-2
    1968:	113fff84 	addi	r4,r2,-2
    196c:	00000506 	br	1984 <strstr+0x36c>
    1970:	28c00003 	ldbu	r3,0(r5)
    1974:	20800003 	ldbu	r2,0(r4)
    1978:	297fffc4 	addi	r5,r5,-1
    197c:	213fffc4 	addi	r4,r4,-1
    1980:	10c0ae1e 	bne	r2,r3,1c3c <strstr+0x624>
    1984:	31bfffc4 	addi	r6,r6,-1
    1988:	31fff91e 	bne	r6,r7,1970 <strstr+0x358>
    198c:	4025883a 	mov	r18,r8
    1990:	003f4306 	br	16a0 <strstr+0x88>
    1994:	2821883a 	mov	r16,r5
    1998:	01400044 	movi	r5,1
    199c:	003f3b06 	br	168c <strstr+0x74>
    19a0:	a8bfffc4 	addi	r2,r21,-1
    19a4:	002f883a 	mov	r23,zero
    19a8:	0039883a 	mov	fp,zero
    19ac:	d8810115 	stw	r2,1028(sp)
    19b0:	bc23883a 	add	r17,r23,r16
    19b4:	8d0dc83a 	sub	r6,r17,r20
    19b8:	9509883a 	add	r4,r18,r20
    19bc:	000b883a 	mov	r5,zero
    19c0:	00089e40 	call	89e4 <memchr>
    19c4:	103f941e 	bne	r2,zero,1818 <strstr+0x200>
    19c8:	883f9326 	beq	r17,zero,1818 <strstr+0x200>
    19cc:	9447883a 	add	r3,r18,r17
    19d0:	18bfffc3 	ldbu	r2,-1(r3)
    19d4:	1085883a 	add	r2,r2,r2
    19d8:	1085883a 	add	r2,r2,r2
    19dc:	16c5883a 	add	r2,r2,sp
    19e0:	10800117 	ldw	r2,4(r2)
    19e4:	10004526 	beq	r2,zero,1afc <strstr+0x4e4>
    19e8:	e0000426 	beq	fp,zero,19fc <strstr+0x3e4>
    19ec:	d8c00017 	ldw	r3,0(sp)
    19f0:	10c0022e 	bgeu	r2,r3,19fc <strstr+0x3e4>
    19f4:	80c5c83a 	sub	r2,r16,r3
    19f8:	0039883a 	mov	fp,zero
    19fc:	b8af883a 	add	r23,r23,r2
    1a00:	8829883a 	mov	r20,r17
    1a04:	003fea06 	br	19b0 <strstr+0x398>
    1a08:	002f883a 	mov	r23,zero
    1a0c:	0023883a 	mov	r17,zero
    1a10:	9f3fffc4 	addi	fp,r19,-1
    1a14:	bc2b883a 	add	r21,r23,r16
    1a18:	ad0dc83a 	sub	r6,r21,r20
    1a1c:	9509883a 	add	r4,r18,r20
    1a20:	000b883a 	mov	r5,zero
    1a24:	00089e40 	call	89e4 <memchr>
    1a28:	103f7b1e 	bne	r2,zero,1818 <strstr+0x200>
    1a2c:	a83f7a26 	beq	r21,zero,1818 <strstr+0x200>
    1a30:	880b883a 	mov	r5,r17
    1a34:	8cc0012e 	bgeu	r17,r19,1a3c <strstr+0x424>
    1a38:	980b883a 	mov	r5,r19
    1a3c:	2c00112e 	bgeu	r5,r16,1a84 <strstr+0x46c>
    1a40:	b945883a 	add	r2,r23,r5
    1a44:	908f883a 	add	r7,r18,r2
    1a48:	b149883a 	add	r4,r22,r5
    1a4c:	20c00003 	ldbu	r3,0(r4)
    1a50:	38800003 	ldbu	r2,0(r7)
    1a54:	1880551e 	bne	r3,r2,1bac <strstr+0x594>
    1a58:	200d883a 	mov	r6,r4
    1a5c:	39000044 	addi	r4,r7,1
    1a60:	800f883a 	mov	r7,r16
    1a64:	00000506 	br	1a7c <strstr+0x464>
    1a68:	30c00043 	ldbu	r3,1(r6)
    1a6c:	20800003 	ldbu	r2,0(r4)
    1a70:	31800044 	addi	r6,r6,1
    1a74:	21000044 	addi	r4,r4,1
    1a78:	10c04c1e 	bne	r2,r3,1bac <strstr+0x594>
    1a7c:	29400044 	addi	r5,r5,1
    1a80:	29fff91e 	bne	r5,r7,1a68 <strstr+0x450>
    1a84:	980f883a 	mov	r7,r19
    1a88:	8cc0152e 	bgeu	r17,r19,1ae0 <strstr+0x4c8>
    1a8c:	bc85883a 	add	r2,r23,r18
    1a90:	1705883a 	add	r2,r2,fp
    1a94:	b707883a 	add	r3,r22,fp
    1a98:	19400003 	ldbu	r5,0(r3)
    1a9c:	11000003 	ldbu	r4,0(r2)
    1aa0:	29000f1e 	bne	r5,r4,1ae0 <strstr+0x4c8>
    1aa4:	bcc5883a 	add	r2,r23,r19
    1aa8:	9085883a 	add	r2,r18,r2
    1aac:	9d87883a 	add	r3,r19,r22
    1ab0:	e00f883a 	mov	r7,fp
    1ab4:	19bfff84 	addi	r6,r3,-2
    1ab8:	117fff84 	addi	r5,r2,-2
    1abc:	89c0082e 	bgeu	r17,r7,1ae0 <strstr+0x4c8>
    1ac0:	30c00003 	ldbu	r3,0(r6)
    1ac4:	28800003 	ldbu	r2,0(r5)
    1ac8:	31bfffc4 	addi	r6,r6,-1
    1acc:	297fffc4 	addi	r5,r5,-1
    1ad0:	393fffc4 	addi	r4,r7,-1
    1ad4:	10c0021e 	bne	r2,r3,1ae0 <strstr+0x4c8>
    1ad8:	200f883a 	mov	r7,r4
    1adc:	89fff836 	bltu	r17,r7,1ac0 <strstr+0x4a8>
    1ae0:	88800044 	addi	r2,r17,1
    1ae4:	38805936 	bltu	r7,r2,1c4c <strstr+0x634>
    1ae8:	d8800017 	ldw	r2,0(sp)
    1aec:	a829883a 	mov	r20,r21
    1af0:	b8af883a 	add	r23,r23,r2
    1af4:	80a3c83a 	sub	r17,r16,r2
    1af8:	003fc606 	br	1a14 <strstr+0x3fc>
    1afc:	e00d883a 	mov	r6,fp
    1b00:	e540012e 	bgeu	fp,r21,1b08 <strstr+0x4f0>
    1b04:	a80d883a 	mov	r6,r21
    1b08:	34c0102e 	bgeu	r6,r19,1b4c <strstr+0x534>
    1b0c:	b985883a 	add	r2,r23,r6
    1b10:	908f883a 	add	r7,r18,r2
    1b14:	b189883a 	add	r4,r22,r6
    1b18:	20c00003 	ldbu	r3,0(r4)
    1b1c:	38800003 	ldbu	r2,0(r7)
    1b20:	1880331e 	bne	r3,r2,1bf0 <strstr+0x5d8>
    1b24:	200b883a 	mov	r5,r4
    1b28:	39000044 	addi	r4,r7,1
    1b2c:	00000506 	br	1b44 <strstr+0x52c>
    1b30:	28c00043 	ldbu	r3,1(r5)
    1b34:	20800003 	ldbu	r2,0(r4)
    1b38:	29400044 	addi	r5,r5,1
    1b3c:	21000044 	addi	r4,r4,1
    1b40:	10c02b1e 	bne	r2,r3,1bf0 <strstr+0x5d8>
    1b44:	31800044 	addi	r6,r6,1
    1b48:	34fff936 	bltu	r6,r19,1b30 <strstr+0x518>
    1b4c:	a80f883a 	mov	r7,r21
    1b50:	e540202e 	bgeu	fp,r21,1bd4 <strstr+0x5bc>
    1b54:	d8c10117 	ldw	r3,1028(sp)
    1b58:	bc85883a 	add	r2,r23,r18
    1b5c:	10c5883a 	add	r2,r2,r3
    1b60:	1d87883a 	add	r3,r3,r22
    1b64:	19400003 	ldbu	r5,0(r3)
    1b68:	11000003 	ldbu	r4,0(r2)
    1b6c:	2900191e 	bne	r5,r4,1bd4 <strstr+0x5bc>
    1b70:	bd45883a 	add	r2,r23,r21
    1b74:	d9c10117 	ldw	r7,1028(sp)
    1b78:	9085883a 	add	r2,r18,r2
    1b7c:	b547883a 	add	r3,r22,r21
    1b80:	19bfff84 	addi	r6,r3,-2
    1b84:	117fff84 	addi	r5,r2,-2
    1b88:	e1c0122e 	bgeu	fp,r7,1bd4 <strstr+0x5bc>
    1b8c:	30c00003 	ldbu	r3,0(r6)
    1b90:	28800003 	ldbu	r2,0(r5)
    1b94:	31bfffc4 	addi	r6,r6,-1
    1b98:	297fffc4 	addi	r5,r5,-1
    1b9c:	393fffc4 	addi	r4,r7,-1
    1ba0:	10c00c1e 	bne	r2,r3,1bd4 <strstr+0x5bc>
    1ba4:	200f883a 	mov	r7,r4
    1ba8:	003ff706 	br	1b88 <strstr+0x570>
    1bac:	2cc5c83a 	sub	r2,r5,r19
    1bb0:	10800044 	addi	r2,r2,1
    1bb4:	b8af883a 	add	r23,r23,r2
    1bb8:	0023883a 	mov	r17,zero
    1bbc:	a829883a 	mov	r20,r21
    1bc0:	003f9406 	br	1a14 <strstr+0x3fc>
    1bc4:	00800044 	movi	r2,1
    1bc8:	b8af883a 	add	r23,r23,r2
    1bcc:	8829883a 	mov	r20,r17
    1bd0:	003f3906 	br	18b8 <strstr+0x2a0>
    1bd4:	e0800044 	addi	r2,fp,1
    1bd8:	38801c36 	bltu	r7,r2,1c4c <strstr+0x634>
    1bdc:	d8800017 	ldw	r2,0(sp)
    1be0:	8829883a 	mov	r20,r17
    1be4:	b8af883a 	add	r23,r23,r2
    1be8:	80b9c83a 	sub	fp,r16,r2
    1bec:	003f7006 	br	19b0 <strstr+0x398>
    1bf0:	3545c83a 	sub	r2,r6,r21
    1bf4:	10800044 	addi	r2,r2,1
    1bf8:	b8af883a 	add	r23,r23,r2
    1bfc:	0039883a 	mov	fp,zero
    1c00:	8829883a 	mov	r20,r17
    1c04:	003f6a06 	br	19b0 <strstr+0x398>
    1c08:	24c5c83a 	sub	r2,r4,r19
    1c0c:	10800044 	addi	r2,r2,1
    1c10:	a8ab883a 	add	r21,r21,r2
    1c14:	8829883a 	mov	r20,r17
    1c18:	003ecd06 	br	1750 <strstr+0x138>
    1c1c:	2545c83a 	sub	r2,r4,r21
    1c20:	10800044 	addi	r2,r2,1
    1c24:	b8af883a 	add	r23,r23,r2
    1c28:	003fe806 	br	1bcc <strstr+0x5b4>
    1c2c:	d8800017 	ldw	r2,0(sp)
    1c30:	8829883a 	mov	r20,r17
    1c34:	a8ab883a 	add	r21,r21,r2
    1c38:	003ec506 	br	1750 <strstr+0x138>
    1c3c:	d8800017 	ldw	r2,0(sp)
    1c40:	8829883a 	mov	r20,r17
    1c44:	b8af883a 	add	r23,r23,r2
    1c48:	003f1b06 	br	18b8 <strstr+0x2a0>
    1c4c:	95e5883a 	add	r18,r18,r23
    1c50:	003e9306 	br	16a0 <strstr+0x88>
    1c54:	00800044 	movi	r2,1
    1c58:	a8ab883a 	add	r21,r21,r2
    1c5c:	003fed06 	br	1c14 <strstr+0x5fc>
    1c60:	ac91883a 	add	r8,r21,r18
    1c64:	4025883a 	mov	r18,r8
    1c68:	003e8d06 	br	16a0 <strstr+0x88>
    1c6c:	bc91883a 	add	r8,r23,r18
    1c70:	4025883a 	mov	r18,r8
    1c74:	003e8a06 	br	16a0 <strstr+0x88>

00001c78 <match>:
    1c78:	21800017 	ldw	r6,0(r4)
    1c7c:	01c01004 	movi	r7,64
    1c80:	02001684 	movi	r8,90
    1c84:	28800007 	ldb	r2,0(r5)
    1c88:	29400044 	addi	r5,r5,1
    1c8c:	10000826 	beq	r2,zero,1cb0 <match+0x38>
    1c90:	31800044 	addi	r6,r6,1
    1c94:	30c00007 	ldb	r3,0(r6)
    1c98:	38c0020e 	bge	r7,r3,1ca4 <match+0x2c>
    1c9c:	40c00116 	blt	r8,r3,1ca4 <match+0x2c>
    1ca0:	18c00804 	addi	r3,r3,32
    1ca4:	18bff726 	beq	r3,r2,1c84 <match+0xc>
    1ca8:	0005883a 	mov	r2,zero
    1cac:	f800283a 	ret
    1cb0:	30800044 	addi	r2,r6,1
    1cb4:	20800015 	stw	r2,0(r4)
    1cb8:	00800044 	movi	r2,1
    1cbc:	f800283a 	ret

00001cc0 <_strtod_r>:
    1cc0:	deffd504 	addi	sp,sp,-172
    1cc4:	df002915 	stw	fp,164(sp)
    1cc8:	dd402615 	stw	r21,152(sp)
    1ccc:	dd002515 	stw	r20,148(sp)
    1cd0:	dfc02a15 	stw	ra,168(sp)
    1cd4:	ddc02815 	stw	r23,160(sp)
    1cd8:	dd802715 	stw	r22,156(sp)
    1cdc:	dcc02415 	stw	r19,144(sp)
    1ce0:	dc802315 	stw	r18,140(sp)
    1ce4:	dc402215 	stw	r17,136(sp)
    1ce8:	dc002115 	stw	r16,132(sp)
    1cec:	2829883a 	mov	r20,r5
    1cf0:	202b883a 	mov	r21,r4
    1cf4:	d9801d15 	stw	r6,116(sp)
    1cf8:	d8000915 	stw	zero,36(sp)
    1cfc:	d8000a15 	stw	zero,40(sp)
    1d00:	d9400415 	stw	r5,16(sp)
    1d04:	df000904 	addi	fp,sp,36
    1d08:	dc000417 	ldw	r16,16(sp)
    1d0c:	00800b44 	movi	r2,45
    1d10:	80c00003 	ldbu	r3,0(r16)
    1d14:	10c03536 	bltu	r2,r3,1dec <_strtod_r+0x12c>
    1d18:	18c5883a 	add	r2,r3,r3
    1d1c:	1085883a 	add	r2,r2,r2
    1d20:	00c00034 	movhi	r3,0
    1d24:	18c74d04 	addi	r3,r3,7476
    1d28:	10c5883a 	add	r2,r2,r3
    1d2c:	11000017 	ldw	r4,0(r2)
    1d30:	2000683a 	jmp	r4
    1d34:	00001f6c 	andhi	zero,zero,125
    1d38:	00001dec 	andhi	zero,zero,119
    1d3c:	00001dec 	andhi	zero,zero,119
    1d40:	00001dec 	andhi	zero,zero,119
    1d44:	00001dec 	andhi	zero,zero,119
    1d48:	00001dec 	andhi	zero,zero,119
    1d4c:	00001dec 	andhi	zero,zero,119
    1d50:	00001dec 	andhi	zero,zero,119
    1d54:	00001dec 	andhi	zero,zero,119
    1d58:	000022b4 	movhi	zero,138
    1d5c:	000022b4 	movhi	zero,138
    1d60:	000022b4 	movhi	zero,138
    1d64:	000022b4 	movhi	zero,138
    1d68:	000022b4 	movhi	zero,138
    1d6c:	00001dec 	andhi	zero,zero,119
    1d70:	00001dec 	andhi	zero,zero,119
    1d74:	00001dec 	andhi	zero,zero,119
    1d78:	00001dec 	andhi	zero,zero,119
    1d7c:	00001dec 	andhi	zero,zero,119
    1d80:	00001dec 	andhi	zero,zero,119
    1d84:	00001dec 	andhi	zero,zero,119
    1d88:	00001dec 	andhi	zero,zero,119
    1d8c:	00001dec 	andhi	zero,zero,119
    1d90:	00001dec 	andhi	zero,zero,119
    1d94:	00001dec 	andhi	zero,zero,119
    1d98:	00001dec 	andhi	zero,zero,119
    1d9c:	00001dec 	andhi	zero,zero,119
    1da0:	00001dec 	andhi	zero,zero,119
    1da4:	00001dec 	andhi	zero,zero,119
    1da8:	00001dec 	andhi	zero,zero,119
    1dac:	00001dec 	andhi	zero,zero,119
    1db0:	00001dec 	andhi	zero,zero,119
    1db4:	000022b4 	movhi	zero,138
    1db8:	00001dec 	andhi	zero,zero,119
    1dbc:	00001dec 	andhi	zero,zero,119
    1dc0:	00001dec 	andhi	zero,zero,119
    1dc4:	00001dec 	andhi	zero,zero,119
    1dc8:	00001dec 	andhi	zero,zero,119
    1dcc:	00001dec 	andhi	zero,zero,119
    1dd0:	00001dec 	andhi	zero,zero,119
    1dd4:	00001dec 	andhi	zero,zero,119
    1dd8:	00001dec 	andhi	zero,zero,119
    1ddc:	00001dec 	andhi	zero,zero,119
    1de0:	00002294 	movui	zero,138
    1de4:	00001dec 	andhi	zero,zero,119
    1de8:	000022c0 	call	22c <main+0x64>
    1dec:	d8001515 	stw	zero,84(sp)
    1df0:	80c00007 	ldb	r3,0(r16)
    1df4:	00800c04 	movi	r2,48
    1df8:	1880e926 	beq	r3,r2,21a0 <_strtod_r+0x4e0>
    1dfc:	d8001615 	stw	zero,88(sp)
    1e00:	dc001415 	stw	r16,80(sp)
    1e04:	84400007 	ldb	r17,0(r16)
    1e08:	00800bc4 	movi	r2,47
    1e0c:	1443760e 	bge	r2,r17,2be8 <_strtod_r+0xf28>
    1e10:	00800e44 	movi	r2,57
    1e14:	14437416 	blt	r2,r17,2be8 <_strtod_r+0xf28>
    1e18:	8025883a 	mov	r18,r16
    1e1c:	0027883a 	mov	r19,zero
    1e20:	d8001215 	stw	zero,72(sp)
    1e24:	d8001115 	stw	zero,68(sp)
    1e28:	00000f06 	br	1e68 <_strtod_r+0x1a8>
    1e2c:	d9001217 	ldw	r4,72(sp)
    1e30:	01400284 	movi	r5,10
    1e34:	000d0e40 	call	d0e4 <__mulsi3>
    1e38:	1445883a 	add	r2,r2,r17
    1e3c:	10bff404 	addi	r2,r2,-48
    1e40:	d8801215 	stw	r2,72(sp)
    1e44:	94000044 	addi	r16,r18,1
    1e48:	dc000415 	stw	r16,16(sp)
    1e4c:	84400007 	ldb	r17,0(r16)
    1e50:	00800bc4 	movi	r2,47
    1e54:	9cc00044 	addi	r19,r19,1
    1e58:	8025883a 	mov	r18,r16
    1e5c:	1440130e 	bge	r2,r17,1eac <_strtod_r+0x1ec>
    1e60:	00800e44 	movi	r2,57
    1e64:	14401116 	blt	r2,r17,1eac <_strtod_r+0x1ec>
    1e68:	00800204 	movi	r2,8
    1e6c:	14ffef0e 	bge	r2,r19,1e2c <_strtod_r+0x16c>
    1e70:	008003c4 	movi	r2,15
    1e74:	14fff316 	blt	r2,r19,1e44 <_strtod_r+0x184>
    1e78:	d9001117 	ldw	r4,68(sp)
    1e7c:	01400284 	movi	r5,10
    1e80:	94000044 	addi	r16,r18,1
    1e84:	000d0e40 	call	d0e4 <__mulsi3>
    1e88:	1445883a 	add	r2,r2,r17
    1e8c:	10bff404 	addi	r2,r2,-48
    1e90:	d8801115 	stw	r2,68(sp)
    1e94:	dc000415 	stw	r16,16(sp)
    1e98:	84400007 	ldb	r17,0(r16)
    1e9c:	00800bc4 	movi	r2,47
    1ea0:	9cc00044 	addi	r19,r19,1
    1ea4:	8025883a 	mov	r18,r16
    1ea8:	147fed16 	blt	r2,r17,1e60 <_strtod_r+0x1a0>
    1eac:	00800b84 	movi	r2,46
    1eb0:	8880c926 	beq	r17,r2,21d8 <_strtod_r+0x518>
    1eb4:	dcc01815 	stw	r19,96(sp)
    1eb8:	d8001b15 	stw	zero,108(sp)
    1ebc:	d8001715 	stw	zero,92(sp)
    1ec0:	000d883a 	mov	r6,zero
    1ec4:	00801944 	movi	r2,101
    1ec8:	88802126 	beq	r17,r2,1f50 <_strtod_r+0x290>
    1ecc:	00801144 	movi	r2,69
    1ed0:	88801f26 	beq	r17,r2,1f50 <_strtod_r+0x290>
    1ed4:	d9001817 	ldw	r4,96(sp)
    1ed8:	2024c03a 	cmpne	r18,r4,zero
    1edc:	0009883a 	mov	r4,zero
    1ee0:	9000651e 	bne	r18,zero,2078 <_strtod_r+0x3b8>
    1ee4:	3000c926 	beq	r6,zero,220c <_strtod_r+0x54c>
    1ee8:	d8801d17 	ldw	r2,116(sp)
    1eec:	10000326 	beq	r2,zero,1efc <_strtod_r+0x23c>
    1ef0:	d8800417 	ldw	r2,16(sp)
    1ef4:	d8c01d17 	ldw	r3,116(sp)
    1ef8:	18800015 	stw	r2,0(r3)
    1efc:	d9001517 	ldw	r4,84(sp)
    1f00:	2005003a 	cmpeq	r2,r4,zero
    1f04:	10001c1e 	bne	r2,zero,1f78 <_strtod_r+0x2b8>
    1f08:	e0800017 	ldw	r2,0(fp)
    1f0c:	e0c00117 	ldw	r3,4(fp)
    1f10:	1009883a 	mov	r4,r2
    1f14:	1960003c 	xorhi	r5,r3,32768
    1f18:	2005883a 	mov	r2,r4
    1f1c:	2807883a 	mov	r3,r5
    1f20:	dfc02a17 	ldw	ra,168(sp)
    1f24:	df002917 	ldw	fp,164(sp)
    1f28:	ddc02817 	ldw	r23,160(sp)
    1f2c:	dd802717 	ldw	r22,156(sp)
    1f30:	dd402617 	ldw	r21,152(sp)
    1f34:	dd002517 	ldw	r20,148(sp)
    1f38:	dcc02417 	ldw	r19,144(sp)
    1f3c:	dc802317 	ldw	r18,140(sp)
    1f40:	dc402217 	ldw	r17,136(sp)
    1f44:	dc002117 	ldw	r16,132(sp)
    1f48:	dec02b04 	addi	sp,sp,172
    1f4c:	f800283a 	ret
    1f50:	d8801817 	ldw	r2,96(sp)
    1f54:	1024c03a 	cmpne	r18,r2,zero
    1f58:	90000a1e 	bne	r18,zero,1f84 <_strtod_r+0x2c4>
    1f5c:	3000091e 	bne	r6,zero,1f84 <_strtod_r+0x2c4>
    1f60:	d8c01617 	ldw	r3,88(sp)
    1f64:	1805003a 	cmpeq	r2,r3,zero
    1f68:	10000626 	beq	r2,zero,1f84 <_strtod_r+0x2c4>
    1f6c:	d8001515 	stw	zero,84(sp)
    1f70:	dd000415 	stw	r20,16(sp)
    1f74:	003fdc06 	br	1ee8 <_strtod_r+0x228>
    1f78:	e1000017 	ldw	r4,0(fp)
    1f7c:	e1400117 	ldw	r5,4(fp)
    1f80:	003fe506 	br	1f18 <_strtod_r+0x258>
    1f84:	dd000417 	ldw	r20,16(sp)
    1f88:	00800ac4 	movi	r2,43
    1f8c:	a4000044 	addi	r16,r20,1
    1f90:	dc000415 	stw	r16,16(sp)
    1f94:	a0c00047 	ldb	r3,1(r20)
    1f98:	8009883a 	mov	r4,r16
    1f9c:	1880cb26 	beq	r3,r2,22cc <_strtod_r+0x60c>
    1fa0:	00800b44 	movi	r2,45
    1fa4:	18838326 	beq	r3,r2,2db4 <_strtod_r+0x10f4>
    1fa8:	1823883a 	mov	r17,r3
    1fac:	88fff404 	addi	r3,r17,-48
    1fb0:	00800244 	movi	r2,9
    1fb4:	d8001915 	stw	zero,100(sp)
    1fb8:	10c0cb36 	bltu	r2,r3,22e8 <_strtod_r+0x628>
    1fbc:	00800c04 	movi	r2,48
    1fc0:	8880061e 	bne	r17,r2,1fdc <_strtod_r+0x31c>
    1fc4:	dc000417 	ldw	r16,16(sp)
    1fc8:	8805883a 	mov	r2,r17
    1fcc:	84000044 	addi	r16,r16,1
    1fd0:	dc000415 	stw	r16,16(sp)
    1fd4:	84400007 	ldb	r17,0(r16)
    1fd8:	88bffc26 	beq	r17,r2,1fcc <_strtod_r+0x30c>
    1fdc:	88fff3c4 	addi	r3,r17,-49
    1fe0:	00800204 	movi	r2,8
    1fe4:	10ffbd36 	bltu	r2,r3,1edc <_strtod_r+0x21c>
    1fe8:	dc000417 	ldw	r16,16(sp)
    1fec:	893ff404 	addi	r4,r17,-48
    1ff0:	00c00bc4 	movi	r3,47
    1ff4:	dc001315 	stw	r16,76(sp)
    1ff8:	84000044 	addi	r16,r16,1
    1ffc:	dc000415 	stw	r16,16(sp)
    2000:	84400007 	ldb	r17,0(r16)
    2004:	1c40100e 	bge	r3,r17,2048 <_strtod_r+0x388>
    2008:	00800e44 	movi	r2,57
    200c:	14400e16 	blt	r2,r17,2048 <_strtod_r+0x388>
    2010:	182f883a 	mov	r23,r3
    2014:	102d883a 	mov	r22,r2
    2018:	00000106 	br	2020 <_strtod_r+0x360>
    201c:	b4400a16 	blt	r22,r17,2048 <_strtod_r+0x388>
    2020:	84000044 	addi	r16,r16,1
    2024:	01400284 	movi	r5,10
    2028:	d9802015 	stw	r6,128(sp)
    202c:	000d0e40 	call	d0e4 <__mulsi3>
    2030:	dc000415 	stw	r16,16(sp)
    2034:	8885883a 	add	r2,r17,r2
    2038:	84400007 	ldb	r17,0(r16)
    203c:	113ff404 	addi	r4,r2,-48
    2040:	d9802017 	ldw	r6,128(sp)
    2044:	bc7ff516 	blt	r23,r17,201c <_strtod_r+0x35c>
    2048:	d8801317 	ldw	r2,76(sp)
    204c:	8087c83a 	sub	r3,r16,r2
    2050:	00800204 	movi	r2,8
    2054:	10c2ff16 	blt	r2,r3,2c54 <_strtod_r+0xf94>
    2058:	009387c4 	movi	r2,19999
    205c:	1100010e 	bge	r2,r4,2064 <_strtod_r+0x3a4>
    2060:	1009883a 	mov	r4,r2
    2064:	d8c01917 	ldw	r3,100(sp)
    2068:	1805003a 	cmpeq	r2,r3,zero
    206c:	103f9c1e 	bne	r2,zero,1ee0 <_strtod_r+0x220>
    2070:	0109c83a 	sub	r4,zero,r4
    2074:	903f9b26 	beq	r18,zero,1ee4 <_strtod_r+0x224>
    2078:	d8801717 	ldw	r2,92(sp)
    207c:	2089c83a 	sub	r4,r4,r2
    2080:	d9000f15 	stw	r4,60(sp)
    2084:	9800811e 	bne	r19,zero,228c <_strtod_r+0x5cc>
    2088:	dd001817 	ldw	r20,96(sp)
    208c:	dc801817 	ldw	r18,96(sp)
    2090:	00800404 	movi	r2,16
    2094:	1480010e 	bge	r2,r18,209c <_strtod_r+0x3dc>
    2098:	1025883a 	mov	r18,r2
    209c:	d9001217 	ldw	r4,72(sp)
    20a0:	000ce040 	call	ce04 <__floatunsidf>
    20a4:	100f883a 	mov	r7,r2
    20a8:	e0800015 	stw	r2,0(fp)
    20ac:	00800244 	movi	r2,9
    20b0:	e0c00115 	stw	r3,4(fp)
    20b4:	1480160e 	bge	r2,r18,2110 <_strtod_r+0x450>
    20b8:	900c90fa 	slli	r6,r18,3
    20bc:	01000074 	movhi	r4,1
    20c0:	213c1904 	addi	r4,r4,-3996
    20c4:	180b883a 	mov	r5,r3
    20c8:	310d883a 	add	r6,r6,r4
    20cc:	30ffef17 	ldw	r3,-68(r6)
    20d0:	30bfee17 	ldw	r2,-72(r6)
    20d4:	3809883a 	mov	r4,r7
    20d8:	180f883a 	mov	r7,r3
    20dc:	100d883a 	mov	r6,r2
    20e0:	000c2e80 	call	c2e8 <__muldf3>
    20e4:	d9001117 	ldw	r4,68(sp)
    20e8:	1021883a 	mov	r16,r2
    20ec:	1823883a 	mov	r17,r3
    20f0:	000ce040 	call	ce04 <__floatunsidf>
    20f4:	880b883a 	mov	r5,r17
    20f8:	180f883a 	mov	r7,r3
    20fc:	8009883a 	mov	r4,r16
    2100:	100d883a 	mov	r6,r2
    2104:	000c2740 	call	c274 <__adddf3>
    2108:	e0c00115 	stw	r3,4(fp)
    210c:	e0800015 	stw	r2,0(fp)
    2110:	d8c01817 	ldw	r3,96(sp)
    2114:	010003c4 	movi	r4,15
    2118:	20c09e16 	blt	r4,r3,2394 <_strtod_r+0x6d4>
    211c:	d8800f17 	ldw	r2,60(sp)
    2120:	103f7126 	beq	r2,zero,1ee8 <_strtod_r+0x228>
    2124:	0083d90e 	bge	zero,r2,308c <_strtod_r+0x13cc>
    2128:	d8c00f17 	ldw	r3,60(sp)
    212c:	00800584 	movi	r2,22
    2130:	10c2ca0e 	bge	r2,r3,2c5c <_strtod_r+0xf9c>
    2134:	d8801817 	ldw	r2,96(sp)
    2138:	d8c00f17 	ldw	r3,60(sp)
    213c:	20a3c83a 	sub	r17,r4,r2
    2140:	88800584 	addi	r2,r17,22
    2144:	10c09316 	blt	r2,r3,2394 <_strtod_r+0x6d4>
    2148:	880890fa 	slli	r4,r17,3
    214c:	04000074 	movhi	r16,1
    2150:	843c1904 	addi	r16,r16,-3996
    2154:	e0800017 	ldw	r2,0(fp)
    2158:	2409883a 	add	r4,r4,r16
    215c:	22000017 	ldw	r8,0(r4)
    2160:	22400117 	ldw	r9,4(r4)
    2164:	e0c00117 	ldw	r3,4(fp)
    2168:	1009883a 	mov	r4,r2
    216c:	480f883a 	mov	r7,r9
    2170:	180b883a 	mov	r5,r3
    2174:	400d883a 	mov	r6,r8
    2178:	000c2e80 	call	c2e8 <__muldf3>
    217c:	d9000f17 	ldw	r4,60(sp)
    2180:	180b883a 	mov	r5,r3
    2184:	2455c83a 	sub	r10,r4,r17
    2188:	501490fa 	slli	r10,r10,3
    218c:	1009883a 	mov	r4,r2
    2190:	5415883a 	add	r10,r10,r16
    2194:	52000017 	ldw	r8,0(r10)
    2198:	52400117 	ldw	r9,4(r10)
    219c:	0002b906 	br	2c84 <_strtod_r+0xfc4>
    21a0:	80c00047 	ldb	r3,1(r16)
    21a4:	00801604 	movi	r2,88
    21a8:	18805226 	beq	r3,r2,22f4 <_strtod_r+0x634>
    21ac:	00801e04 	movi	r2,120
    21b0:	18805026 	beq	r3,r2,22f4 <_strtod_r+0x634>
    21b4:	84000044 	addi	r16,r16,1
    21b8:	dc000415 	stw	r16,16(sp)
    21bc:	80c00007 	ldb	r3,0(r16)
    21c0:	00800c04 	movi	r2,48
    21c4:	18bffb26 	beq	r3,r2,21b4 <_strtod_r+0x4f4>
    21c8:	183f4726 	beq	r3,zero,1ee8 <_strtod_r+0x228>
    21cc:	01000044 	movi	r4,1
    21d0:	d9001615 	stw	r4,88(sp)
    21d4:	003f0a06 	br	1e00 <_strtod_r+0x140>
    21d8:	84000044 	addi	r16,r16,1
    21dc:	dc000415 	stw	r16,16(sp)
    21e0:	94400047 	ldb	r17,1(r18)
    21e4:	9800ba26 	beq	r19,zero,24d0 <_strtod_r+0x810>
    21e8:	dcc01815 	stw	r19,96(sp)
    21ec:	d8001715 	stw	zero,92(sp)
    21f0:	000d883a 	mov	r6,zero
    21f4:	8dbff404 	addi	r22,r17,-48
    21f8:	00800244 	movi	r2,9
    21fc:	15826e2e 	bgeu	r2,r22,2bb8 <_strtod_r+0xef8>
    2200:	01000044 	movi	r4,1
    2204:	d9001b15 	stw	r4,108(sp)
    2208:	003f2e06 	br	1ec4 <_strtod_r+0x204>
    220c:	d8c01617 	ldw	r3,88(sp)
    2210:	1804c03a 	cmpne	r2,r3,zero
    2214:	103f341e 	bne	r2,zero,1ee8 <_strtod_r+0x228>
    2218:	d9001b17 	ldw	r4,108(sp)
    221c:	2004c03a 	cmpne	r2,r4,zero
    2220:	103f521e 	bne	r2,zero,1f6c <_strtod_r+0x2ac>
    2224:	00801384 	movi	r2,78
    2228:	8883b526 	beq	r17,r2,3100 <_strtod_r+0x1440>
    222c:	1443b016 	blt	r2,r17,30f0 <_strtod_r+0x1430>
    2230:	00801244 	movi	r2,73
    2234:	88bf4d1e 	bne	r17,r2,1f6c <_strtod_r+0x2ac>
    2238:	dc000404 	addi	r16,sp,16
    223c:	8009883a 	mov	r4,r16
    2240:	01400074 	movhi	r5,1
    2244:	297bcf04 	addi	r5,r5,-4292
    2248:	0001c780 	call	1c78 <match>
    224c:	103f4726 	beq	r2,zero,1f6c <_strtod_r+0x2ac>
    2250:	d8800417 	ldw	r2,16(sp)
    2254:	8009883a 	mov	r4,r16
    2258:	01400074 	movhi	r5,1
    225c:	297bd004 	addi	r5,r5,-4288
    2260:	143fffc4 	addi	r16,r2,-1
    2264:	dc000415 	stw	r16,16(sp)
    2268:	0001c780 	call	1c78 <match>
    226c:	1000031e 	bne	r2,zero,227c <_strtod_r+0x5bc>
    2270:	d8800417 	ldw	r2,16(sp)
    2274:	14000044 	addi	r16,r2,1
    2278:	dc000415 	stw	r16,16(sp)
    227c:	019ffc34 	movhi	r6,32752
    2280:	e1800115 	stw	r6,4(fp)
    2284:	e0000015 	stw	zero,0(fp)
    2288:	003f1706 	br	1ee8 <_strtod_r+0x228>
    228c:	9829883a 	mov	r20,r19
    2290:	003f7e06 	br	208c <_strtod_r+0x3cc>
    2294:	d8001515 	stw	zero,84(sp)
    2298:	84000044 	addi	r16,r16,1
    229c:	dc000415 	stw	r16,16(sp)
    22a0:	80800007 	ldb	r2,0(r16)
    22a4:	103ed21e 	bne	r2,zero,1df0 <_strtod_r+0x130>
    22a8:	d8001515 	stw	zero,84(sp)
    22ac:	dd000415 	stw	r20,16(sp)
    22b0:	003f0d06 	br	1ee8 <_strtod_r+0x228>
    22b4:	84000044 	addi	r16,r16,1
    22b8:	dc000415 	stw	r16,16(sp)
    22bc:	003e9206 	br	1d08 <_strtod_r+0x48>
    22c0:	00800044 	movi	r2,1
    22c4:	d8801515 	stw	r2,84(sp)
    22c8:	003ff306 	br	2298 <_strtod_r+0x5d8>
    22cc:	d8001915 	stw	zero,100(sp)
    22d0:	84000044 	addi	r16,r16,1
    22d4:	dc000415 	stw	r16,16(sp)
    22d8:	24400047 	ldb	r17,1(r4)
    22dc:	00800244 	movi	r2,9
    22e0:	88fff404 	addi	r3,r17,-48
    22e4:	10ff352e 	bgeu	r2,r3,1fbc <_strtod_r+0x2fc>
    22e8:	0009883a 	mov	r4,zero
    22ec:	dd000415 	stw	r20,16(sp)
    22f0:	003efb06 	br	1ee0 <_strtod_r+0x220>
    22f4:	d8c01517 	ldw	r3,84(sp)
    22f8:	04400074 	movhi	r17,1
    22fc:	8c7dc204 	addi	r17,r17,-2296
    2300:	d8800504 	addi	r2,sp,20
    2304:	a809883a 	mov	r4,r21
    2308:	d9400404 	addi	r5,sp,16
    230c:	880d883a 	mov	r6,r17
    2310:	d9c00604 	addi	r7,sp,24
    2314:	d8800015 	stw	r2,0(sp)
    2318:	d8c00115 	stw	r3,4(sp)
    231c:	0007cfc0 	call	7cfc <__gethex>
    2320:	140001cc 	andi	r16,r2,7
    2324:	1025883a 	mov	r18,r2
    2328:	803eef26 	beq	r16,zero,1ee8 <_strtod_r+0x228>
    232c:	04c00184 	movi	r19,6
    2330:	84ff0e26 	beq	r16,r19,1f6c <_strtod_r+0x2ac>
    2334:	d9800517 	ldw	r6,20(sp)
    2338:	30000626 	beq	r6,zero,2354 <_strtod_r+0x694>
    233c:	89400017 	ldw	r5,0(r17)
    2340:	d9000d04 	addi	r4,sp,52
    2344:	00091f40 	call	91f4 <__copybits>
    2348:	d9400517 	ldw	r5,20(sp)
    234c:	a809883a 	mov	r4,r21
    2350:	0008d540 	call	8d54 <_Bfree>
    2354:	d9400617 	ldw	r5,24(sp)
    2358:	9c025436 	bltu	r19,r16,2cac <_strtod_r+0xfec>
    235c:	8405883a 	add	r2,r16,r16
    2360:	1085883a 	add	r2,r2,r2
    2364:	00c00034 	movhi	r3,0
    2368:	18c8de04 	addi	r3,r3,9080
    236c:	10c5883a 	add	r2,r2,r3
    2370:	11000017 	ldw	r4,0(r2)
    2374:	2000683a 	jmp	r4
    2378:	00002cec 	andhi	zero,zero,179
    237c:	00002cf8 	rdprs	zero,zero,179
    2380:	00002c9c 	xori	zero,zero,178
    2384:	00002cc4 	movi	zero,179
    2388:	00002cd4 	movui	zero,179
    238c:	00002cf8 	rdprs	zero,zero,179
    2390:	00002cec 	andhi	zero,zero,179
    2394:	d9001817 	ldw	r4,96(sp)
    2398:	d8c00f17 	ldw	r3,60(sp)
    239c:	2485c83a 	sub	r2,r4,r18
    23a0:	18a1883a 	add	r16,r3,r2
    23a4:	0402e80e 	bge	zero,r16,2f48 <_strtod_r+0x1288>
    23a8:	814003cc 	andi	r5,r16,15
    23ac:	28000f26 	beq	r5,zero,23ec <_strtod_r+0x72c>
    23b0:	280a90fa 	slli	r5,r5,3
    23b4:	01000074 	movhi	r4,1
    23b8:	213c1904 	addi	r4,r4,-3996
    23bc:	e0800017 	ldw	r2,0(fp)
    23c0:	290b883a 	add	r5,r5,r4
    23c4:	2a000017 	ldw	r8,0(r5)
    23c8:	e0c00117 	ldw	r3,4(fp)
    23cc:	2a400117 	ldw	r9,4(r5)
    23d0:	1009883a 	mov	r4,r2
    23d4:	180b883a 	mov	r5,r3
    23d8:	480f883a 	mov	r7,r9
    23dc:	400d883a 	mov	r6,r8
    23e0:	000c2e80 	call	c2e8 <__muldf3>
    23e4:	e0c00115 	stw	r3,4(fp)
    23e8:	e0800015 	stw	r2,0(fp)
    23ec:	00bffc04 	movi	r2,-16
    23f0:	808c703a 	and	r6,r16,r2
    23f4:	30006726 	beq	r6,zero,2594 <_strtod_r+0x8d4>
    23f8:	00804d04 	movi	r2,308
    23fc:	11820f16 	blt	r2,r6,2c3c <_strtod_r+0xf7c>
    2400:	3021d13a 	srai	r16,r6,4
    2404:	00800044 	movi	r2,1
    2408:	14037f0e 	bge	r2,r16,3208 <_strtod_r+0x1548>
    240c:	05800074 	movhi	r22,1
    2410:	b5bc4b04 	addi	r22,r22,-3796
    2414:	1027883a 	mov	r19,r2
    2418:	0025883a 	mov	r18,zero
    241c:	b023883a 	mov	r17,r22
    2420:	8080004c 	andi	r2,r16,1
    2424:	1005003a 	cmpeq	r2,r2,zero
    2428:	1000091e 	bne	r2,zero,2450 <_strtod_r+0x790>
    242c:	e0800017 	ldw	r2,0(fp)
    2430:	e0c00117 	ldw	r3,4(fp)
    2434:	89800017 	ldw	r6,0(r17)
    2438:	89c00117 	ldw	r7,4(r17)
    243c:	180b883a 	mov	r5,r3
    2440:	1009883a 	mov	r4,r2
    2444:	000c2e80 	call	c2e8 <__muldf3>
    2448:	e0c00115 	stw	r3,4(fp)
    244c:	e0800015 	stw	r2,0(fp)
    2450:	8021d07a 	srai	r16,r16,1
    2454:	94800044 	addi	r18,r18,1
    2458:	8c400204 	addi	r17,r17,8
    245c:	9c3ff016 	blt	r19,r16,2420 <_strtod_r+0x760>
    2460:	900e90fa 	slli	r7,r18,3
    2464:	e2000117 	ldw	r8,4(fp)
    2468:	e1000017 	ldw	r4,0(fp)
    246c:	3d8f883a 	add	r7,r7,r22
    2470:	38800017 	ldw	r2,0(r7)
    2474:	38c00117 	ldw	r3,4(r7)
    2478:	01bf2c34 	movhi	r6,64688
    247c:	418d883a 	add	r6,r8,r6
    2480:	300b883a 	mov	r5,r6
    2484:	180f883a 	mov	r7,r3
    2488:	100d883a 	mov	r6,r2
    248c:	000c2e80 	call	c2e8 <__muldf3>
    2490:	1009883a 	mov	r4,r2
    2494:	180b883a 	mov	r5,r3
    2498:	199ffc2c 	andhi	r6,r3,32752
    249c:	009f2834 	movhi	r2,31904
    24a0:	e1000015 	stw	r4,0(fp)
    24a4:	e1400115 	stw	r5,4(fp)
    24a8:	1181e436 	bltu	r2,r6,2c3c <_strtod_r+0xf7c>
    24ac:	009f2434 	movhi	r2,31888
    24b0:	11833f2e 	bgeu	r2,r6,31b0 <_strtod_r+0x14f0>
    24b4:	d8001c15 	stw	zero,112(sp)
    24b8:	019ffc34 	movhi	r6,32752
    24bc:	31bfffc4 	addi	r6,r6,-1
    24c0:	01ffffc4 	movi	r7,-1
    24c4:	e1800115 	stw	r6,4(fp)
    24c8:	e1c00015 	stw	r7,0(fp)
    24cc:	00003206 	br	2598 <_strtod_r+0x8d8>
    24d0:	00800c04 	movi	r2,48
    24d4:	8883221e 	bne	r17,r2,3160 <_strtod_r+0x14a0>
    24d8:	8805883a 	mov	r2,r17
    24dc:	000d883a 	mov	r6,zero
    24e0:	84000044 	addi	r16,r16,1
    24e4:	dc000415 	stw	r16,16(sp)
    24e8:	84400007 	ldb	r17,0(r16)
    24ec:	31800044 	addi	r6,r6,1
    24f0:	88bffb26 	beq	r17,r2,24e0 <_strtod_r+0x820>
    24f4:	88fff3c4 	addi	r3,r17,-49
    24f8:	00800204 	movi	r2,8
    24fc:	10c1ca36 	bltu	r2,r3,2c28 <_strtod_r+0xf68>
    2500:	d8c00417 	ldw	r3,16(sp)
    2504:	d9801715 	stw	r6,92(sp)
    2508:	8dbff404 	addi	r22,r17,-48
    250c:	d8c01415 	stw	r3,80(sp)
    2510:	1821883a 	mov	r16,r3
    2514:	d8001815 	stw	zero,96(sp)
    2518:	01800044 	movi	r6,1
    251c:	b0023526 	beq	r22,zero,2df4 <_strtod_r+0x1134>
    2520:	d9001717 	ldw	r4,92(sp)
    2524:	00800044 	movi	r2,1
    2528:	2189883a 	add	r4,r4,r6
    252c:	d9001715 	stw	r4,92(sp)
    2530:	1183390e 	bge	r2,r6,3218 <_strtod_r+0x1558>
    2534:	dc401817 	ldw	r17,96(sp)
    2538:	1025883a 	mov	r18,r2
    253c:	05c00204 	movi	r23,8
    2540:	00000806 	br	2564 <_strtod_r+0x8a4>
    2544:	d9001217 	ldw	r4,72(sp)
    2548:	01400284 	movi	r5,10
    254c:	d9802015 	stw	r6,128(sp)
    2550:	000d0e40 	call	d0e4 <__mulsi3>
    2554:	d9802017 	ldw	r6,128(sp)
    2558:	d8801215 	stw	r2,72(sp)
    255c:	94800044 	addi	r18,r18,1
    2560:	91821726 	beq	r18,r6,2dc0 <_strtod_r+0x1100>
    2564:	8c400044 	addi	r17,r17,1
    2568:	88bfffc4 	addi	r2,r17,-1
    256c:	b8bff50e 	bge	r23,r2,2544 <_strtod_r+0x884>
    2570:	00800404 	movi	r2,16
    2574:	147ff916 	blt	r2,r17,255c <_strtod_r+0x89c>
    2578:	d9001117 	ldw	r4,68(sp)
    257c:	01400284 	movi	r5,10
    2580:	d9802015 	stw	r6,128(sp)
    2584:	000d0e40 	call	d0e4 <__mulsi3>
    2588:	d9802017 	ldw	r6,128(sp)
    258c:	d8801115 	stw	r2,68(sp)
    2590:	003ff206 	br	255c <_strtod_r+0x89c>
    2594:	d8001c15 	stw	zero,112(sp)
    2598:	d8c01217 	ldw	r3,72(sp)
    259c:	d9401417 	ldw	r5,80(sp)
    25a0:	d9c01817 	ldw	r7,96(sp)
    25a4:	a809883a 	mov	r4,r21
    25a8:	a00d883a 	mov	r6,r20
    25ac:	d8c00015 	stw	r3,0(sp)
    25b0:	0009cc00 	call	9cc0 <__s2b>
    25b4:	11000304 	addi	r4,r2,12
    25b8:	d8801015 	stw	r2,64(sp)
    25bc:	d8800f17 	ldw	r2,60(sp)
    25c0:	d9001f15 	stw	r4,124(sp)
    25c4:	1004803a 	cmplt	r2,r2,zero
    25c8:	d8801e15 	stw	r2,120(sp)
    25cc:	d8c01017 	ldw	r3,64(sp)
    25d0:	a809883a 	mov	r4,r21
    25d4:	19400117 	ldw	r5,4(r3)
    25d8:	00092d40 	call	92d4 <_Balloc>
    25dc:	d9001017 	ldw	r4,64(sp)
    25e0:	d9401f17 	ldw	r5,124(sp)
    25e4:	102f883a 	mov	r23,r2
    25e8:	21800417 	ldw	r6,16(r4)
    25ec:	11000304 	addi	r4,r2,12
    25f0:	318d883a 	add	r6,r6,r6
    25f4:	318d883a 	add	r6,r6,r6
    25f8:	31800204 	addi	r6,r6,8
    25fc:	0008b3c0 	call	8b3c <memcpy>
    2600:	e2000017 	ldw	r8,0(fp)
    2604:	e2400117 	ldw	r9,4(fp)
    2608:	a809883a 	mov	r4,r21
    260c:	400b883a 	mov	r5,r8
    2610:	d9c00204 	addi	r7,sp,8
    2614:	d8800304 	addi	r2,sp,12
    2618:	480d883a 	mov	r6,r9
    261c:	d8800015 	stw	r2,0(sp)
    2620:	00093900 	call	9390 <__d2b>
    2624:	a809883a 	mov	r4,r21
    2628:	01400044 	movi	r5,1
    262c:	d8800515 	stw	r2,20(sp)
    2630:	0009a380 	call	9a38 <__i2b>
    2634:	d8c01e17 	ldw	r3,120(sp)
    2638:	102d883a 	mov	r22,r2
    263c:	1801091e 	bne	r3,zero,2a64 <_strtod_r+0xda4>
    2640:	dd000f17 	ldw	r20,60(sp)
    2644:	000f883a 	mov	r7,zero
    2648:	0013883a 	mov	r9,zero
    264c:	a011883a 	mov	r8,r20
    2650:	d8800217 	ldw	r2,8(sp)
    2654:	10010116 	blt	r2,zero,2a5c <_strtod_r+0xd9c>
    2658:	388f883a 	add	r7,r7,r2
    265c:	d8c01c17 	ldw	r3,112(sp)
    2660:	d9400317 	ldw	r5,12(sp)
    2664:	10c9c83a 	sub	r4,r2,r3
    2668:	2145883a 	add	r2,r4,r5
    266c:	10bfffc4 	addi	r2,r2,-1
    2670:	00ff0084 	movi	r3,-1022
    2674:	10c09f0e 	bge	r2,r3,28f4 <_strtod_r+0xc34>
    2678:	21810cc4 	addi	r6,r4,1075
    267c:	d9001c17 	ldw	r4,112(sp)
    2680:	4185883a 	add	r2,r8,r6
    2684:	39a1883a 	add	r16,r7,r6
    2688:	20a5883a 	add	r18,r4,r2
    268c:	3807883a 	mov	r3,r7
    2690:	81c0010e 	bge	r16,r7,2698 <_strtod_r+0x9d8>
    2694:	8007883a 	mov	r3,r16
    2698:	9005883a 	mov	r2,r18
    269c:	1c80010e 	bge	r3,r18,26a4 <_strtod_r+0x9e4>
    26a0:	1805883a 	mov	r2,r3
    26a4:	0080eb0e 	bge	zero,r2,2a54 <_strtod_r+0xd94>
    26a8:	38a7c83a 	sub	r19,r7,r2
    26ac:	80a1c83a 	sub	r16,r16,r2
    26b0:	90a5c83a 	sub	r18,r18,r2
    26b4:	02400e0e 	bge	zero,r9,26f0 <_strtod_r+0xa30>
    26b8:	480d883a 	mov	r6,r9
    26bc:	b00b883a 	mov	r5,r22
    26c0:	a809883a 	mov	r4,r21
    26c4:	0009ba00 	call	9ba0 <__pow5mult>
    26c8:	d9800517 	ldw	r6,20(sp)
    26cc:	a809883a 	mov	r4,r21
    26d0:	100b883a 	mov	r5,r2
    26d4:	102d883a 	mov	r22,r2
    26d8:	00097e40 	call	97e4 <__multiply>
    26dc:	d9400517 	ldw	r5,20(sp)
    26e0:	1023883a 	mov	r17,r2
    26e4:	a809883a 	mov	r4,r21
    26e8:	0008d540 	call	8d54 <_Bfree>
    26ec:	dc400515 	stw	r17,20(sp)
    26f0:	0400050e 	bge	zero,r16,2708 <_strtod_r+0xa48>
    26f4:	d9400517 	ldw	r5,20(sp)
    26f8:	800d883a 	mov	r6,r16
    26fc:	a809883a 	mov	r4,r21
    2700:	00096980 	call	9698 <__lshift>
    2704:	d8800515 	stw	r2,20(sp)
    2708:	a000741e 	bne	r20,zero,28dc <_strtod_r+0xc1c>
    270c:	0480050e 	bge	zero,r18,2724 <_strtod_r+0xa64>
    2710:	b80b883a 	mov	r5,r23
    2714:	900d883a 	mov	r6,r18
    2718:	a809883a 	mov	r4,r21
    271c:	00096980 	call	9698 <__lshift>
    2720:	102f883a 	mov	r23,r2
    2724:	04c0050e 	bge	zero,r19,273c <_strtod_r+0xa7c>
    2728:	b00b883a 	mov	r5,r22
    272c:	980d883a 	mov	r6,r19
    2730:	a809883a 	mov	r4,r21
    2734:	00096980 	call	9698 <__lshift>
    2738:	102d883a 	mov	r22,r2
    273c:	d9400517 	ldw	r5,20(sp)
    2740:	a809883a 	mov	r4,r21
    2744:	b80d883a 	mov	r6,r23
    2748:	000950c0 	call	950c <__mdiff>
    274c:	1029883a 	mov	r20,r2
    2750:	10800317 	ldw	r2,12(r2)
    2754:	a009883a 	mov	r4,r20
    2758:	a0000315 	stw	zero,12(r20)
    275c:	b00b883a 	mov	r5,r22
    2760:	d8801a15 	stw	r2,104(sp)
    2764:	0008eb00 	call	8eb0 <__mcmp>
    2768:	1001a616 	blt	r2,zero,2e04 <_strtod_r+0x1144>
    276c:	10016d26 	beq	r2,zero,2d24 <_strtod_r+0x1064>
    2770:	a009883a 	mov	r4,r20
    2774:	b00b883a 	mov	r5,r22
    2778:	00090b00 	call	90b0 <__ratio>
    277c:	0011883a 	mov	r8,zero
    2780:	02500034 	movhi	r9,16384
    2784:	480f883a 	mov	r7,r9
    2788:	1009883a 	mov	r4,r2
    278c:	180b883a 	mov	r5,r3
    2790:	400d883a 	mov	r6,r8
    2794:	1021883a 	mov	r16,r2
    2798:	1823883a 	mov	r17,r3
    279c:	000cbac0 	call	cbac <__ledf2>
    27a0:	00805716 	blt	zero,r2,2900 <_strtod_r+0xc40>
    27a4:	d8801a17 	ldw	r2,104(sp)
    27a8:	1025003a 	cmpeq	r18,r2,zero
    27ac:	90008c1e 	bne	r18,zero,29e0 <_strtod_r+0xd20>
    27b0:	008ffc34 	movhi	r2,16368
    27b4:	0021883a 	mov	r16,zero
    27b8:	1023883a 	mov	r17,r2
    27bc:	d8000715 	stw	zero,28(sp)
    27c0:	d8800815 	stw	r2,32(sp)
    27c4:	e1c00117 	ldw	r7,4(fp)
    27c8:	009ff834 	movhi	r2,32736
    27cc:	3cdffc2c 	andhi	r19,r7,32752
    27d0:	98805f26 	beq	r19,r2,2950 <_strtod_r+0xc90>
    27d4:	d8c01c17 	ldw	r3,112(sp)
    27d8:	18001b26 	beq	r3,zero,2848 <_strtod_r+0xb88>
    27dc:	0081a834 	movhi	r2,1696
    27e0:	14c01936 	bltu	r2,r19,2848 <_strtod_r+0xb88>
    27e4:	00bff034 	movhi	r2,65472
    27e8:	00d07834 	movhi	r3,16864
    27ec:	18ffffc4 	addi	r3,r3,-1
    27f0:	180f883a 	mov	r7,r3
    27f4:	8009883a 	mov	r4,r16
    27f8:	880b883a 	mov	r5,r17
    27fc:	100d883a 	mov	r6,r2
    2800:	000cbac0 	call	cbac <__ledf2>
    2804:	00800b16 	blt	zero,r2,2834 <_strtod_r+0xb74>
    2808:	880b883a 	mov	r5,r17
    280c:	8009883a 	mov	r4,r16
    2810:	000af0c0 	call	af0c <__fixunsdfsi>
    2814:	1000e31e 	bne	r2,zero,2ba4 <_strtod_r+0xee4>
    2818:	0021883a 	mov	r16,zero
    281c:	044ffc34 	movhi	r17,16368
    2820:	9000dd1e 	bne	r18,zero,2b98 <_strtod_r+0xed8>
    2824:	8005883a 	mov	r2,r16
    2828:	8807883a 	mov	r3,r17
    282c:	d8c00815 	stw	r3,32(sp)
    2830:	d8800715 	stw	r2,28(sp)
    2834:	d8800817 	ldw	r2,32(sp)
    2838:	00c1ac34 	movhi	r3,1712
    283c:	14c5c83a 	sub	r2,r2,r19
    2840:	10c5883a 	add	r2,r2,r3
    2844:	d8800815 	stw	r2,32(sp)
    2848:	e0800017 	ldw	r2,0(fp)
    284c:	e0c00117 	ldw	r3,4(fp)
    2850:	1009883a 	mov	r4,r2
    2854:	180b883a 	mov	r5,r3
    2858:	0008f100 	call	8f10 <__ulp>
    285c:	d9800717 	ldw	r6,28(sp)
    2860:	d9c00817 	ldw	r7,32(sp)
    2864:	180b883a 	mov	r5,r3
    2868:	1009883a 	mov	r4,r2
    286c:	000c2e80 	call	c2e8 <__muldf3>
    2870:	e2000017 	ldw	r8,0(fp)
    2874:	e2400117 	ldw	r9,4(fp)
    2878:	180b883a 	mov	r5,r3
    287c:	1009883a 	mov	r4,r2
    2880:	480f883a 	mov	r7,r9
    2884:	400d883a 	mov	r6,r8
    2888:	000c2740 	call	c274 <__adddf3>
    288c:	e0c00115 	stw	r3,4(fp)
    2890:	e0800015 	stw	r2,0(fp)
    2894:	d9001c17 	ldw	r4,112(sp)
    2898:	e4800117 	ldw	r18,4(fp)
    289c:	2000021e 	bne	r4,zero,28a8 <_strtod_r+0xbe8>
    28a0:	909ffc2c 	andhi	r2,r18,32752
    28a4:	98807f26 	beq	r19,r2,2aa4 <_strtod_r+0xde4>
    28a8:	d9400517 	ldw	r5,20(sp)
    28ac:	a809883a 	mov	r4,r21
    28b0:	0008d540 	call	8d54 <_Bfree>
    28b4:	a809883a 	mov	r4,r21
    28b8:	b80b883a 	mov	r5,r23
    28bc:	0008d540 	call	8d54 <_Bfree>
    28c0:	a809883a 	mov	r4,r21
    28c4:	b00b883a 	mov	r5,r22
    28c8:	0008d540 	call	8d54 <_Bfree>
    28cc:	a809883a 	mov	r4,r21
    28d0:	a00b883a 	mov	r5,r20
    28d4:	0008d540 	call	8d54 <_Bfree>
    28d8:	003f3c06 	br	25cc <_strtod_r+0x90c>
    28dc:	b80b883a 	mov	r5,r23
    28e0:	a00d883a 	mov	r6,r20
    28e4:	a809883a 	mov	r4,r21
    28e8:	0009ba00 	call	9ba0 <__pow5mult>
    28ec:	102f883a 	mov	r23,r2
    28f0:	003f8606 	br	270c <_strtod_r+0xa4c>
    28f4:	00800d84 	movi	r2,54
    28f8:	114dc83a 	sub	r6,r2,r5
    28fc:	003f5f06 	br	267c <_strtod_r+0x9bc>
    2900:	0005883a 	mov	r2,zero
    2904:	00cff834 	movhi	r3,16352
    2908:	8009883a 	mov	r4,r16
    290c:	880b883a 	mov	r5,r17
    2910:	180f883a 	mov	r7,r3
    2914:	100d883a 	mov	r6,r2
    2918:	000c2e80 	call	c2e8 <__muldf3>
    291c:	1009883a 	mov	r4,r2
    2920:	d8801a17 	ldw	r2,104(sp)
    2924:	2021883a 	mov	r16,r4
    2928:	1823883a 	mov	r17,r3
    292c:	1025003a 	cmpeq	r18,r2,zero
    2930:	9000451e 	bne	r18,zero,2a48 <_strtod_r+0xd88>
    2934:	2005883a 	mov	r2,r4
    2938:	d8800715 	stw	r2,28(sp)
    293c:	d8c00815 	stw	r3,32(sp)
    2940:	e1c00117 	ldw	r7,4(fp)
    2944:	009ff834 	movhi	r2,32736
    2948:	3cdffc2c 	andhi	r19,r7,32752
    294c:	98bfa11e 	bne	r19,r2,27d4 <_strtod_r+0xb14>
    2950:	e1000017 	ldw	r4,0(fp)
    2954:	01bf2c34 	movhi	r6,64688
    2958:	398d883a 	add	r6,r7,r6
    295c:	d9000b15 	stw	r4,44(sp)
    2960:	d9c00c15 	stw	r7,48(sp)
    2964:	300b883a 	mov	r5,r6
    2968:	e1800115 	stw	r6,4(fp)
    296c:	0008f100 	call	8f10 <__ulp>
    2970:	d9800717 	ldw	r6,28(sp)
    2974:	d9c00817 	ldw	r7,32(sp)
    2978:	180b883a 	mov	r5,r3
    297c:	1009883a 	mov	r4,r2
    2980:	000c2e80 	call	c2e8 <__muldf3>
    2984:	e2000017 	ldw	r8,0(fp)
    2988:	e2400117 	ldw	r9,4(fp)
    298c:	180b883a 	mov	r5,r3
    2990:	1009883a 	mov	r4,r2
    2994:	480f883a 	mov	r7,r9
    2998:	400d883a 	mov	r6,r8
    299c:	000c2740 	call	c274 <__adddf3>
    29a0:	1009883a 	mov	r4,r2
    29a4:	180b883a 	mov	r5,r3
    29a8:	009f2834 	movhi	r2,31904
    29ac:	10bfffc4 	addi	r2,r2,-1
    29b0:	18dffc2c 	andhi	r3,r3,32752
    29b4:	e1000015 	stw	r4,0(fp)
    29b8:	e1400115 	stw	r5,4(fp)
    29bc:	10c0722e 	bgeu	r2,r3,2b88 <_strtod_r+0xec8>
    29c0:	d8800c17 	ldw	r2,48(sp)
    29c4:	011ffc34 	movhi	r4,32752
    29c8:	213fffc4 	addi	r4,r4,-1
    29cc:	11007d26 	beq	r2,r4,2bc4 <_strtod_r+0xf04>
    29d0:	01ffffc4 	movi	r7,-1
    29d4:	e1000115 	stw	r4,4(fp)
    29d8:	e1c00015 	stw	r7,0(fp)
    29dc:	003fb206 	br	28a8 <_strtod_r+0xbe8>
    29e0:	e0c00017 	ldw	r3,0(fp)
    29e4:	1800251e 	bne	r3,zero,2a7c <_strtod_r+0xdbc>
    29e8:	e0800117 	ldw	r2,4(fp)
    29ec:	00c00434 	movhi	r3,16
    29f0:	18ffffc4 	addi	r3,r3,-1
    29f4:	10c4703a 	and	r2,r2,r3
    29f8:	1000241e 	bne	r2,zero,2a8c <_strtod_r+0xdcc>
    29fc:	0005883a 	mov	r2,zero
    2a00:	00cffc34 	movhi	r3,16368
    2a04:	180f883a 	mov	r7,r3
    2a08:	8009883a 	mov	r4,r16
    2a0c:	880b883a 	mov	r5,r17
    2a10:	100d883a 	mov	r6,r2
    2a14:	000cb240 	call	cb24 <__ltdf2>
    2a18:	10014616 	blt	r2,zero,2f34 <_strtod_r+0x1274>
    2a1c:	0005883a 	mov	r2,zero
    2a20:	00cff834 	movhi	r3,16352
    2a24:	880b883a 	mov	r5,r17
    2a28:	8009883a 	mov	r4,r16
    2a2c:	180f883a 	mov	r7,r3
    2a30:	100d883a 	mov	r6,r2
    2a34:	000c2e80 	call	c2e8 <__muldf3>
    2a38:	1823883a 	mov	r17,r3
    2a3c:	1021883a 	mov	r16,r2
    2a40:	18e0003c 	xorhi	r3,r3,32768
    2a44:	003fbc06 	br	2938 <_strtod_r+0xc78>
    2a48:	2005883a 	mov	r2,r4
    2a4c:	18e0003c 	xorhi	r3,r3,32768
    2a50:	003fb906 	br	2938 <_strtod_r+0xc78>
    2a54:	3827883a 	mov	r19,r7
    2a58:	003f1606 	br	26b4 <_strtod_r+0x9f4>
    2a5c:	4091c83a 	sub	r8,r8,r2
    2a60:	003efe06 	br	265c <_strtod_r+0x99c>
    2a64:	d9000f17 	ldw	r4,60(sp)
    2a68:	0011883a 	mov	r8,zero
    2a6c:	0029883a 	mov	r20,zero
    2a70:	0113c83a 	sub	r9,zero,r4
    2a74:	480f883a 	mov	r7,r9
    2a78:	003ef506 	br	2650 <_strtod_r+0x990>
    2a7c:	00800044 	movi	r2,1
    2a80:	1880021e 	bne	r3,r2,2a8c <_strtod_r+0xdcc>
    2a84:	e0800117 	ldw	r2,4(fp)
    2a88:	1000c526 	beq	r2,zero,2da0 <_strtod_r+0x10e0>
    2a8c:	00affc34 	movhi	r2,49136
    2a90:	0021883a 	mov	r16,zero
    2a94:	044ffc34 	movhi	r17,16368
    2a98:	d8800815 	stw	r2,32(sp)
    2a9c:	d8000715 	stw	zero,28(sp)
    2aa0:	003f4806 	br	27c4 <_strtod_r+0xb04>
    2aa4:	880b883a 	mov	r5,r17
    2aa8:	8009883a 	mov	r4,r16
    2aac:	000cd2c0 	call	cd2c <__fixdfsi>
    2ab0:	1009883a 	mov	r4,r2
    2ab4:	000cc340 	call	cc34 <__floatsidf>
    2ab8:	880b883a 	mov	r5,r17
    2abc:	8009883a 	mov	r4,r16
    2ac0:	100d883a 	mov	r6,r2
    2ac4:	180f883a 	mov	r7,r3
    2ac8:	000c1f40 	call	c1f4 <__subdf3>
    2acc:	100b883a 	mov	r5,r2
    2ad0:	1021883a 	mov	r16,r2
    2ad4:	d8801a17 	ldw	r2,104(sp)
    2ad8:	180d883a 	mov	r6,r3
    2adc:	1823883a 	mov	r17,r3
    2ae0:	1000061e 	bne	r2,zero,2afc <_strtod_r+0xe3c>
    2ae4:	e0800017 	ldw	r2,0(fp)
    2ae8:	1000041e 	bne	r2,zero,2afc <_strtod_r+0xe3c>
    2aec:	00c00434 	movhi	r3,16
    2af0:	18ffffc4 	addi	r3,r3,-1
    2af4:	90c4703a 	and	r2,r18,r3
    2af8:	10004026 	beq	r2,zero,2bfc <_strtod_r+0xf3c>
    2afc:	00a52834 	movhi	r2,38048
    2b00:	108d6544 	addi	r2,r2,13717
    2b04:	00cff834 	movhi	r3,16352
    2b08:	18ffffc4 	addi	r3,r3,-1
    2b0c:	180f883a 	mov	r7,r3
    2b10:	8009883a 	mov	r4,r16
    2b14:	880b883a 	mov	r5,r17
    2b18:	100d883a 	mov	r6,r2
    2b1c:	000cb240 	call	cb24 <__ltdf2>
    2b20:	10000916 	blt	r2,zero,2b48 <_strtod_r+0xe88>
    2b24:	008d6c34 	movhi	r2,13744
    2b28:	10b94d44 	addi	r2,r2,-6859
    2b2c:	00cff834 	movhi	r3,16352
    2b30:	880b883a 	mov	r5,r17
    2b34:	180f883a 	mov	r7,r3
    2b38:	8009883a 	mov	r4,r16
    2b3c:	100d883a 	mov	r6,r2
    2b40:	000ca140 	call	ca14 <__gtdf2>
    2b44:	00bf580e 	bge	zero,r2,28a8 <_strtod_r+0xbe8>
    2b48:	d9400517 	ldw	r5,20(sp)
    2b4c:	a809883a 	mov	r4,r21
    2b50:	0008d540 	call	8d54 <_Bfree>
    2b54:	a809883a 	mov	r4,r21
    2b58:	b80b883a 	mov	r5,r23
    2b5c:	0008d540 	call	8d54 <_Bfree>
    2b60:	a809883a 	mov	r4,r21
    2b64:	b00b883a 	mov	r5,r22
    2b68:	0008d540 	call	8d54 <_Bfree>
    2b6c:	d9401017 	ldw	r5,64(sp)
    2b70:	a809883a 	mov	r4,r21
    2b74:	0008d540 	call	8d54 <_Bfree>
    2b78:	a809883a 	mov	r4,r21
    2b7c:	a00b883a 	mov	r5,r20
    2b80:	0008d540 	call	8d54 <_Bfree>
    2b84:	003cd806 	br	1ee8 <_strtod_r+0x228>
    2b88:	0080d434 	movhi	r2,848
    2b8c:	288d883a 	add	r6,r5,r2
    2b90:	e1800115 	stw	r6,4(fp)
    2b94:	003f3f06 	br	2894 <_strtod_r+0xbd4>
    2b98:	8005883a 	mov	r2,r16
    2b9c:	88e0003c 	xorhi	r3,r17,32768
    2ba0:	003f2206 	br	282c <_strtod_r+0xb6c>
    2ba4:	1009883a 	mov	r4,r2
    2ba8:	000ce040 	call	ce04 <__floatunsidf>
    2bac:	1021883a 	mov	r16,r2
    2bb0:	1823883a 	mov	r17,r3
    2bb4:	003f1a06 	br	2820 <_strtod_r+0xb60>
    2bb8:	dc000417 	ldw	r16,16(sp)
    2bbc:	31800044 	addi	r6,r6,1
    2bc0:	003e5606 	br	251c <_strtod_r+0x85c>
    2bc4:	d8c00b17 	ldw	r3,44(sp)
    2bc8:	00bfffc4 	movi	r2,-1
    2bcc:	18bf801e 	bne	r3,r2,29d0 <_strtod_r+0xd10>
    2bd0:	00c00884 	movi	r3,34
    2bd4:	a8c00015 	stw	r3,0(r21)
    2bd8:	009ffc34 	movhi	r2,32752
    2bdc:	e0800115 	stw	r2,4(fp)
    2be0:	e0000015 	stw	zero,0(fp)
    2be4:	003fd806 	br	2b48 <_strtod_r+0xe88>
    2be8:	8025883a 	mov	r18,r16
    2bec:	0027883a 	mov	r19,zero
    2bf0:	d8001215 	stw	zero,72(sp)
    2bf4:	d8001115 	stw	zero,68(sp)
    2bf8:	003cac06 	br	1eac <_strtod_r+0x1ec>
    2bfc:	00a52834 	movhi	r2,38048
    2c00:	108d6544 	addi	r2,r2,13717
    2c04:	00cff434 	movhi	r3,16336
    2c08:	18ffffc4 	addi	r3,r3,-1
    2c0c:	2809883a 	mov	r4,r5
    2c10:	180f883a 	mov	r7,r3
    2c14:	300b883a 	mov	r5,r6
    2c18:	100d883a 	mov	r6,r2
    2c1c:	000cb240 	call	cb24 <__ltdf2>
    2c20:	103f210e 	bge	r2,zero,28a8 <_strtod_r+0xbe8>
    2c24:	003fc806 	br	2b48 <_strtod_r+0xe88>
    2c28:	00800044 	movi	r2,1
    2c2c:	d8001815 	stw	zero,96(sp)
    2c30:	d8801b15 	stw	r2,108(sp)
    2c34:	d8001715 	stw	zero,92(sp)
    2c38:	003ca206 	br	1ec4 <_strtod_r+0x204>
    2c3c:	00800884 	movi	r2,34
    2c40:	a8800015 	stw	r2,0(r21)
    2c44:	019ffc34 	movhi	r6,32752
    2c48:	e1800115 	stw	r6,4(fp)
    2c4c:	e0000015 	stw	zero,0(fp)
    2c50:	003ca506 	br	1ee8 <_strtod_r+0x228>
    2c54:	011387c4 	movi	r4,19999
    2c58:	003d0206 	br	2064 <_strtod_r+0x3a4>
    2c5c:	180a90fa 	slli	r5,r3,3
    2c60:	e0800017 	ldw	r2,0(fp)
    2c64:	e0c00117 	ldw	r3,4(fp)
    2c68:	01000074 	movhi	r4,1
    2c6c:	213c1904 	addi	r4,r4,-3996
    2c70:	290b883a 	add	r5,r5,r4
    2c74:	2a000017 	ldw	r8,0(r5)
    2c78:	2a400117 	ldw	r9,4(r5)
    2c7c:	1009883a 	mov	r4,r2
    2c80:	180b883a 	mov	r5,r3
    2c84:	480f883a 	mov	r7,r9
    2c88:	400d883a 	mov	r6,r8
    2c8c:	000c2e80 	call	c2e8 <__muldf3>
    2c90:	e0c00115 	stw	r3,4(fp)
    2c94:	e0800015 	stw	r2,0(fp)
    2c98:	003c9306 	br	1ee8 <_strtod_r+0x228>
    2c9c:	d8800d17 	ldw	r2,52(sp)
    2ca0:	e0800015 	stw	r2,0(fp)
    2ca4:	d8c00e17 	ldw	r3,56(sp)
    2ca8:	e0c00115 	stw	r3,4(fp)
    2cac:	9080020c 	andi	r2,r18,8
    2cb0:	103c8d26 	beq	r2,zero,1ee8 <_strtod_r+0x228>
    2cb4:	e0800117 	ldw	r2,4(fp)
    2cb8:	10a00034 	orhi	r2,r2,32768
    2cbc:	e0800115 	stw	r2,4(fp)
    2cc0:	003c8906 	br	1ee8 <_strtod_r+0x228>
    2cc4:	009ffc34 	movhi	r2,32752
    2cc8:	e0800115 	stw	r2,4(fp)
    2ccc:	e0000015 	stw	zero,0(fp)
    2cd0:	003ff606 	br	2cac <_strtod_r+0xfec>
    2cd4:	00a00034 	movhi	r2,32768
    2cd8:	10bfffc4 	addi	r2,r2,-1
    2cdc:	00ffffc4 	movi	r3,-1
    2ce0:	e0800115 	stw	r2,4(fp)
    2ce4:	e0c00015 	stw	r3,0(fp)
    2ce8:	003ff006 	br	2cac <_strtod_r+0xfec>
    2cec:	e0000115 	stw	zero,4(fp)
    2cf0:	e0000015 	stw	zero,0(fp)
    2cf4:	003fed06 	br	2cac <_strtod_r+0xfec>
    2cf8:	d8800e17 	ldw	r2,56(sp)
    2cfc:	29010cc4 	addi	r4,r5,1075
    2d00:	00fffc34 	movhi	r3,65520
    2d04:	18ffffc4 	addi	r3,r3,-1
    2d08:	2008953a 	slli	r4,r4,20
    2d0c:	10c4703a 	and	r2,r2,r3
    2d10:	d8c00d17 	ldw	r3,52(sp)
    2d14:	1104b03a 	or	r2,r2,r4
    2d18:	e0800115 	stw	r2,4(fp)
    2d1c:	e0c00015 	stw	r3,0(fp)
    2d20:	003fe206 	br	2cac <_strtod_r+0xfec>
    2d24:	d8c01a17 	ldw	r3,104(sp)
    2d28:	1825003a 	cmpeq	r18,r3,zero
    2d2c:	9000cf1e 	bne	r18,zero,306c <_strtod_r+0x13ac>
    2d30:	e1400117 	ldw	r5,4(fp)
    2d34:	01000434 	movhi	r4,16
    2d38:	213fffc4 	addi	r4,r4,-1
    2d3c:	2904703a 	and	r2,r5,r4
    2d40:	11006826 	beq	r2,r4,2ee4 <_strtod_r+0x1224>
    2d44:	e1c00017 	ldw	r7,0(fp)
    2d48:	3880004c 	andi	r2,r7,1
    2d4c:	1005003a 	cmpeq	r2,r2,zero
    2d50:	1000601e 	bne	r2,zero,2ed4 <_strtod_r+0x1214>
    2d54:	90010426 	beq	r18,zero,3168 <_strtod_r+0x14a8>
    2d58:	e4400117 	ldw	r17,4(fp)
    2d5c:	3809883a 	mov	r4,r7
    2d60:	3821883a 	mov	r16,r7
    2d64:	880b883a 	mov	r5,r17
    2d68:	0008f100 	call	8f10 <__ulp>
    2d6c:	180f883a 	mov	r7,r3
    2d70:	880b883a 	mov	r5,r17
    2d74:	8009883a 	mov	r4,r16
    2d78:	100d883a 	mov	r6,r2
    2d7c:	000c1f40 	call	c1f4 <__subdf3>
    2d80:	1009883a 	mov	r4,r2
    2d84:	000d883a 	mov	r6,zero
    2d88:	000f883a 	mov	r7,zero
    2d8c:	180b883a 	mov	r5,r3
    2d90:	e0800015 	stw	r2,0(fp)
    2d94:	e0c00115 	stw	r3,4(fp)
    2d98:	000c98c0 	call	c98c <__nedf2>
    2d9c:	10004d1e 	bne	r2,zero,2ed4 <_strtod_r+0x1214>
    2da0:	00800884 	movi	r2,34
    2da4:	a8800015 	stw	r2,0(r21)
    2da8:	e0000015 	stw	zero,0(fp)
    2dac:	e0000115 	stw	zero,4(fp)
    2db0:	003f6506 	br	2b48 <_strtod_r+0xe88>
    2db4:	00800044 	movi	r2,1
    2db8:	d8801915 	stw	r2,100(sp)
    2dbc:	003d4406 	br	22d0 <_strtod_r+0x610>
    2dc0:	d8c01817 	ldw	r3,96(sp)
    2dc4:	1985883a 	add	r2,r3,r6
    2dc8:	11ffffc4 	addi	r7,r2,-1
    2dcc:	39000044 	addi	r4,r7,1
    2dd0:	00800204 	movi	r2,8
    2dd4:	d9001815 	stw	r4,96(sp)
    2dd8:	11c0d716 	blt	r2,r7,3138 <_strtod_r+0x1478>
    2ddc:	d9001217 	ldw	r4,72(sp)
    2de0:	01400284 	movi	r5,10
    2de4:	000d0e40 	call	d0e4 <__mulsi3>
    2de8:	1585883a 	add	r2,r2,r22
    2dec:	d8801215 	stw	r2,72(sp)
    2df0:	000d883a 	mov	r6,zero
    2df4:	84000044 	addi	r16,r16,1
    2df8:	dc000415 	stw	r16,16(sp)
    2dfc:	84400007 	ldb	r17,0(r16)
    2e00:	003cfc06 	br	21f4 <_strtod_r+0x534>
    2e04:	d8c01a17 	ldw	r3,104(sp)
    2e08:	1800321e 	bne	r3,zero,2ed4 <_strtod_r+0x1214>
    2e0c:	e0800017 	ldw	r2,0(fp)
    2e10:	1000b31e 	bne	r2,zero,30e0 <_strtod_r+0x1420>
    2e14:	e0c00117 	ldw	r3,4(fp)
    2e18:	01000434 	movhi	r4,16
    2e1c:	213fffc4 	addi	r4,r4,-1
    2e20:	1904703a 	and	r2,r3,r4
    2e24:	1000e71e 	bne	r2,zero,31c4 <_strtod_r+0x1504>
    2e28:	18dffc2c 	andhi	r3,r3,32752
    2e2c:	0081ac34 	movhi	r2,1712
    2e30:	10c0282e 	bgeu	r2,r3,2ed4 <_strtod_r+0x1214>
    2e34:	a0800517 	ldw	r2,20(r20)
    2e38:	1000031e 	bne	r2,zero,2e48 <_strtod_r+0x1188>
    2e3c:	a0c00417 	ldw	r3,16(r20)
    2e40:	00800044 	movi	r2,1
    2e44:	10c0a60e 	bge	r2,r3,30e0 <_strtod_r+0x1420>
    2e48:	a00b883a 	mov	r5,r20
    2e4c:	a809883a 	mov	r4,r21
    2e50:	01800044 	movi	r6,1
    2e54:	00096980 	call	9698 <__lshift>
    2e58:	1009883a 	mov	r4,r2
    2e5c:	b00b883a 	mov	r5,r22
    2e60:	1029883a 	mov	r20,r2
    2e64:	0008eb00 	call	8eb0 <__mcmp>
    2e68:	00809d0e 	bge	zero,r2,30e0 <_strtod_r+0x1420>
    2e6c:	e1800117 	ldw	r6,4(fp)
    2e70:	d9001c17 	ldw	r4,112(sp)
    2e74:	2013003a 	cmpeq	r9,r4,zero
    2e78:	4800d61e 	bne	r9,zero,31d4 <_strtod_r+0x1514>
    2e7c:	30dffc2c 	andhi	r3,r6,32752
    2e80:	0081ac34 	movhi	r2,1712
    2e84:	10c0d336 	bltu	r2,r3,31d4 <_strtod_r+0x1514>
    2e88:	0080dc34 	movhi	r2,880
    2e8c:	10ffc42e 	bgeu	r2,r3,2da0 <_strtod_r+0x10e0>
    2e90:	e0800017 	ldw	r2,0(fp)
    2e94:	e0c00117 	ldw	r3,4(fp)
    2e98:	020e5434 	movhi	r8,14672
    2e9c:	000d883a 	mov	r6,zero
    2ea0:	400f883a 	mov	r7,r8
    2ea4:	180b883a 	mov	r5,r3
    2ea8:	1009883a 	mov	r4,r2
    2eac:	da000c15 	stw	r8,48(sp)
    2eb0:	d8000b15 	stw	zero,44(sp)
    2eb4:	000c2e80 	call	c2e8 <__muldf3>
    2eb8:	e0800015 	stw	r2,0(fp)
    2ebc:	e0c00115 	stw	r3,4(fp)
    2ec0:	183f211e 	bne	r3,zero,2b48 <_strtod_r+0xe88>
    2ec4:	103f201e 	bne	r2,zero,2b48 <_strtod_r+0xe88>
    2ec8:	00800884 	movi	r2,34
    2ecc:	a8800015 	stw	r2,0(r21)
    2ed0:	003f1d06 	br	2b48 <_strtod_r+0xe88>
    2ed4:	d9001c17 	ldw	r4,112(sp)
    2ed8:	2013003a 	cmpeq	r9,r4,zero
    2edc:	483f1a1e 	bne	r9,zero,2b48 <_strtod_r+0xe88>
    2ee0:	003feb06 	br	2e90 <_strtod_r+0x11d0>
    2ee4:	d8801c17 	ldw	r2,112(sp)
    2ee8:	e1c00017 	ldw	r7,0(fp)
    2eec:	1013003a 	cmpeq	r9,r2,zero
    2ef0:	4800c31e 	bne	r9,zero,3200 <_strtod_r+0x1540>
    2ef4:	28dffc2c 	andhi	r3,r5,32752
    2ef8:	0081a834 	movhi	r2,1696
    2efc:	10c0c036 	bltu	r2,r3,3200 <_strtod_r+0x1540>
    2f00:	1804d53a 	srli	r2,r3,20
    2f04:	00c01ac4 	movi	r3,107
    2f08:	013fffc4 	movi	r4,-1
    2f0c:	1887c83a 	sub	r3,r3,r2
    2f10:	20c4983a 	sll	r2,r4,r3
    2f14:	11ff8c1e 	bne	r2,r7,2d48 <_strtod_r+0x1088>
    2f18:	28dffc2c 	andhi	r3,r5,32752
    2f1c:	00800434 	movhi	r2,16
    2f20:	188d883a 	add	r6,r3,r2
    2f24:	e1800115 	stw	r6,4(fp)
    2f28:	e0000015 	stw	zero,0(fp)
    2f2c:	483f061e 	bne	r9,zero,2b48 <_strtod_r+0xe88>
    2f30:	003fd706 	br	2e90 <_strtod_r+0x11d0>
    2f34:	0021883a 	mov	r16,zero
    2f38:	0005883a 	mov	r2,zero
    2f3c:	044ff834 	movhi	r17,16352
    2f40:	00eff834 	movhi	r3,49120
    2f44:	003e7c06 	br	2938 <_strtod_r+0xc78>
    2f48:	803d9226 	beq	r16,zero,2594 <_strtod_r+0x8d4>
    2f4c:	0421c83a 	sub	r16,zero,r16
    2f50:	814003cc 	andi	r5,r16,15
    2f54:	28000f26 	beq	r5,zero,2f94 <_strtod_r+0x12d4>
    2f58:	280a90fa 	slli	r5,r5,3
    2f5c:	01000074 	movhi	r4,1
    2f60:	213c1904 	addi	r4,r4,-3996
    2f64:	e0800017 	ldw	r2,0(fp)
    2f68:	290b883a 	add	r5,r5,r4
    2f6c:	2a000017 	ldw	r8,0(r5)
    2f70:	e0c00117 	ldw	r3,4(fp)
    2f74:	2a400117 	ldw	r9,4(r5)
    2f78:	1009883a 	mov	r4,r2
    2f7c:	180b883a 	mov	r5,r3
    2f80:	480f883a 	mov	r7,r9
    2f84:	400d883a 	mov	r6,r8
    2f88:	000c6ac0 	call	c6ac <__divdf3>
    2f8c:	e0c00115 	stw	r3,4(fp)
    2f90:	e0800015 	stw	r2,0(fp)
    2f94:	8021d13a 	srai	r16,r16,4
    2f98:	803d7e26 	beq	r16,zero,2594 <_strtod_r+0x8d4>
    2f9c:	008007c4 	movi	r2,31
    2fa0:	14002d16 	blt	r2,r16,3058 <_strtod_r+0x1398>
    2fa4:	8080040c 	andi	r2,r16,16
    2fa8:	10009d26 	beq	r2,zero,3220 <_strtod_r+0x1560>
    2fac:	01001a84 	movi	r4,106
    2fb0:	d9001c15 	stw	r4,112(sp)
    2fb4:	0400110e 	bge	zero,r16,2ffc <_strtod_r+0x133c>
    2fb8:	04400074 	movhi	r17,1
    2fbc:	8c7bd304 	addi	r17,r17,-4276
    2fc0:	8080004c 	andi	r2,r16,1
    2fc4:	1005003a 	cmpeq	r2,r2,zero
    2fc8:	1000091e 	bne	r2,zero,2ff0 <_strtod_r+0x1330>
    2fcc:	e0800017 	ldw	r2,0(fp)
    2fd0:	e0c00117 	ldw	r3,4(fp)
    2fd4:	89800017 	ldw	r6,0(r17)
    2fd8:	89c00117 	ldw	r7,4(r17)
    2fdc:	180b883a 	mov	r5,r3
    2fe0:	1009883a 	mov	r4,r2
    2fe4:	000c2e80 	call	c2e8 <__muldf3>
    2fe8:	e0c00115 	stw	r3,4(fp)
    2fec:	e0800015 	stw	r2,0(fp)
    2ff0:	8021d07a 	srai	r16,r16,1
    2ff4:	8c400204 	addi	r17,r17,8
    2ff8:	043ff116 	blt	zero,r16,2fc0 <_strtod_r+0x1300>
    2ffc:	d8801c17 	ldw	r2,112(sp)
    3000:	10000d26 	beq	r2,zero,3038 <_strtod_r+0x1378>
    3004:	e1000117 	ldw	r4,4(fp)
    3008:	00c01ac4 	movi	r3,107
    300c:	209ffc2c 	andhi	r2,r4,32752
    3010:	1004d53a 	srli	r2,r2,20
    3014:	1887c83a 	sub	r3,r3,r2
    3018:	00c0070e 	bge	zero,r3,3038 <_strtod_r+0x1378>
    301c:	008007c4 	movi	r2,31
    3020:	10c0940e 	bge	r2,r3,3274 <_strtod_r+0x15b4>
    3024:	00800d04 	movi	r2,52
    3028:	e0000015 	stw	zero,0(fp)
    302c:	10c08b0e 	bge	r2,r3,325c <_strtod_r+0x159c>
    3030:	0180dc34 	movhi	r6,880
    3034:	e1800115 	stw	r6,4(fp)
    3038:	e0800017 	ldw	r2,0(fp)
    303c:	e0c00117 	ldw	r3,4(fp)
    3040:	000d883a 	mov	r6,zero
    3044:	000f883a 	mov	r7,zero
    3048:	180b883a 	mov	r5,r3
    304c:	1009883a 	mov	r4,r2
    3050:	000c98c0 	call	c98c <__nedf2>
    3054:	103d501e 	bne	r2,zero,2598 <_strtod_r+0x8d8>
    3058:	00800884 	movi	r2,34
    305c:	a8800015 	stw	r2,0(r21)
    3060:	e0000015 	stw	zero,0(fp)
    3064:	e0000115 	stw	zero,4(fp)
    3068:	003b9f06 	br	1ee8 <_strtod_r+0x228>
    306c:	e1800117 	ldw	r6,4(fp)
    3070:	00c00434 	movhi	r3,16
    3074:	18ffffc4 	addi	r3,r3,-1
    3078:	30c4703a 	and	r2,r6,r3
    307c:	103f311e 	bne	r2,zero,2d44 <_strtod_r+0x1084>
    3080:	e1c00017 	ldw	r7,0(fp)
    3084:	383f301e 	bne	r7,zero,2d48 <_strtod_r+0x1088>
    3088:	003f7906 	br	2e70 <_strtod_r+0x11b0>
    308c:	d8c00f17 	ldw	r3,60(sp)
    3090:	00bffa84 	movi	r2,-22
    3094:	18bcbf16 	blt	r3,r2,2394 <_strtod_r+0x6d4>
    3098:	1809883a 	mov	r4,r3
    309c:	017ffe04 	movi	r5,-8
    30a0:	000d0e40 	call	d0e4 <__mulsi3>
    30a4:	00c00074 	movhi	r3,1
    30a8:	18fc1904 	addi	r3,r3,-3996
    30ac:	10c5883a 	add	r2,r2,r3
    30b0:	e2000017 	ldw	r8,0(fp)
    30b4:	e2400117 	ldw	r9,4(fp)
    30b8:	12800017 	ldw	r10,0(r2)
    30bc:	12c00117 	ldw	r11,4(r2)
    30c0:	480b883a 	mov	r5,r9
    30c4:	4009883a 	mov	r4,r8
    30c8:	580f883a 	mov	r7,r11
    30cc:	500d883a 	mov	r6,r10
    30d0:	000c6ac0 	call	c6ac <__divdf3>
    30d4:	e0c00115 	stw	r3,4(fp)
    30d8:	e0800015 	stw	r2,0(fp)
    30dc:	003b8206 	br	1ee8 <_strtod_r+0x228>
    30e0:	d8801c17 	ldw	r2,112(sp)
    30e4:	1013003a 	cmpeq	r9,r2,zero
    30e8:	483e971e 	bne	r9,zero,2b48 <_strtod_r+0xe88>
    30ec:	003f6806 	br	2e90 <_strtod_r+0x11d0>
    30f0:	00801a44 	movi	r2,105
    30f4:	88bc5026 	beq	r17,r2,2238 <_strtod_r+0x578>
    30f8:	00801b84 	movi	r2,110
    30fc:	88bb9b1e 	bne	r17,r2,1f6c <_strtod_r+0x2ac>
    3100:	dc000404 	addi	r16,sp,16
    3104:	8009883a 	mov	r4,r16
    3108:	01400074 	movhi	r5,1
    310c:	297bd204 	addi	r5,r5,-4280
    3110:	0001c780 	call	1c78 <match>
    3114:	103b9526 	beq	r2,zero,1f6c <_strtod_r+0x2ac>
    3118:	d8800417 	ldw	r2,16(sp)
    311c:	00c00a04 	movi	r3,40
    3120:	11000007 	ldb	r4,0(r2)
    3124:	20c04026 	beq	r4,r3,3228 <_strtod_r+0x1568>
    3128:	01bffe34 	movhi	r6,65528
    312c:	e1800115 	stw	r6,4(fp)
    3130:	e0000015 	stw	zero,0(fp)
    3134:	003b6c06 	br	1ee8 <_strtod_r+0x228>
    3138:	d8c01817 	ldw	r3,96(sp)
    313c:	00800404 	movi	r2,16
    3140:	10c00516 	blt	r2,r3,3158 <_strtod_r+0x1498>
    3144:	d9001117 	ldw	r4,68(sp)
    3148:	01400284 	movi	r5,10
    314c:	000d0e40 	call	d0e4 <__mulsi3>
    3150:	1585883a 	add	r2,r2,r22
    3154:	d8801115 	stw	r2,68(sp)
    3158:	000d883a 	mov	r6,zero
    315c:	003f2506 	br	2df4 <_strtod_r+0x1134>
    3160:	000d883a 	mov	r6,zero
    3164:	003ce306 	br	24f4 <_strtod_r+0x834>
    3168:	e4400117 	ldw	r17,4(fp)
    316c:	3809883a 	mov	r4,r7
    3170:	3821883a 	mov	r16,r7
    3174:	880b883a 	mov	r5,r17
    3178:	0008f100 	call	8f10 <__ulp>
    317c:	180f883a 	mov	r7,r3
    3180:	880b883a 	mov	r5,r17
    3184:	8009883a 	mov	r4,r16
    3188:	100d883a 	mov	r6,r2
    318c:	000c2740 	call	c274 <__adddf3>
    3190:	180b883a 	mov	r5,r3
    3194:	d8c01c17 	ldw	r3,112(sp)
    3198:	1009883a 	mov	r4,r2
    319c:	e1400115 	stw	r5,4(fp)
    31a0:	1813003a 	cmpeq	r9,r3,zero
    31a4:	e1000015 	stw	r4,0(fp)
    31a8:	483e671e 	bne	r9,zero,2b48 <_strtod_r+0xe88>
    31ac:	003f3806 	br	2e90 <_strtod_r+0x11d0>
    31b0:	0080d434 	movhi	r2,848
    31b4:	188d883a 	add	r6,r3,r2
    31b8:	d8001c15 	stw	zero,112(sp)
    31bc:	e1800115 	stw	r6,4(fp)
    31c0:	003cf506 	br	2598 <_strtod_r+0x8d8>
    31c4:	d8c01c17 	ldw	r3,112(sp)
    31c8:	1813003a 	cmpeq	r9,r3,zero
    31cc:	483e5e1e 	bne	r9,zero,2b48 <_strtod_r+0xe88>
    31d0:	003f2f06 	br	2e90 <_strtod_r+0x11d0>
    31d4:	309ffc2c 	andhi	r2,r6,32752
    31d8:	00fffc34 	movhi	r3,65520
    31dc:	10c5883a 	add	r2,r2,r3
    31e0:	00c00434 	movhi	r3,16
    31e4:	18ffffc4 	addi	r3,r3,-1
    31e8:	10ccb03a 	or	r6,r2,r3
    31ec:	01ffffc4 	movi	r7,-1
    31f0:	e1800115 	stw	r6,4(fp)
    31f4:	e1c00015 	stw	r7,0(fp)
    31f8:	483e531e 	bne	r9,zero,2b48 <_strtod_r+0xe88>
    31fc:	003f2406 	br	2e90 <_strtod_r+0x11d0>
    3200:	00bfffc4 	movi	r2,-1
    3204:	003f4306 	br	2f14 <_strtod_r+0x1254>
    3208:	0025883a 	mov	r18,zero
    320c:	05800074 	movhi	r22,1
    3210:	b5bc4b04 	addi	r22,r22,-3796
    3214:	003c9206 	br	2460 <_strtod_r+0x7a0>
    3218:	d9c01817 	ldw	r7,96(sp)
    321c:	003eeb06 	br	2dcc <_strtod_r+0x110c>
    3220:	d8001c15 	stw	zero,112(sp)
    3224:	003f6306 	br	2fb4 <_strtod_r+0x12f4>
    3228:	8009883a 	mov	r4,r16
    322c:	01400074 	movhi	r5,1
    3230:	297dbd04 	addi	r5,r5,-2316
    3234:	d9800d04 	addi	r6,sp,52
    3238:	00085440 	call	8544 <__hexnan>
    323c:	00c00144 	movi	r3,5
    3240:	10ffb91e 	bne	r2,r3,3128 <_strtod_r+0x1468>
    3244:	d8800e17 	ldw	r2,56(sp)
    3248:	d9c00d17 	ldw	r7,52(sp)
    324c:	119ffc34 	orhi	r6,r2,32752
    3250:	e1800115 	stw	r6,4(fp)
    3254:	e1c00015 	stw	r7,0(fp)
    3258:	003b2306 	br	1ee8 <_strtod_r+0x228>
    325c:	18fff804 	addi	r3,r3,-32
    3260:	00bfffc4 	movi	r2,-1
    3264:	10c4983a 	sll	r2,r2,r3
    3268:	208c703a 	and	r6,r4,r2
    326c:	e1800115 	stw	r6,4(fp)
    3270:	003f7106 	br	3038 <_strtod_r+0x1378>
    3274:	00bfffc4 	movi	r2,-1
    3278:	10c4983a 	sll	r2,r2,r3
    327c:	e0c00017 	ldw	r3,0(fp)
    3280:	188e703a 	and	r7,r3,r2
    3284:	e1c00015 	stw	r7,0(fp)
    3288:	003f6b06 	br	3038 <_strtod_r+0x1378>

0000328c <strtof>:
    328c:	defffa04 	addi	sp,sp,-24
    3290:	dd000415 	stw	r20,16(sp)
    3294:	05000074 	movhi	r20,1
    3298:	a5037004 	addi	r20,r20,3520
    329c:	2007883a 	mov	r3,r4
    32a0:	a1000017 	ldw	r4,0(r20)
    32a4:	280d883a 	mov	r6,r5
    32a8:	180b883a 	mov	r5,r3
    32ac:	dfc00515 	stw	ra,20(sp)
    32b0:	dcc00315 	stw	r19,12(sp)
    32b4:	dc800215 	stw	r18,8(sp)
    32b8:	dc400115 	stw	r17,4(sp)
    32bc:	dc000015 	stw	r16,0(sp)
    32c0:	0001cc00 	call	1cc0 <_strtod_r>
    32c4:	180b883a 	mov	r5,r3
    32c8:	1009883a 	mov	r4,r2
    32cc:	1823883a 	mov	r17,r3
    32d0:	1021883a 	mov	r16,r2
    32d4:	00007400 	call	740 <__truncdfsf2>
    32d8:	1009883a 	mov	r4,r2
    32dc:	000b883a 	mov	r5,zero
    32e0:	1025883a 	mov	r18,r2
    32e4:	1027883a 	mov	r19,r2
    32e8:	000bc7c0 	call	bc7c <__nesf2>
    32ec:	000d883a 	mov	r6,zero
    32f0:	000f883a 	mov	r7,zero
    32f4:	8009883a 	mov	r4,r16
    32f8:	880b883a 	mov	r5,r17
    32fc:	10000e1e 	bne	r2,zero,3338 <strtof+0xac>
    3300:	000c98c0 	call	c98c <__nedf2>
    3304:	10000c26 	beq	r2,zero,3338 <strtof+0xac>
    3308:	a0c00017 	ldw	r3,0(r20)
    330c:	00800884 	movi	r2,34
    3310:	18800015 	stw	r2,0(r3)
    3314:	9805883a 	mov	r2,r19
    3318:	dfc00517 	ldw	ra,20(sp)
    331c:	dd000417 	ldw	r20,16(sp)
    3320:	dcc00317 	ldw	r19,12(sp)
    3324:	dc800217 	ldw	r18,8(sp)
    3328:	dc400117 	ldw	r17,4(sp)
    332c:	dc000017 	ldw	r16,0(sp)
    3330:	dec00604 	addi	sp,sp,24
    3334:	f800283a 	ret
    3338:	9009883a 	mov	r4,r18
    333c:	015fe034 	movhi	r5,32640
    3340:	297fffc4 	addi	r5,r5,-1
    3344:	000bcf40 	call	bcf4 <__gtsf2>
    3348:	00ffffc4 	movi	r3,-1
    334c:	011ffc34 	movhi	r4,32752
    3350:	213fffc4 	addi	r4,r4,-1
    3354:	200f883a 	mov	r7,r4
    3358:	180d883a 	mov	r6,r3
    335c:	8009883a 	mov	r4,r16
    3360:	880b883a 	mov	r5,r17
    3364:	00800f16 	blt	zero,r2,33a4 <strtof+0x118>
    3368:	9009883a 	mov	r4,r18
    336c:	017fe034 	movhi	r5,65408
    3370:	297fffc4 	addi	r5,r5,-1
    3374:	000bd6c0 	call	bd6c <__ltsf2>
    3378:	023fffc4 	movi	r8,-1
    337c:	027ffc34 	movhi	r9,65520
    3380:	4a7fffc4 	addi	r9,r9,-1
    3384:	880b883a 	mov	r5,r17
    3388:	480f883a 	mov	r7,r9
    338c:	8009883a 	mov	r4,r16
    3390:	400d883a 	mov	r6,r8
    3394:	103fdf0e 	bge	r2,zero,3314 <strtof+0x88>
    3398:	000cb240 	call	cb24 <__ltdf2>
    339c:	103fda0e 	bge	r2,zero,3308 <strtof+0x7c>
    33a0:	003fdc06 	br	3314 <strtof+0x88>
    33a4:	000ca140 	call	ca14 <__gtdf2>
    33a8:	00bfd70e 	bge	zero,r2,3308 <strtof+0x7c>
    33ac:	003fee06 	br	3368 <strtof+0xdc>

000033b0 <strtod>:
    33b0:	01800074 	movhi	r6,1
    33b4:	31837004 	addi	r6,r6,3520
    33b8:	2007883a 	mov	r3,r4
    33bc:	31000017 	ldw	r4,0(r6)
    33c0:	280d883a 	mov	r6,r5
    33c4:	180b883a 	mov	r5,r3
    33c8:	0001cc01 	jmpi	1cc0 <_strtod_r>

000033cc <__sprint_r>:
    33cc:	30800217 	ldw	r2,8(r6)
    33d0:	defffe04 	addi	sp,sp,-8
    33d4:	dc000015 	stw	r16,0(sp)
    33d8:	dfc00115 	stw	ra,4(sp)
    33dc:	3021883a 	mov	r16,r6
    33e0:	0007883a 	mov	r3,zero
    33e4:	1000061e 	bne	r2,zero,3400 <__sprint_r+0x34>
    33e8:	1805883a 	mov	r2,r3
    33ec:	30000115 	stw	zero,4(r6)
    33f0:	dfc00117 	ldw	ra,4(sp)
    33f4:	dc000017 	ldw	r16,0(sp)
    33f8:	dec00204 	addi	sp,sp,8
    33fc:	f800283a 	ret
    3400:	00075a40 	call	75a4 <__sfvwrite_r>
    3404:	1007883a 	mov	r3,r2
    3408:	1805883a 	mov	r2,r3
    340c:	80000115 	stw	zero,4(r16)
    3410:	80000215 	stw	zero,8(r16)
    3414:	dfc00117 	ldw	ra,4(sp)
    3418:	dc000017 	ldw	r16,0(sp)
    341c:	dec00204 	addi	sp,sp,8
    3420:	f800283a 	ret

00003424 <___vfprintf_internal_r>:
    3424:	defea304 	addi	sp,sp,-1396
    3428:	dd815915 	stw	r22,1380(sp)
    342c:	dc015315 	stw	r16,1356(sp)
    3430:	d9c15215 	stw	r7,1352(sp)
    3434:	dfc15c15 	stw	ra,1392(sp)
    3438:	df015b15 	stw	fp,1388(sp)
    343c:	ddc15a15 	stw	r23,1384(sp)
    3440:	dd415815 	stw	r21,1376(sp)
    3444:	dd015715 	stw	r20,1372(sp)
    3448:	dcc15615 	stw	r19,1368(sp)
    344c:	dc815515 	stw	r18,1364(sp)
    3450:	dc415415 	stw	r17,1360(sp)
    3454:	282d883a 	mov	r22,r5
    3458:	3021883a 	mov	r16,r6
    345c:	d9015015 	stw	r4,1344(sp)
    3460:	00087940 	call	8794 <_localeconv_r>
    3464:	10800017 	ldw	r2,0(r2)
    3468:	d9c15217 	ldw	r7,1352(sp)
    346c:	d8814a15 	stw	r2,1320(sp)
    3470:	d8815017 	ldw	r2,1344(sp)
    3474:	10000226 	beq	r2,zero,3480 <___vfprintf_internal_r+0x5c>
    3478:	10800e17 	ldw	r2,56(r2)
    347c:	10020d26 	beq	r2,zero,3cb4 <___vfprintf_internal_r+0x890>
    3480:	b080030b 	ldhu	r2,12(r22)
    3484:	1080020c 	andi	r2,r2,8
    3488:	10020e26 	beq	r2,zero,3cc4 <___vfprintf_internal_r+0x8a0>
    348c:	b0800417 	ldw	r2,16(r22)
    3490:	10020c26 	beq	r2,zero,3cc4 <___vfprintf_internal_r+0x8a0>
    3494:	b200030b 	ldhu	r8,12(r22)
    3498:	00800284 	movi	r2,10
    349c:	40c0068c 	andi	r3,r8,26
    34a0:	18802f1e 	bne	r3,r2,3560 <___vfprintf_internal_r+0x13c>
    34a4:	b080038f 	ldh	r2,14(r22)
    34a8:	10002d16 	blt	r2,zero,3560 <___vfprintf_internal_r+0x13c>
    34ac:	b240038b 	ldhu	r9,14(r22)
    34b0:	b2800717 	ldw	r10,28(r22)
    34b4:	b2c00917 	ldw	r11,36(r22)
    34b8:	d9015017 	ldw	r4,1344(sp)
    34bc:	dc402a04 	addi	r17,sp,168
    34c0:	d8804104 	addi	r2,sp,260
    34c4:	00c10004 	movi	r3,1024
    34c8:	423fff4c 	andi	r8,r8,65533
    34cc:	800d883a 	mov	r6,r16
    34d0:	880b883a 	mov	r5,r17
    34d4:	da002d0d 	sth	r8,180(sp)
    34d8:	da402d8d 	sth	r9,182(sp)
    34dc:	da803115 	stw	r10,196(sp)
    34e0:	dac03315 	stw	r11,204(sp)
    34e4:	d8802e15 	stw	r2,184(sp)
    34e8:	d8c02f15 	stw	r3,188(sp)
    34ec:	d8802a15 	stw	r2,168(sp)
    34f0:	d8c02c15 	stw	r3,176(sp)
    34f4:	d8003015 	stw	zero,192(sp)
    34f8:	00034240 	call	3424 <___vfprintf_internal_r>
    34fc:	d8814c15 	stw	r2,1328(sp)
    3500:	10000416 	blt	r2,zero,3514 <___vfprintf_internal_r+0xf0>
    3504:	d9015017 	ldw	r4,1344(sp)
    3508:	880b883a 	mov	r5,r17
    350c:	0006c400 	call	6c40 <_fflush_r>
    3510:	1002321e 	bne	r2,zero,3ddc <___vfprintf_internal_r+0x9b8>
    3514:	d8802d0b 	ldhu	r2,180(sp)
    3518:	1080100c 	andi	r2,r2,64
    351c:	10000326 	beq	r2,zero,352c <___vfprintf_internal_r+0x108>
    3520:	b080030b 	ldhu	r2,12(r22)
    3524:	10801014 	ori	r2,r2,64
    3528:	b080030d 	sth	r2,12(r22)
    352c:	d8814c17 	ldw	r2,1328(sp)
    3530:	dfc15c17 	ldw	ra,1392(sp)
    3534:	df015b17 	ldw	fp,1388(sp)
    3538:	ddc15a17 	ldw	r23,1384(sp)
    353c:	dd815917 	ldw	r22,1380(sp)
    3540:	dd415817 	ldw	r21,1376(sp)
    3544:	dd015717 	ldw	r20,1372(sp)
    3548:	dcc15617 	ldw	r19,1368(sp)
    354c:	dc815517 	ldw	r18,1364(sp)
    3550:	dc415417 	ldw	r17,1360(sp)
    3554:	dc015317 	ldw	r16,1356(sp)
    3558:	dec15d04 	addi	sp,sp,1396
    355c:	f800283a 	ret
    3560:	0005883a 	mov	r2,zero
    3564:	0007883a 	mov	r3,zero
    3568:	dd401a04 	addi	r21,sp,104
    356c:	d8814315 	stw	r2,1292(sp)
    3570:	802f883a 	mov	r23,r16
    3574:	d8c14415 	stw	r3,1296(sp)
    3578:	d8014c15 	stw	zero,1328(sp)
    357c:	d8014915 	stw	zero,1316(sp)
    3580:	d8014515 	stw	zero,1300(sp)
    3584:	d8014815 	stw	zero,1312(sp)
    3588:	dd400d15 	stw	r21,52(sp)
    358c:	d8000f15 	stw	zero,60(sp)
    3590:	d8000e15 	stw	zero,56(sp)
    3594:	b8800007 	ldb	r2,0(r23)
    3598:	10001926 	beq	r2,zero,3600 <___vfprintf_internal_r+0x1dc>
    359c:	00c00944 	movi	r3,37
    35a0:	10c01726 	beq	r2,r3,3600 <___vfprintf_internal_r+0x1dc>
    35a4:	b821883a 	mov	r16,r23
    35a8:	00000106 	br	35b0 <___vfprintf_internal_r+0x18c>
    35ac:	10c00326 	beq	r2,r3,35bc <___vfprintf_internal_r+0x198>
    35b0:	84000044 	addi	r16,r16,1
    35b4:	80800007 	ldb	r2,0(r16)
    35b8:	103ffc1e 	bne	r2,zero,35ac <___vfprintf_internal_r+0x188>
    35bc:	85e7c83a 	sub	r19,r16,r23
    35c0:	98000e26 	beq	r19,zero,35fc <___vfprintf_internal_r+0x1d8>
    35c4:	dc800f17 	ldw	r18,60(sp)
    35c8:	dc400e17 	ldw	r17,56(sp)
    35cc:	008001c4 	movi	r2,7
    35d0:	94e5883a 	add	r18,r18,r19
    35d4:	8c400044 	addi	r17,r17,1
    35d8:	adc00015 	stw	r23,0(r21)
    35dc:	dc800f15 	stw	r18,60(sp)
    35e0:	acc00115 	stw	r19,4(r21)
    35e4:	dc400e15 	stw	r17,56(sp)
    35e8:	14428b16 	blt	r2,r17,4018 <___vfprintf_internal_r+0xbf4>
    35ec:	ad400204 	addi	r21,r21,8
    35f0:	d9014c17 	ldw	r4,1328(sp)
    35f4:	24c9883a 	add	r4,r4,r19
    35f8:	d9014c15 	stw	r4,1328(sp)
    35fc:	802f883a 	mov	r23,r16
    3600:	b8800007 	ldb	r2,0(r23)
    3604:	10013c26 	beq	r2,zero,3af8 <___vfprintf_internal_r+0x6d4>
    3608:	bdc00044 	addi	r23,r23,1
    360c:	d8000405 	stb	zero,16(sp)
    3610:	b8c00007 	ldb	r3,0(r23)
    3614:	04ffffc4 	movi	r19,-1
    3618:	d8014d15 	stw	zero,1332(sp)
    361c:	d8014b15 	stw	zero,1324(sp)
    3620:	d8c14e15 	stw	r3,1336(sp)
    3624:	bdc00044 	addi	r23,r23,1
    3628:	d9414e17 	ldw	r5,1336(sp)
    362c:	00801604 	movi	r2,88
    3630:	28fff804 	addi	r3,r5,-32
    3634:	10c06036 	bltu	r2,r3,37b8 <___vfprintf_internal_r+0x394>
    3638:	18c5883a 	add	r2,r3,r3
    363c:	1085883a 	add	r2,r2,r2
    3640:	00c00034 	movhi	r3,0
    3644:	18cd9504 	addi	r3,r3,13908
    3648:	10c5883a 	add	r2,r2,r3
    364c:	11000017 	ldw	r4,0(r2)
    3650:	2000683a 	jmp	r4
    3654:	000045c8 	cmpgei	zero,zero,279
    3658:	000037b8 	rdprs	zero,zero,222
    365c:	000037b8 	rdprs	zero,zero,222
    3660:	000045b4 	movhi	zero,278
    3664:	000037b8 	rdprs	zero,zero,222
    3668:	000037b8 	rdprs	zero,zero,222
    366c:	000037b8 	rdprs	zero,zero,222
    3670:	000037b8 	rdprs	zero,zero,222
    3674:	000037b8 	rdprs	zero,zero,222
    3678:	000037b8 	rdprs	zero,zero,222
    367c:	00004394 	movui	zero,270
    3680:	000045a4 	muli	zero,zero,278
    3684:	000037b8 	rdprs	zero,zero,222
    3688:	000043ac 	andhi	zero,zero,270
    368c:	0000464c 	andi	zero,zero,281
    3690:	000037b8 	rdprs	zero,zero,222
    3694:	00004638 	rdprs	zero,zero,280
    3698:	000045f4 	movhi	zero,279
    369c:	000045f4 	movhi	zero,279
    36a0:	000045f4 	movhi	zero,279
    36a4:	000045f4 	movhi	zero,279
    36a8:	000045f4 	movhi	zero,279
    36ac:	000045f4 	movhi	zero,279
    36b0:	000045f4 	movhi	zero,279
    36b4:	000045f4 	movhi	zero,279
    36b8:	000045f4 	movhi	zero,279
    36bc:	000037b8 	rdprs	zero,zero,222
    36c0:	000037b8 	rdprs	zero,zero,222
    36c4:	000037b8 	rdprs	zero,zero,222
    36c8:	000037b8 	rdprs	zero,zero,222
    36cc:	000037b8 	rdprs	zero,zero,222
    36d0:	000037b8 	rdprs	zero,zero,222
    36d4:	000037b8 	rdprs	zero,zero,222
    36d8:	000037b8 	rdprs	zero,zero,222
    36dc:	000037b8 	rdprs	zero,zero,222
    36e0:	000037b8 	rdprs	zero,zero,222
    36e4:	00003e10 	cmplti	zero,zero,248
    36e8:	0000447c 	xorhi	zero,zero,273
    36ec:	000037b8 	rdprs	zero,zero,222
    36f0:	0000447c 	xorhi	zero,zero,273
    36f4:	000037b8 	rdprs	zero,zero,222
    36f8:	000037b8 	rdprs	zero,zero,222
    36fc:	000037b8 	rdprs	zero,zero,222
    3700:	000037b8 	rdprs	zero,zero,222
    3704:	000045e0 	cmpeqi	zero,zero,279
    3708:	000037b8 	rdprs	zero,zero,222
    370c:	000037b8 	rdprs	zero,zero,222
    3710:	00003ec4 	movi	zero,251
    3714:	000037b8 	rdprs	zero,zero,222
    3718:	000037b8 	rdprs	zero,zero,222
    371c:	000037b8 	rdprs	zero,zero,222
    3720:	000037b8 	rdprs	zero,zero,222
    3724:	000037b8 	rdprs	zero,zero,222
    3728:	00003f10 	cmplti	zero,zero,252
    372c:	000037b8 	rdprs	zero,zero,222
    3730:	000037b8 	rdprs	zero,zero,222
    3734:	00004530 	cmpltui	zero,zero,276
    3738:	000037b8 	rdprs	zero,zero,222
    373c:	000037b8 	rdprs	zero,zero,222
    3740:	000037b8 	rdprs	zero,zero,222
    3744:	000037b8 	rdprs	zero,zero,222
    3748:	000037b8 	rdprs	zero,zero,222
    374c:	000037b8 	rdprs	zero,zero,222
    3750:	000037b8 	rdprs	zero,zero,222
    3754:	000037b8 	rdprs	zero,zero,222
    3758:	000037b8 	rdprs	zero,zero,222
    375c:	000037b8 	rdprs	zero,zero,222
    3760:	00004504 	movi	zero,276
    3764:	00003e1c 	xori	zero,zero,248
    3768:	0000447c 	xorhi	zero,zero,273
    376c:	0000447c 	xorhi	zero,zero,273
    3770:	0000447c 	xorhi	zero,zero,273
    3774:	00004468 	cmpgeui	zero,zero,273
    3778:	00003e1c 	xori	zero,zero,248
    377c:	000037b8 	rdprs	zero,zero,222
    3780:	000037b8 	rdprs	zero,zero,222
    3784:	000043f0 	cmpltui	zero,zero,271
    3788:	000037b8 	rdprs	zero,zero,222
    378c:	000043c0 	call	43c <main+0x274>
    3790:	00003ed0 	cmplti	zero,zero,251
    3794:	00004420 	cmpeqi	zero,zero,272
    3798:	0000440c 	andi	zero,zero,272
    379c:	000037b8 	rdprs	zero,zero,222
    37a0:	000046b4 	movhi	zero,282
    37a4:	000037b8 	rdprs	zero,zero,222
    37a8:	00003f1c 	xori	zero,zero,252
    37ac:	000037b8 	rdprs	zero,zero,222
    37b0:	000037b8 	rdprs	zero,zero,222
    37b4:	00004594 	movui	zero,278
    37b8:	d9014e17 	ldw	r4,1336(sp)
    37bc:	2000ce26 	beq	r4,zero,3af8 <___vfprintf_internal_r+0x6d4>
    37c0:	01400044 	movi	r5,1
    37c4:	d9801004 	addi	r6,sp,64
    37c8:	d9c14115 	stw	r7,1284(sp)
    37cc:	d9414615 	stw	r5,1304(sp)
    37d0:	d9814215 	stw	r6,1288(sp)
    37d4:	280f883a 	mov	r7,r5
    37d8:	d9001005 	stb	r4,64(sp)
    37dc:	d8000405 	stb	zero,16(sp)
    37e0:	d8014715 	stw	zero,1308(sp)
    37e4:	d8c14d17 	ldw	r3,1332(sp)
    37e8:	1880008c 	andi	r2,r3,2
    37ec:	1005003a 	cmpeq	r2,r2,zero
    37f0:	d8815115 	stw	r2,1348(sp)
    37f4:	1000031e 	bne	r2,zero,3804 <___vfprintf_internal_r+0x3e0>
    37f8:	d9014617 	ldw	r4,1304(sp)
    37fc:	21000084 	addi	r4,r4,2
    3800:	d9014615 	stw	r4,1304(sp)
    3804:	d9414d17 	ldw	r5,1332(sp)
    3808:	2940210c 	andi	r5,r5,132
    380c:	d9414f15 	stw	r5,1340(sp)
    3810:	28002d1e 	bne	r5,zero,38c8 <___vfprintf_internal_r+0x4a4>
    3814:	d9814b17 	ldw	r6,1324(sp)
    3818:	d8814617 	ldw	r2,1304(sp)
    381c:	30a1c83a 	sub	r16,r6,r2
    3820:	0400290e 	bge	zero,r16,38c8 <___vfprintf_internal_r+0x4a4>
    3824:	00800404 	movi	r2,16
    3828:	14045e0e 	bge	r2,r16,49a4 <___vfprintf_internal_r+0x1580>
    382c:	dc800f17 	ldw	r18,60(sp)
    3830:	dc400e17 	ldw	r17,56(sp)
    3834:	1027883a 	mov	r19,r2
    3838:	07000074 	movhi	fp,1
    383c:	e73bf904 	addi	fp,fp,-4124
    3840:	050001c4 	movi	r20,7
    3844:	00000306 	br	3854 <___vfprintf_internal_r+0x430>
    3848:	843ffc04 	addi	r16,r16,-16
    384c:	ad400204 	addi	r21,r21,8
    3850:	9c00130e 	bge	r19,r16,38a0 <___vfprintf_internal_r+0x47c>
    3854:	94800404 	addi	r18,r18,16
    3858:	8c400044 	addi	r17,r17,1
    385c:	af000015 	stw	fp,0(r21)
    3860:	acc00115 	stw	r19,4(r21)
    3864:	dc800f15 	stw	r18,60(sp)
    3868:	dc400e15 	stw	r17,56(sp)
    386c:	a47ff60e 	bge	r20,r17,3848 <___vfprintf_internal_r+0x424>
    3870:	d9015017 	ldw	r4,1344(sp)
    3874:	b00b883a 	mov	r5,r22
    3878:	d9800d04 	addi	r6,sp,52
    387c:	d9c15215 	stw	r7,1352(sp)
    3880:	00033cc0 	call	33cc <__sprint_r>
    3884:	d9c15217 	ldw	r7,1352(sp)
    3888:	10009e1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    388c:	843ffc04 	addi	r16,r16,-16
    3890:	dc800f17 	ldw	r18,60(sp)
    3894:	dc400e17 	ldw	r17,56(sp)
    3898:	dd401a04 	addi	r21,sp,104
    389c:	9c3fed16 	blt	r19,r16,3854 <___vfprintf_internal_r+0x430>
    38a0:	9425883a 	add	r18,r18,r16
    38a4:	8c400044 	addi	r17,r17,1
    38a8:	008001c4 	movi	r2,7
    38ac:	af000015 	stw	fp,0(r21)
    38b0:	ac000115 	stw	r16,4(r21)
    38b4:	dc800f15 	stw	r18,60(sp)
    38b8:	dc400e15 	stw	r17,56(sp)
    38bc:	1441f516 	blt	r2,r17,4094 <___vfprintf_internal_r+0xc70>
    38c0:	ad400204 	addi	r21,r21,8
    38c4:	00000206 	br	38d0 <___vfprintf_internal_r+0x4ac>
    38c8:	dc800f17 	ldw	r18,60(sp)
    38cc:	dc400e17 	ldw	r17,56(sp)
    38d0:	d8800407 	ldb	r2,16(sp)
    38d4:	10000b26 	beq	r2,zero,3904 <___vfprintf_internal_r+0x4e0>
    38d8:	00800044 	movi	r2,1
    38dc:	94800044 	addi	r18,r18,1
    38e0:	8c400044 	addi	r17,r17,1
    38e4:	a8800115 	stw	r2,4(r21)
    38e8:	d8c00404 	addi	r3,sp,16
    38ec:	008001c4 	movi	r2,7
    38f0:	a8c00015 	stw	r3,0(r21)
    38f4:	dc800f15 	stw	r18,60(sp)
    38f8:	dc400e15 	stw	r17,56(sp)
    38fc:	1441da16 	blt	r2,r17,4068 <___vfprintf_internal_r+0xc44>
    3900:	ad400204 	addi	r21,r21,8
    3904:	d9015117 	ldw	r4,1348(sp)
    3908:	20000b1e 	bne	r4,zero,3938 <___vfprintf_internal_r+0x514>
    390c:	d8800504 	addi	r2,sp,20
    3910:	94800084 	addi	r18,r18,2
    3914:	8c400044 	addi	r17,r17,1
    3918:	a8800015 	stw	r2,0(r21)
    391c:	00c00084 	movi	r3,2
    3920:	008001c4 	movi	r2,7
    3924:	a8c00115 	stw	r3,4(r21)
    3928:	dc800f15 	stw	r18,60(sp)
    392c:	dc400e15 	stw	r17,56(sp)
    3930:	1441c216 	blt	r2,r17,403c <___vfprintf_internal_r+0xc18>
    3934:	ad400204 	addi	r21,r21,8
    3938:	d9414f17 	ldw	r5,1340(sp)
    393c:	00802004 	movi	r2,128
    3940:	2880b126 	beq	r5,r2,3c08 <___vfprintf_internal_r+0x7e4>
    3944:	d8c14717 	ldw	r3,1308(sp)
    3948:	19e1c83a 	sub	r16,r3,r7
    394c:	0400260e 	bge	zero,r16,39e8 <___vfprintf_internal_r+0x5c4>
    3950:	00800404 	movi	r2,16
    3954:	1403cf0e 	bge	r2,r16,4894 <___vfprintf_internal_r+0x1470>
    3958:	1027883a 	mov	r19,r2
    395c:	07000074 	movhi	fp,1
    3960:	e73bf504 	addi	fp,fp,-4140
    3964:	050001c4 	movi	r20,7
    3968:	00000306 	br	3978 <___vfprintf_internal_r+0x554>
    396c:	843ffc04 	addi	r16,r16,-16
    3970:	ad400204 	addi	r21,r21,8
    3974:	9c00130e 	bge	r19,r16,39c4 <___vfprintf_internal_r+0x5a0>
    3978:	94800404 	addi	r18,r18,16
    397c:	8c400044 	addi	r17,r17,1
    3980:	af000015 	stw	fp,0(r21)
    3984:	acc00115 	stw	r19,4(r21)
    3988:	dc800f15 	stw	r18,60(sp)
    398c:	dc400e15 	stw	r17,56(sp)
    3990:	a47ff60e 	bge	r20,r17,396c <___vfprintf_internal_r+0x548>
    3994:	d9015017 	ldw	r4,1344(sp)
    3998:	b00b883a 	mov	r5,r22
    399c:	d9800d04 	addi	r6,sp,52
    39a0:	d9c15215 	stw	r7,1352(sp)
    39a4:	00033cc0 	call	33cc <__sprint_r>
    39a8:	d9c15217 	ldw	r7,1352(sp)
    39ac:	1000551e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    39b0:	843ffc04 	addi	r16,r16,-16
    39b4:	dc800f17 	ldw	r18,60(sp)
    39b8:	dc400e17 	ldw	r17,56(sp)
    39bc:	dd401a04 	addi	r21,sp,104
    39c0:	9c3fed16 	blt	r19,r16,3978 <___vfprintf_internal_r+0x554>
    39c4:	9425883a 	add	r18,r18,r16
    39c8:	8c400044 	addi	r17,r17,1
    39cc:	008001c4 	movi	r2,7
    39d0:	af000015 	stw	fp,0(r21)
    39d4:	ac000115 	stw	r16,4(r21)
    39d8:	dc800f15 	stw	r18,60(sp)
    39dc:	dc400e15 	stw	r17,56(sp)
    39e0:	14418216 	blt	r2,r17,3fec <___vfprintf_internal_r+0xbc8>
    39e4:	ad400204 	addi	r21,r21,8
    39e8:	d9014d17 	ldw	r4,1332(sp)
    39ec:	2080400c 	andi	r2,r4,256
    39f0:	10004a1e 	bne	r2,zero,3b1c <___vfprintf_internal_r+0x6f8>
    39f4:	d9414217 	ldw	r5,1288(sp)
    39f8:	91e5883a 	add	r18,r18,r7
    39fc:	8c400044 	addi	r17,r17,1
    3a00:	008001c4 	movi	r2,7
    3a04:	a9400015 	stw	r5,0(r21)
    3a08:	a9c00115 	stw	r7,4(r21)
    3a0c:	dc800f15 	stw	r18,60(sp)
    3a10:	dc400e15 	stw	r17,56(sp)
    3a14:	14416716 	blt	r2,r17,3fb4 <___vfprintf_internal_r+0xb90>
    3a18:	a8c00204 	addi	r3,r21,8
    3a1c:	d9814d17 	ldw	r6,1332(sp)
    3a20:	3080010c 	andi	r2,r6,4
    3a24:	10002826 	beq	r2,zero,3ac8 <___vfprintf_internal_r+0x6a4>
    3a28:	d8814b17 	ldw	r2,1324(sp)
    3a2c:	d9014617 	ldw	r4,1304(sp)
    3a30:	1121c83a 	sub	r16,r2,r4
    3a34:	0400240e 	bge	zero,r16,3ac8 <___vfprintf_internal_r+0x6a4>
    3a38:	00800404 	movi	r2,16
    3a3c:	1404550e 	bge	r2,r16,4b94 <___vfprintf_internal_r+0x1770>
    3a40:	dc400e17 	ldw	r17,56(sp)
    3a44:	1027883a 	mov	r19,r2
    3a48:	07000074 	movhi	fp,1
    3a4c:	e73bf904 	addi	fp,fp,-4124
    3a50:	050001c4 	movi	r20,7
    3a54:	00000306 	br	3a64 <___vfprintf_internal_r+0x640>
    3a58:	843ffc04 	addi	r16,r16,-16
    3a5c:	18c00204 	addi	r3,r3,8
    3a60:	9c00110e 	bge	r19,r16,3aa8 <___vfprintf_internal_r+0x684>
    3a64:	94800404 	addi	r18,r18,16
    3a68:	8c400044 	addi	r17,r17,1
    3a6c:	1f000015 	stw	fp,0(r3)
    3a70:	1cc00115 	stw	r19,4(r3)
    3a74:	dc800f15 	stw	r18,60(sp)
    3a78:	dc400e15 	stw	r17,56(sp)
    3a7c:	a47ff60e 	bge	r20,r17,3a58 <___vfprintf_internal_r+0x634>
    3a80:	d9015017 	ldw	r4,1344(sp)
    3a84:	b00b883a 	mov	r5,r22
    3a88:	d9800d04 	addi	r6,sp,52
    3a8c:	00033cc0 	call	33cc <__sprint_r>
    3a90:	10001c1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    3a94:	843ffc04 	addi	r16,r16,-16
    3a98:	dc800f17 	ldw	r18,60(sp)
    3a9c:	dc400e17 	ldw	r17,56(sp)
    3aa0:	d8c01a04 	addi	r3,sp,104
    3aa4:	9c3fef16 	blt	r19,r16,3a64 <___vfprintf_internal_r+0x640>
    3aa8:	9425883a 	add	r18,r18,r16
    3aac:	8c400044 	addi	r17,r17,1
    3ab0:	008001c4 	movi	r2,7
    3ab4:	1f000015 	stw	fp,0(r3)
    3ab8:	1c000115 	stw	r16,4(r3)
    3abc:	dc800f15 	stw	r18,60(sp)
    3ac0:	dc400e15 	stw	r17,56(sp)
    3ac4:	1440cb16 	blt	r2,r17,3df4 <___vfprintf_internal_r+0x9d0>
    3ac8:	d8814b17 	ldw	r2,1324(sp)
    3acc:	d9414617 	ldw	r5,1304(sp)
    3ad0:	1140010e 	bge	r2,r5,3ad8 <___vfprintf_internal_r+0x6b4>
    3ad4:	2805883a 	mov	r2,r5
    3ad8:	d9814c17 	ldw	r6,1328(sp)
    3adc:	308d883a 	add	r6,r6,r2
    3ae0:	d9814c15 	stw	r6,1328(sp)
    3ae4:	90013b1e 	bne	r18,zero,3fd4 <___vfprintf_internal_r+0xbb0>
    3ae8:	d9c14117 	ldw	r7,1284(sp)
    3aec:	dd401a04 	addi	r21,sp,104
    3af0:	d8000e15 	stw	zero,56(sp)
    3af4:	003ea706 	br	3594 <___vfprintf_internal_r+0x170>
    3af8:	d8800f17 	ldw	r2,60(sp)
    3afc:	1005451e 	bne	r2,zero,5014 <___vfprintf_internal_r+0x1bf0>
    3b00:	d8000e15 	stw	zero,56(sp)
    3b04:	b080030b 	ldhu	r2,12(r22)
    3b08:	1080100c 	andi	r2,r2,64
    3b0c:	103e8726 	beq	r2,zero,352c <___vfprintf_internal_r+0x108>
    3b10:	00bfffc4 	movi	r2,-1
    3b14:	d8814c15 	stw	r2,1328(sp)
    3b18:	003e8406 	br	352c <___vfprintf_internal_r+0x108>
    3b1c:	d9814e17 	ldw	r6,1336(sp)
    3b20:	00801944 	movi	r2,101
    3b24:	11806e16 	blt	r2,r6,3ce0 <___vfprintf_internal_r+0x8bc>
    3b28:	d9414817 	ldw	r5,1312(sp)
    3b2c:	00c00044 	movi	r3,1
    3b30:	1943490e 	bge	r3,r5,4858 <___vfprintf_internal_r+0x1434>
    3b34:	d8814217 	ldw	r2,1288(sp)
    3b38:	94800044 	addi	r18,r18,1
    3b3c:	8c400044 	addi	r17,r17,1
    3b40:	a8800015 	stw	r2,0(r21)
    3b44:	008001c4 	movi	r2,7
    3b48:	a8c00115 	stw	r3,4(r21)
    3b4c:	dc800f15 	stw	r18,60(sp)
    3b50:	dc400e15 	stw	r17,56(sp)
    3b54:	1441ca16 	blt	r2,r17,4280 <___vfprintf_internal_r+0xe5c>
    3b58:	a8c00204 	addi	r3,r21,8
    3b5c:	d9014a17 	ldw	r4,1320(sp)
    3b60:	00800044 	movi	r2,1
    3b64:	94800044 	addi	r18,r18,1
    3b68:	8c400044 	addi	r17,r17,1
    3b6c:	18800115 	stw	r2,4(r3)
    3b70:	008001c4 	movi	r2,7
    3b74:	19000015 	stw	r4,0(r3)
    3b78:	dc800f15 	stw	r18,60(sp)
    3b7c:	dc400e15 	stw	r17,56(sp)
    3b80:	1441b616 	blt	r2,r17,425c <___vfprintf_internal_r+0xe38>
    3b84:	1cc00204 	addi	r19,r3,8
    3b88:	d9014317 	ldw	r4,1292(sp)
    3b8c:	d9414417 	ldw	r5,1296(sp)
    3b90:	000d883a 	mov	r6,zero
    3b94:	000f883a 	mov	r7,zero
    3b98:	000c98c0 	call	c98c <__nedf2>
    3b9c:	10017426 	beq	r2,zero,4170 <___vfprintf_internal_r+0xd4c>
    3ba0:	d9414817 	ldw	r5,1312(sp)
    3ba4:	d9814217 	ldw	r6,1288(sp)
    3ba8:	8c400044 	addi	r17,r17,1
    3bac:	2c85883a 	add	r2,r5,r18
    3bb0:	14bfffc4 	addi	r18,r2,-1
    3bb4:	28bfffc4 	addi	r2,r5,-1
    3bb8:	30c00044 	addi	r3,r6,1
    3bbc:	98800115 	stw	r2,4(r19)
    3bc0:	008001c4 	movi	r2,7
    3bc4:	98c00015 	stw	r3,0(r19)
    3bc8:	dc800f15 	stw	r18,60(sp)
    3bcc:	dc400e15 	stw	r17,56(sp)
    3bd0:	14418e16 	blt	r2,r17,420c <___vfprintf_internal_r+0xde8>
    3bd4:	9cc00204 	addi	r19,r19,8
    3bd8:	d9414917 	ldw	r5,1316(sp)
    3bdc:	d8800904 	addi	r2,sp,36
    3be0:	8c400044 	addi	r17,r17,1
    3be4:	9165883a 	add	r18,r18,r5
    3be8:	98800015 	stw	r2,0(r19)
    3bec:	008001c4 	movi	r2,7
    3bf0:	99400115 	stw	r5,4(r19)
    3bf4:	dc800f15 	stw	r18,60(sp)
    3bf8:	dc400e15 	stw	r17,56(sp)
    3bfc:	1440ed16 	blt	r2,r17,3fb4 <___vfprintf_internal_r+0xb90>
    3c00:	98c00204 	addi	r3,r19,8
    3c04:	003f8506 	br	3a1c <___vfprintf_internal_r+0x5f8>
    3c08:	d9814b17 	ldw	r6,1324(sp)
    3c0c:	d8814617 	ldw	r2,1304(sp)
    3c10:	30a1c83a 	sub	r16,r6,r2
    3c14:	043f4b0e 	bge	zero,r16,3944 <___vfprintf_internal_r+0x520>
    3c18:	00800404 	movi	r2,16
    3c1c:	14043a0e 	bge	r2,r16,4d08 <___vfprintf_internal_r+0x18e4>
    3c20:	1027883a 	mov	r19,r2
    3c24:	07000074 	movhi	fp,1
    3c28:	e73bf504 	addi	fp,fp,-4140
    3c2c:	050001c4 	movi	r20,7
    3c30:	00000306 	br	3c40 <___vfprintf_internal_r+0x81c>
    3c34:	843ffc04 	addi	r16,r16,-16
    3c38:	ad400204 	addi	r21,r21,8
    3c3c:	9c00130e 	bge	r19,r16,3c8c <___vfprintf_internal_r+0x868>
    3c40:	94800404 	addi	r18,r18,16
    3c44:	8c400044 	addi	r17,r17,1
    3c48:	af000015 	stw	fp,0(r21)
    3c4c:	acc00115 	stw	r19,4(r21)
    3c50:	dc800f15 	stw	r18,60(sp)
    3c54:	dc400e15 	stw	r17,56(sp)
    3c58:	a47ff60e 	bge	r20,r17,3c34 <___vfprintf_internal_r+0x810>
    3c5c:	d9015017 	ldw	r4,1344(sp)
    3c60:	b00b883a 	mov	r5,r22
    3c64:	d9800d04 	addi	r6,sp,52
    3c68:	d9c15215 	stw	r7,1352(sp)
    3c6c:	00033cc0 	call	33cc <__sprint_r>
    3c70:	d9c15217 	ldw	r7,1352(sp)
    3c74:	103fa31e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    3c78:	843ffc04 	addi	r16,r16,-16
    3c7c:	dc800f17 	ldw	r18,60(sp)
    3c80:	dc400e17 	ldw	r17,56(sp)
    3c84:	dd401a04 	addi	r21,sp,104
    3c88:	9c3fed16 	blt	r19,r16,3c40 <___vfprintf_internal_r+0x81c>
    3c8c:	9425883a 	add	r18,r18,r16
    3c90:	8c400044 	addi	r17,r17,1
    3c94:	008001c4 	movi	r2,7
    3c98:	af000015 	stw	fp,0(r21)
    3c9c:	ac000115 	stw	r16,4(r21)
    3ca0:	dc800f15 	stw	r18,60(sp)
    3ca4:	dc400e15 	stw	r17,56(sp)
    3ca8:	14416116 	blt	r2,r17,4230 <___vfprintf_internal_r+0xe0c>
    3cac:	ad400204 	addi	r21,r21,8
    3cb0:	003f2406 	br	3944 <___vfprintf_internal_r+0x520>
    3cb4:	d9015017 	ldw	r4,1344(sp)
    3cb8:	0006ed80 	call	6ed8 <__sinit>
    3cbc:	d9c15217 	ldw	r7,1352(sp)
    3cc0:	003def06 	br	3480 <___vfprintf_internal_r+0x5c>
    3cc4:	d9015017 	ldw	r4,1344(sp)
    3cc8:	b00b883a 	mov	r5,r22
    3ccc:	d9c15215 	stw	r7,1352(sp)
    3cd0:	000530c0 	call	530c <__swsetup_r>
    3cd4:	d9c15217 	ldw	r7,1352(sp)
    3cd8:	103dee26 	beq	r2,zero,3494 <___vfprintf_internal_r+0x70>
    3cdc:	003f8c06 	br	3b10 <___vfprintf_internal_r+0x6ec>
    3ce0:	d9014317 	ldw	r4,1292(sp)
    3ce4:	d9414417 	ldw	r5,1296(sp)
    3ce8:	000d883a 	mov	r6,zero
    3cec:	000f883a 	mov	r7,zero
    3cf0:	000c9040 	call	c904 <__eqdf2>
    3cf4:	1000f21e 	bne	r2,zero,40c0 <___vfprintf_internal_r+0xc9c>
    3cf8:	00800074 	movhi	r2,1
    3cfc:	10bbf404 	addi	r2,r2,-4144
    3d00:	94800044 	addi	r18,r18,1
    3d04:	8c400044 	addi	r17,r17,1
    3d08:	a8800015 	stw	r2,0(r21)
    3d0c:	00c00044 	movi	r3,1
    3d10:	008001c4 	movi	r2,7
    3d14:	a8c00115 	stw	r3,4(r21)
    3d18:	dc800f15 	stw	r18,60(sp)
    3d1c:	dc400e15 	stw	r17,56(sp)
    3d20:	14430016 	blt	r2,r17,4924 <___vfprintf_internal_r+0x1500>
    3d24:	a8c00204 	addi	r3,r21,8
    3d28:	d8800617 	ldw	r2,24(sp)
    3d2c:	d9014817 	ldw	r4,1312(sp)
    3d30:	11015c0e 	bge	r2,r4,42a4 <___vfprintf_internal_r+0xe80>
    3d34:	dc400e17 	ldw	r17,56(sp)
    3d38:	d9814a17 	ldw	r6,1320(sp)
    3d3c:	00800044 	movi	r2,1
    3d40:	94800044 	addi	r18,r18,1
    3d44:	8c400044 	addi	r17,r17,1
    3d48:	18800115 	stw	r2,4(r3)
    3d4c:	008001c4 	movi	r2,7
    3d50:	19800015 	stw	r6,0(r3)
    3d54:	dc800f15 	stw	r18,60(sp)
    3d58:	dc400e15 	stw	r17,56(sp)
    3d5c:	14431616 	blt	r2,r17,49b8 <___vfprintf_internal_r+0x1594>
    3d60:	18c00204 	addi	r3,r3,8
    3d64:	d8814817 	ldw	r2,1312(sp)
    3d68:	143fffc4 	addi	r16,r2,-1
    3d6c:	043f2b0e 	bge	zero,r16,3a1c <___vfprintf_internal_r+0x5f8>
    3d70:	00800404 	movi	r2,16
    3d74:	1402a80e 	bge	r2,r16,4818 <___vfprintf_internal_r+0x13f4>
    3d78:	dc400e17 	ldw	r17,56(sp)
    3d7c:	1027883a 	mov	r19,r2
    3d80:	07000074 	movhi	fp,1
    3d84:	e73bf504 	addi	fp,fp,-4140
    3d88:	050001c4 	movi	r20,7
    3d8c:	00000306 	br	3d9c <___vfprintf_internal_r+0x978>
    3d90:	18c00204 	addi	r3,r3,8
    3d94:	843ffc04 	addi	r16,r16,-16
    3d98:	9c02a20e 	bge	r19,r16,4824 <___vfprintf_internal_r+0x1400>
    3d9c:	94800404 	addi	r18,r18,16
    3da0:	8c400044 	addi	r17,r17,1
    3da4:	1f000015 	stw	fp,0(r3)
    3da8:	1cc00115 	stw	r19,4(r3)
    3dac:	dc800f15 	stw	r18,60(sp)
    3db0:	dc400e15 	stw	r17,56(sp)
    3db4:	a47ff60e 	bge	r20,r17,3d90 <___vfprintf_internal_r+0x96c>
    3db8:	d9015017 	ldw	r4,1344(sp)
    3dbc:	b00b883a 	mov	r5,r22
    3dc0:	d9800d04 	addi	r6,sp,52
    3dc4:	00033cc0 	call	33cc <__sprint_r>
    3dc8:	103f4e1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    3dcc:	dc800f17 	ldw	r18,60(sp)
    3dd0:	dc400e17 	ldw	r17,56(sp)
    3dd4:	d8c01a04 	addi	r3,sp,104
    3dd8:	003fee06 	br	3d94 <___vfprintf_internal_r+0x970>
    3ddc:	d8802d0b 	ldhu	r2,180(sp)
    3de0:	00ffffc4 	movi	r3,-1
    3de4:	d8c14c15 	stw	r3,1328(sp)
    3de8:	1080100c 	andi	r2,r2,64
    3dec:	103dcc1e 	bne	r2,zero,3520 <___vfprintf_internal_r+0xfc>
    3df0:	003dce06 	br	352c <___vfprintf_internal_r+0x108>
    3df4:	d9015017 	ldw	r4,1344(sp)
    3df8:	b00b883a 	mov	r5,r22
    3dfc:	d9800d04 	addi	r6,sp,52
    3e00:	00033cc0 	call	33cc <__sprint_r>
    3e04:	103f3f1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    3e08:	dc800f17 	ldw	r18,60(sp)
    3e0c:	003f2e06 	br	3ac8 <___vfprintf_internal_r+0x6a4>
    3e10:	d9414d17 	ldw	r5,1332(sp)
    3e14:	29400414 	ori	r5,r5,16
    3e18:	d9414d15 	stw	r5,1332(sp)
    3e1c:	d9814d17 	ldw	r6,1332(sp)
    3e20:	3080080c 	andi	r2,r6,32
    3e24:	10014f1e 	bne	r2,zero,4364 <___vfprintf_internal_r+0xf40>
    3e28:	d8c14d17 	ldw	r3,1332(sp)
    3e2c:	1880040c 	andi	r2,r3,16
    3e30:	1002f01e 	bne	r2,zero,49f4 <___vfprintf_internal_r+0x15d0>
    3e34:	d9014d17 	ldw	r4,1332(sp)
    3e38:	2080100c 	andi	r2,r4,64
    3e3c:	1002ed26 	beq	r2,zero,49f4 <___vfprintf_internal_r+0x15d0>
    3e40:	3880000f 	ldh	r2,0(r7)
    3e44:	39c00104 	addi	r7,r7,4
    3e48:	d9c14115 	stw	r7,1284(sp)
    3e4c:	1023d7fa 	srai	r17,r2,31
    3e50:	1021883a 	mov	r16,r2
    3e54:	88037816 	blt	r17,zero,4c38 <___vfprintf_internal_r+0x1814>
    3e58:	01000044 	movi	r4,1
    3e5c:	98000416 	blt	r19,zero,3e70 <___vfprintf_internal_r+0xa4c>
    3e60:	d8c14d17 	ldw	r3,1332(sp)
    3e64:	00bfdfc4 	movi	r2,-129
    3e68:	1886703a 	and	r3,r3,r2
    3e6c:	d8c14d15 	stw	r3,1332(sp)
    3e70:	8444b03a 	or	r2,r16,r17
    3e74:	10022c1e 	bne	r2,zero,4728 <___vfprintf_internal_r+0x1304>
    3e78:	98022b1e 	bne	r19,zero,4728 <___vfprintf_internal_r+0x1304>
    3e7c:	20803fcc 	andi	r2,r4,255
    3e80:	1002a126 	beq	r2,zero,4908 <___vfprintf_internal_r+0x14e4>
    3e84:	d8c01a04 	addi	r3,sp,104
    3e88:	dd001004 	addi	r20,sp,64
    3e8c:	d8c14215 	stw	r3,1288(sp)
    3e90:	d8c14217 	ldw	r3,1288(sp)
    3e94:	dcc14615 	stw	r19,1304(sp)
    3e98:	a0c5c83a 	sub	r2,r20,r3
    3e9c:	11c00a04 	addi	r7,r2,40
    3ea0:	99c0010e 	bge	r19,r7,3ea8 <___vfprintf_internal_r+0xa84>
    3ea4:	d9c14615 	stw	r7,1304(sp)
    3ea8:	dcc14715 	stw	r19,1308(sp)
    3eac:	d8800407 	ldb	r2,16(sp)
    3eb0:	103e4c26 	beq	r2,zero,37e4 <___vfprintf_internal_r+0x3c0>
    3eb4:	d8814617 	ldw	r2,1304(sp)
    3eb8:	10800044 	addi	r2,r2,1
    3ebc:	d8814615 	stw	r2,1304(sp)
    3ec0:	003e4806 	br	37e4 <___vfprintf_internal_r+0x3c0>
    3ec4:	d9814d17 	ldw	r6,1332(sp)
    3ec8:	31800414 	ori	r6,r6,16
    3ecc:	d9814d15 	stw	r6,1332(sp)
    3ed0:	d8c14d17 	ldw	r3,1332(sp)
    3ed4:	1880080c 	andi	r2,r3,32
    3ed8:	1001271e 	bne	r2,zero,4378 <___vfprintf_internal_r+0xf54>
    3edc:	d9414d17 	ldw	r5,1332(sp)
    3ee0:	2880040c 	andi	r2,r5,16
    3ee4:	1002bc1e 	bne	r2,zero,49d8 <___vfprintf_internal_r+0x15b4>
    3ee8:	d9814d17 	ldw	r6,1332(sp)
    3eec:	3080100c 	andi	r2,r6,64
    3ef0:	1002b926 	beq	r2,zero,49d8 <___vfprintf_internal_r+0x15b4>
    3ef4:	3c00000b 	ldhu	r16,0(r7)
    3ef8:	0009883a 	mov	r4,zero
    3efc:	39c00104 	addi	r7,r7,4
    3f00:	0023883a 	mov	r17,zero
    3f04:	d9c14115 	stw	r7,1284(sp)
    3f08:	d8000405 	stb	zero,16(sp)
    3f0c:	003fd306 	br	3e5c <___vfprintf_internal_r+0xa38>
    3f10:	d9014d17 	ldw	r4,1332(sp)
    3f14:	21000414 	ori	r4,r4,16
    3f18:	d9014d15 	stw	r4,1332(sp)
    3f1c:	d9414d17 	ldw	r5,1332(sp)
    3f20:	2880080c 	andi	r2,r5,32
    3f24:	1001081e 	bne	r2,zero,4348 <___vfprintf_internal_r+0xf24>
    3f28:	d8c14d17 	ldw	r3,1332(sp)
    3f2c:	1880040c 	andi	r2,r3,16
    3f30:	1002b61e 	bne	r2,zero,4a0c <___vfprintf_internal_r+0x15e8>
    3f34:	d9014d17 	ldw	r4,1332(sp)
    3f38:	2080100c 	andi	r2,r4,64
    3f3c:	1002b326 	beq	r2,zero,4a0c <___vfprintf_internal_r+0x15e8>
    3f40:	3c00000b 	ldhu	r16,0(r7)
    3f44:	01000044 	movi	r4,1
    3f48:	39c00104 	addi	r7,r7,4
    3f4c:	0023883a 	mov	r17,zero
    3f50:	d9c14115 	stw	r7,1284(sp)
    3f54:	d8000405 	stb	zero,16(sp)
    3f58:	003fc006 	br	3e5c <___vfprintf_internal_r+0xa38>
    3f5c:	d9015017 	ldw	r4,1344(sp)
    3f60:	b00b883a 	mov	r5,r22
    3f64:	d9800d04 	addi	r6,sp,52
    3f68:	00033cc0 	call	33cc <__sprint_r>
    3f6c:	103ee51e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    3f70:	dc800f17 	ldw	r18,60(sp)
    3f74:	d8c01a04 	addi	r3,sp,104
    3f78:	d9814d17 	ldw	r6,1332(sp)
    3f7c:	3080004c 	andi	r2,r6,1
    3f80:	1005003a 	cmpeq	r2,r2,zero
    3f84:	103ea51e 	bne	r2,zero,3a1c <___vfprintf_internal_r+0x5f8>
    3f88:	00800044 	movi	r2,1
    3f8c:	dc400e17 	ldw	r17,56(sp)
    3f90:	18800115 	stw	r2,4(r3)
    3f94:	d8814a17 	ldw	r2,1320(sp)
    3f98:	94800044 	addi	r18,r18,1
    3f9c:	8c400044 	addi	r17,r17,1
    3fa0:	18800015 	stw	r2,0(r3)
    3fa4:	008001c4 	movi	r2,7
    3fa8:	dc800f15 	stw	r18,60(sp)
    3fac:	dc400e15 	stw	r17,56(sp)
    3fb0:	1442240e 	bge	r2,r17,4844 <___vfprintf_internal_r+0x1420>
    3fb4:	d9015017 	ldw	r4,1344(sp)
    3fb8:	b00b883a 	mov	r5,r22
    3fbc:	d9800d04 	addi	r6,sp,52
    3fc0:	00033cc0 	call	33cc <__sprint_r>
    3fc4:	103ecf1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    3fc8:	dc800f17 	ldw	r18,60(sp)
    3fcc:	d8c01a04 	addi	r3,sp,104
    3fd0:	003e9206 	br	3a1c <___vfprintf_internal_r+0x5f8>
    3fd4:	d9015017 	ldw	r4,1344(sp)
    3fd8:	b00b883a 	mov	r5,r22
    3fdc:	d9800d04 	addi	r6,sp,52
    3fe0:	00033cc0 	call	33cc <__sprint_r>
    3fe4:	103ec026 	beq	r2,zero,3ae8 <___vfprintf_internal_r+0x6c4>
    3fe8:	003ec606 	br	3b04 <___vfprintf_internal_r+0x6e0>
    3fec:	d9015017 	ldw	r4,1344(sp)
    3ff0:	b00b883a 	mov	r5,r22
    3ff4:	d9800d04 	addi	r6,sp,52
    3ff8:	d9c15215 	stw	r7,1352(sp)
    3ffc:	00033cc0 	call	33cc <__sprint_r>
    4000:	d9c15217 	ldw	r7,1352(sp)
    4004:	103ebf1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4008:	dc800f17 	ldw	r18,60(sp)
    400c:	dc400e17 	ldw	r17,56(sp)
    4010:	dd401a04 	addi	r21,sp,104
    4014:	003e7406 	br	39e8 <___vfprintf_internal_r+0x5c4>
    4018:	d9015017 	ldw	r4,1344(sp)
    401c:	b00b883a 	mov	r5,r22
    4020:	d9800d04 	addi	r6,sp,52
    4024:	d9c15215 	stw	r7,1352(sp)
    4028:	00033cc0 	call	33cc <__sprint_r>
    402c:	d9c15217 	ldw	r7,1352(sp)
    4030:	103eb41e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4034:	dd401a04 	addi	r21,sp,104
    4038:	003d6d06 	br	35f0 <___vfprintf_internal_r+0x1cc>
    403c:	d9015017 	ldw	r4,1344(sp)
    4040:	b00b883a 	mov	r5,r22
    4044:	d9800d04 	addi	r6,sp,52
    4048:	d9c15215 	stw	r7,1352(sp)
    404c:	00033cc0 	call	33cc <__sprint_r>
    4050:	d9c15217 	ldw	r7,1352(sp)
    4054:	103eab1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4058:	dc800f17 	ldw	r18,60(sp)
    405c:	dc400e17 	ldw	r17,56(sp)
    4060:	dd401a04 	addi	r21,sp,104
    4064:	003e3406 	br	3938 <___vfprintf_internal_r+0x514>
    4068:	d9015017 	ldw	r4,1344(sp)
    406c:	b00b883a 	mov	r5,r22
    4070:	d9800d04 	addi	r6,sp,52
    4074:	d9c15215 	stw	r7,1352(sp)
    4078:	00033cc0 	call	33cc <__sprint_r>
    407c:	d9c15217 	ldw	r7,1352(sp)
    4080:	103ea01e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4084:	dc800f17 	ldw	r18,60(sp)
    4088:	dc400e17 	ldw	r17,56(sp)
    408c:	dd401a04 	addi	r21,sp,104
    4090:	003e1c06 	br	3904 <___vfprintf_internal_r+0x4e0>
    4094:	d9015017 	ldw	r4,1344(sp)
    4098:	b00b883a 	mov	r5,r22
    409c:	d9800d04 	addi	r6,sp,52
    40a0:	d9c15215 	stw	r7,1352(sp)
    40a4:	00033cc0 	call	33cc <__sprint_r>
    40a8:	d9c15217 	ldw	r7,1352(sp)
    40ac:	103e951e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    40b0:	dc800f17 	ldw	r18,60(sp)
    40b4:	dc400e17 	ldw	r17,56(sp)
    40b8:	dd401a04 	addi	r21,sp,104
    40bc:	003e0406 	br	38d0 <___vfprintf_internal_r+0x4ac>
    40c0:	d9000617 	ldw	r4,24(sp)
    40c4:	0102580e 	bge	zero,r4,4a28 <___vfprintf_internal_r+0x1604>
    40c8:	d9814817 	ldw	r6,1312(sp)
    40cc:	21807a16 	blt	r4,r6,42b8 <___vfprintf_internal_r+0xe94>
    40d0:	d8814217 	ldw	r2,1288(sp)
    40d4:	91a5883a 	add	r18,r18,r6
    40d8:	8c400044 	addi	r17,r17,1
    40dc:	a8800015 	stw	r2,0(r21)
    40e0:	008001c4 	movi	r2,7
    40e4:	a9800115 	stw	r6,4(r21)
    40e8:	dc800f15 	stw	r18,60(sp)
    40ec:	dc400e15 	stw	r17,56(sp)
    40f0:	1442fc16 	blt	r2,r17,4ce4 <___vfprintf_internal_r+0x18c0>
    40f4:	a8c00204 	addi	r3,r21,8
    40f8:	d9414817 	ldw	r5,1312(sp)
    40fc:	2161c83a 	sub	r16,r4,r5
    4100:	043f9d0e 	bge	zero,r16,3f78 <___vfprintf_internal_r+0xb54>
    4104:	00800404 	movi	r2,16
    4108:	1402190e 	bge	r2,r16,4970 <___vfprintf_internal_r+0x154c>
    410c:	dc400e17 	ldw	r17,56(sp)
    4110:	1027883a 	mov	r19,r2
    4114:	07000074 	movhi	fp,1
    4118:	e73bf504 	addi	fp,fp,-4140
    411c:	050001c4 	movi	r20,7
    4120:	00000306 	br	4130 <___vfprintf_internal_r+0xd0c>
    4124:	18c00204 	addi	r3,r3,8
    4128:	843ffc04 	addi	r16,r16,-16
    412c:	9c02130e 	bge	r19,r16,497c <___vfprintf_internal_r+0x1558>
    4130:	94800404 	addi	r18,r18,16
    4134:	8c400044 	addi	r17,r17,1
    4138:	1f000015 	stw	fp,0(r3)
    413c:	1cc00115 	stw	r19,4(r3)
    4140:	dc800f15 	stw	r18,60(sp)
    4144:	dc400e15 	stw	r17,56(sp)
    4148:	a47ff60e 	bge	r20,r17,4124 <___vfprintf_internal_r+0xd00>
    414c:	d9015017 	ldw	r4,1344(sp)
    4150:	b00b883a 	mov	r5,r22
    4154:	d9800d04 	addi	r6,sp,52
    4158:	00033cc0 	call	33cc <__sprint_r>
    415c:	103e691e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4160:	dc800f17 	ldw	r18,60(sp)
    4164:	dc400e17 	ldw	r17,56(sp)
    4168:	d8c01a04 	addi	r3,sp,104
    416c:	003fee06 	br	4128 <___vfprintf_internal_r+0xd04>
    4170:	d8814817 	ldw	r2,1312(sp)
    4174:	143fffc4 	addi	r16,r2,-1
    4178:	043e970e 	bge	zero,r16,3bd8 <___vfprintf_internal_r+0x7b4>
    417c:	00800404 	movi	r2,16
    4180:	1400180e 	bge	r2,r16,41e4 <___vfprintf_internal_r+0xdc0>
    4184:	1029883a 	mov	r20,r2
    4188:	07000074 	movhi	fp,1
    418c:	e73bf504 	addi	fp,fp,-4140
    4190:	054001c4 	movi	r21,7
    4194:	00000306 	br	41a4 <___vfprintf_internal_r+0xd80>
    4198:	9cc00204 	addi	r19,r19,8
    419c:	843ffc04 	addi	r16,r16,-16
    41a0:	a400120e 	bge	r20,r16,41ec <___vfprintf_internal_r+0xdc8>
    41a4:	94800404 	addi	r18,r18,16
    41a8:	8c400044 	addi	r17,r17,1
    41ac:	9f000015 	stw	fp,0(r19)
    41b0:	9d000115 	stw	r20,4(r19)
    41b4:	dc800f15 	stw	r18,60(sp)
    41b8:	dc400e15 	stw	r17,56(sp)
    41bc:	ac7ff60e 	bge	r21,r17,4198 <___vfprintf_internal_r+0xd74>
    41c0:	d9015017 	ldw	r4,1344(sp)
    41c4:	b00b883a 	mov	r5,r22
    41c8:	d9800d04 	addi	r6,sp,52
    41cc:	00033cc0 	call	33cc <__sprint_r>
    41d0:	103e4c1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    41d4:	dc800f17 	ldw	r18,60(sp)
    41d8:	dc400e17 	ldw	r17,56(sp)
    41dc:	dcc01a04 	addi	r19,sp,104
    41e0:	003fee06 	br	419c <___vfprintf_internal_r+0xd78>
    41e4:	07000074 	movhi	fp,1
    41e8:	e73bf504 	addi	fp,fp,-4140
    41ec:	9425883a 	add	r18,r18,r16
    41f0:	8c400044 	addi	r17,r17,1
    41f4:	008001c4 	movi	r2,7
    41f8:	9f000015 	stw	fp,0(r19)
    41fc:	9c000115 	stw	r16,4(r19)
    4200:	dc800f15 	stw	r18,60(sp)
    4204:	dc400e15 	stw	r17,56(sp)
    4208:	147e720e 	bge	r2,r17,3bd4 <___vfprintf_internal_r+0x7b0>
    420c:	d9015017 	ldw	r4,1344(sp)
    4210:	b00b883a 	mov	r5,r22
    4214:	d9800d04 	addi	r6,sp,52
    4218:	00033cc0 	call	33cc <__sprint_r>
    421c:	103e391e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4220:	dc800f17 	ldw	r18,60(sp)
    4224:	dc400e17 	ldw	r17,56(sp)
    4228:	dcc01a04 	addi	r19,sp,104
    422c:	003e6a06 	br	3bd8 <___vfprintf_internal_r+0x7b4>
    4230:	d9015017 	ldw	r4,1344(sp)
    4234:	b00b883a 	mov	r5,r22
    4238:	d9800d04 	addi	r6,sp,52
    423c:	d9c15215 	stw	r7,1352(sp)
    4240:	00033cc0 	call	33cc <__sprint_r>
    4244:	d9c15217 	ldw	r7,1352(sp)
    4248:	103e2e1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    424c:	dc800f17 	ldw	r18,60(sp)
    4250:	dc400e17 	ldw	r17,56(sp)
    4254:	dd401a04 	addi	r21,sp,104
    4258:	003dba06 	br	3944 <___vfprintf_internal_r+0x520>
    425c:	d9015017 	ldw	r4,1344(sp)
    4260:	b00b883a 	mov	r5,r22
    4264:	d9800d04 	addi	r6,sp,52
    4268:	00033cc0 	call	33cc <__sprint_r>
    426c:	103e251e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4270:	dc800f17 	ldw	r18,60(sp)
    4274:	dc400e17 	ldw	r17,56(sp)
    4278:	dcc01a04 	addi	r19,sp,104
    427c:	003e4206 	br	3b88 <___vfprintf_internal_r+0x764>
    4280:	d9015017 	ldw	r4,1344(sp)
    4284:	b00b883a 	mov	r5,r22
    4288:	d9800d04 	addi	r6,sp,52
    428c:	00033cc0 	call	33cc <__sprint_r>
    4290:	103e1c1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4294:	dc800f17 	ldw	r18,60(sp)
    4298:	dc400e17 	ldw	r17,56(sp)
    429c:	d8c01a04 	addi	r3,sp,104
    42a0:	003e2e06 	br	3b5c <___vfprintf_internal_r+0x738>
    42a4:	d9414d17 	ldw	r5,1332(sp)
    42a8:	2880004c 	andi	r2,r5,1
    42ac:	1005003a 	cmpeq	r2,r2,zero
    42b0:	103dda1e 	bne	r2,zero,3a1c <___vfprintf_internal_r+0x5f8>
    42b4:	003e9f06 	br	3d34 <___vfprintf_internal_r+0x910>
    42b8:	d8c14217 	ldw	r3,1288(sp)
    42bc:	9125883a 	add	r18,r18,r4
    42c0:	8c400044 	addi	r17,r17,1
    42c4:	008001c4 	movi	r2,7
    42c8:	a8c00015 	stw	r3,0(r21)
    42cc:	a9000115 	stw	r4,4(r21)
    42d0:	dc800f15 	stw	r18,60(sp)
    42d4:	dc400e15 	stw	r17,56(sp)
    42d8:	14426c16 	blt	r2,r17,4c8c <___vfprintf_internal_r+0x1868>
    42dc:	a8c00204 	addi	r3,r21,8
    42e0:	d9414a17 	ldw	r5,1320(sp)
    42e4:	00800044 	movi	r2,1
    42e8:	94800044 	addi	r18,r18,1
    42ec:	8c400044 	addi	r17,r17,1
    42f0:	18800115 	stw	r2,4(r3)
    42f4:	008001c4 	movi	r2,7
    42f8:	19400015 	stw	r5,0(r3)
    42fc:	dc800f15 	stw	r18,60(sp)
    4300:	dc400e15 	stw	r17,56(sp)
    4304:	2021883a 	mov	r16,r4
    4308:	14425616 	blt	r2,r17,4c64 <___vfprintf_internal_r+0x1840>
    430c:	19400204 	addi	r5,r3,8
    4310:	d9814817 	ldw	r6,1312(sp)
    4314:	8c400044 	addi	r17,r17,1
    4318:	dc400e15 	stw	r17,56(sp)
    431c:	3107c83a 	sub	r3,r6,r4
    4320:	d9014217 	ldw	r4,1288(sp)
    4324:	90e5883a 	add	r18,r18,r3
    4328:	28c00115 	stw	r3,4(r5)
    432c:	8105883a 	add	r2,r16,r4
    4330:	28800015 	stw	r2,0(r5)
    4334:	008001c4 	movi	r2,7
    4338:	dc800f15 	stw	r18,60(sp)
    433c:	147f1d16 	blt	r2,r17,3fb4 <___vfprintf_internal_r+0xb90>
    4340:	28c00204 	addi	r3,r5,8
    4344:	003db506 	br	3a1c <___vfprintf_internal_r+0x5f8>
    4348:	3c000017 	ldw	r16,0(r7)
    434c:	3c400117 	ldw	r17,4(r7)
    4350:	39800204 	addi	r6,r7,8
    4354:	01000044 	movi	r4,1
    4358:	d9814115 	stw	r6,1284(sp)
    435c:	d8000405 	stb	zero,16(sp)
    4360:	003ebe06 	br	3e5c <___vfprintf_internal_r+0xa38>
    4364:	3c000017 	ldw	r16,0(r7)
    4368:	3c400117 	ldw	r17,4(r7)
    436c:	38800204 	addi	r2,r7,8
    4370:	d8814115 	stw	r2,1284(sp)
    4374:	003eb706 	br	3e54 <___vfprintf_internal_r+0xa30>
    4378:	3c000017 	ldw	r16,0(r7)
    437c:	3c400117 	ldw	r17,4(r7)
    4380:	39000204 	addi	r4,r7,8
    4384:	d9014115 	stw	r4,1284(sp)
    4388:	0009883a 	mov	r4,zero
    438c:	d8000405 	stb	zero,16(sp)
    4390:	003eb206 	br	3e5c <___vfprintf_internal_r+0xa38>
    4394:	38c00017 	ldw	r3,0(r7)
    4398:	39c00104 	addi	r7,r7,4
    439c:	d8c14b15 	stw	r3,1324(sp)
    43a0:	1800d70e 	bge	r3,zero,4700 <___vfprintf_internal_r+0x12dc>
    43a4:	00c7c83a 	sub	r3,zero,r3
    43a8:	d8c14b15 	stw	r3,1324(sp)
    43ac:	d9014d17 	ldw	r4,1332(sp)
    43b0:	b8c00007 	ldb	r3,0(r23)
    43b4:	21000114 	ori	r4,r4,4
    43b8:	d9014d15 	stw	r4,1332(sp)
    43bc:	003c9806 	br	3620 <___vfprintf_internal_r+0x1fc>
    43c0:	d9814d17 	ldw	r6,1332(sp)
    43c4:	3080080c 	andi	r2,r6,32
    43c8:	1001f626 	beq	r2,zero,4ba4 <___vfprintf_internal_r+0x1780>
    43cc:	d9014c17 	ldw	r4,1328(sp)
    43d0:	38800017 	ldw	r2,0(r7)
    43d4:	39c00104 	addi	r7,r7,4
    43d8:	d9c14115 	stw	r7,1284(sp)
    43dc:	2007d7fa 	srai	r3,r4,31
    43e0:	d9c14117 	ldw	r7,1284(sp)
    43e4:	11000015 	stw	r4,0(r2)
    43e8:	10c00115 	stw	r3,4(r2)
    43ec:	003c6906 	br	3594 <___vfprintf_internal_r+0x170>
    43f0:	b8c00007 	ldb	r3,0(r23)
    43f4:	00801b04 	movi	r2,108
    43f8:	18825526 	beq	r3,r2,4d50 <___vfprintf_internal_r+0x192c>
    43fc:	d9414d17 	ldw	r5,1332(sp)
    4400:	29400414 	ori	r5,r5,16
    4404:	d9414d15 	stw	r5,1332(sp)
    4408:	003c8506 	br	3620 <___vfprintf_internal_r+0x1fc>
    440c:	d9814d17 	ldw	r6,1332(sp)
    4410:	b8c00007 	ldb	r3,0(r23)
    4414:	31800814 	ori	r6,r6,32
    4418:	d9814d15 	stw	r6,1332(sp)
    441c:	003c8006 	br	3620 <___vfprintf_internal_r+0x1fc>
    4420:	d8814d17 	ldw	r2,1332(sp)
    4424:	3c000017 	ldw	r16,0(r7)
    4428:	00c01e04 	movi	r3,120
    442c:	10800094 	ori	r2,r2,2
    4430:	d8814d15 	stw	r2,1332(sp)
    4434:	39c00104 	addi	r7,r7,4
    4438:	01400074 	movhi	r5,1
    443c:	297bdd04 	addi	r5,r5,-4236
    4440:	00800c04 	movi	r2,48
    4444:	0023883a 	mov	r17,zero
    4448:	01000084 	movi	r4,2
    444c:	d9c14115 	stw	r7,1284(sp)
    4450:	d8c14e15 	stw	r3,1336(sp)
    4454:	d9414515 	stw	r5,1300(sp)
    4458:	d8800505 	stb	r2,20(sp)
    445c:	d8c00545 	stb	r3,21(sp)
    4460:	d8000405 	stb	zero,16(sp)
    4464:	003e7d06 	br	3e5c <___vfprintf_internal_r+0xa38>
    4468:	d8814d17 	ldw	r2,1332(sp)
    446c:	b8c00007 	ldb	r3,0(r23)
    4470:	10801014 	ori	r2,r2,64
    4474:	d8814d15 	stw	r2,1332(sp)
    4478:	003c6906 	br	3620 <___vfprintf_internal_r+0x1fc>
    447c:	d9414d17 	ldw	r5,1332(sp)
    4480:	2880020c 	andi	r2,r5,8
    4484:	1001e526 	beq	r2,zero,4c1c <___vfprintf_internal_r+0x17f8>
    4488:	39800017 	ldw	r6,0(r7)
    448c:	38800204 	addi	r2,r7,8
    4490:	d8814115 	stw	r2,1284(sp)
    4494:	d9814315 	stw	r6,1292(sp)
    4498:	39c00117 	ldw	r7,4(r7)
    449c:	d9c14415 	stw	r7,1296(sp)
    44a0:	d9014317 	ldw	r4,1292(sp)
    44a4:	d9414417 	ldw	r5,1296(sp)
    44a8:	000a5c00 	call	a5c0 <__isinfd>
    44ac:	10021d26 	beq	r2,zero,4d24 <___vfprintf_internal_r+0x1900>
    44b0:	d9014317 	ldw	r4,1292(sp)
    44b4:	d9414417 	ldw	r5,1296(sp)
    44b8:	000d883a 	mov	r6,zero
    44bc:	000f883a 	mov	r7,zero
    44c0:	000cb240 	call	cb24 <__ltdf2>
    44c4:	1002d016 	blt	r2,zero,5008 <___vfprintf_internal_r+0x1be4>
    44c8:	d9414e17 	ldw	r5,1336(sp)
    44cc:	008011c4 	movi	r2,71
    44d0:	11421016 	blt	r2,r5,4d14 <___vfprintf_internal_r+0x18f0>
    44d4:	01800074 	movhi	r6,1
    44d8:	31bbe204 	addi	r6,r6,-4216
    44dc:	d9814215 	stw	r6,1288(sp)
    44e0:	d9014d17 	ldw	r4,1332(sp)
    44e4:	00c000c4 	movi	r3,3
    44e8:	00bfdfc4 	movi	r2,-129
    44ec:	2088703a 	and	r4,r4,r2
    44f0:	180f883a 	mov	r7,r3
    44f4:	d8c14615 	stw	r3,1304(sp)
    44f8:	d9014d15 	stw	r4,1332(sp)
    44fc:	d8014715 	stw	zero,1308(sp)
    4500:	003e6a06 	br	3eac <___vfprintf_internal_r+0xa88>
    4504:	38800017 	ldw	r2,0(r7)
    4508:	00c00044 	movi	r3,1
    450c:	39c00104 	addi	r7,r7,4
    4510:	d9c14115 	stw	r7,1284(sp)
    4514:	d9001004 	addi	r4,sp,64
    4518:	180f883a 	mov	r7,r3
    451c:	d8c14615 	stw	r3,1304(sp)
    4520:	d9014215 	stw	r4,1288(sp)
    4524:	d8801005 	stb	r2,64(sp)
    4528:	d8000405 	stb	zero,16(sp)
    452c:	003cac06 	br	37e0 <___vfprintf_internal_r+0x3bc>
    4530:	01400074 	movhi	r5,1
    4534:	297be804 	addi	r5,r5,-4192
    4538:	d9414515 	stw	r5,1300(sp)
    453c:	d9814d17 	ldw	r6,1332(sp)
    4540:	3080080c 	andi	r2,r6,32
    4544:	1000ff26 	beq	r2,zero,4944 <___vfprintf_internal_r+0x1520>
    4548:	3c000017 	ldw	r16,0(r7)
    454c:	3c400117 	ldw	r17,4(r7)
    4550:	38800204 	addi	r2,r7,8
    4554:	d8814115 	stw	r2,1284(sp)
    4558:	d9414d17 	ldw	r5,1332(sp)
    455c:	2880004c 	andi	r2,r5,1
    4560:	1005003a 	cmpeq	r2,r2,zero
    4564:	1000b91e 	bne	r2,zero,484c <___vfprintf_internal_r+0x1428>
    4568:	8444b03a 	or	r2,r16,r17
    456c:	1000b726 	beq	r2,zero,484c <___vfprintf_internal_r+0x1428>
    4570:	d9814e17 	ldw	r6,1336(sp)
    4574:	29400094 	ori	r5,r5,2
    4578:	00800c04 	movi	r2,48
    457c:	01000084 	movi	r4,2
    4580:	d9414d15 	stw	r5,1332(sp)
    4584:	d8800505 	stb	r2,20(sp)
    4588:	d9800545 	stb	r6,21(sp)
    458c:	d8000405 	stb	zero,16(sp)
    4590:	003e3206 	br	3e5c <___vfprintf_internal_r+0xa38>
    4594:	01800074 	movhi	r6,1
    4598:	31bbdd04 	addi	r6,r6,-4236
    459c:	d9814515 	stw	r6,1300(sp)
    45a0:	003fe606 	br	453c <___vfprintf_internal_r+0x1118>
    45a4:	00800ac4 	movi	r2,43
    45a8:	d8800405 	stb	r2,16(sp)
    45ac:	b8c00007 	ldb	r3,0(r23)
    45b0:	003c1b06 	br	3620 <___vfprintf_internal_r+0x1fc>
    45b4:	d8814d17 	ldw	r2,1332(sp)
    45b8:	b8c00007 	ldb	r3,0(r23)
    45bc:	10800054 	ori	r2,r2,1
    45c0:	d8814d15 	stw	r2,1332(sp)
    45c4:	003c1606 	br	3620 <___vfprintf_internal_r+0x1fc>
    45c8:	d8800407 	ldb	r2,16(sp)
    45cc:	10004c1e 	bne	r2,zero,4700 <___vfprintf_internal_r+0x12dc>
    45d0:	00800804 	movi	r2,32
    45d4:	d8800405 	stb	r2,16(sp)
    45d8:	b8c00007 	ldb	r3,0(r23)
    45dc:	003c1006 	br	3620 <___vfprintf_internal_r+0x1fc>
    45e0:	d9814d17 	ldw	r6,1332(sp)
    45e4:	b8c00007 	ldb	r3,0(r23)
    45e8:	31800214 	ori	r6,r6,8
    45ec:	d9814d15 	stw	r6,1332(sp)
    45f0:	003c0b06 	br	3620 <___vfprintf_internal_r+0x1fc>
    45f4:	0009883a 	mov	r4,zero
    45f8:	04000244 	movi	r16,9
    45fc:	01400284 	movi	r5,10
    4600:	d9c15215 	stw	r7,1352(sp)
    4604:	000d0e40 	call	d0e4 <__mulsi3>
    4608:	b9000007 	ldb	r4,0(r23)
    460c:	d8c14e17 	ldw	r3,1336(sp)
    4610:	bdc00044 	addi	r23,r23,1
    4614:	d9014e15 	stw	r4,1336(sp)
    4618:	d9414e17 	ldw	r5,1336(sp)
    461c:	1885883a 	add	r2,r3,r2
    4620:	113ff404 	addi	r4,r2,-48
    4624:	28bff404 	addi	r2,r5,-48
    4628:	d9c15217 	ldw	r7,1352(sp)
    462c:	80bff32e 	bgeu	r16,r2,45fc <___vfprintf_internal_r+0x11d8>
    4630:	d9014b15 	stw	r4,1324(sp)
    4634:	003bfc06 	br	3628 <___vfprintf_internal_r+0x204>
    4638:	d8814d17 	ldw	r2,1332(sp)
    463c:	b8c00007 	ldb	r3,0(r23)
    4640:	10802014 	ori	r2,r2,128
    4644:	d8814d15 	stw	r2,1332(sp)
    4648:	003bf506 	br	3620 <___vfprintf_internal_r+0x1fc>
    464c:	b8c00007 	ldb	r3,0(r23)
    4650:	00800a84 	movi	r2,42
    4654:	bdc00044 	addi	r23,r23,1
    4658:	18831826 	beq	r3,r2,52bc <___vfprintf_internal_r+0x1e98>
    465c:	d8c14e15 	stw	r3,1336(sp)
    4660:	18bff404 	addi	r2,r3,-48
    4664:	00c00244 	movi	r3,9
    4668:	18827b36 	bltu	r3,r2,5058 <___vfprintf_internal_r+0x1c34>
    466c:	1821883a 	mov	r16,r3
    4670:	0009883a 	mov	r4,zero
    4674:	01400284 	movi	r5,10
    4678:	d9c15215 	stw	r7,1352(sp)
    467c:	000d0e40 	call	d0e4 <__mulsi3>
    4680:	d9414e17 	ldw	r5,1336(sp)
    4684:	b9800007 	ldb	r6,0(r23)
    4688:	d9c15217 	ldw	r7,1352(sp)
    468c:	1145883a 	add	r2,r2,r5
    4690:	113ff404 	addi	r4,r2,-48
    4694:	30bff404 	addi	r2,r6,-48
    4698:	d9814e15 	stw	r6,1336(sp)
    469c:	bdc00044 	addi	r23,r23,1
    46a0:	80bff42e 	bgeu	r16,r2,4674 <___vfprintf_internal_r+0x1250>
    46a4:	2027883a 	mov	r19,r4
    46a8:	203bdf0e 	bge	r4,zero,3628 <___vfprintf_internal_r+0x204>
    46ac:	04ffffc4 	movi	r19,-1
    46b0:	003bdd06 	br	3628 <___vfprintf_internal_r+0x204>
    46b4:	d8000405 	stb	zero,16(sp)
    46b8:	39800017 	ldw	r6,0(r7)
    46bc:	39c00104 	addi	r7,r7,4
    46c0:	d9c14115 	stw	r7,1284(sp)
    46c4:	d9814215 	stw	r6,1288(sp)
    46c8:	3001c926 	beq	r6,zero,4df0 <___vfprintf_internal_r+0x19cc>
    46cc:	98000e16 	blt	r19,zero,4708 <___vfprintf_internal_r+0x12e4>
    46d0:	d9014217 	ldw	r4,1288(sp)
    46d4:	000b883a 	mov	r5,zero
    46d8:	980d883a 	mov	r6,r19
    46dc:	00089e40 	call	89e4 <memchr>
    46e0:	10025926 	beq	r2,zero,5048 <___vfprintf_internal_r+0x1c24>
    46e4:	d8c14217 	ldw	r3,1288(sp)
    46e8:	10cfc83a 	sub	r7,r2,r3
    46ec:	99c19e16 	blt	r19,r7,4d68 <___vfprintf_internal_r+0x1944>
    46f0:	d9c14615 	stw	r7,1304(sp)
    46f4:	38000916 	blt	r7,zero,471c <___vfprintf_internal_r+0x12f8>
    46f8:	d8014715 	stw	zero,1308(sp)
    46fc:	003deb06 	br	3eac <___vfprintf_internal_r+0xa88>
    4700:	b8c00007 	ldb	r3,0(r23)
    4704:	003bc606 	br	3620 <___vfprintf_internal_r+0x1fc>
    4708:	d9014217 	ldw	r4,1288(sp)
    470c:	00014700 	call	1470 <strlen>
    4710:	d8814615 	stw	r2,1304(sp)
    4714:	100f883a 	mov	r7,r2
    4718:	103ff70e 	bge	r2,zero,46f8 <___vfprintf_internal_r+0x12d4>
    471c:	d8014615 	stw	zero,1304(sp)
    4720:	d8014715 	stw	zero,1308(sp)
    4724:	003de106 	br	3eac <___vfprintf_internal_r+0xa88>
    4728:	20c03fcc 	andi	r3,r4,255
    472c:	00800044 	movi	r2,1
    4730:	18802d26 	beq	r3,r2,47e8 <___vfprintf_internal_r+0x13c4>
    4734:	18800e36 	bltu	r3,r2,4770 <___vfprintf_internal_r+0x134c>
    4738:	00800084 	movi	r2,2
    473c:	1880fa26 	beq	r3,r2,4b28 <___vfprintf_internal_r+0x1704>
    4740:	01000074 	movhi	r4,1
    4744:	213bed04 	addi	r4,r4,-4172
    4748:	00014700 	call	1470 <strlen>
    474c:	100f883a 	mov	r7,r2
    4750:	dcc14615 	stw	r19,1304(sp)
    4754:	9880010e 	bge	r19,r2,475c <___vfprintf_internal_r+0x1338>
    4758:	d8814615 	stw	r2,1304(sp)
    475c:	00800074 	movhi	r2,1
    4760:	10bbed04 	addi	r2,r2,-4172
    4764:	dcc14715 	stw	r19,1308(sp)
    4768:	d8814215 	stw	r2,1288(sp)
    476c:	003dcf06 	br	3eac <___vfprintf_internal_r+0xa88>
    4770:	d9401a04 	addi	r5,sp,104
    4774:	dd001004 	addi	r20,sp,64
    4778:	d9414215 	stw	r5,1288(sp)
    477c:	880a977a 	slli	r5,r17,29
    4780:	d9814217 	ldw	r6,1288(sp)
    4784:	8004d0fa 	srli	r2,r16,3
    4788:	8806d0fa 	srli	r3,r17,3
    478c:	810001cc 	andi	r4,r16,7
    4790:	2884b03a 	or	r2,r5,r2
    4794:	31bfffc4 	addi	r6,r6,-1
    4798:	21000c04 	addi	r4,r4,48
    479c:	d9814215 	stw	r6,1288(sp)
    47a0:	10cab03a 	or	r5,r2,r3
    47a4:	31000005 	stb	r4,0(r6)
    47a8:	1021883a 	mov	r16,r2
    47ac:	1823883a 	mov	r17,r3
    47b0:	283ff21e 	bne	r5,zero,477c <___vfprintf_internal_r+0x1358>
    47b4:	d8c14d17 	ldw	r3,1332(sp)
    47b8:	1880004c 	andi	r2,r3,1
    47bc:	1005003a 	cmpeq	r2,r2,zero
    47c0:	103db31e 	bne	r2,zero,3e90 <___vfprintf_internal_r+0xa6c>
    47c4:	20803fcc 	andi	r2,r4,255
    47c8:	1080201c 	xori	r2,r2,128
    47cc:	10bfe004 	addi	r2,r2,-128
    47d0:	00c00c04 	movi	r3,48
    47d4:	10fdae26 	beq	r2,r3,3e90 <___vfprintf_internal_r+0xa6c>
    47d8:	31bfffc4 	addi	r6,r6,-1
    47dc:	d9814215 	stw	r6,1288(sp)
    47e0:	30c00005 	stb	r3,0(r6)
    47e4:	003daa06 	br	3e90 <___vfprintf_internal_r+0xa6c>
    47e8:	88800068 	cmpgeui	r2,r17,1
    47ec:	10002c1e 	bne	r2,zero,48a0 <___vfprintf_internal_r+0x147c>
    47f0:	8800021e 	bne	r17,zero,47fc <___vfprintf_internal_r+0x13d8>
    47f4:	00800244 	movi	r2,9
    47f8:	14002936 	bltu	r2,r16,48a0 <___vfprintf_internal_r+0x147c>
    47fc:	d90019c4 	addi	r4,sp,103
    4800:	dd001004 	addi	r20,sp,64
    4804:	d9014215 	stw	r4,1288(sp)
    4808:	d9014217 	ldw	r4,1288(sp)
    480c:	80800c04 	addi	r2,r16,48
    4810:	20800005 	stb	r2,0(r4)
    4814:	003d9e06 	br	3e90 <___vfprintf_internal_r+0xa6c>
    4818:	dc400e17 	ldw	r17,56(sp)
    481c:	07000074 	movhi	fp,1
    4820:	e73bf504 	addi	fp,fp,-4140
    4824:	9425883a 	add	r18,r18,r16
    4828:	8c400044 	addi	r17,r17,1
    482c:	008001c4 	movi	r2,7
    4830:	1f000015 	stw	fp,0(r3)
    4834:	1c000115 	stw	r16,4(r3)
    4838:	dc800f15 	stw	r18,60(sp)
    483c:	dc400e15 	stw	r17,56(sp)
    4840:	147ddc16 	blt	r2,r17,3fb4 <___vfprintf_internal_r+0xb90>
    4844:	18c00204 	addi	r3,r3,8
    4848:	003c7406 	br	3a1c <___vfprintf_internal_r+0x5f8>
    484c:	01000084 	movi	r4,2
    4850:	d8000405 	stb	zero,16(sp)
    4854:	003d8106 	br	3e5c <___vfprintf_internal_r+0xa38>
    4858:	d9814d17 	ldw	r6,1332(sp)
    485c:	30c4703a 	and	r2,r6,r3
    4860:	1005003a 	cmpeq	r2,r2,zero
    4864:	103cb326 	beq	r2,zero,3b34 <___vfprintf_internal_r+0x710>
    4868:	d9014217 	ldw	r4,1288(sp)
    486c:	94800044 	addi	r18,r18,1
    4870:	8c400044 	addi	r17,r17,1
    4874:	008001c4 	movi	r2,7
    4878:	a9000015 	stw	r4,0(r21)
    487c:	a8c00115 	stw	r3,4(r21)
    4880:	dc800f15 	stw	r18,60(sp)
    4884:	dc400e15 	stw	r17,56(sp)
    4888:	147e6016 	blt	r2,r17,420c <___vfprintf_internal_r+0xde8>
    488c:	acc00204 	addi	r19,r21,8
    4890:	003cd106 	br	3bd8 <___vfprintf_internal_r+0x7b4>
    4894:	07000074 	movhi	fp,1
    4898:	e73bf504 	addi	fp,fp,-4140
    489c:	003c4906 	br	39c4 <___vfprintf_internal_r+0x5a0>
    48a0:	dd001004 	addi	r20,sp,64
    48a4:	dc801a04 	addi	r18,sp,104
    48a8:	8009883a 	mov	r4,r16
    48ac:	880b883a 	mov	r5,r17
    48b0:	01800284 	movi	r6,10
    48b4:	000f883a 	mov	r7,zero
    48b8:	000b61c0 	call	b61c <__umoddi3>
    48bc:	12000c04 	addi	r8,r2,48
    48c0:	94bfffc4 	addi	r18,r18,-1
    48c4:	8009883a 	mov	r4,r16
    48c8:	880b883a 	mov	r5,r17
    48cc:	01800284 	movi	r6,10
    48d0:	000f883a 	mov	r7,zero
    48d4:	92000005 	stb	r8,0(r18)
    48d8:	000afb00 	call	afb0 <__udivdi3>
    48dc:	1009883a 	mov	r4,r2
    48e0:	1021883a 	mov	r16,r2
    48e4:	18800068 	cmpgeui	r2,r3,1
    48e8:	1823883a 	mov	r17,r3
    48ec:	103fee1e 	bne	r2,zero,48a8 <___vfprintf_internal_r+0x1484>
    48f0:	1800021e 	bne	r3,zero,48fc <___vfprintf_internal_r+0x14d8>
    48f4:	00800244 	movi	r2,9
    48f8:	113feb36 	bltu	r2,r4,48a8 <___vfprintf_internal_r+0x1484>
    48fc:	94bfffc4 	addi	r18,r18,-1
    4900:	dc814215 	stw	r18,1288(sp)
    4904:	003fc006 	br	4808 <___vfprintf_internal_r+0x13e4>
    4908:	d9014d17 	ldw	r4,1332(sp)
    490c:	2080004c 	andi	r2,r4,1
    4910:	10009a1e 	bne	r2,zero,4b7c <___vfprintf_internal_r+0x1758>
    4914:	d9401a04 	addi	r5,sp,104
    4918:	dd001004 	addi	r20,sp,64
    491c:	d9414215 	stw	r5,1288(sp)
    4920:	003d5b06 	br	3e90 <___vfprintf_internal_r+0xa6c>
    4924:	d9015017 	ldw	r4,1344(sp)
    4928:	b00b883a 	mov	r5,r22
    492c:	d9800d04 	addi	r6,sp,52
    4930:	00033cc0 	call	33cc <__sprint_r>
    4934:	103c731e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4938:	dc800f17 	ldw	r18,60(sp)
    493c:	d8c01a04 	addi	r3,sp,104
    4940:	003cf906 	br	3d28 <___vfprintf_internal_r+0x904>
    4944:	d8c14d17 	ldw	r3,1332(sp)
    4948:	1880040c 	andi	r2,r3,16
    494c:	1000711e 	bne	r2,zero,4b14 <___vfprintf_internal_r+0x16f0>
    4950:	d9014d17 	ldw	r4,1332(sp)
    4954:	2080100c 	andi	r2,r4,64
    4958:	10006e26 	beq	r2,zero,4b14 <___vfprintf_internal_r+0x16f0>
    495c:	3c00000b 	ldhu	r16,0(r7)
    4960:	0023883a 	mov	r17,zero
    4964:	39c00104 	addi	r7,r7,4
    4968:	d9c14115 	stw	r7,1284(sp)
    496c:	003efa06 	br	4558 <___vfprintf_internal_r+0x1134>
    4970:	dc400e17 	ldw	r17,56(sp)
    4974:	07000074 	movhi	fp,1
    4978:	e73bf504 	addi	fp,fp,-4140
    497c:	9425883a 	add	r18,r18,r16
    4980:	8c400044 	addi	r17,r17,1
    4984:	008001c4 	movi	r2,7
    4988:	1f000015 	stw	fp,0(r3)
    498c:	1c000115 	stw	r16,4(r3)
    4990:	dc800f15 	stw	r18,60(sp)
    4994:	dc400e15 	stw	r17,56(sp)
    4998:	147d7016 	blt	r2,r17,3f5c <___vfprintf_internal_r+0xb38>
    499c:	18c00204 	addi	r3,r3,8
    49a0:	003d7506 	br	3f78 <___vfprintf_internal_r+0xb54>
    49a4:	dc800f17 	ldw	r18,60(sp)
    49a8:	dc400e17 	ldw	r17,56(sp)
    49ac:	07000074 	movhi	fp,1
    49b0:	e73bf904 	addi	fp,fp,-4124
    49b4:	003bba06 	br	38a0 <___vfprintf_internal_r+0x47c>
    49b8:	d9015017 	ldw	r4,1344(sp)
    49bc:	b00b883a 	mov	r5,r22
    49c0:	d9800d04 	addi	r6,sp,52
    49c4:	00033cc0 	call	33cc <__sprint_r>
    49c8:	103c4e1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    49cc:	dc800f17 	ldw	r18,60(sp)
    49d0:	d8c01a04 	addi	r3,sp,104
    49d4:	003ce306 	br	3d64 <___vfprintf_internal_r+0x940>
    49d8:	3c000017 	ldw	r16,0(r7)
    49dc:	0009883a 	mov	r4,zero
    49e0:	39c00104 	addi	r7,r7,4
    49e4:	0023883a 	mov	r17,zero
    49e8:	d9c14115 	stw	r7,1284(sp)
    49ec:	d8000405 	stb	zero,16(sp)
    49f0:	003d1a06 	br	3e5c <___vfprintf_internal_r+0xa38>
    49f4:	38800017 	ldw	r2,0(r7)
    49f8:	39c00104 	addi	r7,r7,4
    49fc:	d9c14115 	stw	r7,1284(sp)
    4a00:	1023d7fa 	srai	r17,r2,31
    4a04:	1021883a 	mov	r16,r2
    4a08:	003d1206 	br	3e54 <___vfprintf_internal_r+0xa30>
    4a0c:	3c000017 	ldw	r16,0(r7)
    4a10:	01000044 	movi	r4,1
    4a14:	39c00104 	addi	r7,r7,4
    4a18:	0023883a 	mov	r17,zero
    4a1c:	d9c14115 	stw	r7,1284(sp)
    4a20:	d8000405 	stb	zero,16(sp)
    4a24:	003d0d06 	br	3e5c <___vfprintf_internal_r+0xa38>
    4a28:	00800074 	movhi	r2,1
    4a2c:	10bbf404 	addi	r2,r2,-4144
    4a30:	94800044 	addi	r18,r18,1
    4a34:	8c400044 	addi	r17,r17,1
    4a38:	a8800015 	stw	r2,0(r21)
    4a3c:	00c00044 	movi	r3,1
    4a40:	008001c4 	movi	r2,7
    4a44:	a8c00115 	stw	r3,4(r21)
    4a48:	dc800f15 	stw	r18,60(sp)
    4a4c:	dc400e15 	stw	r17,56(sp)
    4a50:	1440ca16 	blt	r2,r17,4d7c <___vfprintf_internal_r+0x1958>
    4a54:	a8c00204 	addi	r3,r21,8
    4a58:	2000061e 	bne	r4,zero,4a74 <___vfprintf_internal_r+0x1650>
    4a5c:	d9414817 	ldw	r5,1312(sp)
    4a60:	2800041e 	bne	r5,zero,4a74 <___vfprintf_internal_r+0x1650>
    4a64:	d9814d17 	ldw	r6,1332(sp)
    4a68:	3080004c 	andi	r2,r6,1
    4a6c:	1005003a 	cmpeq	r2,r2,zero
    4a70:	103bea1e 	bne	r2,zero,3a1c <___vfprintf_internal_r+0x5f8>
    4a74:	00800044 	movi	r2,1
    4a78:	dc400e17 	ldw	r17,56(sp)
    4a7c:	18800115 	stw	r2,4(r3)
    4a80:	d8814a17 	ldw	r2,1320(sp)
    4a84:	94800044 	addi	r18,r18,1
    4a88:	8c400044 	addi	r17,r17,1
    4a8c:	18800015 	stw	r2,0(r3)
    4a90:	008001c4 	movi	r2,7
    4a94:	dc800f15 	stw	r18,60(sp)
    4a98:	dc400e15 	stw	r17,56(sp)
    4a9c:	1440ca16 	blt	r2,r17,4dc8 <___vfprintf_internal_r+0x19a4>
    4aa0:	18c00204 	addi	r3,r3,8
    4aa4:	0121c83a 	sub	r16,zero,r4
    4aa8:	0400500e 	bge	zero,r16,4bec <___vfprintf_internal_r+0x17c8>
    4aac:	00800404 	movi	r2,16
    4ab0:	1400800e 	bge	r2,r16,4cb4 <___vfprintf_internal_r+0x1890>
    4ab4:	1027883a 	mov	r19,r2
    4ab8:	07000074 	movhi	fp,1
    4abc:	e73bf504 	addi	fp,fp,-4140
    4ac0:	050001c4 	movi	r20,7
    4ac4:	00000306 	br	4ad4 <___vfprintf_internal_r+0x16b0>
    4ac8:	18c00204 	addi	r3,r3,8
    4acc:	843ffc04 	addi	r16,r16,-16
    4ad0:	9c007a0e 	bge	r19,r16,4cbc <___vfprintf_internal_r+0x1898>
    4ad4:	94800404 	addi	r18,r18,16
    4ad8:	8c400044 	addi	r17,r17,1
    4adc:	1f000015 	stw	fp,0(r3)
    4ae0:	1cc00115 	stw	r19,4(r3)
    4ae4:	dc800f15 	stw	r18,60(sp)
    4ae8:	dc400e15 	stw	r17,56(sp)
    4aec:	a47ff60e 	bge	r20,r17,4ac8 <___vfprintf_internal_r+0x16a4>
    4af0:	d9015017 	ldw	r4,1344(sp)
    4af4:	b00b883a 	mov	r5,r22
    4af8:	d9800d04 	addi	r6,sp,52
    4afc:	00033cc0 	call	33cc <__sprint_r>
    4b00:	103c001e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4b04:	dc800f17 	ldw	r18,60(sp)
    4b08:	dc400e17 	ldw	r17,56(sp)
    4b0c:	d8c01a04 	addi	r3,sp,104
    4b10:	003fee06 	br	4acc <___vfprintf_internal_r+0x16a8>
    4b14:	3c000017 	ldw	r16,0(r7)
    4b18:	0023883a 	mov	r17,zero
    4b1c:	39c00104 	addi	r7,r7,4
    4b20:	d9c14115 	stw	r7,1284(sp)
    4b24:	003e8c06 	br	4558 <___vfprintf_internal_r+0x1134>
    4b28:	d9401a04 	addi	r5,sp,104
    4b2c:	dd001004 	addi	r20,sp,64
    4b30:	d9414215 	stw	r5,1288(sp)
    4b34:	d9814517 	ldw	r6,1300(sp)
    4b38:	880a973a 	slli	r5,r17,28
    4b3c:	8004d13a 	srli	r2,r16,4
    4b40:	810003cc 	andi	r4,r16,15
    4b44:	3109883a 	add	r4,r6,r4
    4b48:	2884b03a 	or	r2,r5,r2
    4b4c:	21400003 	ldbu	r5,0(r4)
    4b50:	d9014217 	ldw	r4,1288(sp)
    4b54:	8806d13a 	srli	r3,r17,4
    4b58:	1021883a 	mov	r16,r2
    4b5c:	213fffc4 	addi	r4,r4,-1
    4b60:	d9014215 	stw	r4,1288(sp)
    4b64:	d9814217 	ldw	r6,1288(sp)
    4b68:	10c8b03a 	or	r4,r2,r3
    4b6c:	1823883a 	mov	r17,r3
    4b70:	31400005 	stb	r5,0(r6)
    4b74:	203fef1e 	bne	r4,zero,4b34 <___vfprintf_internal_r+0x1710>
    4b78:	003cc506 	br	3e90 <___vfprintf_internal_r+0xa6c>
    4b7c:	00800c04 	movi	r2,48
    4b80:	d98019c4 	addi	r6,sp,103
    4b84:	dd001004 	addi	r20,sp,64
    4b88:	d88019c5 	stb	r2,103(sp)
    4b8c:	d9814215 	stw	r6,1288(sp)
    4b90:	003cbf06 	br	3e90 <___vfprintf_internal_r+0xa6c>
    4b94:	dc400e17 	ldw	r17,56(sp)
    4b98:	07000074 	movhi	fp,1
    4b9c:	e73bf904 	addi	fp,fp,-4124
    4ba0:	003bc106 	br	3aa8 <___vfprintf_internal_r+0x684>
    4ba4:	d9414d17 	ldw	r5,1332(sp)
    4ba8:	2880040c 	andi	r2,r5,16
    4bac:	10007c26 	beq	r2,zero,4da0 <___vfprintf_internal_r+0x197c>
    4bb0:	38800017 	ldw	r2,0(r7)
    4bb4:	39c00104 	addi	r7,r7,4
    4bb8:	d9c14115 	stw	r7,1284(sp)
    4bbc:	d9814c17 	ldw	r6,1328(sp)
    4bc0:	d9c14117 	ldw	r7,1284(sp)
    4bc4:	11800015 	stw	r6,0(r2)
    4bc8:	003a7206 	br	3594 <___vfprintf_internal_r+0x170>
    4bcc:	d9015017 	ldw	r4,1344(sp)
    4bd0:	b00b883a 	mov	r5,r22
    4bd4:	d9800d04 	addi	r6,sp,52
    4bd8:	00033cc0 	call	33cc <__sprint_r>
    4bdc:	103bc91e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4be0:	dc800f17 	ldw	r18,60(sp)
    4be4:	dc400e17 	ldw	r17,56(sp)
    4be8:	d8c01a04 	addi	r3,sp,104
    4bec:	d9014817 	ldw	r4,1312(sp)
    4bf0:	d9414217 	ldw	r5,1288(sp)
    4bf4:	8c400044 	addi	r17,r17,1
    4bf8:	9125883a 	add	r18,r18,r4
    4bfc:	008001c4 	movi	r2,7
    4c00:	19400015 	stw	r5,0(r3)
    4c04:	19000115 	stw	r4,4(r3)
    4c08:	dc800f15 	stw	r18,60(sp)
    4c0c:	dc400e15 	stw	r17,56(sp)
    4c10:	147ce816 	blt	r2,r17,3fb4 <___vfprintf_internal_r+0xb90>
    4c14:	18c00204 	addi	r3,r3,8
    4c18:	003b8006 	br	3a1c <___vfprintf_internal_r+0x5f8>
    4c1c:	38c00017 	ldw	r3,0(r7)
    4c20:	39000204 	addi	r4,r7,8
    4c24:	d9014115 	stw	r4,1284(sp)
    4c28:	d8c14315 	stw	r3,1292(sp)
    4c2c:	39c00117 	ldw	r7,4(r7)
    4c30:	d9c14415 	stw	r7,1296(sp)
    4c34:	003e1a06 	br	44a0 <___vfprintf_internal_r+0x107c>
    4c38:	0005883a 	mov	r2,zero
    4c3c:	1409c83a 	sub	r4,r2,r16
    4c40:	1105803a 	cmpltu	r2,r2,r4
    4c44:	044bc83a 	sub	r5,zero,r17
    4c48:	2885c83a 	sub	r2,r5,r2
    4c4c:	2021883a 	mov	r16,r4
    4c50:	1023883a 	mov	r17,r2
    4c54:	01000044 	movi	r4,1
    4c58:	00800b44 	movi	r2,45
    4c5c:	d8800405 	stb	r2,16(sp)
    4c60:	003c7e06 	br	3e5c <___vfprintf_internal_r+0xa38>
    4c64:	d9015017 	ldw	r4,1344(sp)
    4c68:	b00b883a 	mov	r5,r22
    4c6c:	d9800d04 	addi	r6,sp,52
    4c70:	00033cc0 	call	33cc <__sprint_r>
    4c74:	103ba31e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4c78:	dc800f17 	ldw	r18,60(sp)
    4c7c:	dc400e17 	ldw	r17,56(sp)
    4c80:	d9000617 	ldw	r4,24(sp)
    4c84:	d9401a04 	addi	r5,sp,104
    4c88:	003da106 	br	4310 <___vfprintf_internal_r+0xeec>
    4c8c:	d9015017 	ldw	r4,1344(sp)
    4c90:	b00b883a 	mov	r5,r22
    4c94:	d9800d04 	addi	r6,sp,52
    4c98:	00033cc0 	call	33cc <__sprint_r>
    4c9c:	103b991e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4ca0:	dc800f17 	ldw	r18,60(sp)
    4ca4:	dc400e17 	ldw	r17,56(sp)
    4ca8:	d9000617 	ldw	r4,24(sp)
    4cac:	d8c01a04 	addi	r3,sp,104
    4cb0:	003d8b06 	br	42e0 <___vfprintf_internal_r+0xebc>
    4cb4:	07000074 	movhi	fp,1
    4cb8:	e73bf504 	addi	fp,fp,-4140
    4cbc:	9425883a 	add	r18,r18,r16
    4cc0:	8c400044 	addi	r17,r17,1
    4cc4:	008001c4 	movi	r2,7
    4cc8:	1f000015 	stw	fp,0(r3)
    4ccc:	1c000115 	stw	r16,4(r3)
    4cd0:	dc800f15 	stw	r18,60(sp)
    4cd4:	dc400e15 	stw	r17,56(sp)
    4cd8:	147fbc16 	blt	r2,r17,4bcc <___vfprintf_internal_r+0x17a8>
    4cdc:	18c00204 	addi	r3,r3,8
    4ce0:	003fc206 	br	4bec <___vfprintf_internal_r+0x17c8>
    4ce4:	d9015017 	ldw	r4,1344(sp)
    4ce8:	b00b883a 	mov	r5,r22
    4cec:	d9800d04 	addi	r6,sp,52
    4cf0:	00033cc0 	call	33cc <__sprint_r>
    4cf4:	103b831e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4cf8:	dc800f17 	ldw	r18,60(sp)
    4cfc:	d9000617 	ldw	r4,24(sp)
    4d00:	d8c01a04 	addi	r3,sp,104
    4d04:	003cfc06 	br	40f8 <___vfprintf_internal_r+0xcd4>
    4d08:	07000074 	movhi	fp,1
    4d0c:	e73bf504 	addi	fp,fp,-4140
    4d10:	003bde06 	br	3c8c <___vfprintf_internal_r+0x868>
    4d14:	00800074 	movhi	r2,1
    4d18:	10bbe304 	addi	r2,r2,-4212
    4d1c:	d8814215 	stw	r2,1288(sp)
    4d20:	003def06 	br	44e0 <___vfprintf_internal_r+0x10bc>
    4d24:	d9014317 	ldw	r4,1292(sp)
    4d28:	d9414417 	ldw	r5,1296(sp)
    4d2c:	000a6000 	call	a600 <__isnand>
    4d30:	10003926 	beq	r2,zero,4e18 <___vfprintf_internal_r+0x19f4>
    4d34:	d9414e17 	ldw	r5,1336(sp)
    4d38:	008011c4 	movi	r2,71
    4d3c:	1140ce16 	blt	r2,r5,5078 <___vfprintf_internal_r+0x1c54>
    4d40:	01800074 	movhi	r6,1
    4d44:	31bbe404 	addi	r6,r6,-4208
    4d48:	d9814215 	stw	r6,1288(sp)
    4d4c:	003de406 	br	44e0 <___vfprintf_internal_r+0x10bc>
    4d50:	d9014d17 	ldw	r4,1332(sp)
    4d54:	bdc00044 	addi	r23,r23,1
    4d58:	b8c00007 	ldb	r3,0(r23)
    4d5c:	21000814 	ori	r4,r4,32
    4d60:	d9014d15 	stw	r4,1332(sp)
    4d64:	003a2e06 	br	3620 <___vfprintf_internal_r+0x1fc>
    4d68:	dcc14615 	stw	r19,1304(sp)
    4d6c:	98011016 	blt	r19,zero,51b0 <___vfprintf_internal_r+0x1d8c>
    4d70:	980f883a 	mov	r7,r19
    4d74:	d8014715 	stw	zero,1308(sp)
    4d78:	003c4c06 	br	3eac <___vfprintf_internal_r+0xa88>
    4d7c:	d9015017 	ldw	r4,1344(sp)
    4d80:	b00b883a 	mov	r5,r22
    4d84:	d9800d04 	addi	r6,sp,52
    4d88:	00033cc0 	call	33cc <__sprint_r>
    4d8c:	103b5d1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4d90:	dc800f17 	ldw	r18,60(sp)
    4d94:	d9000617 	ldw	r4,24(sp)
    4d98:	d8c01a04 	addi	r3,sp,104
    4d9c:	003f2e06 	br	4a58 <___vfprintf_internal_r+0x1634>
    4da0:	d8c14d17 	ldw	r3,1332(sp)
    4da4:	1880100c 	andi	r2,r3,64
    4da8:	1000a026 	beq	r2,zero,502c <___vfprintf_internal_r+0x1c08>
    4dac:	38800017 	ldw	r2,0(r7)
    4db0:	39c00104 	addi	r7,r7,4
    4db4:	d9c14115 	stw	r7,1284(sp)
    4db8:	d9014c17 	ldw	r4,1328(sp)
    4dbc:	d9c14117 	ldw	r7,1284(sp)
    4dc0:	1100000d 	sth	r4,0(r2)
    4dc4:	0039f306 	br	3594 <___vfprintf_internal_r+0x170>
    4dc8:	d9015017 	ldw	r4,1344(sp)
    4dcc:	b00b883a 	mov	r5,r22
    4dd0:	d9800d04 	addi	r6,sp,52
    4dd4:	00033cc0 	call	33cc <__sprint_r>
    4dd8:	103b4a1e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    4ddc:	dc800f17 	ldw	r18,60(sp)
    4de0:	dc400e17 	ldw	r17,56(sp)
    4de4:	d9000617 	ldw	r4,24(sp)
    4de8:	d8c01a04 	addi	r3,sp,104
    4dec:	003f2d06 	br	4aa4 <___vfprintf_internal_r+0x1680>
    4df0:	00800184 	movi	r2,6
    4df4:	14c09a36 	bltu	r2,r19,5060 <___vfprintf_internal_r+0x1c3c>
    4df8:	dcc14615 	stw	r19,1304(sp)
    4dfc:	9800010e 	bge	r19,zero,4e04 <___vfprintf_internal_r+0x19e0>
    4e00:	d8014615 	stw	zero,1304(sp)
    4e04:	00800074 	movhi	r2,1
    4e08:	10bbe604 	addi	r2,r2,-4200
    4e0c:	980f883a 	mov	r7,r19
    4e10:	d8814215 	stw	r2,1288(sp)
    4e14:	003a7206 	br	37e0 <___vfprintf_internal_r+0x3bc>
    4e18:	00bfffc4 	movi	r2,-1
    4e1c:	9880e226 	beq	r19,r2,51a8 <___vfprintf_internal_r+0x1d84>
    4e20:	d9414e17 	ldw	r5,1336(sp)
    4e24:	008019c4 	movi	r2,103
    4e28:	2880dc26 	beq	r5,r2,519c <___vfprintf_internal_r+0x1d78>
    4e2c:	008011c4 	movi	r2,71
    4e30:	2880da26 	beq	r5,r2,519c <___vfprintf_internal_r+0x1d78>
    4e34:	d9414d17 	ldw	r5,1332(sp)
    4e38:	d9014417 	ldw	r4,1296(sp)
    4e3c:	d9814317 	ldw	r6,1292(sp)
    4e40:	29404014 	ori	r5,r5,256
    4e44:	d9414d15 	stw	r5,1332(sp)
    4e48:	2000cc16 	blt	r4,zero,517c <___vfprintf_internal_r+0x1d58>
    4e4c:	3021883a 	mov	r16,r6
    4e50:	2023883a 	mov	r17,r4
    4e54:	0039883a 	mov	fp,zero
    4e58:	d9414e17 	ldw	r5,1336(sp)
    4e5c:	00801984 	movi	r2,102
    4e60:	2880b726 	beq	r5,r2,5140 <___vfprintf_internal_r+0x1d1c>
    4e64:	00801184 	movi	r2,70
    4e68:	2880b526 	beq	r5,r2,5140 <___vfprintf_internal_r+0x1d1c>
    4e6c:	00801944 	movi	r2,101
    4e70:	2880c826 	beq	r5,r2,5194 <___vfprintf_internal_r+0x1d70>
    4e74:	00801144 	movi	r2,69
    4e78:	2880c626 	beq	r5,r2,5194 <___vfprintf_internal_r+0x1d70>
    4e7c:	9829883a 	mov	r20,r19
    4e80:	d9015017 	ldw	r4,1344(sp)
    4e84:	d8800604 	addi	r2,sp,24
    4e88:	880d883a 	mov	r6,r17
    4e8c:	d8800115 	stw	r2,4(sp)
    4e90:	d8c00704 	addi	r3,sp,28
    4e94:	d8800804 	addi	r2,sp,32
    4e98:	800b883a 	mov	r5,r16
    4e9c:	01c00084 	movi	r7,2
    4ea0:	d8c00215 	stw	r3,8(sp)
    4ea4:	d8800315 	stw	r2,12(sp)
    4ea8:	dd000015 	stw	r20,0(sp)
    4eac:	000568c0 	call	568c <_dtoa_r>
    4eb0:	d9814e17 	ldw	r6,1336(sp)
    4eb4:	d8814215 	stw	r2,1288(sp)
    4eb8:	008019c4 	movi	r2,103
    4ebc:	30809526 	beq	r6,r2,5114 <___vfprintf_internal_r+0x1cf0>
    4ec0:	d8c14e17 	ldw	r3,1336(sp)
    4ec4:	008011c4 	movi	r2,71
    4ec8:	18809226 	beq	r3,r2,5114 <___vfprintf_internal_r+0x1cf0>
    4ecc:	d9414217 	ldw	r5,1288(sp)
    4ed0:	d9814e17 	ldw	r6,1336(sp)
    4ed4:	00801984 	movi	r2,102
    4ed8:	2d25883a 	add	r18,r5,r20
    4edc:	30808626 	beq	r6,r2,50f8 <___vfprintf_internal_r+0x1cd4>
    4ee0:	00801184 	movi	r2,70
    4ee4:	30808426 	beq	r6,r2,50f8 <___vfprintf_internal_r+0x1cd4>
    4ee8:	000d883a 	mov	r6,zero
    4eec:	000f883a 	mov	r7,zero
    4ef0:	880b883a 	mov	r5,r17
    4ef4:	8009883a 	mov	r4,r16
    4ef8:	000c9040 	call	c904 <__eqdf2>
    4efc:	1000751e 	bne	r2,zero,50d4 <___vfprintf_internal_r+0x1cb0>
    4f00:	9005883a 	mov	r2,r18
    4f04:	dc800815 	stw	r18,32(sp)
    4f08:	d9014217 	ldw	r4,1288(sp)
    4f0c:	d9414e17 	ldw	r5,1336(sp)
    4f10:	00c019c4 	movi	r3,103
    4f14:	1125c83a 	sub	r18,r2,r4
    4f18:	28c06826 	beq	r5,r3,50bc <___vfprintf_internal_r+0x1c98>
    4f1c:	008011c4 	movi	r2,71
    4f20:	28806626 	beq	r5,r2,50bc <___vfprintf_internal_r+0x1c98>
    4f24:	d9000617 	ldw	r4,24(sp)
    4f28:	d8c14e17 	ldw	r3,1336(sp)
    4f2c:	00801944 	movi	r2,101
    4f30:	10c05516 	blt	r2,r3,5088 <___vfprintf_internal_r+0x1c64>
    4f34:	213fffc4 	addi	r4,r4,-1
    4f38:	d9000615 	stw	r4,24(sp)
    4f3c:	d8c00905 	stb	r3,36(sp)
    4f40:	2021883a 	mov	r16,r4
    4f44:	2000c116 	blt	r4,zero,524c <___vfprintf_internal_r+0x1e28>
    4f48:	00800ac4 	movi	r2,43
    4f4c:	d8800945 	stb	r2,37(sp)
    4f50:	00800244 	movi	r2,9
    4f54:	1400af0e 	bge	r2,r16,5214 <___vfprintf_internal_r+0x1df0>
    4f58:	1027883a 	mov	r19,r2
    4f5c:	dc400cc4 	addi	r17,sp,51
    4f60:	8009883a 	mov	r4,r16
    4f64:	01400284 	movi	r5,10
    4f68:	000d0740 	call	d074 <__modsi3>
    4f6c:	10800c04 	addi	r2,r2,48
    4f70:	8c7fffc4 	addi	r17,r17,-1
    4f74:	8009883a 	mov	r4,r16
    4f78:	01400284 	movi	r5,10
    4f7c:	88800005 	stb	r2,0(r17)
    4f80:	000d0140 	call	d014 <__divsi3>
    4f84:	1021883a 	mov	r16,r2
    4f88:	98bff516 	blt	r19,r2,4f60 <___vfprintf_internal_r+0x1b3c>
    4f8c:	10c00c04 	addi	r3,r2,48
    4f90:	d8800b04 	addi	r2,sp,44
    4f94:	108001c4 	addi	r2,r2,7
    4f98:	897fffc4 	addi	r5,r17,-1
    4f9c:	88ffffc5 	stb	r3,-1(r17)
    4fa0:	2880a72e 	bgeu	r5,r2,5240 <___vfprintf_internal_r+0x1e1c>
    4fa4:	1009883a 	mov	r4,r2
    4fa8:	d9800904 	addi	r6,sp,36
    4fac:	d8c00984 	addi	r3,sp,38
    4fb0:	28800003 	ldbu	r2,0(r5)
    4fb4:	29400044 	addi	r5,r5,1
    4fb8:	18800005 	stb	r2,0(r3)
    4fbc:	18c00044 	addi	r3,r3,1
    4fc0:	293ffb36 	bltu	r5,r4,4fb0 <___vfprintf_internal_r+0x1b8c>
    4fc4:	1987c83a 	sub	r3,r3,r6
    4fc8:	00800044 	movi	r2,1
    4fcc:	d8c14915 	stw	r3,1316(sp)
    4fd0:	90cf883a 	add	r7,r18,r3
    4fd4:	1480960e 	bge	r2,r18,5230 <___vfprintf_internal_r+0x1e0c>
    4fd8:	39c00044 	addi	r7,r7,1
    4fdc:	d9c14615 	stw	r7,1304(sp)
    4fe0:	38003416 	blt	r7,zero,50b4 <___vfprintf_internal_r+0x1c90>
    4fe4:	e0803fcc 	andi	r2,fp,255
    4fe8:	1080201c 	xori	r2,r2,128
    4fec:	10bfe004 	addi	r2,r2,-128
    4ff0:	10004e26 	beq	r2,zero,512c <___vfprintf_internal_r+0x1d08>
    4ff4:	00800b44 	movi	r2,45
    4ff8:	dc814815 	stw	r18,1312(sp)
    4ffc:	d8014715 	stw	zero,1308(sp)
    5000:	d8800405 	stb	r2,16(sp)
    5004:	003bab06 	br	3eb4 <___vfprintf_internal_r+0xa90>
    5008:	00800b44 	movi	r2,45
    500c:	d8800405 	stb	r2,16(sp)
    5010:	003d2d06 	br	44c8 <___vfprintf_internal_r+0x10a4>
    5014:	d9015017 	ldw	r4,1344(sp)
    5018:	b00b883a 	mov	r5,r22
    501c:	d9800d04 	addi	r6,sp,52
    5020:	00033cc0 	call	33cc <__sprint_r>
    5024:	103ab71e 	bne	r2,zero,3b04 <___vfprintf_internal_r+0x6e0>
    5028:	003ab506 	br	3b00 <___vfprintf_internal_r+0x6dc>
    502c:	38800017 	ldw	r2,0(r7)
    5030:	39c00104 	addi	r7,r7,4
    5034:	d9c14115 	stw	r7,1284(sp)
    5038:	d9414c17 	ldw	r5,1328(sp)
    503c:	d9c14117 	ldw	r7,1284(sp)
    5040:	11400015 	stw	r5,0(r2)
    5044:	00395306 	br	3594 <___vfprintf_internal_r+0x170>
    5048:	980f883a 	mov	r7,r19
    504c:	dcc14615 	stw	r19,1304(sp)
    5050:	d8014715 	stw	zero,1308(sp)
    5054:	003b9506 	br	3eac <___vfprintf_internal_r+0xa88>
    5058:	0027883a 	mov	r19,zero
    505c:	00397206 	br	3628 <___vfprintf_internal_r+0x204>
    5060:	00c00074 	movhi	r3,1
    5064:	18fbe604 	addi	r3,r3,-4200
    5068:	100f883a 	mov	r7,r2
    506c:	d8814615 	stw	r2,1304(sp)
    5070:	d8c14215 	stw	r3,1288(sp)
    5074:	0039da06 	br	37e0 <___vfprintf_internal_r+0x3bc>
    5078:	00800074 	movhi	r2,1
    507c:	10bbe504 	addi	r2,r2,-4204
    5080:	d8814215 	stw	r2,1288(sp)
    5084:	003d1606 	br	44e0 <___vfprintf_internal_r+0x10bc>
    5088:	d9414e17 	ldw	r5,1336(sp)
    508c:	00801984 	movi	r2,102
    5090:	28804926 	beq	r5,r2,51b8 <___vfprintf_internal_r+0x1d94>
    5094:	200f883a 	mov	r7,r4
    5098:	24805716 	blt	r4,r18,51f8 <___vfprintf_internal_r+0x1dd4>
    509c:	d9414d17 	ldw	r5,1332(sp)
    50a0:	2880004c 	andi	r2,r5,1
    50a4:	10000126 	beq	r2,zero,50ac <___vfprintf_internal_r+0x1c88>
    50a8:	21c00044 	addi	r7,r4,1
    50ac:	d9c14615 	stw	r7,1304(sp)
    50b0:	383fcc0e 	bge	r7,zero,4fe4 <___vfprintf_internal_r+0x1bc0>
    50b4:	d8014615 	stw	zero,1304(sp)
    50b8:	003fca06 	br	4fe4 <___vfprintf_internal_r+0x1bc0>
    50bc:	d9000617 	ldw	r4,24(sp)
    50c0:	00bfff04 	movi	r2,-4
    50c4:	1100480e 	bge	r2,r4,51e8 <___vfprintf_internal_r+0x1dc4>
    50c8:	99004716 	blt	r19,r4,51e8 <___vfprintf_internal_r+0x1dc4>
    50cc:	d8c14e15 	stw	r3,1336(sp)
    50d0:	003ff006 	br	5094 <___vfprintf_internal_r+0x1c70>
    50d4:	d8800817 	ldw	r2,32(sp)
    50d8:	14bf8b2e 	bgeu	r2,r18,4f08 <___vfprintf_internal_r+0x1ae4>
    50dc:	9007883a 	mov	r3,r18
    50e0:	01000c04 	movi	r4,48
    50e4:	11000005 	stb	r4,0(r2)
    50e8:	10800044 	addi	r2,r2,1
    50ec:	d8800815 	stw	r2,32(sp)
    50f0:	18bffc1e 	bne	r3,r2,50e4 <___vfprintf_internal_r+0x1cc0>
    50f4:	003f8406 	br	4f08 <___vfprintf_internal_r+0x1ae4>
    50f8:	d8814217 	ldw	r2,1288(sp)
    50fc:	10c00007 	ldb	r3,0(r2)
    5100:	00800c04 	movi	r2,48
    5104:	18805b26 	beq	r3,r2,5274 <___vfprintf_internal_r+0x1e50>
    5108:	d9000617 	ldw	r4,24(sp)
    510c:	9125883a 	add	r18,r18,r4
    5110:	003f7506 	br	4ee8 <___vfprintf_internal_r+0x1ac4>
    5114:	d9014d17 	ldw	r4,1332(sp)
    5118:	2080004c 	andi	r2,r4,1
    511c:	1005003a 	cmpeq	r2,r2,zero
    5120:	103f6a26 	beq	r2,zero,4ecc <___vfprintf_internal_r+0x1aa8>
    5124:	d8800817 	ldw	r2,32(sp)
    5128:	003f7706 	br	4f08 <___vfprintf_internal_r+0x1ae4>
    512c:	d9c14615 	stw	r7,1304(sp)
    5130:	38004d16 	blt	r7,zero,5268 <___vfprintf_internal_r+0x1e44>
    5134:	dc814815 	stw	r18,1312(sp)
    5138:	d8014715 	stw	zero,1308(sp)
    513c:	003b5b06 	br	3eac <___vfprintf_internal_r+0xa88>
    5140:	d9015017 	ldw	r4,1344(sp)
    5144:	d8800604 	addi	r2,sp,24
    5148:	d8800115 	stw	r2,4(sp)
    514c:	d8c00704 	addi	r3,sp,28
    5150:	d8800804 	addi	r2,sp,32
    5154:	800b883a 	mov	r5,r16
    5158:	880d883a 	mov	r6,r17
    515c:	01c000c4 	movi	r7,3
    5160:	d8c00215 	stw	r3,8(sp)
    5164:	d8800315 	stw	r2,12(sp)
    5168:	dcc00015 	stw	r19,0(sp)
    516c:	9829883a 	mov	r20,r19
    5170:	000568c0 	call	568c <_dtoa_r>
    5174:	d8814215 	stw	r2,1288(sp)
    5178:	003f5106 	br	4ec0 <___vfprintf_internal_r+0x1a9c>
    517c:	d8c14317 	ldw	r3,1292(sp)
    5180:	d9014417 	ldw	r4,1296(sp)
    5184:	07000b44 	movi	fp,45
    5188:	1821883a 	mov	r16,r3
    518c:	2460003c 	xorhi	r17,r4,32768
    5190:	003f3106 	br	4e58 <___vfprintf_internal_r+0x1a34>
    5194:	9d000044 	addi	r20,r19,1
    5198:	003f3906 	br	4e80 <___vfprintf_internal_r+0x1a5c>
    519c:	983f251e 	bne	r19,zero,4e34 <___vfprintf_internal_r+0x1a10>
    51a0:	04c00044 	movi	r19,1
    51a4:	003f2306 	br	4e34 <___vfprintf_internal_r+0x1a10>
    51a8:	04c00184 	movi	r19,6
    51ac:	003f2106 	br	4e34 <___vfprintf_internal_r+0x1a10>
    51b0:	d8014615 	stw	zero,1304(sp)
    51b4:	003eee06 	br	4d70 <___vfprintf_internal_r+0x194c>
    51b8:	200f883a 	mov	r7,r4
    51bc:	0100370e 	bge	zero,r4,529c <___vfprintf_internal_r+0x1e78>
    51c0:	9800031e 	bne	r19,zero,51d0 <___vfprintf_internal_r+0x1dac>
    51c4:	d9814d17 	ldw	r6,1332(sp)
    51c8:	3080004c 	andi	r2,r6,1
    51cc:	103fb726 	beq	r2,zero,50ac <___vfprintf_internal_r+0x1c88>
    51d0:	20800044 	addi	r2,r4,1
    51d4:	98a7883a 	add	r19,r19,r2
    51d8:	dcc14615 	stw	r19,1304(sp)
    51dc:	980f883a 	mov	r7,r19
    51e0:	983f800e 	bge	r19,zero,4fe4 <___vfprintf_internal_r+0x1bc0>
    51e4:	003fb306 	br	50b4 <___vfprintf_internal_r+0x1c90>
    51e8:	d9814e17 	ldw	r6,1336(sp)
    51ec:	31bfff84 	addi	r6,r6,-2
    51f0:	d9814e15 	stw	r6,1336(sp)
    51f4:	003f4c06 	br	4f28 <___vfprintf_internal_r+0x1b04>
    51f8:	0100180e 	bge	zero,r4,525c <___vfprintf_internal_r+0x1e38>
    51fc:	00800044 	movi	r2,1
    5200:	1485883a 	add	r2,r2,r18
    5204:	d8814615 	stw	r2,1304(sp)
    5208:	100f883a 	mov	r7,r2
    520c:	103f750e 	bge	r2,zero,4fe4 <___vfprintf_internal_r+0x1bc0>
    5210:	003fa806 	br	50b4 <___vfprintf_internal_r+0x1c90>
    5214:	80c00c04 	addi	r3,r16,48
    5218:	00800c04 	movi	r2,48
    521c:	d8c009c5 	stb	r3,39(sp)
    5220:	d9800904 	addi	r6,sp,36
    5224:	d8c00a04 	addi	r3,sp,40
    5228:	d8800985 	stb	r2,38(sp)
    522c:	003f6506 	br	4fc4 <___vfprintf_internal_r+0x1ba0>
    5230:	d9014d17 	ldw	r4,1332(sp)
    5234:	2084703a 	and	r2,r4,r2
    5238:	103f9c26 	beq	r2,zero,50ac <___vfprintf_internal_r+0x1c88>
    523c:	003f6606 	br	4fd8 <___vfprintf_internal_r+0x1bb4>
    5240:	d9800904 	addi	r6,sp,36
    5244:	d8c00984 	addi	r3,sp,38
    5248:	003f5e06 	br	4fc4 <___vfprintf_internal_r+0x1ba0>
    524c:	00800b44 	movi	r2,45
    5250:	0121c83a 	sub	r16,zero,r4
    5254:	d8800945 	stb	r2,37(sp)
    5258:	003f3d06 	br	4f50 <___vfprintf_internal_r+0x1b2c>
    525c:	00800084 	movi	r2,2
    5260:	1105c83a 	sub	r2,r2,r4
    5264:	003fe606 	br	5200 <___vfprintf_internal_r+0x1ddc>
    5268:	d8014615 	stw	zero,1304(sp)
    526c:	dc814815 	stw	r18,1312(sp)
    5270:	003fb106 	br	5138 <___vfprintf_internal_r+0x1d14>
    5274:	000d883a 	mov	r6,zero
    5278:	000f883a 	mov	r7,zero
    527c:	8009883a 	mov	r4,r16
    5280:	880b883a 	mov	r5,r17
    5284:	000c98c0 	call	c98c <__nedf2>
    5288:	103f9f26 	beq	r2,zero,5108 <___vfprintf_internal_r+0x1ce4>
    528c:	00800044 	movi	r2,1
    5290:	1509c83a 	sub	r4,r2,r20
    5294:	d9000615 	stw	r4,24(sp)
    5298:	003f9b06 	br	5108 <___vfprintf_internal_r+0x1ce4>
    529c:	98000d1e 	bne	r19,zero,52d4 <___vfprintf_internal_r+0x1eb0>
    52a0:	d8c14d17 	ldw	r3,1332(sp)
    52a4:	1880004c 	andi	r2,r3,1
    52a8:	10000a1e 	bne	r2,zero,52d4 <___vfprintf_internal_r+0x1eb0>
    52ac:	01000044 	movi	r4,1
    52b0:	200f883a 	mov	r7,r4
    52b4:	d9014615 	stw	r4,1304(sp)
    52b8:	003f4a06 	br	4fe4 <___vfprintf_internal_r+0x1bc0>
    52bc:	3cc00017 	ldw	r19,0(r7)
    52c0:	39c00104 	addi	r7,r7,4
    52c4:	983d0e0e 	bge	r19,zero,4700 <___vfprintf_internal_r+0x12dc>
    52c8:	b8c00007 	ldb	r3,0(r23)
    52cc:	04ffffc4 	movi	r19,-1
    52d0:	0038d306 	br	3620 <___vfprintf_internal_r+0x1fc>
    52d4:	9cc00084 	addi	r19,r19,2
    52d8:	dcc14615 	stw	r19,1304(sp)
    52dc:	980f883a 	mov	r7,r19
    52e0:	983f400e 	bge	r19,zero,4fe4 <___vfprintf_internal_r+0x1bc0>
    52e4:	003f7306 	br	50b4 <___vfprintf_internal_r+0x1c90>

000052e8 <__vfprintf_internal>:
    52e8:	00800074 	movhi	r2,1
    52ec:	10837004 	addi	r2,r2,3520
    52f0:	2013883a 	mov	r9,r4
    52f4:	11000017 	ldw	r4,0(r2)
    52f8:	2805883a 	mov	r2,r5
    52fc:	300f883a 	mov	r7,r6
    5300:	480b883a 	mov	r5,r9
    5304:	100d883a 	mov	r6,r2
    5308:	00034241 	jmpi	3424 <___vfprintf_internal_r>

0000530c <__swsetup_r>:
    530c:	00800074 	movhi	r2,1
    5310:	10837004 	addi	r2,r2,3520
    5314:	10c00017 	ldw	r3,0(r2)
    5318:	defffd04 	addi	sp,sp,-12
    531c:	dc400115 	stw	r17,4(sp)
    5320:	dc000015 	stw	r16,0(sp)
    5324:	dfc00215 	stw	ra,8(sp)
    5328:	2023883a 	mov	r17,r4
    532c:	2821883a 	mov	r16,r5
    5330:	18000226 	beq	r3,zero,533c <__swsetup_r+0x30>
    5334:	18800e17 	ldw	r2,56(r3)
    5338:	10001f26 	beq	r2,zero,53b8 <__swsetup_r+0xac>
    533c:	8100030b 	ldhu	r4,12(r16)
    5340:	2080020c 	andi	r2,r4,8
    5344:	10002826 	beq	r2,zero,53e8 <__swsetup_r+0xdc>
    5348:	81400417 	ldw	r5,16(r16)
    534c:	28001d26 	beq	r5,zero,53c4 <__swsetup_r+0xb8>
    5350:	2080004c 	andi	r2,r4,1
    5354:	1005003a 	cmpeq	r2,r2,zero
    5358:	10000b26 	beq	r2,zero,5388 <__swsetup_r+0x7c>
    535c:	2080008c 	andi	r2,r4,2
    5360:	10001226 	beq	r2,zero,53ac <__swsetup_r+0xa0>
    5364:	0005883a 	mov	r2,zero
    5368:	80800215 	stw	r2,8(r16)
    536c:	28000b26 	beq	r5,zero,539c <__swsetup_r+0x90>
    5370:	0005883a 	mov	r2,zero
    5374:	dfc00217 	ldw	ra,8(sp)
    5378:	dc400117 	ldw	r17,4(sp)
    537c:	dc000017 	ldw	r16,0(sp)
    5380:	dec00304 	addi	sp,sp,12
    5384:	f800283a 	ret
    5388:	80800517 	ldw	r2,20(r16)
    538c:	80000215 	stw	zero,8(r16)
    5390:	0085c83a 	sub	r2,zero,r2
    5394:	80800615 	stw	r2,24(r16)
    5398:	283ff51e 	bne	r5,zero,5370 <__swsetup_r+0x64>
    539c:	2080200c 	andi	r2,r4,128
    53a0:	103ff326 	beq	r2,zero,5370 <__swsetup_r+0x64>
    53a4:	00bfffc4 	movi	r2,-1
    53a8:	003ff206 	br	5374 <__swsetup_r+0x68>
    53ac:	80800517 	ldw	r2,20(r16)
    53b0:	80800215 	stw	r2,8(r16)
    53b4:	003fed06 	br	536c <__swsetup_r+0x60>
    53b8:	1809883a 	mov	r4,r3
    53bc:	0006ed80 	call	6ed8 <__sinit>
    53c0:	003fde06 	br	533c <__swsetup_r+0x30>
    53c4:	20c0a00c 	andi	r3,r4,640
    53c8:	00808004 	movi	r2,512
    53cc:	18bfe026 	beq	r3,r2,5350 <__swsetup_r+0x44>
    53d0:	8809883a 	mov	r4,r17
    53d4:	800b883a 	mov	r5,r16
    53d8:	00088500 	call	8850 <__smakebuf_r>
    53dc:	8100030b 	ldhu	r4,12(r16)
    53e0:	81400417 	ldw	r5,16(r16)
    53e4:	003fda06 	br	5350 <__swsetup_r+0x44>
    53e8:	2080040c 	andi	r2,r4,16
    53ec:	103fed26 	beq	r2,zero,53a4 <__swsetup_r+0x98>
    53f0:	2080010c 	andi	r2,r4,4
    53f4:	10001226 	beq	r2,zero,5440 <__swsetup_r+0x134>
    53f8:	81400c17 	ldw	r5,48(r16)
    53fc:	28000526 	beq	r5,zero,5414 <__swsetup_r+0x108>
    5400:	80801004 	addi	r2,r16,64
    5404:	28800226 	beq	r5,r2,5410 <__swsetup_r+0x104>
    5408:	8809883a 	mov	r4,r17
    540c:	00072900 	call	7290 <_free_r>
    5410:	80000c15 	stw	zero,48(r16)
    5414:	8080030b 	ldhu	r2,12(r16)
    5418:	81400417 	ldw	r5,16(r16)
    541c:	80000115 	stw	zero,4(r16)
    5420:	10bff6cc 	andi	r2,r2,65499
    5424:	8080030d 	sth	r2,12(r16)
    5428:	81400015 	stw	r5,0(r16)
    542c:	8080030b 	ldhu	r2,12(r16)
    5430:	10800214 	ori	r2,r2,8
    5434:	113fffcc 	andi	r4,r2,65535
    5438:	8080030d 	sth	r2,12(r16)
    543c:	003fc306 	br	534c <__swsetup_r+0x40>
    5440:	81400417 	ldw	r5,16(r16)
    5444:	003ff906 	br	542c <__swsetup_r+0x120>

00005448 <quorem>:
    5448:	28c00417 	ldw	r3,16(r5)
    544c:	20800417 	ldw	r2,16(r4)
    5450:	defff104 	addi	sp,sp,-60
    5454:	dfc00e15 	stw	ra,56(sp)
    5458:	df000d15 	stw	fp,52(sp)
    545c:	ddc00c15 	stw	r23,48(sp)
    5460:	dd800b15 	stw	r22,44(sp)
    5464:	dd400a15 	stw	r21,40(sp)
    5468:	dd000915 	stw	r20,36(sp)
    546c:	dcc00815 	stw	r19,32(sp)
    5470:	dc800715 	stw	r18,28(sp)
    5474:	dc400615 	stw	r17,24(sp)
    5478:	dc000515 	stw	r16,20(sp)
    547c:	d9000315 	stw	r4,12(sp)
    5480:	d9400415 	stw	r5,16(sp)
    5484:	10c07f16 	blt	r2,r3,5684 <quorem+0x23c>
    5488:	1d3fffc4 	addi	r20,r3,-1
    548c:	d8c00417 	ldw	r3,16(sp)
    5490:	d9000317 	ldw	r4,12(sp)
    5494:	a505883a 	add	r2,r20,r20
    5498:	1085883a 	add	r2,r2,r2
    549c:	1cc00504 	addi	r19,r3,20
    54a0:	25c00504 	addi	r23,r4,20
    54a4:	98ad883a 	add	r22,r19,r2
    54a8:	15c7883a 	add	r3,r2,r23
    54ac:	b1400017 	ldw	r5,0(r22)
    54b0:	19000017 	ldw	r4,0(r3)
    54b4:	d8c00015 	stw	r3,0(sp)
    54b8:	29400044 	addi	r5,r5,1
    54bc:	d9000215 	stw	r4,8(sp)
    54c0:	000d0d40 	call	d0d4 <__udivsi3>
    54c4:	1039883a 	mov	fp,r2
    54c8:	10003d1e 	bne	r2,zero,55c0 <quorem+0x178>
    54cc:	d9400417 	ldw	r5,16(sp)
    54d0:	d9000317 	ldw	r4,12(sp)
    54d4:	0008eb00 	call	8eb0 <__mcmp>
    54d8:	10002c16 	blt	r2,zero,558c <quorem+0x144>
    54dc:	e7000044 	addi	fp,fp,1
    54e0:	b80f883a 	mov	r7,r23
    54e4:	0011883a 	mov	r8,zero
    54e8:	0009883a 	mov	r4,zero
    54ec:	99400017 	ldw	r5,0(r19)
    54f0:	38c00017 	ldw	r3,0(r7)
    54f4:	9cc00104 	addi	r19,r19,4
    54f8:	28bfffcc 	andi	r2,r5,65535
    54fc:	2085883a 	add	r2,r4,r2
    5500:	11bfffcc 	andi	r6,r2,65535
    5504:	193fffcc 	andi	r4,r3,65535
    5508:	1004d43a 	srli	r2,r2,16
    550c:	280ad43a 	srli	r5,r5,16
    5510:	2189c83a 	sub	r4,r4,r6
    5514:	2209883a 	add	r4,r4,r8
    5518:	1806d43a 	srli	r3,r3,16
    551c:	288b883a 	add	r5,r5,r2
    5520:	200dd43a 	srai	r6,r4,16
    5524:	28bfffcc 	andi	r2,r5,65535
    5528:	1887c83a 	sub	r3,r3,r2
    552c:	1987883a 	add	r3,r3,r6
    5530:	3900000d 	sth	r4,0(r7)
    5534:	38c0008d 	sth	r3,2(r7)
    5538:	2808d43a 	srli	r4,r5,16
    553c:	39c00104 	addi	r7,r7,4
    5540:	1811d43a 	srai	r8,r3,16
    5544:	b4ffe92e 	bgeu	r22,r19,54ec <quorem+0xa4>
    5548:	a505883a 	add	r2,r20,r20
    554c:	1085883a 	add	r2,r2,r2
    5550:	b885883a 	add	r2,r23,r2
    5554:	10c00017 	ldw	r3,0(r2)
    5558:	18000c1e 	bne	r3,zero,558c <quorem+0x144>
    555c:	113fff04 	addi	r4,r2,-4
    5560:	b900082e 	bgeu	r23,r4,5584 <quorem+0x13c>
    5564:	10bfff17 	ldw	r2,-4(r2)
    5568:	10000326 	beq	r2,zero,5578 <quorem+0x130>
    556c:	00000506 	br	5584 <quorem+0x13c>
    5570:	20800017 	ldw	r2,0(r4)
    5574:	1000031e 	bne	r2,zero,5584 <quorem+0x13c>
    5578:	213fff04 	addi	r4,r4,-4
    557c:	a53fffc4 	addi	r20,r20,-1
    5580:	b93ffb36 	bltu	r23,r4,5570 <quorem+0x128>
    5584:	d9000317 	ldw	r4,12(sp)
    5588:	25000415 	stw	r20,16(r4)
    558c:	e005883a 	mov	r2,fp
    5590:	dfc00e17 	ldw	ra,56(sp)
    5594:	df000d17 	ldw	fp,52(sp)
    5598:	ddc00c17 	ldw	r23,48(sp)
    559c:	dd800b17 	ldw	r22,44(sp)
    55a0:	dd400a17 	ldw	r21,40(sp)
    55a4:	dd000917 	ldw	r20,36(sp)
    55a8:	dcc00817 	ldw	r19,32(sp)
    55ac:	dc800717 	ldw	r18,28(sp)
    55b0:	dc400617 	ldw	r17,24(sp)
    55b4:	dc000517 	ldw	r16,20(sp)
    55b8:	dec00f04 	addi	sp,sp,60
    55bc:	f800283a 	ret
    55c0:	b823883a 	mov	r17,r23
    55c4:	9825883a 	mov	r18,r19
    55c8:	d8000115 	stw	zero,4(sp)
    55cc:	002b883a 	mov	r21,zero
    55d0:	94000017 	ldw	r16,0(r18)
    55d4:	e009883a 	mov	r4,fp
    55d8:	94800104 	addi	r18,r18,4
    55dc:	817fffcc 	andi	r5,r16,65535
    55e0:	000d0e40 	call	d0e4 <__mulsi3>
    55e4:	800ad43a 	srli	r5,r16,16
    55e8:	e009883a 	mov	r4,fp
    55ec:	a8a1883a 	add	r16,r21,r2
    55f0:	000d0e40 	call	d0e4 <__mulsi3>
    55f4:	89000017 	ldw	r4,0(r17)
    55f8:	80ffffcc 	andi	r3,r16,65535
    55fc:	8020d43a 	srli	r16,r16,16
    5600:	217fffcc 	andi	r5,r4,65535
    5604:	28cbc83a 	sub	r5,r5,r3
    5608:	d8c00117 	ldw	r3,4(sp)
    560c:	2008d43a 	srli	r4,r4,16
    5610:	1405883a 	add	r2,r2,r16
    5614:	28cb883a 	add	r5,r5,r3
    5618:	280dd43a 	srai	r6,r5,16
    561c:	10ffffcc 	andi	r3,r2,65535
    5620:	20c9c83a 	sub	r4,r4,r3
    5624:	2189883a 	add	r4,r4,r6
    5628:	8900008d 	sth	r4,2(r17)
    562c:	2009d43a 	srai	r4,r4,16
    5630:	8940000d 	sth	r5,0(r17)
    5634:	102ad43a 	srli	r21,r2,16
    5638:	8c400104 	addi	r17,r17,4
    563c:	d9000115 	stw	r4,4(sp)
    5640:	b4bfe32e 	bgeu	r22,r18,55d0 <quorem+0x188>
    5644:	d9000217 	ldw	r4,8(sp)
    5648:	203fa01e 	bne	r4,zero,54cc <quorem+0x84>
    564c:	d8800017 	ldw	r2,0(sp)
    5650:	10ffff04 	addi	r3,r2,-4
    5654:	b8c0082e 	bgeu	r23,r3,5678 <quorem+0x230>
    5658:	10bfff17 	ldw	r2,-4(r2)
    565c:	10000326 	beq	r2,zero,566c <quorem+0x224>
    5660:	00000506 	br	5678 <quorem+0x230>
    5664:	18800017 	ldw	r2,0(r3)
    5668:	1000031e 	bne	r2,zero,5678 <quorem+0x230>
    566c:	18ffff04 	addi	r3,r3,-4
    5670:	a53fffc4 	addi	r20,r20,-1
    5674:	b8fffb36 	bltu	r23,r3,5664 <quorem+0x21c>
    5678:	d8c00317 	ldw	r3,12(sp)
    567c:	1d000415 	stw	r20,16(r3)
    5680:	003f9206 	br	54cc <quorem+0x84>
    5684:	0005883a 	mov	r2,zero
    5688:	003fc106 	br	5590 <quorem+0x148>

0000568c <_dtoa_r>:
    568c:	22001017 	ldw	r8,64(r4)
    5690:	deffda04 	addi	sp,sp,-152
    5694:	dd402115 	stw	r21,132(sp)
    5698:	dd002015 	stw	r20,128(sp)
    569c:	dc801e15 	stw	r18,120(sp)
    56a0:	dc401d15 	stw	r17,116(sp)
    56a4:	dfc02515 	stw	ra,148(sp)
    56a8:	df002415 	stw	fp,144(sp)
    56ac:	ddc02315 	stw	r23,140(sp)
    56b0:	dd802215 	stw	r22,136(sp)
    56b4:	dcc01f15 	stw	r19,124(sp)
    56b8:	dc001c15 	stw	r16,112(sp)
    56bc:	d9001615 	stw	r4,88(sp)
    56c0:	3023883a 	mov	r17,r6
    56c4:	2829883a 	mov	r20,r5
    56c8:	d9c01715 	stw	r7,92(sp)
    56cc:	dc802817 	ldw	r18,160(sp)
    56d0:	302b883a 	mov	r21,r6
    56d4:	40000a26 	beq	r8,zero,5700 <_dtoa_r+0x74>
    56d8:	20801117 	ldw	r2,68(r4)
    56dc:	400b883a 	mov	r5,r8
    56e0:	40800115 	stw	r2,4(r8)
    56e4:	20c01117 	ldw	r3,68(r4)
    56e8:	00800044 	movi	r2,1
    56ec:	10c4983a 	sll	r2,r2,r3
    56f0:	40800215 	stw	r2,8(r8)
    56f4:	0008d540 	call	8d54 <_Bfree>
    56f8:	d8c01617 	ldw	r3,88(sp)
    56fc:	18001015 	stw	zero,64(r3)
    5700:	8800a316 	blt	r17,zero,5990 <_dtoa_r+0x304>
    5704:	90000015 	stw	zero,0(r18)
    5708:	a8dffc2c 	andhi	r3,r21,32752
    570c:	009ffc34 	movhi	r2,32752
    5710:	18809126 	beq	r3,r2,5958 <_dtoa_r+0x2cc>
    5714:	000d883a 	mov	r6,zero
    5718:	000f883a 	mov	r7,zero
    571c:	a009883a 	mov	r4,r20
    5720:	a80b883a 	mov	r5,r21
    5724:	dd001215 	stw	r20,72(sp)
    5728:	dd401315 	stw	r21,76(sp)
    572c:	000c98c0 	call	c98c <__nedf2>
    5730:	1000171e 	bne	r2,zero,5790 <_dtoa_r+0x104>
    5734:	d9802717 	ldw	r6,156(sp)
    5738:	00800044 	movi	r2,1
    573c:	30800015 	stw	r2,0(r6)
    5740:	d8802917 	ldw	r2,164(sp)
    5744:	10029b26 	beq	r2,zero,61b4 <_dtoa_r+0xb28>
    5748:	d9002917 	ldw	r4,164(sp)
    574c:	00800074 	movhi	r2,1
    5750:	10bbf444 	addi	r2,r2,-4143
    5754:	10ffffc4 	addi	r3,r2,-1
    5758:	20800015 	stw	r2,0(r4)
    575c:	1805883a 	mov	r2,r3
    5760:	dfc02517 	ldw	ra,148(sp)
    5764:	df002417 	ldw	fp,144(sp)
    5768:	ddc02317 	ldw	r23,140(sp)
    576c:	dd802217 	ldw	r22,136(sp)
    5770:	dd402117 	ldw	r21,132(sp)
    5774:	dd002017 	ldw	r20,128(sp)
    5778:	dcc01f17 	ldw	r19,124(sp)
    577c:	dc801e17 	ldw	r18,120(sp)
    5780:	dc401d17 	ldw	r17,116(sp)
    5784:	dc001c17 	ldw	r16,112(sp)
    5788:	dec02604 	addi	sp,sp,152
    578c:	f800283a 	ret
    5790:	d9001617 	ldw	r4,88(sp)
    5794:	d9401217 	ldw	r5,72(sp)
    5798:	d8800104 	addi	r2,sp,4
    579c:	a80d883a 	mov	r6,r21
    57a0:	d9c00204 	addi	r7,sp,8
    57a4:	d8800015 	stw	r2,0(sp)
    57a8:	00093900 	call	9390 <__d2b>
    57ac:	d8800715 	stw	r2,28(sp)
    57b0:	a804d53a 	srli	r2,r21,20
    57b4:	1101ffcc 	andi	r4,r2,2047
    57b8:	20008626 	beq	r4,zero,59d4 <_dtoa_r+0x348>
    57bc:	d8c01217 	ldw	r3,72(sp)
    57c0:	00800434 	movhi	r2,16
    57c4:	10bfffc4 	addi	r2,r2,-1
    57c8:	ddc00117 	ldw	r23,4(sp)
    57cc:	a884703a 	and	r2,r21,r2
    57d0:	1811883a 	mov	r8,r3
    57d4:	124ffc34 	orhi	r9,r2,16368
    57d8:	25bf0044 	addi	r22,r4,-1023
    57dc:	d8000815 	stw	zero,32(sp)
    57e0:	0005883a 	mov	r2,zero
    57e4:	00cffe34 	movhi	r3,16376
    57e8:	480b883a 	mov	r5,r9
    57ec:	4009883a 	mov	r4,r8
    57f0:	180f883a 	mov	r7,r3
    57f4:	100d883a 	mov	r6,r2
    57f8:	000c1f40 	call	c1f4 <__subdf3>
    57fc:	0218dbf4 	movhi	r8,25455
    5800:	4210d844 	addi	r8,r8,17249
    5804:	024ff4f4 	movhi	r9,16339
    5808:	4a61e9c4 	addi	r9,r9,-30809
    580c:	480f883a 	mov	r7,r9
    5810:	400d883a 	mov	r6,r8
    5814:	180b883a 	mov	r5,r3
    5818:	1009883a 	mov	r4,r2
    581c:	000c2e80 	call	c2e8 <__muldf3>
    5820:	0222d874 	movhi	r8,35681
    5824:	42322cc4 	addi	r8,r8,-14157
    5828:	024ff1f4 	movhi	r9,16327
    582c:	4a628a04 	addi	r9,r9,-30168
    5830:	480f883a 	mov	r7,r9
    5834:	400d883a 	mov	r6,r8
    5838:	180b883a 	mov	r5,r3
    583c:	1009883a 	mov	r4,r2
    5840:	000c2740 	call	c274 <__adddf3>
    5844:	b009883a 	mov	r4,r22
    5848:	1021883a 	mov	r16,r2
    584c:	1823883a 	mov	r17,r3
    5850:	000cc340 	call	cc34 <__floatsidf>
    5854:	021427f4 	movhi	r8,20639
    5858:	421e7ec4 	addi	r8,r8,31227
    585c:	024ff4f4 	movhi	r9,16339
    5860:	4a5104c4 	addi	r9,r9,17427
    5864:	480f883a 	mov	r7,r9
    5868:	400d883a 	mov	r6,r8
    586c:	180b883a 	mov	r5,r3
    5870:	1009883a 	mov	r4,r2
    5874:	000c2e80 	call	c2e8 <__muldf3>
    5878:	180f883a 	mov	r7,r3
    587c:	880b883a 	mov	r5,r17
    5880:	100d883a 	mov	r6,r2
    5884:	8009883a 	mov	r4,r16
    5888:	000c2740 	call	c274 <__adddf3>
    588c:	1009883a 	mov	r4,r2
    5890:	180b883a 	mov	r5,r3
    5894:	1021883a 	mov	r16,r2
    5898:	1823883a 	mov	r17,r3
    589c:	000cd2c0 	call	cd2c <__fixdfsi>
    58a0:	000d883a 	mov	r6,zero
    58a4:	000f883a 	mov	r7,zero
    58a8:	8009883a 	mov	r4,r16
    58ac:	880b883a 	mov	r5,r17
    58b0:	d8800d15 	stw	r2,52(sp)
    58b4:	000cb240 	call	cb24 <__ltdf2>
    58b8:	10031716 	blt	r2,zero,6518 <_dtoa_r+0xe8c>
    58bc:	d8c00d17 	ldw	r3,52(sp)
    58c0:	00800584 	movi	r2,22
    58c4:	10c1482e 	bgeu	r2,r3,5de8 <_dtoa_r+0x75c>
    58c8:	01000044 	movi	r4,1
    58cc:	d9000c15 	stw	r4,48(sp)
    58d0:	bd85c83a 	sub	r2,r23,r22
    58d4:	11bfffc4 	addi	r6,r2,-1
    58d8:	30030b16 	blt	r6,zero,6508 <_dtoa_r+0xe7c>
    58dc:	d9800a15 	stw	r6,40(sp)
    58e0:	d8001115 	stw	zero,68(sp)
    58e4:	d8c00d17 	ldw	r3,52(sp)
    58e8:	1802ff16 	blt	r3,zero,64e8 <_dtoa_r+0xe5c>
    58ec:	d9000a17 	ldw	r4,40(sp)
    58f0:	d8c00915 	stw	r3,36(sp)
    58f4:	d8001015 	stw	zero,64(sp)
    58f8:	20c9883a 	add	r4,r4,r3
    58fc:	d9000a15 	stw	r4,40(sp)
    5900:	d9001717 	ldw	r4,92(sp)
    5904:	00800244 	movi	r2,9
    5908:	11004636 	bltu	r2,r4,5a24 <_dtoa_r+0x398>
    590c:	00800144 	movi	r2,5
    5910:	11020416 	blt	r2,r4,6124 <_dtoa_r+0xa98>
    5914:	04400044 	movi	r17,1
    5918:	d8c01717 	ldw	r3,92(sp)
    591c:	00800144 	movi	r2,5
    5920:	10c1ed36 	bltu	r2,r3,60d8 <_dtoa_r+0xa4c>
    5924:	18c5883a 	add	r2,r3,r3
    5928:	1085883a 	add	r2,r2,r2
    592c:	00c00034 	movhi	r3,0
    5930:	18d65004 	addi	r3,r3,22848
    5934:	10c5883a 	add	r2,r2,r3
    5938:	11000017 	ldw	r4,0(r2)
    593c:	2000683a 	jmp	r4
    5940:	00005a2c 	andhi	zero,zero,360
    5944:	00005a2c 	andhi	zero,zero,360
    5948:	0000642c 	andhi	zero,zero,400
    594c:	00006404 	movi	zero,400
    5950:	00006448 	cmpgei	zero,zero,401
    5954:	00006454 	movui	zero,401
    5958:	d9002717 	ldw	r4,156(sp)
    595c:	0089c3c4 	movi	r2,9999
    5960:	20800015 	stw	r2,0(r4)
    5964:	a0001026 	beq	r20,zero,59a8 <_dtoa_r+0x31c>
    5968:	00c00074 	movhi	r3,1
    596c:	18fc0004 	addi	r3,r3,-4096
    5970:	d9802917 	ldw	r6,164(sp)
    5974:	303f7926 	beq	r6,zero,575c <_dtoa_r+0xd0>
    5978:	188000c7 	ldb	r2,3(r3)
    597c:	190000c4 	addi	r4,r3,3
    5980:	1000101e 	bne	r2,zero,59c4 <_dtoa_r+0x338>
    5984:	d8802917 	ldw	r2,164(sp)
    5988:	11000015 	stw	r4,0(r2)
    598c:	003f7306 	br	575c <_dtoa_r+0xd0>
    5990:	00a00034 	movhi	r2,32768
    5994:	10bfffc4 	addi	r2,r2,-1
    5998:	00c00044 	movi	r3,1
    599c:	88aa703a 	and	r21,r17,r2
    59a0:	90c00015 	stw	r3,0(r18)
    59a4:	003f5806 	br	5708 <_dtoa_r+0x7c>
    59a8:	00800434 	movhi	r2,16
    59ac:	10bfffc4 	addi	r2,r2,-1
    59b0:	a884703a 	and	r2,r21,r2
    59b4:	103fec1e 	bne	r2,zero,5968 <_dtoa_r+0x2dc>
    59b8:	00c00074 	movhi	r3,1
    59bc:	18fbfd04 	addi	r3,r3,-4108
    59c0:	003feb06 	br	5970 <_dtoa_r+0x2e4>
    59c4:	d8802917 	ldw	r2,164(sp)
    59c8:	19000204 	addi	r4,r3,8
    59cc:	11000015 	stw	r4,0(r2)
    59d0:	003f6206 	br	575c <_dtoa_r+0xd0>
    59d4:	ddc00117 	ldw	r23,4(sp)
    59d8:	d8800217 	ldw	r2,8(sp)
    59dc:	01000804 	movi	r4,32
    59e0:	b8c10c84 	addi	r3,r23,1074
    59e4:	18a3883a 	add	r17,r3,r2
    59e8:	2441b80e 	bge	r4,r17,60cc <_dtoa_r+0xa40>
    59ec:	00c01004 	movi	r3,64
    59f0:	1c47c83a 	sub	r3,r3,r17
    59f4:	88bff804 	addi	r2,r17,-32
    59f8:	a8c6983a 	sll	r3,r21,r3
    59fc:	a084d83a 	srl	r2,r20,r2
    5a00:	1888b03a 	or	r4,r3,r2
    5a04:	000ce040 	call	ce04 <__floatunsidf>
    5a08:	1011883a 	mov	r8,r2
    5a0c:	00bf8434 	movhi	r2,65040
    5a10:	01000044 	movi	r4,1
    5a14:	10d3883a 	add	r9,r2,r3
    5a18:	8dbef344 	addi	r22,r17,-1075
    5a1c:	d9000815 	stw	r4,32(sp)
    5a20:	003f6f06 	br	57e0 <_dtoa_r+0x154>
    5a24:	d8001715 	stw	zero,92(sp)
    5a28:	04400044 	movi	r17,1
    5a2c:	00bfffc4 	movi	r2,-1
    5a30:	00c00044 	movi	r3,1
    5a34:	d8800e15 	stw	r2,56(sp)
    5a38:	d8002615 	stw	zero,152(sp)
    5a3c:	d8800f15 	stw	r2,60(sp)
    5a40:	d8c00b15 	stw	r3,44(sp)
    5a44:	1021883a 	mov	r16,r2
    5a48:	d8801617 	ldw	r2,88(sp)
    5a4c:	10001115 	stw	zero,68(r2)
    5a50:	d8801617 	ldw	r2,88(sp)
    5a54:	11401117 	ldw	r5,68(r2)
    5a58:	1009883a 	mov	r4,r2
    5a5c:	00092d40 	call	92d4 <_Balloc>
    5a60:	d8c01617 	ldw	r3,88(sp)
    5a64:	d8800515 	stw	r2,20(sp)
    5a68:	18801015 	stw	r2,64(r3)
    5a6c:	00800384 	movi	r2,14
    5a70:	14006836 	bltu	r2,r16,5c14 <_dtoa_r+0x588>
    5a74:	8805003a 	cmpeq	r2,r17,zero
    5a78:	1000661e 	bne	r2,zero,5c14 <_dtoa_r+0x588>
    5a7c:	d9000d17 	ldw	r4,52(sp)
    5a80:	0102300e 	bge	zero,r4,6344 <_dtoa_r+0xcb8>
    5a84:	208003cc 	andi	r2,r4,15
    5a88:	100490fa 	slli	r2,r2,3
    5a8c:	2025d13a 	srai	r18,r4,4
    5a90:	00c00074 	movhi	r3,1
    5a94:	18fc1904 	addi	r3,r3,-3996
    5a98:	10c5883a 	add	r2,r2,r3
    5a9c:	90c0040c 	andi	r3,r18,16
    5aa0:	14000017 	ldw	r16,0(r2)
    5aa4:	14400117 	ldw	r17,4(r2)
    5aa8:	18036a1e 	bne	r3,zero,6854 <_dtoa_r+0x11c8>
    5aac:	05800084 	movi	r22,2
    5ab0:	90001026 	beq	r18,zero,5af4 <_dtoa_r+0x468>
    5ab4:	04c00074 	movhi	r19,1
    5ab8:	9cfc4b04 	addi	r19,r19,-3796
    5abc:	9080004c 	andi	r2,r18,1
    5ac0:	1005003a 	cmpeq	r2,r2,zero
    5ac4:	1000081e 	bne	r2,zero,5ae8 <_dtoa_r+0x45c>
    5ac8:	99800017 	ldw	r6,0(r19)
    5acc:	99c00117 	ldw	r7,4(r19)
    5ad0:	880b883a 	mov	r5,r17
    5ad4:	8009883a 	mov	r4,r16
    5ad8:	000c2e80 	call	c2e8 <__muldf3>
    5adc:	1021883a 	mov	r16,r2
    5ae0:	b5800044 	addi	r22,r22,1
    5ae4:	1823883a 	mov	r17,r3
    5ae8:	9025d07a 	srai	r18,r18,1
    5aec:	9cc00204 	addi	r19,r19,8
    5af0:	903ff21e 	bne	r18,zero,5abc <_dtoa_r+0x430>
    5af4:	a80b883a 	mov	r5,r21
    5af8:	a009883a 	mov	r4,r20
    5afc:	880f883a 	mov	r7,r17
    5b00:	800d883a 	mov	r6,r16
    5b04:	000c6ac0 	call	c6ac <__divdf3>
    5b08:	1029883a 	mov	r20,r2
    5b0c:	182b883a 	mov	r21,r3
    5b10:	d8c00c17 	ldw	r3,48(sp)
    5b14:	1805003a 	cmpeq	r2,r3,zero
    5b18:	1000081e 	bne	r2,zero,5b3c <_dtoa_r+0x4b0>
    5b1c:	0005883a 	mov	r2,zero
    5b20:	00cffc34 	movhi	r3,16368
    5b24:	180f883a 	mov	r7,r3
    5b28:	a009883a 	mov	r4,r20
    5b2c:	a80b883a 	mov	r5,r21
    5b30:	100d883a 	mov	r6,r2
    5b34:	000cb240 	call	cb24 <__ltdf2>
    5b38:	1003fe16 	blt	r2,zero,6b34 <_dtoa_r+0x14a8>
    5b3c:	b009883a 	mov	r4,r22
    5b40:	000cc340 	call	cc34 <__floatsidf>
    5b44:	180b883a 	mov	r5,r3
    5b48:	1009883a 	mov	r4,r2
    5b4c:	a00d883a 	mov	r6,r20
    5b50:	a80f883a 	mov	r7,r21
    5b54:	000c2e80 	call	c2e8 <__muldf3>
    5b58:	0011883a 	mov	r8,zero
    5b5c:	02500734 	movhi	r9,16412
    5b60:	1009883a 	mov	r4,r2
    5b64:	180b883a 	mov	r5,r3
    5b68:	480f883a 	mov	r7,r9
    5b6c:	400d883a 	mov	r6,r8
    5b70:	000c2740 	call	c274 <__adddf3>
    5b74:	d9000f17 	ldw	r4,60(sp)
    5b78:	102d883a 	mov	r22,r2
    5b7c:	00bf3034 	movhi	r2,64704
    5b80:	18b9883a 	add	fp,r3,r2
    5b84:	e02f883a 	mov	r23,fp
    5b88:	20028f1e 	bne	r4,zero,65c8 <_dtoa_r+0xf3c>
    5b8c:	0005883a 	mov	r2,zero
    5b90:	00d00534 	movhi	r3,16404
    5b94:	a009883a 	mov	r4,r20
    5b98:	a80b883a 	mov	r5,r21
    5b9c:	180f883a 	mov	r7,r3
    5ba0:	100d883a 	mov	r6,r2
    5ba4:	000c1f40 	call	c1f4 <__subdf3>
    5ba8:	1009883a 	mov	r4,r2
    5bac:	e00f883a 	mov	r7,fp
    5bb0:	180b883a 	mov	r5,r3
    5bb4:	b00d883a 	mov	r6,r22
    5bb8:	1025883a 	mov	r18,r2
    5bbc:	1827883a 	mov	r19,r3
    5bc0:	000ca140 	call	ca14 <__gtdf2>
    5bc4:	00834f16 	blt	zero,r2,6904 <_dtoa_r+0x1278>
    5bc8:	e0e0003c 	xorhi	r3,fp,32768
    5bcc:	9009883a 	mov	r4,r18
    5bd0:	980b883a 	mov	r5,r19
    5bd4:	180f883a 	mov	r7,r3
    5bd8:	b00d883a 	mov	r6,r22
    5bdc:	000cb240 	call	cb24 <__ltdf2>
    5be0:	1000080e 	bge	r2,zero,5c04 <_dtoa_r+0x578>
    5be4:	0027883a 	mov	r19,zero
    5be8:	0025883a 	mov	r18,zero
    5bec:	d8802617 	ldw	r2,152(sp)
    5bf0:	df000517 	ldw	fp,20(sp)
    5bf4:	d8000615 	stw	zero,24(sp)
    5bf8:	0084303a 	nor	r2,zero,r2
    5bfc:	d8800d15 	stw	r2,52(sp)
    5c00:	00019b06 	br	6270 <_dtoa_r+0xbe4>
    5c04:	d9801217 	ldw	r6,72(sp)
    5c08:	d8801317 	ldw	r2,76(sp)
    5c0c:	3029883a 	mov	r20,r6
    5c10:	102b883a 	mov	r21,r2
    5c14:	d8c00217 	ldw	r3,8(sp)
    5c18:	18008516 	blt	r3,zero,5e30 <_dtoa_r+0x7a4>
    5c1c:	d9000d17 	ldw	r4,52(sp)
    5c20:	00800384 	movi	r2,14
    5c24:	11008216 	blt	r2,r4,5e30 <_dtoa_r+0x7a4>
    5c28:	200490fa 	slli	r2,r4,3
    5c2c:	d9802617 	ldw	r6,152(sp)
    5c30:	00c00074 	movhi	r3,1
    5c34:	18fc1904 	addi	r3,r3,-3996
    5c38:	10c5883a 	add	r2,r2,r3
    5c3c:	14800017 	ldw	r18,0(r2)
    5c40:	14c00117 	ldw	r19,4(r2)
    5c44:	30031e16 	blt	r6,zero,68c0 <_dtoa_r+0x1234>
    5c48:	d9000517 	ldw	r4,20(sp)
    5c4c:	d8c00f17 	ldw	r3,60(sp)
    5c50:	a823883a 	mov	r17,r21
    5c54:	a021883a 	mov	r16,r20
    5c58:	192b883a 	add	r21,r3,r4
    5c5c:	2039883a 	mov	fp,r4
    5c60:	00000f06 	br	5ca0 <_dtoa_r+0x614>
    5c64:	0005883a 	mov	r2,zero
    5c68:	00d00934 	movhi	r3,16420
    5c6c:	5009883a 	mov	r4,r10
    5c70:	580b883a 	mov	r5,r11
    5c74:	180f883a 	mov	r7,r3
    5c78:	100d883a 	mov	r6,r2
    5c7c:	000c2e80 	call	c2e8 <__muldf3>
    5c80:	180b883a 	mov	r5,r3
    5c84:	000d883a 	mov	r6,zero
    5c88:	000f883a 	mov	r7,zero
    5c8c:	1009883a 	mov	r4,r2
    5c90:	1021883a 	mov	r16,r2
    5c94:	1823883a 	mov	r17,r3
    5c98:	000c98c0 	call	c98c <__nedf2>
    5c9c:	10004526 	beq	r2,zero,5db4 <_dtoa_r+0x728>
    5ca0:	900d883a 	mov	r6,r18
    5ca4:	980f883a 	mov	r7,r19
    5ca8:	8009883a 	mov	r4,r16
    5cac:	880b883a 	mov	r5,r17
    5cb0:	000c6ac0 	call	c6ac <__divdf3>
    5cb4:	180b883a 	mov	r5,r3
    5cb8:	1009883a 	mov	r4,r2
    5cbc:	000cd2c0 	call	cd2c <__fixdfsi>
    5cc0:	1009883a 	mov	r4,r2
    5cc4:	1029883a 	mov	r20,r2
    5cc8:	000cc340 	call	cc34 <__floatsidf>
    5ccc:	180f883a 	mov	r7,r3
    5cd0:	9009883a 	mov	r4,r18
    5cd4:	980b883a 	mov	r5,r19
    5cd8:	100d883a 	mov	r6,r2
    5cdc:	000c2e80 	call	c2e8 <__muldf3>
    5ce0:	180f883a 	mov	r7,r3
    5ce4:	880b883a 	mov	r5,r17
    5ce8:	8009883a 	mov	r4,r16
    5cec:	100d883a 	mov	r6,r2
    5cf0:	000c1f40 	call	c1f4 <__subdf3>
    5cf4:	1015883a 	mov	r10,r2
    5cf8:	a0800c04 	addi	r2,r20,48
    5cfc:	e0800005 	stb	r2,0(fp)
    5d00:	e7000044 	addi	fp,fp,1
    5d04:	1817883a 	mov	r11,r3
    5d08:	e57fd61e 	bne	fp,r21,5c64 <_dtoa_r+0x5d8>
    5d0c:	500d883a 	mov	r6,r10
    5d10:	180f883a 	mov	r7,r3
    5d14:	5009883a 	mov	r4,r10
    5d18:	180b883a 	mov	r5,r3
    5d1c:	000c2740 	call	c274 <__adddf3>
    5d20:	100d883a 	mov	r6,r2
    5d24:	9009883a 	mov	r4,r18
    5d28:	980b883a 	mov	r5,r19
    5d2c:	180f883a 	mov	r7,r3
    5d30:	1021883a 	mov	r16,r2
    5d34:	1823883a 	mov	r17,r3
    5d38:	000cb240 	call	cb24 <__ltdf2>
    5d3c:	10000816 	blt	r2,zero,5d60 <_dtoa_r+0x6d4>
    5d40:	980b883a 	mov	r5,r19
    5d44:	800d883a 	mov	r6,r16
    5d48:	880f883a 	mov	r7,r17
    5d4c:	9009883a 	mov	r4,r18
    5d50:	000c9040 	call	c904 <__eqdf2>
    5d54:	1000171e 	bne	r2,zero,5db4 <_dtoa_r+0x728>
    5d58:	a080004c 	andi	r2,r20,1
    5d5c:	10001526 	beq	r2,zero,5db4 <_dtoa_r+0x728>
    5d60:	d8800d17 	ldw	r2,52(sp)
    5d64:	d8800415 	stw	r2,16(sp)
    5d68:	e009883a 	mov	r4,fp
    5d6c:	213fffc4 	addi	r4,r4,-1
    5d70:	20c00007 	ldb	r3,0(r4)
    5d74:	00800e44 	movi	r2,57
    5d78:	1880081e 	bne	r3,r2,5d9c <_dtoa_r+0x710>
    5d7c:	d8800517 	ldw	r2,20(sp)
    5d80:	113ffa1e 	bne	r2,r4,5d6c <_dtoa_r+0x6e0>
    5d84:	d8c00417 	ldw	r3,16(sp)
    5d88:	d9800517 	ldw	r6,20(sp)
    5d8c:	00800c04 	movi	r2,48
    5d90:	18c00044 	addi	r3,r3,1
    5d94:	d8c00415 	stw	r3,16(sp)
    5d98:	30800005 	stb	r2,0(r6)
    5d9c:	20800003 	ldbu	r2,0(r4)
    5da0:	d8c00417 	ldw	r3,16(sp)
    5da4:	27000044 	addi	fp,r4,1
    5da8:	10800044 	addi	r2,r2,1
    5dac:	d8c00d15 	stw	r3,52(sp)
    5db0:	20800005 	stb	r2,0(r4)
    5db4:	d9001617 	ldw	r4,88(sp)
    5db8:	d9400717 	ldw	r5,28(sp)
    5dbc:	0008d540 	call	8d54 <_Bfree>
    5dc0:	e0000005 	stb	zero,0(fp)
    5dc4:	d9800d17 	ldw	r6,52(sp)
    5dc8:	d8c02717 	ldw	r3,156(sp)
    5dcc:	d9002917 	ldw	r4,164(sp)
    5dd0:	30800044 	addi	r2,r6,1
    5dd4:	18800015 	stw	r2,0(r3)
    5dd8:	20029c26 	beq	r4,zero,684c <_dtoa_r+0x11c0>
    5ddc:	d8c00517 	ldw	r3,20(sp)
    5de0:	27000015 	stw	fp,0(r4)
    5de4:	003e5d06 	br	575c <_dtoa_r+0xd0>
    5de8:	d9800d17 	ldw	r6,52(sp)
    5dec:	00c00074 	movhi	r3,1
    5df0:	18fc1904 	addi	r3,r3,-3996
    5df4:	d9001217 	ldw	r4,72(sp)
    5df8:	300490fa 	slli	r2,r6,3
    5dfc:	d9401317 	ldw	r5,76(sp)
    5e00:	10c5883a 	add	r2,r2,r3
    5e04:	12000017 	ldw	r8,0(r2)
    5e08:	12400117 	ldw	r9,4(r2)
    5e0c:	400d883a 	mov	r6,r8
    5e10:	480f883a 	mov	r7,r9
    5e14:	000cb240 	call	cb24 <__ltdf2>
    5e18:	1000030e 	bge	r2,zero,5e28 <_dtoa_r+0x79c>
    5e1c:	d8800d17 	ldw	r2,52(sp)
    5e20:	10bfffc4 	addi	r2,r2,-1
    5e24:	d8800d15 	stw	r2,52(sp)
    5e28:	d8000c15 	stw	zero,48(sp)
    5e2c:	003ea806 	br	58d0 <_dtoa_r+0x244>
    5e30:	d9000b17 	ldw	r4,44(sp)
    5e34:	202cc03a 	cmpne	r22,r4,zero
    5e38:	b000c71e 	bne	r22,zero,6158 <_dtoa_r+0xacc>
    5e3c:	dc001117 	ldw	r16,68(sp)
    5e40:	dc801017 	ldw	r18,64(sp)
    5e44:	0027883a 	mov	r19,zero
    5e48:	04000b0e 	bge	zero,r16,5e78 <_dtoa_r+0x7ec>
    5e4c:	d8c00a17 	ldw	r3,40(sp)
    5e50:	00c0090e 	bge	zero,r3,5e78 <_dtoa_r+0x7ec>
    5e54:	8005883a 	mov	r2,r16
    5e58:	1c011316 	blt	r3,r16,62a8 <_dtoa_r+0xc1c>
    5e5c:	d9000a17 	ldw	r4,40(sp)
    5e60:	d9801117 	ldw	r6,68(sp)
    5e64:	80a1c83a 	sub	r16,r16,r2
    5e68:	2089c83a 	sub	r4,r4,r2
    5e6c:	308dc83a 	sub	r6,r6,r2
    5e70:	d9000a15 	stw	r4,40(sp)
    5e74:	d9801115 	stw	r6,68(sp)
    5e78:	d8801017 	ldw	r2,64(sp)
    5e7c:	0080150e 	bge	zero,r2,5ed4 <_dtoa_r+0x848>
    5e80:	d8c00b17 	ldw	r3,44(sp)
    5e84:	1805003a 	cmpeq	r2,r3,zero
    5e88:	1001c91e 	bne	r2,zero,65b0 <_dtoa_r+0xf24>
    5e8c:	04800e0e 	bge	zero,r18,5ec8 <_dtoa_r+0x83c>
    5e90:	d9001617 	ldw	r4,88(sp)
    5e94:	980b883a 	mov	r5,r19
    5e98:	900d883a 	mov	r6,r18
    5e9c:	0009ba00 	call	9ba0 <__pow5mult>
    5ea0:	d9001617 	ldw	r4,88(sp)
    5ea4:	d9800717 	ldw	r6,28(sp)
    5ea8:	100b883a 	mov	r5,r2
    5eac:	1027883a 	mov	r19,r2
    5eb0:	00097e40 	call	97e4 <__multiply>
    5eb4:	d9001617 	ldw	r4,88(sp)
    5eb8:	d9400717 	ldw	r5,28(sp)
    5ebc:	1023883a 	mov	r17,r2
    5ec0:	0008d540 	call	8d54 <_Bfree>
    5ec4:	dc400715 	stw	r17,28(sp)
    5ec8:	d9001017 	ldw	r4,64(sp)
    5ecc:	248dc83a 	sub	r6,r4,r18
    5ed0:	30010e1e 	bne	r6,zero,630c <_dtoa_r+0xc80>
    5ed4:	d9001617 	ldw	r4,88(sp)
    5ed8:	04400044 	movi	r17,1
    5edc:	880b883a 	mov	r5,r17
    5ee0:	0009a380 	call	9a38 <__i2b>
    5ee4:	d9800917 	ldw	r6,36(sp)
    5ee8:	1025883a 	mov	r18,r2
    5eec:	0180040e 	bge	zero,r6,5f00 <_dtoa_r+0x874>
    5ef0:	d9001617 	ldw	r4,88(sp)
    5ef4:	100b883a 	mov	r5,r2
    5ef8:	0009ba00 	call	9ba0 <__pow5mult>
    5efc:	1025883a 	mov	r18,r2
    5f00:	d8801717 	ldw	r2,92(sp)
    5f04:	8880f30e 	bge	r17,r2,62d4 <_dtoa_r+0xc48>
    5f08:	0023883a 	mov	r17,zero
    5f0c:	d9800917 	ldw	r6,36(sp)
    5f10:	30019e1e 	bne	r6,zero,658c <_dtoa_r+0xf00>
    5f14:	00c00044 	movi	r3,1
    5f18:	d9000a17 	ldw	r4,40(sp)
    5f1c:	20c5883a 	add	r2,r4,r3
    5f20:	10c007cc 	andi	r3,r2,31
    5f24:	1800841e 	bne	r3,zero,6138 <_dtoa_r+0xaac>
    5f28:	00800704 	movi	r2,28
    5f2c:	d9000a17 	ldw	r4,40(sp)
    5f30:	d9801117 	ldw	r6,68(sp)
    5f34:	80a1883a 	add	r16,r16,r2
    5f38:	2089883a 	add	r4,r4,r2
    5f3c:	308d883a 	add	r6,r6,r2
    5f40:	d9000a15 	stw	r4,40(sp)
    5f44:	d9801115 	stw	r6,68(sp)
    5f48:	d8801117 	ldw	r2,68(sp)
    5f4c:	0080050e 	bge	zero,r2,5f64 <_dtoa_r+0x8d8>
    5f50:	d9400717 	ldw	r5,28(sp)
    5f54:	d9001617 	ldw	r4,88(sp)
    5f58:	100d883a 	mov	r6,r2
    5f5c:	00096980 	call	9698 <__lshift>
    5f60:	d8800715 	stw	r2,28(sp)
    5f64:	d8c00a17 	ldw	r3,40(sp)
    5f68:	00c0050e 	bge	zero,r3,5f80 <_dtoa_r+0x8f4>
    5f6c:	d9001617 	ldw	r4,88(sp)
    5f70:	900b883a 	mov	r5,r18
    5f74:	180d883a 	mov	r6,r3
    5f78:	00096980 	call	9698 <__lshift>
    5f7c:	1025883a 	mov	r18,r2
    5f80:	d9000c17 	ldw	r4,48(sp)
    5f84:	2005003a 	cmpeq	r2,r4,zero
    5f88:	10016f26 	beq	r2,zero,6548 <_dtoa_r+0xebc>
    5f8c:	d9000f17 	ldw	r4,60(sp)
    5f90:	0102170e 	bge	zero,r4,67f0 <_dtoa_r+0x1164>
    5f94:	d9800b17 	ldw	r6,44(sp)
    5f98:	3005003a 	cmpeq	r2,r6,zero
    5f9c:	1000881e 	bne	r2,zero,61c0 <_dtoa_r+0xb34>
    5fa0:	0400050e 	bge	zero,r16,5fb8 <_dtoa_r+0x92c>
    5fa4:	d9001617 	ldw	r4,88(sp)
    5fa8:	980b883a 	mov	r5,r19
    5fac:	800d883a 	mov	r6,r16
    5fb0:	00096980 	call	9698 <__lshift>
    5fb4:	1027883a 	mov	r19,r2
    5fb8:	8804c03a 	cmpne	r2,r17,zero
    5fbc:	1002541e 	bne	r2,zero,6910 <_dtoa_r+0x1284>
    5fc0:	980b883a 	mov	r5,r19
    5fc4:	dd800517 	ldw	r22,20(sp)
    5fc8:	dcc00615 	stw	r19,24(sp)
    5fcc:	a700004c 	andi	fp,r20,1
    5fd0:	2827883a 	mov	r19,r5
    5fd4:	d9000717 	ldw	r4,28(sp)
    5fd8:	900b883a 	mov	r5,r18
    5fdc:	00054480 	call	5448 <quorem>
    5fe0:	d9000717 	ldw	r4,28(sp)
    5fe4:	d9400617 	ldw	r5,24(sp)
    5fe8:	1023883a 	mov	r17,r2
    5fec:	8dc00c04 	addi	r23,r17,48
    5ff0:	0008eb00 	call	8eb0 <__mcmp>
    5ff4:	d9001617 	ldw	r4,88(sp)
    5ff8:	900b883a 	mov	r5,r18
    5ffc:	980d883a 	mov	r6,r19
    6000:	1029883a 	mov	r20,r2
    6004:	000950c0 	call	950c <__mdiff>
    6008:	102b883a 	mov	r21,r2
    600c:	10800317 	ldw	r2,12(r2)
    6010:	1001281e 	bne	r2,zero,64b4 <_dtoa_r+0xe28>
    6014:	d9000717 	ldw	r4,28(sp)
    6018:	a80b883a 	mov	r5,r21
    601c:	0008eb00 	call	8eb0 <__mcmp>
    6020:	d9001617 	ldw	r4,88(sp)
    6024:	1021883a 	mov	r16,r2
    6028:	a80b883a 	mov	r5,r21
    602c:	0008d540 	call	8d54 <_Bfree>
    6030:	8000041e 	bne	r16,zero,6044 <_dtoa_r+0x9b8>
    6034:	d8801717 	ldw	r2,92(sp)
    6038:	1000021e 	bne	r2,zero,6044 <_dtoa_r+0x9b8>
    603c:	e004c03a 	cmpne	r2,fp,zero
    6040:	10011726 	beq	r2,zero,64a0 <_dtoa_r+0xe14>
    6044:	a0010616 	blt	r20,zero,6460 <_dtoa_r+0xdd4>
    6048:	a000041e 	bne	r20,zero,605c <_dtoa_r+0x9d0>
    604c:	d8c01717 	ldw	r3,92(sp)
    6050:	1800021e 	bne	r3,zero,605c <_dtoa_r+0x9d0>
    6054:	e004c03a 	cmpne	r2,fp,zero
    6058:	10010126 	beq	r2,zero,6460 <_dtoa_r+0xdd4>
    605c:	04023d16 	blt	zero,r16,6954 <_dtoa_r+0x12c8>
    6060:	b5c00005 	stb	r23,0(r22)
    6064:	d9800517 	ldw	r6,20(sp)
    6068:	d9000f17 	ldw	r4,60(sp)
    606c:	b5800044 	addi	r22,r22,1
    6070:	3105883a 	add	r2,r6,r4
    6074:	b0806526 	beq	r22,r2,620c <_dtoa_r+0xb80>
    6078:	d9400717 	ldw	r5,28(sp)
    607c:	d9001617 	ldw	r4,88(sp)
    6080:	01800284 	movi	r6,10
    6084:	000f883a 	mov	r7,zero
    6088:	0009a740 	call	9a74 <__multadd>
    608c:	d8800715 	stw	r2,28(sp)
    6090:	d8800617 	ldw	r2,24(sp)
    6094:	14c10c26 	beq	r2,r19,64c8 <_dtoa_r+0xe3c>
    6098:	d9400617 	ldw	r5,24(sp)
    609c:	d9001617 	ldw	r4,88(sp)
    60a0:	01800284 	movi	r6,10
    60a4:	000f883a 	mov	r7,zero
    60a8:	0009a740 	call	9a74 <__multadd>
    60ac:	d9001617 	ldw	r4,88(sp)
    60b0:	980b883a 	mov	r5,r19
    60b4:	01800284 	movi	r6,10
    60b8:	000f883a 	mov	r7,zero
    60bc:	d8800615 	stw	r2,24(sp)
    60c0:	0009a740 	call	9a74 <__multadd>
    60c4:	1027883a 	mov	r19,r2
    60c8:	003fc206 	br	5fd4 <_dtoa_r+0x948>
    60cc:	2445c83a 	sub	r2,r4,r17
    60d0:	a088983a 	sll	r4,r20,r2
    60d4:	003e4b06 	br	5a04 <_dtoa_r+0x378>
    60d8:	01bfffc4 	movi	r6,-1
    60dc:	00800044 	movi	r2,1
    60e0:	d9800e15 	stw	r6,56(sp)
    60e4:	d9800f15 	stw	r6,60(sp)
    60e8:	d8800b15 	stw	r2,44(sp)
    60ec:	d8c01617 	ldw	r3,88(sp)
    60f0:	008005c4 	movi	r2,23
    60f4:	18001115 	stw	zero,68(r3)
    60f8:	1580082e 	bgeu	r2,r22,611c <_dtoa_r+0xa90>
    60fc:	00c00104 	movi	r3,4
    6100:	0009883a 	mov	r4,zero
    6104:	18c7883a 	add	r3,r3,r3
    6108:	18800504 	addi	r2,r3,20
    610c:	21000044 	addi	r4,r4,1
    6110:	b0bffc2e 	bgeu	r22,r2,6104 <_dtoa_r+0xa78>
    6114:	d9801617 	ldw	r6,88(sp)
    6118:	31001115 	stw	r4,68(r6)
    611c:	dc000f17 	ldw	r16,60(sp)
    6120:	003e4b06 	br	5a50 <_dtoa_r+0x3c4>
    6124:	d9801717 	ldw	r6,92(sp)
    6128:	0023883a 	mov	r17,zero
    612c:	31bfff04 	addi	r6,r6,-4
    6130:	d9801715 	stw	r6,92(sp)
    6134:	003df806 	br	5918 <_dtoa_r+0x28c>
    6138:	00800804 	movi	r2,32
    613c:	10c9c83a 	sub	r4,r2,r3
    6140:	00c00104 	movi	r3,4
    6144:	19005a16 	blt	r3,r4,62b0 <_dtoa_r+0xc24>
    6148:	008000c4 	movi	r2,3
    614c:	113f7e16 	blt	r2,r4,5f48 <_dtoa_r+0x8bc>
    6150:	20800704 	addi	r2,r4,28
    6154:	003f7506 	br	5f2c <_dtoa_r+0x8a0>
    6158:	d9801717 	ldw	r6,92(sp)
    615c:	00800044 	movi	r2,1
    6160:	1180a10e 	bge	r2,r6,63e8 <_dtoa_r+0xd5c>
    6164:	d9800f17 	ldw	r6,60(sp)
    6168:	d8c01017 	ldw	r3,64(sp)
    616c:	30bfffc4 	addi	r2,r6,-1
    6170:	1881c616 	blt	r3,r2,688c <_dtoa_r+0x1200>
    6174:	18a5c83a 	sub	r18,r3,r2
    6178:	d8800f17 	ldw	r2,60(sp)
    617c:	10026216 	blt	r2,zero,6b08 <_dtoa_r+0x147c>
    6180:	dc001117 	ldw	r16,68(sp)
    6184:	1007883a 	mov	r3,r2
    6188:	d9800a17 	ldw	r6,40(sp)
    618c:	d8801117 	ldw	r2,68(sp)
    6190:	d9001617 	ldw	r4,88(sp)
    6194:	30cd883a 	add	r6,r6,r3
    6198:	10c5883a 	add	r2,r2,r3
    619c:	01400044 	movi	r5,1
    61a0:	d9800a15 	stw	r6,40(sp)
    61a4:	d8801115 	stw	r2,68(sp)
    61a8:	0009a380 	call	9a38 <__i2b>
    61ac:	1027883a 	mov	r19,r2
    61b0:	003f2506 	br	5e48 <_dtoa_r+0x7bc>
    61b4:	00c00074 	movhi	r3,1
    61b8:	18fbf404 	addi	r3,r3,-4144
    61bc:	003d6706 	br	575c <_dtoa_r+0xd0>
    61c0:	dd800517 	ldw	r22,20(sp)
    61c4:	04000044 	movi	r16,1
    61c8:	00000706 	br	61e8 <_dtoa_r+0xb5c>
    61cc:	d9400717 	ldw	r5,28(sp)
    61d0:	d9001617 	ldw	r4,88(sp)
    61d4:	01800284 	movi	r6,10
    61d8:	000f883a 	mov	r7,zero
    61dc:	0009a740 	call	9a74 <__multadd>
    61e0:	d8800715 	stw	r2,28(sp)
    61e4:	84000044 	addi	r16,r16,1
    61e8:	d9000717 	ldw	r4,28(sp)
    61ec:	900b883a 	mov	r5,r18
    61f0:	00054480 	call	5448 <quorem>
    61f4:	15c00c04 	addi	r23,r2,48
    61f8:	b5c00005 	stb	r23,0(r22)
    61fc:	d8c00f17 	ldw	r3,60(sp)
    6200:	b5800044 	addi	r22,r22,1
    6204:	80fff116 	blt	r16,r3,61cc <_dtoa_r+0xb40>
    6208:	d8000615 	stw	zero,24(sp)
    620c:	d9400717 	ldw	r5,28(sp)
    6210:	d9001617 	ldw	r4,88(sp)
    6214:	01800044 	movi	r6,1
    6218:	00096980 	call	9698 <__lshift>
    621c:	1009883a 	mov	r4,r2
    6220:	900b883a 	mov	r5,r18
    6224:	d8800715 	stw	r2,28(sp)
    6228:	0008eb00 	call	8eb0 <__mcmp>
    622c:	00803c0e 	bge	zero,r2,6320 <_dtoa_r+0xc94>
    6230:	b009883a 	mov	r4,r22
    6234:	213fffc4 	addi	r4,r4,-1
    6238:	21400003 	ldbu	r5,0(r4)
    623c:	00800e44 	movi	r2,57
    6240:	28c03fcc 	andi	r3,r5,255
    6244:	18c0201c 	xori	r3,r3,128
    6248:	18ffe004 	addi	r3,r3,-128
    624c:	1881981e 	bne	r3,r2,68b0 <_dtoa_r+0x1224>
    6250:	d9800517 	ldw	r6,20(sp)
    6254:	21bff71e 	bne	r4,r6,6234 <_dtoa_r+0xba8>
    6258:	d8800d17 	ldw	r2,52(sp)
    625c:	37000044 	addi	fp,r6,1
    6260:	10800044 	addi	r2,r2,1
    6264:	d8800d15 	stw	r2,52(sp)
    6268:	00800c44 	movi	r2,49
    626c:	30800005 	stb	r2,0(r6)
    6270:	d9001617 	ldw	r4,88(sp)
    6274:	900b883a 	mov	r5,r18
    6278:	0008d540 	call	8d54 <_Bfree>
    627c:	983ecd26 	beq	r19,zero,5db4 <_dtoa_r+0x728>
    6280:	d8c00617 	ldw	r3,24(sp)
    6284:	18000426 	beq	r3,zero,6298 <_dtoa_r+0xc0c>
    6288:	1cc00326 	beq	r3,r19,6298 <_dtoa_r+0xc0c>
    628c:	d9001617 	ldw	r4,88(sp)
    6290:	180b883a 	mov	r5,r3
    6294:	0008d540 	call	8d54 <_Bfree>
    6298:	d9001617 	ldw	r4,88(sp)
    629c:	980b883a 	mov	r5,r19
    62a0:	0008d540 	call	8d54 <_Bfree>
    62a4:	003ec306 	br	5db4 <_dtoa_r+0x728>
    62a8:	1805883a 	mov	r2,r3
    62ac:	003eeb06 	br	5e5c <_dtoa_r+0x7d0>
    62b0:	d9800a17 	ldw	r6,40(sp)
    62b4:	d8c01117 	ldw	r3,68(sp)
    62b8:	20bfff04 	addi	r2,r4,-4
    62bc:	308d883a 	add	r6,r6,r2
    62c0:	1887883a 	add	r3,r3,r2
    62c4:	80a1883a 	add	r16,r16,r2
    62c8:	d9800a15 	stw	r6,40(sp)
    62cc:	d8c01115 	stw	r3,68(sp)
    62d0:	003f1d06 	br	5f48 <_dtoa_r+0x8bc>
    62d4:	a03f0c1e 	bne	r20,zero,5f08 <_dtoa_r+0x87c>
    62d8:	00800434 	movhi	r2,16
    62dc:	10bfffc4 	addi	r2,r2,-1
    62e0:	a884703a 	and	r2,r21,r2
    62e4:	103f081e 	bne	r2,zero,5f08 <_dtoa_r+0x87c>
    62e8:	a89ffc2c 	andhi	r2,r21,32752
    62ec:	103f0626 	beq	r2,zero,5f08 <_dtoa_r+0x87c>
    62f0:	d8c01117 	ldw	r3,68(sp)
    62f4:	d9000a17 	ldw	r4,40(sp)
    62f8:	18c00044 	addi	r3,r3,1
    62fc:	21000044 	addi	r4,r4,1
    6300:	d8c01115 	stw	r3,68(sp)
    6304:	d9000a15 	stw	r4,40(sp)
    6308:	003f0006 	br	5f0c <_dtoa_r+0x880>
    630c:	d9400717 	ldw	r5,28(sp)
    6310:	d9001617 	ldw	r4,88(sp)
    6314:	0009ba00 	call	9ba0 <__pow5mult>
    6318:	d8800715 	stw	r2,28(sp)
    631c:	003eed06 	br	5ed4 <_dtoa_r+0x848>
    6320:	1000021e 	bne	r2,zero,632c <_dtoa_r+0xca0>
    6324:	b880004c 	andi	r2,r23,1
    6328:	103fc11e 	bne	r2,zero,6230 <_dtoa_r+0xba4>
    632c:	b5bfffc4 	addi	r22,r22,-1
    6330:	b0c00007 	ldb	r3,0(r22)
    6334:	00800c04 	movi	r2,48
    6338:	18bffc26 	beq	r3,r2,632c <_dtoa_r+0xca0>
    633c:	b7000044 	addi	fp,r22,1
    6340:	003fcb06 	br	6270 <_dtoa_r+0xbe4>
    6344:	d9800d17 	ldw	r6,52(sp)
    6348:	018fc83a 	sub	r7,zero,r6
    634c:	3801f726 	beq	r7,zero,6b2c <_dtoa_r+0x14a0>
    6350:	398003cc 	andi	r6,r7,15
    6354:	300c90fa 	slli	r6,r6,3
    6358:	01400074 	movhi	r5,1
    635c:	297c1904 	addi	r5,r5,-3996
    6360:	d9001217 	ldw	r4,72(sp)
    6364:	314d883a 	add	r6,r6,r5
    6368:	30c00117 	ldw	r3,4(r6)
    636c:	30800017 	ldw	r2,0(r6)
    6370:	d9401317 	ldw	r5,76(sp)
    6374:	3821d13a 	srai	r16,r7,4
    6378:	100d883a 	mov	r6,r2
    637c:	180f883a 	mov	r7,r3
    6380:	000c2e80 	call	c2e8 <__muldf3>
    6384:	1011883a 	mov	r8,r2
    6388:	1813883a 	mov	r9,r3
    638c:	1029883a 	mov	r20,r2
    6390:	182b883a 	mov	r21,r3
    6394:	8001e526 	beq	r16,zero,6b2c <_dtoa_r+0x14a0>
    6398:	05800084 	movi	r22,2
    639c:	04400074 	movhi	r17,1
    63a0:	8c7c4b04 	addi	r17,r17,-3796
    63a4:	8080004c 	andi	r2,r16,1
    63a8:	1005003a 	cmpeq	r2,r2,zero
    63ac:	1000081e 	bne	r2,zero,63d0 <_dtoa_r+0xd44>
    63b0:	89800017 	ldw	r6,0(r17)
    63b4:	89c00117 	ldw	r7,4(r17)
    63b8:	480b883a 	mov	r5,r9
    63bc:	4009883a 	mov	r4,r8
    63c0:	000c2e80 	call	c2e8 <__muldf3>
    63c4:	1011883a 	mov	r8,r2
    63c8:	b5800044 	addi	r22,r22,1
    63cc:	1813883a 	mov	r9,r3
    63d0:	8021d07a 	srai	r16,r16,1
    63d4:	8c400204 	addi	r17,r17,8
    63d8:	803ff21e 	bne	r16,zero,63a4 <_dtoa_r+0xd18>
    63dc:	4029883a 	mov	r20,r8
    63e0:	482b883a 	mov	r21,r9
    63e4:	003dca06 	br	5b10 <_dtoa_r+0x484>
    63e8:	d9000817 	ldw	r4,32(sp)
    63ec:	2005003a 	cmpeq	r2,r4,zero
    63f0:	1001f61e 	bne	r2,zero,6bcc <_dtoa_r+0x1540>
    63f4:	dc001117 	ldw	r16,68(sp)
    63f8:	dc801017 	ldw	r18,64(sp)
    63fc:	18c10cc4 	addi	r3,r3,1075
    6400:	003f6106 	br	6188 <_dtoa_r+0xafc>
    6404:	d8000b15 	stw	zero,44(sp)
    6408:	d9802617 	ldw	r6,152(sp)
    640c:	d8c00d17 	ldw	r3,52(sp)
    6410:	30800044 	addi	r2,r6,1
    6414:	18ad883a 	add	r22,r3,r2
    6418:	b13fffc4 	addi	r4,r22,-1
    641c:	d9000e15 	stw	r4,56(sp)
    6420:	0581f60e 	bge	zero,r22,6bfc <_dtoa_r+0x1570>
    6424:	dd800f15 	stw	r22,60(sp)
    6428:	003f3006 	br	60ec <_dtoa_r+0xa60>
    642c:	d8000b15 	stw	zero,44(sp)
    6430:	d9002617 	ldw	r4,152(sp)
    6434:	0101eb0e 	bge	zero,r4,6be4 <_dtoa_r+0x1558>
    6438:	202d883a 	mov	r22,r4
    643c:	d9000e15 	stw	r4,56(sp)
    6440:	d9000f15 	stw	r4,60(sp)
    6444:	003f2906 	br	60ec <_dtoa_r+0xa60>
    6448:	01800044 	movi	r6,1
    644c:	d9800b15 	stw	r6,44(sp)
    6450:	003ff706 	br	6430 <_dtoa_r+0xda4>
    6454:	01000044 	movi	r4,1
    6458:	d9000b15 	stw	r4,44(sp)
    645c:	003fea06 	br	6408 <_dtoa_r+0xd7c>
    6460:	04000c0e 	bge	zero,r16,6494 <_dtoa_r+0xe08>
    6464:	d9400717 	ldw	r5,28(sp)
    6468:	d9001617 	ldw	r4,88(sp)
    646c:	01800044 	movi	r6,1
    6470:	00096980 	call	9698 <__lshift>
    6474:	1009883a 	mov	r4,r2
    6478:	900b883a 	mov	r5,r18
    647c:	d8800715 	stw	r2,28(sp)
    6480:	0008eb00 	call	8eb0 <__mcmp>
    6484:	0081e00e 	bge	zero,r2,6c08 <_dtoa_r+0x157c>
    6488:	bdc00044 	addi	r23,r23,1
    648c:	00800e84 	movi	r2,58
    6490:	b881a226 	beq	r23,r2,6b1c <_dtoa_r+0x1490>
    6494:	b7000044 	addi	fp,r22,1
    6498:	b5c00005 	stb	r23,0(r22)
    649c:	003f7406 	br	6270 <_dtoa_r+0xbe4>
    64a0:	00800e44 	movi	r2,57
    64a4:	b8819d26 	beq	r23,r2,6b1c <_dtoa_r+0x1490>
    64a8:	053ffa0e 	bge	zero,r20,6494 <_dtoa_r+0xe08>
    64ac:	8dc00c44 	addi	r23,r17,49
    64b0:	003ff806 	br	6494 <_dtoa_r+0xe08>
    64b4:	d9001617 	ldw	r4,88(sp)
    64b8:	a80b883a 	mov	r5,r21
    64bc:	04000044 	movi	r16,1
    64c0:	0008d540 	call	8d54 <_Bfree>
    64c4:	003edf06 	br	6044 <_dtoa_r+0x9b8>
    64c8:	d9001617 	ldw	r4,88(sp)
    64cc:	980b883a 	mov	r5,r19
    64d0:	01800284 	movi	r6,10
    64d4:	000f883a 	mov	r7,zero
    64d8:	0009a740 	call	9a74 <__multadd>
    64dc:	1027883a 	mov	r19,r2
    64e0:	d8800615 	stw	r2,24(sp)
    64e4:	003ebb06 	br	5fd4 <_dtoa_r+0x948>
    64e8:	d9801117 	ldw	r6,68(sp)
    64ec:	d8800d17 	ldw	r2,52(sp)
    64f0:	d8000915 	stw	zero,36(sp)
    64f4:	308dc83a 	sub	r6,r6,r2
    64f8:	0087c83a 	sub	r3,zero,r2
    64fc:	d9801115 	stw	r6,68(sp)
    6500:	d8c01015 	stw	r3,64(sp)
    6504:	003cfe06 	br	5900 <_dtoa_r+0x274>
    6508:	018dc83a 	sub	r6,zero,r6
    650c:	d9801115 	stw	r6,68(sp)
    6510:	d8000a15 	stw	zero,40(sp)
    6514:	003cf306 	br	58e4 <_dtoa_r+0x258>
    6518:	d9000d17 	ldw	r4,52(sp)
    651c:	000cc340 	call	cc34 <__floatsidf>
    6520:	880b883a 	mov	r5,r17
    6524:	8009883a 	mov	r4,r16
    6528:	180f883a 	mov	r7,r3
    652c:	100d883a 	mov	r6,r2
    6530:	000c98c0 	call	c98c <__nedf2>
    6534:	103ce126 	beq	r2,zero,58bc <_dtoa_r+0x230>
    6538:	d9800d17 	ldw	r6,52(sp)
    653c:	31bfffc4 	addi	r6,r6,-1
    6540:	d9800d15 	stw	r6,52(sp)
    6544:	003cdd06 	br	58bc <_dtoa_r+0x230>
    6548:	d9000717 	ldw	r4,28(sp)
    654c:	900b883a 	mov	r5,r18
    6550:	0008eb00 	call	8eb0 <__mcmp>
    6554:	103e8d0e 	bge	r2,zero,5f8c <_dtoa_r+0x900>
    6558:	d9400717 	ldw	r5,28(sp)
    655c:	d9001617 	ldw	r4,88(sp)
    6560:	01800284 	movi	r6,10
    6564:	000f883a 	mov	r7,zero
    6568:	0009a740 	call	9a74 <__multadd>
    656c:	d9800d17 	ldw	r6,52(sp)
    6570:	d8800715 	stw	r2,28(sp)
    6574:	31bfffc4 	addi	r6,r6,-1
    6578:	d9800d15 	stw	r6,52(sp)
    657c:	b001a71e 	bne	r22,zero,6c1c <_dtoa_r+0x1590>
    6580:	d8800e17 	ldw	r2,56(sp)
    6584:	d8800f15 	stw	r2,60(sp)
    6588:	003e8006 	br	5f8c <_dtoa_r+0x900>
    658c:	90800417 	ldw	r2,16(r18)
    6590:	1085883a 	add	r2,r2,r2
    6594:	1085883a 	add	r2,r2,r2
    6598:	1485883a 	add	r2,r2,r18
    659c:	11000417 	ldw	r4,16(r2)
    65a0:	0008d7c0 	call	8d7c <__hi0bits>
    65a4:	00c00804 	movi	r3,32
    65a8:	1887c83a 	sub	r3,r3,r2
    65ac:	003e5a06 	br	5f18 <_dtoa_r+0x88c>
    65b0:	d9400717 	ldw	r5,28(sp)
    65b4:	d9801017 	ldw	r6,64(sp)
    65b8:	d9001617 	ldw	r4,88(sp)
    65bc:	0009ba00 	call	9ba0 <__pow5mult>
    65c0:	d8800715 	stw	r2,28(sp)
    65c4:	003e4306 	br	5ed4 <_dtoa_r+0x848>
    65c8:	d9800f17 	ldw	r6,60(sp)
    65cc:	d8800d17 	ldw	r2,52(sp)
    65d0:	d9800315 	stw	r6,12(sp)
    65d4:	d8800415 	stw	r2,16(sp)
    65d8:	d8c00b17 	ldw	r3,44(sp)
    65dc:	1805003a 	cmpeq	r2,r3,zero
    65e0:	1000e21e 	bne	r2,zero,696c <_dtoa_r+0x12e0>
    65e4:	d9000317 	ldw	r4,12(sp)
    65e8:	0005883a 	mov	r2,zero
    65ec:	00cff834 	movhi	r3,16352
    65f0:	200c90fa 	slli	r6,r4,3
    65f4:	01000074 	movhi	r4,1
    65f8:	213c1904 	addi	r4,r4,-3996
    65fc:	180b883a 	mov	r5,r3
    6600:	310d883a 	add	r6,r6,r4
    6604:	327fff17 	ldw	r9,-4(r6)
    6608:	323ffe17 	ldw	r8,-8(r6)
    660c:	1009883a 	mov	r4,r2
    6610:	480f883a 	mov	r7,r9
    6614:	400d883a 	mov	r6,r8
    6618:	000c6ac0 	call	c6ac <__divdf3>
    661c:	180b883a 	mov	r5,r3
    6620:	b00d883a 	mov	r6,r22
    6624:	b80f883a 	mov	r7,r23
    6628:	1009883a 	mov	r4,r2
    662c:	000c1f40 	call	c1f4 <__subdf3>
    6630:	a80b883a 	mov	r5,r21
    6634:	a009883a 	mov	r4,r20
    6638:	d8c01915 	stw	r3,100(sp)
    663c:	d8801815 	stw	r2,96(sp)
    6640:	000cd2c0 	call	cd2c <__fixdfsi>
    6644:	1009883a 	mov	r4,r2
    6648:	1027883a 	mov	r19,r2
    664c:	000cc340 	call	cc34 <__floatsidf>
    6650:	a80b883a 	mov	r5,r21
    6654:	a009883a 	mov	r4,r20
    6658:	180f883a 	mov	r7,r3
    665c:	100d883a 	mov	r6,r2
    6660:	000c1f40 	call	c1f4 <__subdf3>
    6664:	d9801817 	ldw	r6,96(sp)
    6668:	1823883a 	mov	r17,r3
    666c:	d8801415 	stw	r2,80(sp)
    6670:	302d883a 	mov	r22,r6
    6674:	d9800517 	ldw	r6,20(sp)
    6678:	9cc00c04 	addi	r19,r19,48
    667c:	dc401515 	stw	r17,84(sp)
    6680:	d8c01917 	ldw	r3,100(sp)
    6684:	34c00005 	stb	r19,0(r6)
    6688:	d8800517 	ldw	r2,20(sp)
    668c:	d9401917 	ldw	r5,100(sp)
    6690:	d9801417 	ldw	r6,80(sp)
    6694:	b009883a 	mov	r4,r22
    6698:	880f883a 	mov	r7,r17
    669c:	182f883a 	mov	r23,r3
    66a0:	17000044 	addi	fp,r2,1
    66a4:	000ca140 	call	ca14 <__gtdf2>
    66a8:	00804e16 	blt	zero,r2,67e4 <_dtoa_r+0x1158>
    66ac:	d9801417 	ldw	r6,80(sp)
    66b0:	0005883a 	mov	r2,zero
    66b4:	00cffc34 	movhi	r3,16368
    66b8:	180b883a 	mov	r5,r3
    66bc:	880f883a 	mov	r7,r17
    66c0:	1009883a 	mov	r4,r2
    66c4:	000c1f40 	call	c1f4 <__subdf3>
    66c8:	d9401917 	ldw	r5,100(sp)
    66cc:	180f883a 	mov	r7,r3
    66d0:	b009883a 	mov	r4,r22
    66d4:	100d883a 	mov	r6,r2
    66d8:	000ca140 	call	ca14 <__gtdf2>
    66dc:	00bda216 	blt	zero,r2,5d68 <_dtoa_r+0x6dc>
    66e0:	d8c00317 	ldw	r3,12(sp)
    66e4:	00800044 	movi	r2,1
    66e8:	10c01216 	blt	r2,r3,6734 <_dtoa_r+0x10a8>
    66ec:	003d4506 	br	5c04 <_dtoa_r+0x578>
    66f0:	d9801417 	ldw	r6,80(sp)
    66f4:	0005883a 	mov	r2,zero
    66f8:	00cffc34 	movhi	r3,16368
    66fc:	180b883a 	mov	r5,r3
    6700:	880f883a 	mov	r7,r17
    6704:	1009883a 	mov	r4,r2
    6708:	000c1f40 	call	c1f4 <__subdf3>
    670c:	d9c01b17 	ldw	r7,108(sp)
    6710:	180b883a 	mov	r5,r3
    6714:	1009883a 	mov	r4,r2
    6718:	b00d883a 	mov	r6,r22
    671c:	000cb240 	call	cb24 <__ltdf2>
    6720:	103d9116 	blt	r2,zero,5d68 <_dtoa_r+0x6dc>
    6724:	d9800517 	ldw	r6,20(sp)
    6728:	d9000317 	ldw	r4,12(sp)
    672c:	3105883a 	add	r2,r6,r4
    6730:	e0bd3426 	beq	fp,r2,5c04 <_dtoa_r+0x578>
    6734:	04500934 	movhi	r17,16420
    6738:	0021883a 	mov	r16,zero
    673c:	b80b883a 	mov	r5,r23
    6740:	b009883a 	mov	r4,r22
    6744:	800d883a 	mov	r6,r16
    6748:	880f883a 	mov	r7,r17
    674c:	000c2e80 	call	c2e8 <__muldf3>
    6750:	d9401517 	ldw	r5,84(sp)
    6754:	d9001417 	ldw	r4,80(sp)
    6758:	880f883a 	mov	r7,r17
    675c:	000d883a 	mov	r6,zero
    6760:	d8801a15 	stw	r2,104(sp)
    6764:	d8c01b15 	stw	r3,108(sp)
    6768:	000c2e80 	call	c2e8 <__muldf3>
    676c:	180b883a 	mov	r5,r3
    6770:	1009883a 	mov	r4,r2
    6774:	1823883a 	mov	r17,r3
    6778:	1021883a 	mov	r16,r2
    677c:	000cd2c0 	call	cd2c <__fixdfsi>
    6780:	1009883a 	mov	r4,r2
    6784:	102b883a 	mov	r21,r2
    6788:	000cc340 	call	cc34 <__floatsidf>
    678c:	880b883a 	mov	r5,r17
    6790:	8009883a 	mov	r4,r16
    6794:	180f883a 	mov	r7,r3
    6798:	100d883a 	mov	r6,r2
    679c:	000c1f40 	call	c1f4 <__subdf3>
    67a0:	1021883a 	mov	r16,r2
    67a4:	d9001b17 	ldw	r4,108(sp)
    67a8:	1823883a 	mov	r17,r3
    67ac:	dc001415 	stw	r16,80(sp)
    67b0:	ad400c04 	addi	r21,r21,48
    67b4:	dc401515 	stw	r17,84(sp)
    67b8:	d8801a17 	ldw	r2,104(sp)
    67bc:	e5400005 	stb	r21,0(fp)
    67c0:	202f883a 	mov	r23,r4
    67c4:	d9c01b17 	ldw	r7,108(sp)
    67c8:	d9001417 	ldw	r4,80(sp)
    67cc:	880b883a 	mov	r5,r17
    67d0:	100d883a 	mov	r6,r2
    67d4:	102d883a 	mov	r22,r2
    67d8:	e7000044 	addi	fp,fp,1
    67dc:	000cb240 	call	cb24 <__ltdf2>
    67e0:	103fc30e 	bge	r2,zero,66f0 <_dtoa_r+0x1064>
    67e4:	d9000417 	ldw	r4,16(sp)
    67e8:	d9000d15 	stw	r4,52(sp)
    67ec:	003d7106 	br	5db4 <_dtoa_r+0x728>
    67f0:	d9801717 	ldw	r6,92(sp)
    67f4:	00800084 	movi	r2,2
    67f8:	11bde60e 	bge	r2,r6,5f94 <_dtoa_r+0x908>
    67fc:	203cfb1e 	bne	r4,zero,5bec <_dtoa_r+0x560>
    6800:	d9001617 	ldw	r4,88(sp)
    6804:	900b883a 	mov	r5,r18
    6808:	01800144 	movi	r6,5
    680c:	000f883a 	mov	r7,zero
    6810:	0009a740 	call	9a74 <__multadd>
    6814:	d9000717 	ldw	r4,28(sp)
    6818:	100b883a 	mov	r5,r2
    681c:	1025883a 	mov	r18,r2
    6820:	0008eb00 	call	8eb0 <__mcmp>
    6824:	00bcf10e 	bge	zero,r2,5bec <_dtoa_r+0x560>
    6828:	d8c00d17 	ldw	r3,52(sp)
    682c:	d9000517 	ldw	r4,20(sp)
    6830:	d8000615 	stw	zero,24(sp)
    6834:	18c00044 	addi	r3,r3,1
    6838:	d8c00d15 	stw	r3,52(sp)
    683c:	00800c44 	movi	r2,49
    6840:	27000044 	addi	fp,r4,1
    6844:	20800005 	stb	r2,0(r4)
    6848:	003e8906 	br	6270 <_dtoa_r+0xbe4>
    684c:	d8c00517 	ldw	r3,20(sp)
    6850:	003bc206 	br	575c <_dtoa_r+0xd0>
    6854:	01800074 	movhi	r6,1
    6858:	31bc4b04 	addi	r6,r6,-3796
    685c:	30c00917 	ldw	r3,36(r6)
    6860:	30800817 	ldw	r2,32(r6)
    6864:	d9001217 	ldw	r4,72(sp)
    6868:	d9401317 	ldw	r5,76(sp)
    686c:	180f883a 	mov	r7,r3
    6870:	100d883a 	mov	r6,r2
    6874:	000c6ac0 	call	c6ac <__divdf3>
    6878:	948003cc 	andi	r18,r18,15
    687c:	058000c4 	movi	r22,3
    6880:	1029883a 	mov	r20,r2
    6884:	182b883a 	mov	r21,r3
    6888:	003c8906 	br	5ab0 <_dtoa_r+0x424>
    688c:	d9001017 	ldw	r4,64(sp)
    6890:	d9800917 	ldw	r6,36(sp)
    6894:	0025883a 	mov	r18,zero
    6898:	1105c83a 	sub	r2,r2,r4
    689c:	2089883a 	add	r4,r4,r2
    68a0:	308d883a 	add	r6,r6,r2
    68a4:	d9001015 	stw	r4,64(sp)
    68a8:	d9800915 	stw	r6,36(sp)
    68ac:	003e3206 	br	6178 <_dtoa_r+0xaec>
    68b0:	28800044 	addi	r2,r5,1
    68b4:	27000044 	addi	fp,r4,1
    68b8:	20800005 	stb	r2,0(r4)
    68bc:	003e6c06 	br	6270 <_dtoa_r+0xbe4>
    68c0:	d8800f17 	ldw	r2,60(sp)
    68c4:	00bce016 	blt	zero,r2,5c48 <_dtoa_r+0x5bc>
    68c8:	d9800f17 	ldw	r6,60(sp)
    68cc:	303cc51e 	bne	r6,zero,5be4 <_dtoa_r+0x558>
    68d0:	0005883a 	mov	r2,zero
    68d4:	00d00534 	movhi	r3,16404
    68d8:	980b883a 	mov	r5,r19
    68dc:	180f883a 	mov	r7,r3
    68e0:	9009883a 	mov	r4,r18
    68e4:	100d883a 	mov	r6,r2
    68e8:	000c2e80 	call	c2e8 <__muldf3>
    68ec:	180b883a 	mov	r5,r3
    68f0:	a80f883a 	mov	r7,r21
    68f4:	1009883a 	mov	r4,r2
    68f8:	a00d883a 	mov	r6,r20
    68fc:	000ca9c0 	call	ca9c <__gedf2>
    6900:	103cb80e 	bge	r2,zero,5be4 <_dtoa_r+0x558>
    6904:	0027883a 	mov	r19,zero
    6908:	0025883a 	mov	r18,zero
    690c:	003fc606 	br	6828 <_dtoa_r+0x119c>
    6910:	99400117 	ldw	r5,4(r19)
    6914:	d9001617 	ldw	r4,88(sp)
    6918:	00092d40 	call	92d4 <_Balloc>
    691c:	99800417 	ldw	r6,16(r19)
    6920:	11000304 	addi	r4,r2,12
    6924:	99400304 	addi	r5,r19,12
    6928:	318d883a 	add	r6,r6,r6
    692c:	318d883a 	add	r6,r6,r6
    6930:	31800204 	addi	r6,r6,8
    6934:	1023883a 	mov	r17,r2
    6938:	0008b3c0 	call	8b3c <memcpy>
    693c:	d9001617 	ldw	r4,88(sp)
    6940:	880b883a 	mov	r5,r17
    6944:	01800044 	movi	r6,1
    6948:	00096980 	call	9698 <__lshift>
    694c:	100b883a 	mov	r5,r2
    6950:	003d9c06 	br	5fc4 <_dtoa_r+0x938>
    6954:	00800e44 	movi	r2,57
    6958:	b8807026 	beq	r23,r2,6b1c <_dtoa_r+0x1490>
    695c:	b8800044 	addi	r2,r23,1
    6960:	b7000044 	addi	fp,r22,1
    6964:	b0800005 	stb	r2,0(r22)
    6968:	003e4106 	br	6270 <_dtoa_r+0xbe4>
    696c:	d8800317 	ldw	r2,12(sp)
    6970:	01800074 	movhi	r6,1
    6974:	31bc1904 	addi	r6,r6,-3996
    6978:	b009883a 	mov	r4,r22
    697c:	100e90fa 	slli	r7,r2,3
    6980:	b80b883a 	mov	r5,r23
    6984:	398f883a 	add	r7,r7,r6
    6988:	38bffe17 	ldw	r2,-8(r7)
    698c:	d9800517 	ldw	r6,20(sp)
    6990:	38ffff17 	ldw	r3,-4(r7)
    6994:	37000044 	addi	fp,r6,1
    6998:	180f883a 	mov	r7,r3
    699c:	100d883a 	mov	r6,r2
    69a0:	000c2e80 	call	c2e8 <__muldf3>
    69a4:	a80b883a 	mov	r5,r21
    69a8:	a009883a 	mov	r4,r20
    69ac:	182f883a 	mov	r23,r3
    69b0:	102d883a 	mov	r22,r2
    69b4:	000cd2c0 	call	cd2c <__fixdfsi>
    69b8:	1009883a 	mov	r4,r2
    69bc:	1027883a 	mov	r19,r2
    69c0:	000cc340 	call	cc34 <__floatsidf>
    69c4:	a80b883a 	mov	r5,r21
    69c8:	a009883a 	mov	r4,r20
    69cc:	180f883a 	mov	r7,r3
    69d0:	100d883a 	mov	r6,r2
    69d4:	000c1f40 	call	c1f4 <__subdf3>
    69d8:	180b883a 	mov	r5,r3
    69dc:	d8c00517 	ldw	r3,20(sp)
    69e0:	9cc00c04 	addi	r19,r19,48
    69e4:	1009883a 	mov	r4,r2
    69e8:	1cc00005 	stb	r19,0(r3)
    69ec:	2021883a 	mov	r16,r4
    69f0:	d9000317 	ldw	r4,12(sp)
    69f4:	00800044 	movi	r2,1
    69f8:	2823883a 	mov	r17,r5
    69fc:	20802226 	beq	r4,r2,6a88 <_dtoa_r+0x13fc>
    6a00:	1029883a 	mov	r20,r2
    6a04:	0005883a 	mov	r2,zero
    6a08:	00d00934 	movhi	r3,16420
    6a0c:	180f883a 	mov	r7,r3
    6a10:	100d883a 	mov	r6,r2
    6a14:	880b883a 	mov	r5,r17
    6a18:	8009883a 	mov	r4,r16
    6a1c:	000c2e80 	call	c2e8 <__muldf3>
    6a20:	180b883a 	mov	r5,r3
    6a24:	1009883a 	mov	r4,r2
    6a28:	1823883a 	mov	r17,r3
    6a2c:	1021883a 	mov	r16,r2
    6a30:	000cd2c0 	call	cd2c <__fixdfsi>
    6a34:	1009883a 	mov	r4,r2
    6a38:	102b883a 	mov	r21,r2
    6a3c:	000cc340 	call	cc34 <__floatsidf>
    6a40:	880b883a 	mov	r5,r17
    6a44:	8009883a 	mov	r4,r16
    6a48:	180f883a 	mov	r7,r3
    6a4c:	100d883a 	mov	r6,r2
    6a50:	000c1f40 	call	c1f4 <__subdf3>
    6a54:	180b883a 	mov	r5,r3
    6a58:	d8c00517 	ldw	r3,20(sp)
    6a5c:	1009883a 	mov	r4,r2
    6a60:	ad400c04 	addi	r21,r21,48
    6a64:	1d05883a 	add	r2,r3,r20
    6a68:	15400005 	stb	r21,0(r2)
    6a6c:	2021883a 	mov	r16,r4
    6a70:	d9000317 	ldw	r4,12(sp)
    6a74:	a5000044 	addi	r20,r20,1
    6a78:	2823883a 	mov	r17,r5
    6a7c:	a13fe11e 	bne	r20,r4,6a04 <_dtoa_r+0x1378>
    6a80:	e505883a 	add	r2,fp,r20
    6a84:	173fffc4 	addi	fp,r2,-1
    6a88:	0025883a 	mov	r18,zero
    6a8c:	04cff834 	movhi	r19,16352
    6a90:	b009883a 	mov	r4,r22
    6a94:	b80b883a 	mov	r5,r23
    6a98:	900d883a 	mov	r6,r18
    6a9c:	980f883a 	mov	r7,r19
    6aa0:	000c2740 	call	c274 <__adddf3>
    6aa4:	180b883a 	mov	r5,r3
    6aa8:	1009883a 	mov	r4,r2
    6aac:	800d883a 	mov	r6,r16
    6ab0:	880f883a 	mov	r7,r17
    6ab4:	000cb240 	call	cb24 <__ltdf2>
    6ab8:	103cab16 	blt	r2,zero,5d68 <_dtoa_r+0x6dc>
    6abc:	0009883a 	mov	r4,zero
    6ac0:	980b883a 	mov	r5,r19
    6ac4:	b80f883a 	mov	r7,r23
    6ac8:	b00d883a 	mov	r6,r22
    6acc:	000c1f40 	call	c1f4 <__subdf3>
    6ad0:	180b883a 	mov	r5,r3
    6ad4:	880f883a 	mov	r7,r17
    6ad8:	1009883a 	mov	r4,r2
    6adc:	800d883a 	mov	r6,r16
    6ae0:	000ca140 	call	ca14 <__gtdf2>
    6ae4:	00bc470e 	bge	zero,r2,5c04 <_dtoa_r+0x578>
    6ae8:	00c00c04 	movi	r3,48
    6aec:	e73fffc4 	addi	fp,fp,-1
    6af0:	e0800007 	ldb	r2,0(fp)
    6af4:	10fffd26 	beq	r2,r3,6aec <_dtoa_r+0x1460>
    6af8:	d9800417 	ldw	r6,16(sp)
    6afc:	e7000044 	addi	fp,fp,1
    6b00:	d9800d15 	stw	r6,52(sp)
    6b04:	003cab06 	br	5db4 <_dtoa_r+0x728>
    6b08:	d8c00f17 	ldw	r3,60(sp)
    6b0c:	d9001117 	ldw	r4,68(sp)
    6b10:	20e1c83a 	sub	r16,r4,r3
    6b14:	0007883a 	mov	r3,zero
    6b18:	003d9b06 	br	6188 <_dtoa_r+0xafc>
    6b1c:	00800e44 	movi	r2,57
    6b20:	b0800005 	stb	r2,0(r22)
    6b24:	b5800044 	addi	r22,r22,1
    6b28:	003dc106 	br	6230 <_dtoa_r+0xba4>
    6b2c:	05800084 	movi	r22,2
    6b30:	003bf706 	br	5b10 <_dtoa_r+0x484>
    6b34:	d9000f17 	ldw	r4,60(sp)
    6b38:	013c000e 	bge	zero,r4,5b3c <_dtoa_r+0x4b0>
    6b3c:	d9800e17 	ldw	r6,56(sp)
    6b40:	01bc300e 	bge	zero,r6,5c04 <_dtoa_r+0x578>
    6b44:	0005883a 	mov	r2,zero
    6b48:	00d00934 	movhi	r3,16420
    6b4c:	a80b883a 	mov	r5,r21
    6b50:	180f883a 	mov	r7,r3
    6b54:	a009883a 	mov	r4,r20
    6b58:	100d883a 	mov	r6,r2
    6b5c:	000c2e80 	call	c2e8 <__muldf3>
    6b60:	b1000044 	addi	r4,r22,1
    6b64:	1021883a 	mov	r16,r2
    6b68:	1823883a 	mov	r17,r3
    6b6c:	000cc340 	call	cc34 <__floatsidf>
    6b70:	880b883a 	mov	r5,r17
    6b74:	8009883a 	mov	r4,r16
    6b78:	180f883a 	mov	r7,r3
    6b7c:	100d883a 	mov	r6,r2
    6b80:	000c2e80 	call	c2e8 <__muldf3>
    6b84:	0011883a 	mov	r8,zero
    6b88:	02500734 	movhi	r9,16412
    6b8c:	180b883a 	mov	r5,r3
    6b90:	480f883a 	mov	r7,r9
    6b94:	1009883a 	mov	r4,r2
    6b98:	400d883a 	mov	r6,r8
    6b9c:	000c2740 	call	c274 <__adddf3>
    6ba0:	102d883a 	mov	r22,r2
    6ba4:	00bf3034 	movhi	r2,64704
    6ba8:	10ef883a 	add	r23,r2,r3
    6bac:	d8800d17 	ldw	r2,52(sp)
    6bb0:	d8c00e17 	ldw	r3,56(sp)
    6bb4:	8029883a 	mov	r20,r16
    6bb8:	10bfffc4 	addi	r2,r2,-1
    6bbc:	882b883a 	mov	r21,r17
    6bc0:	d8800415 	stw	r2,16(sp)
    6bc4:	d8c00315 	stw	r3,12(sp)
    6bc8:	003e8306 	br	65d8 <_dtoa_r+0xf4c>
    6bcc:	d8800117 	ldw	r2,4(sp)
    6bd0:	dc001117 	ldw	r16,68(sp)
    6bd4:	dc801017 	ldw	r18,64(sp)
    6bd8:	00c00d84 	movi	r3,54
    6bdc:	1887c83a 	sub	r3,r3,r2
    6be0:	003d6906 	br	6188 <_dtoa_r+0xafc>
    6be4:	01800044 	movi	r6,1
    6be8:	3021883a 	mov	r16,r6
    6bec:	d9800f15 	stw	r6,60(sp)
    6bf0:	d9802615 	stw	r6,152(sp)
    6bf4:	d9800e15 	stw	r6,56(sp)
    6bf8:	003b9306 	br	5a48 <_dtoa_r+0x3bc>
    6bfc:	b021883a 	mov	r16,r22
    6c00:	dd800f15 	stw	r22,60(sp)
    6c04:	003b9006 	br	5a48 <_dtoa_r+0x3bc>
    6c08:	103e221e 	bne	r2,zero,6494 <_dtoa_r+0xe08>
    6c0c:	b880004c 	andi	r2,r23,1
    6c10:	1005003a 	cmpeq	r2,r2,zero
    6c14:	103e1f1e 	bne	r2,zero,6494 <_dtoa_r+0xe08>
    6c18:	003e1b06 	br	6488 <_dtoa_r+0xdfc>
    6c1c:	d9001617 	ldw	r4,88(sp)
    6c20:	980b883a 	mov	r5,r19
    6c24:	01800284 	movi	r6,10
    6c28:	000f883a 	mov	r7,zero
    6c2c:	0009a740 	call	9a74 <__multadd>
    6c30:	d8c00e17 	ldw	r3,56(sp)
    6c34:	1027883a 	mov	r19,r2
    6c38:	d8c00f15 	stw	r3,60(sp)
    6c3c:	003cd306 	br	5f8c <_dtoa_r+0x900>

00006c40 <_fflush_r>:
    6c40:	defffb04 	addi	sp,sp,-20
    6c44:	dcc00315 	stw	r19,12(sp)
    6c48:	dc800215 	stw	r18,8(sp)
    6c4c:	dfc00415 	stw	ra,16(sp)
    6c50:	dc400115 	stw	r17,4(sp)
    6c54:	dc000015 	stw	r16,0(sp)
    6c58:	2027883a 	mov	r19,r4
    6c5c:	2825883a 	mov	r18,r5
    6c60:	20000226 	beq	r4,zero,6c6c <_fflush_r+0x2c>
    6c64:	20800e17 	ldw	r2,56(r4)
    6c68:	10005626 	beq	r2,zero,6dc4 <_fflush_r+0x184>
    6c6c:	9100030b 	ldhu	r4,12(r18)
    6c70:	20ffffcc 	andi	r3,r4,65535
    6c74:	18e0001c 	xori	r3,r3,32768
    6c78:	18e00004 	addi	r3,r3,-32768
    6c7c:	1880020c 	andi	r2,r3,8
    6c80:	1000261e 	bne	r2,zero,6d1c <_fflush_r+0xdc>
    6c84:	90c00117 	ldw	r3,4(r18)
    6c88:	20820014 	ori	r2,r4,2048
    6c8c:	9080030d 	sth	r2,12(r18)
    6c90:	1009883a 	mov	r4,r2
    6c94:	00c0400e 	bge	zero,r3,6d98 <_fflush_r+0x158>
    6c98:	92000a17 	ldw	r8,40(r18)
    6c9c:	40004026 	beq	r8,zero,6da0 <_fflush_r+0x160>
    6ca0:	2084000c 	andi	r2,r4,4096
    6ca4:	10005326 	beq	r2,zero,6df4 <_fflush_r+0x1b4>
    6ca8:	94001417 	ldw	r16,80(r18)
    6cac:	9080030b 	ldhu	r2,12(r18)
    6cb0:	1080010c 	andi	r2,r2,4
    6cb4:	1000481e 	bne	r2,zero,6dd8 <_fflush_r+0x198>
    6cb8:	91400717 	ldw	r5,28(r18)
    6cbc:	9809883a 	mov	r4,r19
    6cc0:	800d883a 	mov	r6,r16
    6cc4:	000f883a 	mov	r7,zero
    6cc8:	403ee83a 	callr	r8
    6ccc:	8080261e 	bne	r16,r2,6d68 <_fflush_r+0x128>
    6cd0:	9080030b 	ldhu	r2,12(r18)
    6cd4:	91000417 	ldw	r4,16(r18)
    6cd8:	90000115 	stw	zero,4(r18)
    6cdc:	10bdffcc 	andi	r2,r2,63487
    6ce0:	10ffffcc 	andi	r3,r2,65535
    6ce4:	18c4000c 	andi	r3,r3,4096
    6ce8:	9080030d 	sth	r2,12(r18)
    6cec:	91000015 	stw	r4,0(r18)
    6cf0:	18002b26 	beq	r3,zero,6da0 <_fflush_r+0x160>
    6cf4:	0007883a 	mov	r3,zero
    6cf8:	1805883a 	mov	r2,r3
    6cfc:	94001415 	stw	r16,80(r18)
    6d00:	dfc00417 	ldw	ra,16(sp)
    6d04:	dcc00317 	ldw	r19,12(sp)
    6d08:	dc800217 	ldw	r18,8(sp)
    6d0c:	dc400117 	ldw	r17,4(sp)
    6d10:	dc000017 	ldw	r16,0(sp)
    6d14:	dec00504 	addi	sp,sp,20
    6d18:	f800283a 	ret
    6d1c:	94400417 	ldw	r17,16(r18)
    6d20:	88001f26 	beq	r17,zero,6da0 <_fflush_r+0x160>
    6d24:	90800017 	ldw	r2,0(r18)
    6d28:	18c000cc 	andi	r3,r3,3
    6d2c:	94400015 	stw	r17,0(r18)
    6d30:	1461c83a 	sub	r16,r2,r17
    6d34:	18002526 	beq	r3,zero,6dcc <_fflush_r+0x18c>
    6d38:	0005883a 	mov	r2,zero
    6d3c:	90800215 	stw	r2,8(r18)
    6d40:	0400170e 	bge	zero,r16,6da0 <_fflush_r+0x160>
    6d44:	90c00917 	ldw	r3,36(r18)
    6d48:	91400717 	ldw	r5,28(r18)
    6d4c:	880d883a 	mov	r6,r17
    6d50:	800f883a 	mov	r7,r16
    6d54:	9809883a 	mov	r4,r19
    6d58:	183ee83a 	callr	r3
    6d5c:	88a3883a 	add	r17,r17,r2
    6d60:	80a1c83a 	sub	r16,r16,r2
    6d64:	00bff616 	blt	zero,r2,6d40 <_fflush_r+0x100>
    6d68:	9080030b 	ldhu	r2,12(r18)
    6d6c:	00ffffc4 	movi	r3,-1
    6d70:	10801014 	ori	r2,r2,64
    6d74:	9080030d 	sth	r2,12(r18)
    6d78:	1805883a 	mov	r2,r3
    6d7c:	dfc00417 	ldw	ra,16(sp)
    6d80:	dcc00317 	ldw	r19,12(sp)
    6d84:	dc800217 	ldw	r18,8(sp)
    6d88:	dc400117 	ldw	r17,4(sp)
    6d8c:	dc000017 	ldw	r16,0(sp)
    6d90:	dec00504 	addi	sp,sp,20
    6d94:	f800283a 	ret
    6d98:	90800f17 	ldw	r2,60(r18)
    6d9c:	00bfbe16 	blt	zero,r2,6c98 <_fflush_r+0x58>
    6da0:	0007883a 	mov	r3,zero
    6da4:	1805883a 	mov	r2,r3
    6da8:	dfc00417 	ldw	ra,16(sp)
    6dac:	dcc00317 	ldw	r19,12(sp)
    6db0:	dc800217 	ldw	r18,8(sp)
    6db4:	dc400117 	ldw	r17,4(sp)
    6db8:	dc000017 	ldw	r16,0(sp)
    6dbc:	dec00504 	addi	sp,sp,20
    6dc0:	f800283a 	ret
    6dc4:	0006ed80 	call	6ed8 <__sinit>
    6dc8:	003fa806 	br	6c6c <_fflush_r+0x2c>
    6dcc:	90800517 	ldw	r2,20(r18)
    6dd0:	90800215 	stw	r2,8(r18)
    6dd4:	003fda06 	br	6d40 <_fflush_r+0x100>
    6dd8:	90800117 	ldw	r2,4(r18)
    6ddc:	90c00c17 	ldw	r3,48(r18)
    6de0:	80a1c83a 	sub	r16,r16,r2
    6de4:	183fb426 	beq	r3,zero,6cb8 <_fflush_r+0x78>
    6de8:	90800f17 	ldw	r2,60(r18)
    6dec:	80a1c83a 	sub	r16,r16,r2
    6df0:	003fb106 	br	6cb8 <_fflush_r+0x78>
    6df4:	91400717 	ldw	r5,28(r18)
    6df8:	9809883a 	mov	r4,r19
    6dfc:	000d883a 	mov	r6,zero
    6e00:	01c00044 	movi	r7,1
    6e04:	403ee83a 	callr	r8
    6e08:	1021883a 	mov	r16,r2
    6e0c:	00bfffc4 	movi	r2,-1
    6e10:	80800226 	beq	r16,r2,6e1c <_fflush_r+0x1dc>
    6e14:	92000a17 	ldw	r8,40(r18)
    6e18:	003fa406 	br	6cac <_fflush_r+0x6c>
    6e1c:	98c00017 	ldw	r3,0(r19)
    6e20:	00800744 	movi	r2,29
    6e24:	18bfde26 	beq	r3,r2,6da0 <_fflush_r+0x160>
    6e28:	9080030b 	ldhu	r2,12(r18)
    6e2c:	8007883a 	mov	r3,r16
    6e30:	10801014 	ori	r2,r2,64
    6e34:	9080030d 	sth	r2,12(r18)
    6e38:	003fcf06 	br	6d78 <_fflush_r+0x138>

00006e3c <fflush>:
    6e3c:	01400034 	movhi	r5,0
    6e40:	295b1004 	addi	r5,r5,27712
    6e44:	2007883a 	mov	r3,r4
    6e48:	20000526 	beq	r4,zero,6e60 <fflush+0x24>
    6e4c:	00800074 	movhi	r2,1
    6e50:	10837004 	addi	r2,r2,3520
    6e54:	11000017 	ldw	r4,0(r2)
    6e58:	180b883a 	mov	r5,r3
    6e5c:	0006c401 	jmpi	6c40 <_fflush_r>
    6e60:	00800074 	movhi	r2,1
    6e64:	10837104 	addi	r2,r2,3524
    6e68:	11000017 	ldw	r4,0(r2)
    6e6c:	0007a401 	jmpi	7a40 <_fwalk_reent>

00006e70 <std>:
    6e70:	00800074 	movhi	r2,1
    6e74:	10a98c04 	addi	r2,r2,-22992
    6e78:	20800b15 	stw	r2,44(r4)
    6e7c:	00800074 	movhi	r2,1
    6e80:	10a9c704 	addi	r2,r2,-22756
    6e84:	20800815 	stw	r2,32(r4)
    6e88:	00c00074 	movhi	r3,1
    6e8c:	18e9a804 	addi	r3,r3,-22880
    6e90:	00800074 	movhi	r2,1
    6e94:	10a98e04 	addi	r2,r2,-22984
    6e98:	2140030d 	sth	r5,12(r4)
    6e9c:	2180038d 	sth	r6,14(r4)
    6ea0:	20c00915 	stw	r3,36(r4)
    6ea4:	20800a15 	stw	r2,40(r4)
    6ea8:	20000015 	stw	zero,0(r4)
    6eac:	20000115 	stw	zero,4(r4)
    6eb0:	20000215 	stw	zero,8(r4)
    6eb4:	20000415 	stw	zero,16(r4)
    6eb8:	20000515 	stw	zero,20(r4)
    6ebc:	20000615 	stw	zero,24(r4)
    6ec0:	21000715 	stw	r4,28(r4)
    6ec4:	f800283a 	ret

00006ec8 <__sfp_lock_acquire>:
    6ec8:	f800283a 	ret

00006ecc <__sfp_lock_release>:
    6ecc:	f800283a 	ret

00006ed0 <__sinit_lock_acquire>:
    6ed0:	f800283a 	ret

00006ed4 <__sinit_lock_release>:
    6ed4:	f800283a 	ret

00006ed8 <__sinit>:
    6ed8:	20800e17 	ldw	r2,56(r4)
    6edc:	defffd04 	addi	sp,sp,-12
    6ee0:	dc400115 	stw	r17,4(sp)
    6ee4:	dc000015 	stw	r16,0(sp)
    6ee8:	dfc00215 	stw	ra,8(sp)
    6eec:	04400044 	movi	r17,1
    6ef0:	01400104 	movi	r5,4
    6ef4:	000d883a 	mov	r6,zero
    6ef8:	2021883a 	mov	r16,r4
    6efc:	2200bb04 	addi	r8,r4,748
    6f00:	200f883a 	mov	r7,r4
    6f04:	10000526 	beq	r2,zero,6f1c <__sinit+0x44>
    6f08:	dfc00217 	ldw	ra,8(sp)
    6f0c:	dc400117 	ldw	r17,4(sp)
    6f10:	dc000017 	ldw	r16,0(sp)
    6f14:	dec00304 	addi	sp,sp,12
    6f18:	f800283a 	ret
    6f1c:	21000117 	ldw	r4,4(r4)
    6f20:	00800034 	movhi	r2,0
    6f24:	109bef04 	addi	r2,r2,28604
    6f28:	00c000c4 	movi	r3,3
    6f2c:	80800f15 	stw	r2,60(r16)
    6f30:	80c0b915 	stw	r3,740(r16)
    6f34:	8200ba15 	stw	r8,744(r16)
    6f38:	84400e15 	stw	r17,56(r16)
    6f3c:	8000b815 	stw	zero,736(r16)
    6f40:	0006e700 	call	6e70 <std>
    6f44:	81000217 	ldw	r4,8(r16)
    6f48:	880d883a 	mov	r6,r17
    6f4c:	800f883a 	mov	r7,r16
    6f50:	01400284 	movi	r5,10
    6f54:	0006e700 	call	6e70 <std>
    6f58:	81000317 	ldw	r4,12(r16)
    6f5c:	800f883a 	mov	r7,r16
    6f60:	01400484 	movi	r5,18
    6f64:	01800084 	movi	r6,2
    6f68:	dfc00217 	ldw	ra,8(sp)
    6f6c:	dc400117 	ldw	r17,4(sp)
    6f70:	dc000017 	ldw	r16,0(sp)
    6f74:	dec00304 	addi	sp,sp,12
    6f78:	0006e701 	jmpi	6e70 <std>

00006f7c <__fp_lock>:
    6f7c:	0005883a 	mov	r2,zero
    6f80:	f800283a 	ret

00006f84 <__fp_unlock>:
    6f84:	0005883a 	mov	r2,zero
    6f88:	f800283a 	ret

00006f8c <__fp_unlock_all>:
    6f8c:	00800074 	movhi	r2,1
    6f90:	10837004 	addi	r2,r2,3520
    6f94:	11000017 	ldw	r4,0(r2)
    6f98:	01400034 	movhi	r5,0
    6f9c:	295be104 	addi	r5,r5,28548
    6fa0:	0007b081 	jmpi	7b08 <_fwalk>

00006fa4 <__fp_lock_all>:
    6fa4:	00800074 	movhi	r2,1
    6fa8:	10837004 	addi	r2,r2,3520
    6fac:	11000017 	ldw	r4,0(r2)
    6fb0:	01400034 	movhi	r5,0
    6fb4:	295bdf04 	addi	r5,r5,28540
    6fb8:	0007b081 	jmpi	7b08 <_fwalk>

00006fbc <_cleanup_r>:
    6fbc:	01400074 	movhi	r5,1
    6fc0:	296b4904 	addi	r5,r5,-21212
    6fc4:	0007b081 	jmpi	7b08 <_fwalk>

00006fc8 <_cleanup>:
    6fc8:	00800074 	movhi	r2,1
    6fcc:	10837104 	addi	r2,r2,3524
    6fd0:	11000017 	ldw	r4,0(r2)
    6fd4:	0006fbc1 	jmpi	6fbc <_cleanup_r>

00006fd8 <__sfmoreglue>:
    6fd8:	defffc04 	addi	sp,sp,-16
    6fdc:	dc000015 	stw	r16,0(sp)
    6fe0:	2821883a 	mov	r16,r5
    6fe4:	dc400115 	stw	r17,4(sp)
    6fe8:	01401704 	movi	r5,92
    6fec:	2023883a 	mov	r17,r4
    6ff0:	8009883a 	mov	r4,r16
    6ff4:	dfc00315 	stw	ra,12(sp)
    6ff8:	dcc00215 	stw	r19,8(sp)
    6ffc:	000d0e40 	call	d0e4 <__mulsi3>
    7000:	11400304 	addi	r5,r2,12
    7004:	8809883a 	mov	r4,r17
    7008:	1027883a 	mov	r19,r2
    700c:	0000b700 	call	b70 <_malloc_r>
    7010:	10c00304 	addi	r3,r2,12
    7014:	1023883a 	mov	r17,r2
    7018:	1809883a 	mov	r4,r3
    701c:	980d883a 	mov	r6,r19
    7020:	000b883a 	mov	r5,zero
    7024:	10000b26 	beq	r2,zero,7054 <__sfmoreglue+0x7c>
    7028:	14000115 	stw	r16,4(r2)
    702c:	10c00215 	stw	r3,8(r2)
    7030:	10000015 	stw	zero,0(r2)
    7034:	0008cbc0 	call	8cbc <memset>
    7038:	8805883a 	mov	r2,r17
    703c:	dfc00317 	ldw	ra,12(sp)
    7040:	dcc00217 	ldw	r19,8(sp)
    7044:	dc400117 	ldw	r17,4(sp)
    7048:	dc000017 	ldw	r16,0(sp)
    704c:	dec00404 	addi	sp,sp,16
    7050:	f800283a 	ret
    7054:	0023883a 	mov	r17,zero
    7058:	8805883a 	mov	r2,r17
    705c:	dfc00317 	ldw	ra,12(sp)
    7060:	dcc00217 	ldw	r19,8(sp)
    7064:	dc400117 	ldw	r17,4(sp)
    7068:	dc000017 	ldw	r16,0(sp)
    706c:	dec00404 	addi	sp,sp,16
    7070:	f800283a 	ret

00007074 <__sfp>:
    7074:	defffd04 	addi	sp,sp,-12
    7078:	00800074 	movhi	r2,1
    707c:	10837104 	addi	r2,r2,3524
    7080:	dc000015 	stw	r16,0(sp)
    7084:	14000017 	ldw	r16,0(r2)
    7088:	dc400115 	stw	r17,4(sp)
    708c:	dfc00215 	stw	ra,8(sp)
    7090:	80800e17 	ldw	r2,56(r16)
    7094:	2023883a 	mov	r17,r4
    7098:	10002626 	beq	r2,zero,7134 <__sfp+0xc0>
    709c:	8400b804 	addi	r16,r16,736
    70a0:	80800117 	ldw	r2,4(r16)
    70a4:	81000217 	ldw	r4,8(r16)
    70a8:	10ffffc4 	addi	r3,r2,-1
    70ac:	18000916 	blt	r3,zero,70d4 <__sfp+0x60>
    70b0:	2080030f 	ldh	r2,12(r4)
    70b4:	10000b26 	beq	r2,zero,70e4 <__sfp+0x70>
    70b8:	017fffc4 	movi	r5,-1
    70bc:	00000206 	br	70c8 <__sfp+0x54>
    70c0:	2080030f 	ldh	r2,12(r4)
    70c4:	10000726 	beq	r2,zero,70e4 <__sfp+0x70>
    70c8:	18ffffc4 	addi	r3,r3,-1
    70cc:	21001704 	addi	r4,r4,92
    70d0:	197ffb1e 	bne	r3,r5,70c0 <__sfp+0x4c>
    70d4:	80800017 	ldw	r2,0(r16)
    70d8:	10001926 	beq	r2,zero,7140 <__sfp+0xcc>
    70dc:	1021883a 	mov	r16,r2
    70e0:	003fef06 	br	70a0 <__sfp+0x2c>
    70e4:	00bfffc4 	movi	r2,-1
    70e8:	00c00044 	movi	r3,1
    70ec:	2080038d 	sth	r2,14(r4)
    70f0:	20c0030d 	sth	r3,12(r4)
    70f4:	20000015 	stw	zero,0(r4)
    70f8:	20000215 	stw	zero,8(r4)
    70fc:	20000115 	stw	zero,4(r4)
    7100:	20000415 	stw	zero,16(r4)
    7104:	20000515 	stw	zero,20(r4)
    7108:	20000615 	stw	zero,24(r4)
    710c:	20000c15 	stw	zero,48(r4)
    7110:	20000d15 	stw	zero,52(r4)
    7114:	20001115 	stw	zero,68(r4)
    7118:	20001215 	stw	zero,72(r4)
    711c:	2005883a 	mov	r2,r4
    7120:	dfc00217 	ldw	ra,8(sp)
    7124:	dc400117 	ldw	r17,4(sp)
    7128:	dc000017 	ldw	r16,0(sp)
    712c:	dec00304 	addi	sp,sp,12
    7130:	f800283a 	ret
    7134:	8009883a 	mov	r4,r16
    7138:	0006ed80 	call	6ed8 <__sinit>
    713c:	003fd706 	br	709c <__sfp+0x28>
    7140:	8809883a 	mov	r4,r17
    7144:	01400104 	movi	r5,4
    7148:	0006fd80 	call	6fd8 <__sfmoreglue>
    714c:	80800015 	stw	r2,0(r16)
    7150:	103fe21e 	bne	r2,zero,70dc <__sfp+0x68>
    7154:	00800304 	movi	r2,12
    7158:	0009883a 	mov	r4,zero
    715c:	88800015 	stw	r2,0(r17)
    7160:	003fee06 	br	711c <__sfp+0xa8>

00007164 <_malloc_trim_r>:
    7164:	defffb04 	addi	sp,sp,-20
    7168:	dcc00315 	stw	r19,12(sp)
    716c:	04c00074 	movhi	r19,1
    7170:	9cfcbb04 	addi	r19,r19,-3348
    7174:	dc800215 	stw	r18,8(sp)
    7178:	dc400115 	stw	r17,4(sp)
    717c:	dc000015 	stw	r16,0(sp)
    7180:	2823883a 	mov	r17,r5
    7184:	2025883a 	mov	r18,r4
    7188:	dfc00415 	stw	ra,16(sp)
    718c:	000db200 	call	db20 <__malloc_lock>
    7190:	98800217 	ldw	r2,8(r19)
    7194:	9009883a 	mov	r4,r18
    7198:	000b883a 	mov	r5,zero
    719c:	10c00117 	ldw	r3,4(r2)
    71a0:	00bfff04 	movi	r2,-4
    71a4:	18a0703a 	and	r16,r3,r2
    71a8:	8463c83a 	sub	r17,r16,r17
    71ac:	8c43fbc4 	addi	r17,r17,4079
    71b0:	8822d33a 	srli	r17,r17,12
    71b4:	0083ffc4 	movi	r2,4095
    71b8:	8c7fffc4 	addi	r17,r17,-1
    71bc:	8822933a 	slli	r17,r17,12
    71c0:	1440060e 	bge	r2,r17,71dc <_malloc_trim_r+0x78>
    71c4:	00014000 	call	1400 <_sbrk_r>
    71c8:	98c00217 	ldw	r3,8(r19)
    71cc:	9009883a 	mov	r4,r18
    71d0:	044bc83a 	sub	r5,zero,r17
    71d4:	80c7883a 	add	r3,r16,r3
    71d8:	10c00926 	beq	r2,r3,7200 <_malloc_trim_r+0x9c>
    71dc:	000db240 	call	db24 <__malloc_unlock>
    71e0:	0005883a 	mov	r2,zero
    71e4:	dfc00417 	ldw	ra,16(sp)
    71e8:	dcc00317 	ldw	r19,12(sp)
    71ec:	dc800217 	ldw	r18,8(sp)
    71f0:	dc400117 	ldw	r17,4(sp)
    71f4:	dc000017 	ldw	r16,0(sp)
    71f8:	dec00504 	addi	sp,sp,20
    71fc:	f800283a 	ret
    7200:	9009883a 	mov	r4,r18
    7204:	00014000 	call	1400 <_sbrk_r>
    7208:	844dc83a 	sub	r6,r16,r17
    720c:	00ffffc4 	movi	r3,-1
    7210:	9009883a 	mov	r4,r18
    7214:	000b883a 	mov	r5,zero
    7218:	01c00074 	movhi	r7,1
    721c:	39ca4e04 	addi	r7,r7,10552
    7220:	31800054 	ori	r6,r6,1
    7224:	10c00926 	beq	r2,r3,724c <_malloc_trim_r+0xe8>
    7228:	38800017 	ldw	r2,0(r7)
    722c:	98c00217 	ldw	r3,8(r19)
    7230:	9009883a 	mov	r4,r18
    7234:	1445c83a 	sub	r2,r2,r17
    7238:	38800015 	stw	r2,0(r7)
    723c:	19800115 	stw	r6,4(r3)
    7240:	000db240 	call	db24 <__malloc_unlock>
    7244:	00800044 	movi	r2,1
    7248:	003fe606 	br	71e4 <_malloc_trim_r+0x80>
    724c:	00014000 	call	1400 <_sbrk_r>
    7250:	99800217 	ldw	r6,8(r19)
    7254:	100f883a 	mov	r7,r2
    7258:	9009883a 	mov	r4,r18
    725c:	1187c83a 	sub	r3,r2,r6
    7260:	008003c4 	movi	r2,15
    7264:	19400054 	ori	r5,r3,1
    7268:	10ffdc0e 	bge	r2,r3,71dc <_malloc_trim_r+0x78>
    726c:	00800074 	movhi	r2,1
    7270:	10836f04 	addi	r2,r2,3516
    7274:	10c00017 	ldw	r3,0(r2)
    7278:	00800074 	movhi	r2,1
    727c:	108a4e04 	addi	r2,r2,10552
    7280:	31400115 	stw	r5,4(r6)
    7284:	38c7c83a 	sub	r3,r7,r3
    7288:	10c00015 	stw	r3,0(r2)
    728c:	003fd306 	br	71dc <_malloc_trim_r+0x78>

00007290 <_free_r>:
    7290:	defffd04 	addi	sp,sp,-12
    7294:	dc400115 	stw	r17,4(sp)
    7298:	dc000015 	stw	r16,0(sp)
    729c:	dfc00215 	stw	ra,8(sp)
    72a0:	2821883a 	mov	r16,r5
    72a4:	2023883a 	mov	r17,r4
    72a8:	28005a26 	beq	r5,zero,7414 <_free_r+0x184>
    72ac:	000db200 	call	db20 <__malloc_lock>
    72b0:	823ffe04 	addi	r8,r16,-8
    72b4:	41400117 	ldw	r5,4(r8)
    72b8:	00bfff84 	movi	r2,-2
    72bc:	02800074 	movhi	r10,1
    72c0:	52bcbb04 	addi	r10,r10,-3348
    72c4:	288e703a 	and	r7,r5,r2
    72c8:	41cd883a 	add	r6,r8,r7
    72cc:	30c00117 	ldw	r3,4(r6)
    72d0:	51000217 	ldw	r4,8(r10)
    72d4:	00bfff04 	movi	r2,-4
    72d8:	1892703a 	and	r9,r3,r2
    72dc:	5017883a 	mov	r11,r10
    72e0:	31006726 	beq	r6,r4,7480 <_free_r+0x1f0>
    72e4:	2880004c 	andi	r2,r5,1
    72e8:	1005003a 	cmpeq	r2,r2,zero
    72ec:	32400115 	stw	r9,4(r6)
    72f0:	10001a1e 	bne	r2,zero,735c <_free_r+0xcc>
    72f4:	000b883a 	mov	r5,zero
    72f8:	3247883a 	add	r3,r6,r9
    72fc:	18800117 	ldw	r2,4(r3)
    7300:	1080004c 	andi	r2,r2,1
    7304:	1000231e 	bne	r2,zero,7394 <_free_r+0x104>
    7308:	280ac03a 	cmpne	r5,r5,zero
    730c:	3a4f883a 	add	r7,r7,r9
    7310:	2800451e 	bne	r5,zero,7428 <_free_r+0x198>
    7314:	31000217 	ldw	r4,8(r6)
    7318:	00800074 	movhi	r2,1
    731c:	10bcbd04 	addi	r2,r2,-3340
    7320:	20807b26 	beq	r4,r2,7510 <_free_r+0x280>
    7324:	30800317 	ldw	r2,12(r6)
    7328:	3a07883a 	add	r3,r7,r8
    732c:	19c00015 	stw	r7,0(r3)
    7330:	11000215 	stw	r4,8(r2)
    7334:	20800315 	stw	r2,12(r4)
    7338:	38800054 	ori	r2,r7,1
    733c:	40800115 	stw	r2,4(r8)
    7340:	28001a26 	beq	r5,zero,73ac <_free_r+0x11c>
    7344:	8809883a 	mov	r4,r17
    7348:	dfc00217 	ldw	ra,8(sp)
    734c:	dc400117 	ldw	r17,4(sp)
    7350:	dc000017 	ldw	r16,0(sp)
    7354:	dec00304 	addi	sp,sp,12
    7358:	000db241 	jmpi	db24 <__malloc_unlock>
    735c:	80bffe17 	ldw	r2,-8(r16)
    7360:	50c00204 	addi	r3,r10,8
    7364:	4091c83a 	sub	r8,r8,r2
    7368:	41000217 	ldw	r4,8(r8)
    736c:	388f883a 	add	r7,r7,r2
    7370:	20c06126 	beq	r4,r3,74f8 <_free_r+0x268>
    7374:	40800317 	ldw	r2,12(r8)
    7378:	3247883a 	add	r3,r6,r9
    737c:	000b883a 	mov	r5,zero
    7380:	11000215 	stw	r4,8(r2)
    7384:	20800315 	stw	r2,12(r4)
    7388:	18800117 	ldw	r2,4(r3)
    738c:	1080004c 	andi	r2,r2,1
    7390:	103fdd26 	beq	r2,zero,7308 <_free_r+0x78>
    7394:	38800054 	ori	r2,r7,1
    7398:	3a07883a 	add	r3,r7,r8
    739c:	280ac03a 	cmpne	r5,r5,zero
    73a0:	40800115 	stw	r2,4(r8)
    73a4:	19c00015 	stw	r7,0(r3)
    73a8:	283fe61e 	bne	r5,zero,7344 <_free_r+0xb4>
    73ac:	00807fc4 	movi	r2,511
    73b0:	11c01f2e 	bgeu	r2,r7,7430 <_free_r+0x1a0>
    73b4:	3806d27a 	srli	r3,r7,9
    73b8:	1800481e 	bne	r3,zero,74dc <_free_r+0x24c>
    73bc:	3804d0fa 	srli	r2,r7,3
    73c0:	100690fa 	slli	r3,r2,3
    73c4:	1acd883a 	add	r6,r3,r11
    73c8:	31400217 	ldw	r5,8(r6)
    73cc:	31405926 	beq	r6,r5,7534 <_free_r+0x2a4>
    73d0:	28800117 	ldw	r2,4(r5)
    73d4:	00ffff04 	movi	r3,-4
    73d8:	10c4703a 	and	r2,r2,r3
    73dc:	3880022e 	bgeu	r7,r2,73e8 <_free_r+0x158>
    73e0:	29400217 	ldw	r5,8(r5)
    73e4:	317ffa1e 	bne	r6,r5,73d0 <_free_r+0x140>
    73e8:	29800317 	ldw	r6,12(r5)
    73ec:	41800315 	stw	r6,12(r8)
    73f0:	41400215 	stw	r5,8(r8)
    73f4:	8809883a 	mov	r4,r17
    73f8:	2a000315 	stw	r8,12(r5)
    73fc:	32000215 	stw	r8,8(r6)
    7400:	dfc00217 	ldw	ra,8(sp)
    7404:	dc400117 	ldw	r17,4(sp)
    7408:	dc000017 	ldw	r16,0(sp)
    740c:	dec00304 	addi	sp,sp,12
    7410:	000db241 	jmpi	db24 <__malloc_unlock>
    7414:	dfc00217 	ldw	ra,8(sp)
    7418:	dc400117 	ldw	r17,4(sp)
    741c:	dc000017 	ldw	r16,0(sp)
    7420:	dec00304 	addi	sp,sp,12
    7424:	f800283a 	ret
    7428:	31000217 	ldw	r4,8(r6)
    742c:	003fbd06 	br	7324 <_free_r+0x94>
    7430:	3806d0fa 	srli	r3,r7,3
    7434:	00800044 	movi	r2,1
    7438:	51400117 	ldw	r5,4(r10)
    743c:	180890fa 	slli	r4,r3,3
    7440:	1807d0ba 	srai	r3,r3,2
    7444:	22c9883a 	add	r4,r4,r11
    7448:	21800217 	ldw	r6,8(r4)
    744c:	10c4983a 	sll	r2,r2,r3
    7450:	41000315 	stw	r4,12(r8)
    7454:	41800215 	stw	r6,8(r8)
    7458:	288ab03a 	or	r5,r5,r2
    745c:	22000215 	stw	r8,8(r4)
    7460:	8809883a 	mov	r4,r17
    7464:	51400115 	stw	r5,4(r10)
    7468:	32000315 	stw	r8,12(r6)
    746c:	dfc00217 	ldw	ra,8(sp)
    7470:	dc400117 	ldw	r17,4(sp)
    7474:	dc000017 	ldw	r16,0(sp)
    7478:	dec00304 	addi	sp,sp,12
    747c:	000db241 	jmpi	db24 <__malloc_unlock>
    7480:	2880004c 	andi	r2,r5,1
    7484:	3a4d883a 	add	r6,r7,r9
    7488:	1000071e 	bne	r2,zero,74a8 <_free_r+0x218>
    748c:	80bffe17 	ldw	r2,-8(r16)
    7490:	4091c83a 	sub	r8,r8,r2
    7494:	41000317 	ldw	r4,12(r8)
    7498:	40c00217 	ldw	r3,8(r8)
    749c:	308d883a 	add	r6,r6,r2
    74a0:	20c00215 	stw	r3,8(r4)
    74a4:	19000315 	stw	r4,12(r3)
    74a8:	00800074 	movhi	r2,1
    74ac:	10836e04 	addi	r2,r2,3512
    74b0:	11000017 	ldw	r4,0(r2)
    74b4:	30c00054 	ori	r3,r6,1
    74b8:	52000215 	stw	r8,8(r10)
    74bc:	40c00115 	stw	r3,4(r8)
    74c0:	313fa036 	bltu	r6,r4,7344 <_free_r+0xb4>
    74c4:	00800074 	movhi	r2,1
    74c8:	108a4104 	addi	r2,r2,10500
    74cc:	11400017 	ldw	r5,0(r2)
    74d0:	8809883a 	mov	r4,r17
    74d4:	00071640 	call	7164 <_malloc_trim_r>
    74d8:	003f9a06 	br	7344 <_free_r+0xb4>
    74dc:	00800104 	movi	r2,4
    74e0:	10c0072e 	bgeu	r2,r3,7500 <_free_r+0x270>
    74e4:	00800504 	movi	r2,20
    74e8:	10c01936 	bltu	r2,r3,7550 <_free_r+0x2c0>
    74ec:	188016c4 	addi	r2,r3,91
    74f0:	100690fa 	slli	r3,r2,3
    74f4:	003fb306 	br	73c4 <_free_r+0x134>
    74f8:	01400044 	movi	r5,1
    74fc:	003f7e06 	br	72f8 <_free_r+0x68>
    7500:	3804d1ba 	srli	r2,r7,6
    7504:	10800e04 	addi	r2,r2,56
    7508:	100690fa 	slli	r3,r2,3
    750c:	003fad06 	br	73c4 <_free_r+0x134>
    7510:	22000315 	stw	r8,12(r4)
    7514:	22000215 	stw	r8,8(r4)
    7518:	3a05883a 	add	r2,r7,r8
    751c:	38c00054 	ori	r3,r7,1
    7520:	11c00015 	stw	r7,0(r2)
    7524:	41000215 	stw	r4,8(r8)
    7528:	40c00115 	stw	r3,4(r8)
    752c:	41000315 	stw	r4,12(r8)
    7530:	003f8406 	br	7344 <_free_r+0xb4>
    7534:	1005d0ba 	srai	r2,r2,2
    7538:	00c00044 	movi	r3,1
    753c:	51000117 	ldw	r4,4(r10)
    7540:	1886983a 	sll	r3,r3,r2
    7544:	20c8b03a 	or	r4,r4,r3
    7548:	51000115 	stw	r4,4(r10)
    754c:	003fa706 	br	73ec <_free_r+0x15c>
    7550:	00801504 	movi	r2,84
    7554:	10c00436 	bltu	r2,r3,7568 <_free_r+0x2d8>
    7558:	3804d33a 	srli	r2,r7,12
    755c:	10801b84 	addi	r2,r2,110
    7560:	100690fa 	slli	r3,r2,3
    7564:	003f9706 	br	73c4 <_free_r+0x134>
    7568:	00805504 	movi	r2,340
    756c:	10c00436 	bltu	r2,r3,7580 <_free_r+0x2f0>
    7570:	3804d3fa 	srli	r2,r7,15
    7574:	10801dc4 	addi	r2,r2,119
    7578:	100690fa 	slli	r3,r2,3
    757c:	003f9106 	br	73c4 <_free_r+0x134>
    7580:	00815504 	movi	r2,1364
    7584:	10c0032e 	bgeu	r2,r3,7594 <_free_r+0x304>
    7588:	00801f84 	movi	r2,126
    758c:	00c0fc04 	movi	r3,1008
    7590:	003f8c06 	br	73c4 <_free_r+0x134>
    7594:	3804d4ba 	srli	r2,r7,18
    7598:	10801f04 	addi	r2,r2,124
    759c:	100690fa 	slli	r3,r2,3
    75a0:	003f8806 	br	73c4 <_free_r+0x134>

000075a4 <__sfvwrite_r>:
    75a4:	30800217 	ldw	r2,8(r6)
    75a8:	defff504 	addi	sp,sp,-44
    75ac:	df000915 	stw	fp,36(sp)
    75b0:	dd800715 	stw	r22,28(sp)
    75b4:	dc800315 	stw	r18,12(sp)
    75b8:	dfc00a15 	stw	ra,40(sp)
    75bc:	ddc00815 	stw	r23,32(sp)
    75c0:	dd400615 	stw	r21,24(sp)
    75c4:	dd000515 	stw	r20,20(sp)
    75c8:	dcc00415 	stw	r19,16(sp)
    75cc:	dc400215 	stw	r17,8(sp)
    75d0:	dc000115 	stw	r16,4(sp)
    75d4:	302d883a 	mov	r22,r6
    75d8:	2039883a 	mov	fp,r4
    75dc:	2825883a 	mov	r18,r5
    75e0:	10001c26 	beq	r2,zero,7654 <__sfvwrite_r+0xb0>
    75e4:	29c0030b 	ldhu	r7,12(r5)
    75e8:	3880020c 	andi	r2,r7,8
    75ec:	10002726 	beq	r2,zero,768c <__sfvwrite_r+0xe8>
    75f0:	28800417 	ldw	r2,16(r5)
    75f4:	10002526 	beq	r2,zero,768c <__sfvwrite_r+0xe8>
    75f8:	3880008c 	andi	r2,r7,2
    75fc:	b5400017 	ldw	r21,0(r22)
    7600:	10002826 	beq	r2,zero,76a4 <__sfvwrite_r+0x100>
    7604:	0021883a 	mov	r16,zero
    7608:	0023883a 	mov	r17,zero
    760c:	880d883a 	mov	r6,r17
    7610:	e009883a 	mov	r4,fp
    7614:	00810004 	movi	r2,1024
    7618:	80006e26 	beq	r16,zero,77d4 <__sfvwrite_r+0x230>
    761c:	800f883a 	mov	r7,r16
    7620:	91400717 	ldw	r5,28(r18)
    7624:	1400012e 	bgeu	r2,r16,762c <__sfvwrite_r+0x88>
    7628:	100f883a 	mov	r7,r2
    762c:	90c00917 	ldw	r3,36(r18)
    7630:	183ee83a 	callr	r3
    7634:	1007883a 	mov	r3,r2
    7638:	80a1c83a 	sub	r16,r16,r2
    763c:	88a3883a 	add	r17,r17,r2
    7640:	00806d0e 	bge	zero,r2,77f8 <__sfvwrite_r+0x254>
    7644:	b0800217 	ldw	r2,8(r22)
    7648:	10c5c83a 	sub	r2,r2,r3
    764c:	b0800215 	stw	r2,8(r22)
    7650:	103fee1e 	bne	r2,zero,760c <__sfvwrite_r+0x68>
    7654:	0009883a 	mov	r4,zero
    7658:	2005883a 	mov	r2,r4
    765c:	dfc00a17 	ldw	ra,40(sp)
    7660:	df000917 	ldw	fp,36(sp)
    7664:	ddc00817 	ldw	r23,32(sp)
    7668:	dd800717 	ldw	r22,28(sp)
    766c:	dd400617 	ldw	r21,24(sp)
    7670:	dd000517 	ldw	r20,20(sp)
    7674:	dcc00417 	ldw	r19,16(sp)
    7678:	dc800317 	ldw	r18,12(sp)
    767c:	dc400217 	ldw	r17,8(sp)
    7680:	dc000117 	ldw	r16,4(sp)
    7684:	dec00b04 	addi	sp,sp,44
    7688:	f800283a 	ret
    768c:	000530c0 	call	530c <__swsetup_r>
    7690:	1000e41e 	bne	r2,zero,7a24 <__sfvwrite_r+0x480>
    7694:	91c0030b 	ldhu	r7,12(r18)
    7698:	b5400017 	ldw	r21,0(r22)
    769c:	3880008c 	andi	r2,r7,2
    76a0:	103fd81e 	bne	r2,zero,7604 <__sfvwrite_r+0x60>
    76a4:	3880004c 	andi	r2,r7,1
    76a8:	1005003a 	cmpeq	r2,r2,zero
    76ac:	10005726 	beq	r2,zero,780c <__sfvwrite_r+0x268>
    76b0:	0029883a 	mov	r20,zero
    76b4:	002f883a 	mov	r23,zero
    76b8:	a0004226 	beq	r20,zero,77c4 <__sfvwrite_r+0x220>
    76bc:	3880800c 	andi	r2,r7,512
    76c0:	94000217 	ldw	r16,8(r18)
    76c4:	10008b26 	beq	r2,zero,78f4 <__sfvwrite_r+0x350>
    76c8:	800d883a 	mov	r6,r16
    76cc:	a400a536 	bltu	r20,r16,7964 <__sfvwrite_r+0x3c0>
    76d0:	3881200c 	andi	r2,r7,1152
    76d4:	10002726 	beq	r2,zero,7774 <__sfvwrite_r+0x1d0>
    76d8:	90800517 	ldw	r2,20(r18)
    76dc:	92000417 	ldw	r8,16(r18)
    76e0:	91400017 	ldw	r5,0(r18)
    76e4:	1087883a 	add	r3,r2,r2
    76e8:	1887883a 	add	r3,r3,r2
    76ec:	1808d7fa 	srli	r4,r3,31
    76f0:	2a21c83a 	sub	r16,r5,r8
    76f4:	80800044 	addi	r2,r16,1
    76f8:	20c9883a 	add	r4,r4,r3
    76fc:	2027d07a 	srai	r19,r4,1
    7700:	a085883a 	add	r2,r20,r2
    7704:	980d883a 	mov	r6,r19
    7708:	9880022e 	bgeu	r19,r2,7714 <__sfvwrite_r+0x170>
    770c:	1027883a 	mov	r19,r2
    7710:	100d883a 	mov	r6,r2
    7714:	3881000c 	andi	r2,r7,1024
    7718:	1000b826 	beq	r2,zero,79fc <__sfvwrite_r+0x458>
    771c:	300b883a 	mov	r5,r6
    7720:	e009883a 	mov	r4,fp
    7724:	0000b700 	call	b70 <_malloc_r>
    7728:	10003126 	beq	r2,zero,77f0 <__sfvwrite_r+0x24c>
    772c:	91400417 	ldw	r5,16(r18)
    7730:	1009883a 	mov	r4,r2
    7734:	800d883a 	mov	r6,r16
    7738:	1023883a 	mov	r17,r2
    773c:	0008b3c0 	call	8b3c <memcpy>
    7740:	90c0030b 	ldhu	r3,12(r18)
    7744:	00beffc4 	movi	r2,-1025
    7748:	1886703a 	and	r3,r3,r2
    774c:	18c02014 	ori	r3,r3,128
    7750:	90c0030d 	sth	r3,12(r18)
    7754:	9c07c83a 	sub	r3,r19,r16
    7758:	8c05883a 	add	r2,r17,r16
    775c:	a00d883a 	mov	r6,r20
    7760:	a021883a 	mov	r16,r20
    7764:	90800015 	stw	r2,0(r18)
    7768:	90c00215 	stw	r3,8(r18)
    776c:	94400415 	stw	r17,16(r18)
    7770:	94c00515 	stw	r19,20(r18)
    7774:	91000017 	ldw	r4,0(r18)
    7778:	b80b883a 	mov	r5,r23
    777c:	a023883a 	mov	r17,r20
    7780:	0008bdc0 	call	8bdc <memmove>
    7784:	90c00217 	ldw	r3,8(r18)
    7788:	90800017 	ldw	r2,0(r18)
    778c:	a027883a 	mov	r19,r20
    7790:	1c07c83a 	sub	r3,r3,r16
    7794:	1405883a 	add	r2,r2,r16
    7798:	90c00215 	stw	r3,8(r18)
    779c:	a021883a 	mov	r16,r20
    77a0:	90800015 	stw	r2,0(r18)
    77a4:	b0800217 	ldw	r2,8(r22)
    77a8:	1405c83a 	sub	r2,r2,r16
    77ac:	b0800215 	stw	r2,8(r22)
    77b0:	103fa826 	beq	r2,zero,7654 <__sfvwrite_r+0xb0>
    77b4:	a469c83a 	sub	r20,r20,r17
    77b8:	91c0030b 	ldhu	r7,12(r18)
    77bc:	bcef883a 	add	r23,r23,r19
    77c0:	a03fbe1e 	bne	r20,zero,76bc <__sfvwrite_r+0x118>
    77c4:	adc00017 	ldw	r23,0(r21)
    77c8:	ad000117 	ldw	r20,4(r21)
    77cc:	ad400204 	addi	r21,r21,8
    77d0:	003fb906 	br	76b8 <__sfvwrite_r+0x114>
    77d4:	ac400017 	ldw	r17,0(r21)
    77d8:	ac000117 	ldw	r16,4(r21)
    77dc:	ad400204 	addi	r21,r21,8
    77e0:	003f8a06 	br	760c <__sfvwrite_r+0x68>
    77e4:	91400417 	ldw	r5,16(r18)
    77e8:	e009883a 	mov	r4,fp
    77ec:	00072900 	call	7290 <_free_r>
    77f0:	00800304 	movi	r2,12
    77f4:	e0800015 	stw	r2,0(fp)
    77f8:	9080030b 	ldhu	r2,12(r18)
    77fc:	013fffc4 	movi	r4,-1
    7800:	10801014 	ori	r2,r2,64
    7804:	9080030d 	sth	r2,12(r18)
    7808:	003f9306 	br	7658 <__sfvwrite_r+0xb4>
    780c:	0027883a 	mov	r19,zero
    7810:	002f883a 	mov	r23,zero
    7814:	d8000015 	stw	zero,0(sp)
    7818:	0029883a 	mov	r20,zero
    781c:	98001e26 	beq	r19,zero,7898 <__sfvwrite_r+0x2f4>
    7820:	d8c00017 	ldw	r3,0(sp)
    7824:	1804c03a 	cmpne	r2,r3,zero
    7828:	10005e26 	beq	r2,zero,79a4 <__sfvwrite_r+0x400>
    782c:	9821883a 	mov	r16,r19
    7830:	a4c0012e 	bgeu	r20,r19,7838 <__sfvwrite_r+0x294>
    7834:	a021883a 	mov	r16,r20
    7838:	91000017 	ldw	r4,0(r18)
    783c:	90800417 	ldw	r2,16(r18)
    7840:	91800217 	ldw	r6,8(r18)
    7844:	91c00517 	ldw	r7,20(r18)
    7848:	1100022e 	bgeu	r2,r4,7854 <__sfvwrite_r+0x2b0>
    784c:	31e3883a 	add	r17,r6,r7
    7850:	8c001616 	blt	r17,r16,78ac <__sfvwrite_r+0x308>
    7854:	81c03816 	blt	r16,r7,7938 <__sfvwrite_r+0x394>
    7858:	90c00917 	ldw	r3,36(r18)
    785c:	91400717 	ldw	r5,28(r18)
    7860:	e009883a 	mov	r4,fp
    7864:	b80d883a 	mov	r6,r23
    7868:	183ee83a 	callr	r3
    786c:	1023883a 	mov	r17,r2
    7870:	00bfe10e 	bge	zero,r2,77f8 <__sfvwrite_r+0x254>
    7874:	a469c83a 	sub	r20,r20,r17
    7878:	a0001826 	beq	r20,zero,78dc <__sfvwrite_r+0x338>
    787c:	b0800217 	ldw	r2,8(r22)
    7880:	1445c83a 	sub	r2,r2,r17
    7884:	b0800215 	stw	r2,8(r22)
    7888:	103f7226 	beq	r2,zero,7654 <__sfvwrite_r+0xb0>
    788c:	9c67c83a 	sub	r19,r19,r17
    7890:	bc6f883a 	add	r23,r23,r17
    7894:	983fe21e 	bne	r19,zero,7820 <__sfvwrite_r+0x27c>
    7898:	adc00017 	ldw	r23,0(r21)
    789c:	acc00117 	ldw	r19,4(r21)
    78a0:	ad400204 	addi	r21,r21,8
    78a4:	d8000015 	stw	zero,0(sp)
    78a8:	003fdc06 	br	781c <__sfvwrite_r+0x278>
    78ac:	b80b883a 	mov	r5,r23
    78b0:	880d883a 	mov	r6,r17
    78b4:	0008bdc0 	call	8bdc <memmove>
    78b8:	90c00017 	ldw	r3,0(r18)
    78bc:	e009883a 	mov	r4,fp
    78c0:	900b883a 	mov	r5,r18
    78c4:	1c47883a 	add	r3,r3,r17
    78c8:	90c00015 	stw	r3,0(r18)
    78cc:	0006c400 	call	6c40 <_fflush_r>
    78d0:	103fc91e 	bne	r2,zero,77f8 <__sfvwrite_r+0x254>
    78d4:	a469c83a 	sub	r20,r20,r17
    78d8:	a03fe81e 	bne	r20,zero,787c <__sfvwrite_r+0x2d8>
    78dc:	e009883a 	mov	r4,fp
    78e0:	900b883a 	mov	r5,r18
    78e4:	0006c400 	call	6c40 <_fflush_r>
    78e8:	103fc31e 	bne	r2,zero,77f8 <__sfvwrite_r+0x254>
    78ec:	d8000015 	stw	zero,0(sp)
    78f0:	003fe206 	br	787c <__sfvwrite_r+0x2d8>
    78f4:	91000017 	ldw	r4,0(r18)
    78f8:	90800417 	ldw	r2,16(r18)
    78fc:	1100022e 	bgeu	r2,r4,7908 <__sfvwrite_r+0x364>
    7900:	8023883a 	mov	r17,r16
    7904:	85003136 	bltu	r16,r20,79cc <__sfvwrite_r+0x428>
    7908:	91c00517 	ldw	r7,20(r18)
    790c:	a1c01836 	bltu	r20,r7,7970 <__sfvwrite_r+0x3cc>
    7910:	90c00917 	ldw	r3,36(r18)
    7914:	91400717 	ldw	r5,28(r18)
    7918:	e009883a 	mov	r4,fp
    791c:	b80d883a 	mov	r6,r23
    7920:	183ee83a 	callr	r3
    7924:	1021883a 	mov	r16,r2
    7928:	00bfb30e 	bge	zero,r2,77f8 <__sfvwrite_r+0x254>
    792c:	1023883a 	mov	r17,r2
    7930:	1027883a 	mov	r19,r2
    7934:	003f9b06 	br	77a4 <__sfvwrite_r+0x200>
    7938:	b80b883a 	mov	r5,r23
    793c:	800d883a 	mov	r6,r16
    7940:	0008bdc0 	call	8bdc <memmove>
    7944:	90c00217 	ldw	r3,8(r18)
    7948:	90800017 	ldw	r2,0(r18)
    794c:	8023883a 	mov	r17,r16
    7950:	1c07c83a 	sub	r3,r3,r16
    7954:	1405883a 	add	r2,r2,r16
    7958:	90c00215 	stw	r3,8(r18)
    795c:	90800015 	stw	r2,0(r18)
    7960:	003fc406 	br	7874 <__sfvwrite_r+0x2d0>
    7964:	a00d883a 	mov	r6,r20
    7968:	a021883a 	mov	r16,r20
    796c:	003f8106 	br	7774 <__sfvwrite_r+0x1d0>
    7970:	b80b883a 	mov	r5,r23
    7974:	a00d883a 	mov	r6,r20
    7978:	0008bdc0 	call	8bdc <memmove>
    797c:	90c00217 	ldw	r3,8(r18)
    7980:	90800017 	ldw	r2,0(r18)
    7984:	a021883a 	mov	r16,r20
    7988:	1d07c83a 	sub	r3,r3,r20
    798c:	1505883a 	add	r2,r2,r20
    7990:	a023883a 	mov	r17,r20
    7994:	a027883a 	mov	r19,r20
    7998:	90c00215 	stw	r3,8(r18)
    799c:	90800015 	stw	r2,0(r18)
    79a0:	003f8006 	br	77a4 <__sfvwrite_r+0x200>
    79a4:	b809883a 	mov	r4,r23
    79a8:	01400284 	movi	r5,10
    79ac:	980d883a 	mov	r6,r19
    79b0:	00089e40 	call	89e4 <memchr>
    79b4:	10001726 	beq	r2,zero,7a14 <__sfvwrite_r+0x470>
    79b8:	15c5c83a 	sub	r2,r2,r23
    79bc:	15000044 	addi	r20,r2,1
    79c0:	00800044 	movi	r2,1
    79c4:	d8800015 	stw	r2,0(sp)
    79c8:	003f9806 	br	782c <__sfvwrite_r+0x288>
    79cc:	b80b883a 	mov	r5,r23
    79d0:	800d883a 	mov	r6,r16
    79d4:	0008bdc0 	call	8bdc <memmove>
    79d8:	90c00017 	ldw	r3,0(r18)
    79dc:	e009883a 	mov	r4,fp
    79e0:	900b883a 	mov	r5,r18
    79e4:	1c07883a 	add	r3,r3,r16
    79e8:	90c00015 	stw	r3,0(r18)
    79ec:	8027883a 	mov	r19,r16
    79f0:	0006c400 	call	6c40 <_fflush_r>
    79f4:	103f6b26 	beq	r2,zero,77a4 <__sfvwrite_r+0x200>
    79f8:	003f7f06 	br	77f8 <__sfvwrite_r+0x254>
    79fc:	400b883a 	mov	r5,r8
    7a00:	e009883a 	mov	r4,fp
    7a04:	0009fcc0 	call	9fcc <_realloc_r>
    7a08:	103f7626 	beq	r2,zero,77e4 <__sfvwrite_r+0x240>
    7a0c:	1023883a 	mov	r17,r2
    7a10:	003f5006 	br	7754 <__sfvwrite_r+0x1b0>
    7a14:	00c00044 	movi	r3,1
    7a18:	9d000044 	addi	r20,r19,1
    7a1c:	d8c00015 	stw	r3,0(sp)
    7a20:	003f8206 	br	782c <__sfvwrite_r+0x288>
    7a24:	9080030b 	ldhu	r2,12(r18)
    7a28:	00c00244 	movi	r3,9
    7a2c:	013fffc4 	movi	r4,-1
    7a30:	10801014 	ori	r2,r2,64
    7a34:	9080030d 	sth	r2,12(r18)
    7a38:	e0c00015 	stw	r3,0(fp)
    7a3c:	003f0606 	br	7658 <__sfvwrite_r+0xb4>

00007a40 <_fwalk_reent>:
    7a40:	defff704 	addi	sp,sp,-36
    7a44:	dcc00315 	stw	r19,12(sp)
    7a48:	24c0b804 	addi	r19,r4,736
    7a4c:	dd800615 	stw	r22,24(sp)
    7a50:	dd400515 	stw	r21,20(sp)
    7a54:	dfc00815 	stw	ra,32(sp)
    7a58:	ddc00715 	stw	r23,28(sp)
    7a5c:	dd000415 	stw	r20,16(sp)
    7a60:	dc800215 	stw	r18,8(sp)
    7a64:	dc400115 	stw	r17,4(sp)
    7a68:	dc000015 	stw	r16,0(sp)
    7a6c:	202b883a 	mov	r21,r4
    7a70:	282d883a 	mov	r22,r5
    7a74:	0006ec80 	call	6ec8 <__sfp_lock_acquire>
    7a78:	98002126 	beq	r19,zero,7b00 <_fwalk_reent+0xc0>
    7a7c:	002f883a 	mov	r23,zero
    7a80:	9c800117 	ldw	r18,4(r19)
    7a84:	9c000217 	ldw	r16,8(r19)
    7a88:	90bfffc4 	addi	r2,r18,-1
    7a8c:	10000d16 	blt	r2,zero,7ac4 <_fwalk_reent+0x84>
    7a90:	0023883a 	mov	r17,zero
    7a94:	053fffc4 	movi	r20,-1
    7a98:	8080030f 	ldh	r2,12(r16)
    7a9c:	8c400044 	addi	r17,r17,1
    7aa0:	10000626 	beq	r2,zero,7abc <_fwalk_reent+0x7c>
    7aa4:	8080038f 	ldh	r2,14(r16)
    7aa8:	800b883a 	mov	r5,r16
    7aac:	a809883a 	mov	r4,r21
    7ab0:	15000226 	beq	r2,r20,7abc <_fwalk_reent+0x7c>
    7ab4:	b03ee83a 	callr	r22
    7ab8:	b8aeb03a 	or	r23,r23,r2
    7abc:	84001704 	addi	r16,r16,92
    7ac0:	947ff51e 	bne	r18,r17,7a98 <_fwalk_reent+0x58>
    7ac4:	9cc00017 	ldw	r19,0(r19)
    7ac8:	983fed1e 	bne	r19,zero,7a80 <_fwalk_reent+0x40>
    7acc:	0006ecc0 	call	6ecc <__sfp_lock_release>
    7ad0:	b805883a 	mov	r2,r23
    7ad4:	dfc00817 	ldw	ra,32(sp)
    7ad8:	ddc00717 	ldw	r23,28(sp)
    7adc:	dd800617 	ldw	r22,24(sp)
    7ae0:	dd400517 	ldw	r21,20(sp)
    7ae4:	dd000417 	ldw	r20,16(sp)
    7ae8:	dcc00317 	ldw	r19,12(sp)
    7aec:	dc800217 	ldw	r18,8(sp)
    7af0:	dc400117 	ldw	r17,4(sp)
    7af4:	dc000017 	ldw	r16,0(sp)
    7af8:	dec00904 	addi	sp,sp,36
    7afc:	f800283a 	ret
    7b00:	002f883a 	mov	r23,zero
    7b04:	003ff106 	br	7acc <_fwalk_reent+0x8c>

00007b08 <_fwalk>:
    7b08:	defff804 	addi	sp,sp,-32
    7b0c:	dcc00315 	stw	r19,12(sp)
    7b10:	24c0b804 	addi	r19,r4,736
    7b14:	dd400515 	stw	r21,20(sp)
    7b18:	dfc00715 	stw	ra,28(sp)
    7b1c:	dd800615 	stw	r22,24(sp)
    7b20:	dd000415 	stw	r20,16(sp)
    7b24:	dc800215 	stw	r18,8(sp)
    7b28:	dc400115 	stw	r17,4(sp)
    7b2c:	dc000015 	stw	r16,0(sp)
    7b30:	282b883a 	mov	r21,r5
    7b34:	0006ec80 	call	6ec8 <__sfp_lock_acquire>
    7b38:	98001f26 	beq	r19,zero,7bb8 <_fwalk+0xb0>
    7b3c:	002d883a 	mov	r22,zero
    7b40:	9c800117 	ldw	r18,4(r19)
    7b44:	9c000217 	ldw	r16,8(r19)
    7b48:	90bfffc4 	addi	r2,r18,-1
    7b4c:	10000c16 	blt	r2,zero,7b80 <_fwalk+0x78>
    7b50:	0023883a 	mov	r17,zero
    7b54:	053fffc4 	movi	r20,-1
    7b58:	8080030f 	ldh	r2,12(r16)
    7b5c:	8c400044 	addi	r17,r17,1
    7b60:	10000526 	beq	r2,zero,7b78 <_fwalk+0x70>
    7b64:	8080038f 	ldh	r2,14(r16)
    7b68:	8009883a 	mov	r4,r16
    7b6c:	15000226 	beq	r2,r20,7b78 <_fwalk+0x70>
    7b70:	a83ee83a 	callr	r21
    7b74:	b0acb03a 	or	r22,r22,r2
    7b78:	84001704 	addi	r16,r16,92
    7b7c:	947ff61e 	bne	r18,r17,7b58 <_fwalk+0x50>
    7b80:	9cc00017 	ldw	r19,0(r19)
    7b84:	983fee1e 	bne	r19,zero,7b40 <_fwalk+0x38>
    7b88:	0006ecc0 	call	6ecc <__sfp_lock_release>
    7b8c:	b005883a 	mov	r2,r22
    7b90:	dfc00717 	ldw	ra,28(sp)
    7b94:	dd800617 	ldw	r22,24(sp)
    7b98:	dd400517 	ldw	r21,20(sp)
    7b9c:	dd000417 	ldw	r20,16(sp)
    7ba0:	dcc00317 	ldw	r19,12(sp)
    7ba4:	dc800217 	ldw	r18,8(sp)
    7ba8:	dc400117 	ldw	r17,4(sp)
    7bac:	dc000017 	ldw	r16,0(sp)
    7bb0:	dec00804 	addi	sp,sp,32
    7bb4:	f800283a 	ret
    7bb8:	002d883a 	mov	r22,zero
    7bbc:	003ff206 	br	7b88 <_fwalk+0x80>

00007bc0 <htinit>:
    7bc0:	28800003 	ldbu	r2,0(r5)
    7bc4:	10000626 	beq	r2,zero,7be0 <htinit+0x20>
    7bc8:	1105883a 	add	r2,r2,r4
    7bcc:	11800005 	stb	r6,0(r2)
    7bd0:	28800043 	ldbu	r2,1(r5)
    7bd4:	31800044 	addi	r6,r6,1
    7bd8:	29400044 	addi	r5,r5,1
    7bdc:	103ffa1e 	bne	r2,zero,7bc8 <htinit+0x8>
    7be0:	f800283a 	ret

00007be4 <__hexdig_init>:
    7be4:	defffd04 	addi	sp,sp,-12
    7be8:	dc400015 	stw	r17,0(sp)
    7bec:	04400074 	movhi	r17,1
    7bf0:	8c4a5804 	addi	r17,r17,10592
    7bf4:	dcc00115 	stw	r19,4(sp)
    7bf8:	8809883a 	mov	r4,r17
    7bfc:	04c00684 	movi	r19,26
    7c00:	01400074 	movhi	r5,1
    7c04:	297c0104 	addi	r5,r5,-4092
    7c08:	01800404 	movi	r6,16
    7c0c:	dfc00215 	stw	ra,8(sp)
    7c10:	0007bc00 	call	7bc0 <htinit>
    7c14:	980d883a 	mov	r6,r19
    7c18:	8809883a 	mov	r4,r17
    7c1c:	01400074 	movhi	r5,1
    7c20:	297c0404 	addi	r5,r5,-4080
    7c24:	0007bc00 	call	7bc0 <htinit>
    7c28:	8809883a 	mov	r4,r17
    7c2c:	980d883a 	mov	r6,r19
    7c30:	01400074 	movhi	r5,1
    7c34:	297c0604 	addi	r5,r5,-4072
    7c38:	dfc00217 	ldw	ra,8(sp)
    7c3c:	dcc00117 	ldw	r19,4(sp)
    7c40:	dc400017 	ldw	r17,0(sp)
    7c44:	dec00304 	addi	sp,sp,12
    7c48:	0007bc01 	jmpi	7bc0 <htinit>

00007c4c <rshift>:
    7c4c:	2807d17a 	srai	r3,r5,5
    7c50:	20800417 	ldw	r2,16(r4)
    7c54:	22400504 	addi	r9,r4,20
    7c58:	480f883a 	mov	r7,r9
    7c5c:	1880190e 	bge	r3,r2,7cc4 <rshift+0x78>
    7c60:	1085883a 	add	r2,r2,r2
    7c64:	18c7883a 	add	r3,r3,r3
    7c68:	1085883a 	add	r2,r2,r2
    7c6c:	18c7883a 	add	r3,r3,r3
    7c70:	294007cc 	andi	r5,r5,31
    7c74:	4891883a 	add	r8,r9,r2
    7c78:	48cd883a 	add	r6,r9,r3
    7c7c:	28001726 	beq	r5,zero,7cdc <rshift+0x90>
    7c80:	30c00017 	ldw	r3,0(r6)
    7c84:	00800804 	movi	r2,32
    7c88:	31800104 	addi	r6,r6,4
    7c8c:	1155c83a 	sub	r10,r2,r5
    7c90:	1946d83a 	srl	r3,r3,r5
    7c94:	3200092e 	bgeu	r6,r8,7cbc <rshift+0x70>
    7c98:	30800017 	ldw	r2,0(r6)
    7c9c:	1284983a 	sll	r2,r2,r10
    7ca0:	10c4b03a 	or	r2,r2,r3
    7ca4:	38800015 	stw	r2,0(r7)
    7ca8:	30c00017 	ldw	r3,0(r6)
    7cac:	31800104 	addi	r6,r6,4
    7cb0:	39c00104 	addi	r7,r7,4
    7cb4:	1946d83a 	srl	r3,r3,r5
    7cb8:	323ff736 	bltu	r6,r8,7c98 <rshift+0x4c>
    7cbc:	38c00015 	stw	r3,0(r7)
    7cc0:	18000c1e 	bne	r3,zero,7cf4 <rshift+0xa8>
    7cc4:	3a45c83a 	sub	r2,r7,r9
    7cc8:	1005d0ba 	srai	r2,r2,2
    7ccc:	20800415 	stw	r2,16(r4)
    7cd0:	1000011e 	bne	r2,zero,7cd8 <rshift+0x8c>
    7cd4:	20000515 	stw	zero,20(r4)
    7cd8:	f800283a 	ret
    7cdc:	323ff92e 	bgeu	r6,r8,7cc4 <rshift+0x78>
    7ce0:	30800017 	ldw	r2,0(r6)
    7ce4:	31800104 	addi	r6,r6,4
    7ce8:	38800015 	stw	r2,0(r7)
    7cec:	39c00104 	addi	r7,r7,4
    7cf0:	003ffa06 	br	7cdc <rshift+0x90>
    7cf4:	39c00104 	addi	r7,r7,4
    7cf8:	003ff206 	br	7cc4 <rshift+0x78>

00007cfc <__gethex>:
    7cfc:	defff104 	addi	sp,sp,-60
    7d00:	df000d15 	stw	fp,52(sp)
    7d04:	dcc00815 	stw	r19,32(sp)
    7d08:	dfc00e15 	stw	ra,56(sp)
    7d0c:	ddc00c15 	stw	r23,48(sp)
    7d10:	dd800b15 	stw	r22,44(sp)
    7d14:	dd400a15 	stw	r21,40(sp)
    7d18:	dd000915 	stw	r20,36(sp)
    7d1c:	dc800715 	stw	r18,28(sp)
    7d20:	dc400615 	stw	r17,24(sp)
    7d24:	dc000515 	stw	r16,20(sp)
    7d28:	04c00074 	movhi	r19,1
    7d2c:	9cca5804 	addi	r19,r19,10592
    7d30:	98800c03 	ldbu	r2,48(r19)
    7d34:	d9000115 	stw	r4,4(sp)
    7d38:	2839883a 	mov	fp,r5
    7d3c:	d9800215 	stw	r6,8(sp)
    7d40:	d9c00315 	stw	r7,12(sp)
    7d44:	10007526 	beq	r2,zero,7f1c <__gethex+0x220>
    7d48:	e1800017 	ldw	r6,0(fp)
    7d4c:	00800c04 	movi	r2,48
    7d50:	31000083 	ldbu	r4,2(r6)
    7d54:	30c00084 	addi	r3,r6,2
    7d58:	2080761e 	bne	r4,r2,7f34 <__gethex+0x238>
    7d5c:	200b883a 	mov	r5,r4
    7d60:	3007883a 	mov	r3,r6
    7d64:	188000c3 	ldbu	r2,3(r3)
    7d68:	18c00044 	addi	r3,r3,1
    7d6c:	1009883a 	mov	r4,r2
    7d70:	117ffc26 	beq	r2,r5,7d64 <__gethex+0x68>
    7d74:	198fc83a 	sub	r7,r3,r6
    7d78:	19400084 	addi	r5,r3,2
    7d7c:	24c5883a 	add	r2,r4,r19
    7d80:	10c00003 	ldbu	r3,0(r2)
    7d84:	18002e26 	beq	r3,zero,7e40 <__gethex+0x144>
    7d88:	29000003 	ldbu	r4,0(r5)
    7d8c:	282b883a 	mov	r21,r5
    7d90:	000d883a 	mov	r6,zero
    7d94:	002d883a 	mov	r22,zero
    7d98:	21003fcc 	andi	r4,r4,255
    7d9c:	24c5883a 	add	r2,r4,r19
    7da0:	10c00003 	ldbu	r3,0(r2)
    7da4:	18000526 	beq	r3,zero,7dbc <__gethex+0xc0>
    7da8:	29400044 	addi	r5,r5,1
    7dac:	29000003 	ldbu	r4,0(r5)
    7db0:	24c5883a 	add	r2,r4,r19
    7db4:	10c00003 	ldbu	r3,0(r2)
    7db8:	183ffb1e 	bne	r3,zero,7da8 <__gethex+0xac>
    7dbc:	00800b84 	movi	r2,46
    7dc0:	20805f26 	beq	r4,r2,7f40 <__gethex+0x244>
    7dc4:	30008226 	beq	r6,zero,7fd0 <__gethex+0x2d4>
    7dc8:	2985c83a 	sub	r2,r5,r6
    7dcc:	1085883a 	add	r2,r2,r2
    7dd0:	1085883a 	add	r2,r2,r2
    7dd4:	0085c83a 	sub	r2,zero,r2
    7dd8:	d8800015 	stw	r2,0(sp)
    7ddc:	2825883a 	mov	r18,r5
    7de0:	90c00003 	ldbu	r3,0(r18)
    7de4:	00801404 	movi	r2,80
    7de8:	18801e26 	beq	r3,r2,7e64 <__gethex+0x168>
    7dec:	00801c04 	movi	r2,112
    7df0:	18801c26 	beq	r3,r2,7e64 <__gethex+0x168>
    7df4:	9023883a 	mov	r17,r18
    7df8:	b005003a 	cmpeq	r2,r22,zero
    7dfc:	e4400015 	stw	r17,0(fp)
    7e00:	10008d1e 	bne	r2,zero,8038 <__gethex+0x33c>
    7e04:	38004326 	beq	r7,zero,7f14 <__gethex+0x218>
    7e08:	0025883a 	mov	r18,zero
    7e0c:	9005883a 	mov	r2,r18
    7e10:	dfc00e17 	ldw	ra,56(sp)
    7e14:	df000d17 	ldw	fp,52(sp)
    7e18:	ddc00c17 	ldw	r23,48(sp)
    7e1c:	dd800b17 	ldw	r22,44(sp)
    7e20:	dd400a17 	ldw	r21,40(sp)
    7e24:	dd000917 	ldw	r20,36(sp)
    7e28:	dcc00817 	ldw	r19,32(sp)
    7e2c:	dc800717 	ldw	r18,28(sp)
    7e30:	dc400617 	ldw	r17,24(sp)
    7e34:	dc000517 	ldw	r16,20(sp)
    7e38:	dec00f04 	addi	sp,sp,60
    7e3c:	f800283a 	ret
    7e40:	00800b84 	movi	r2,46
    7e44:	20805126 	beq	r4,r2,7f8c <__gethex+0x290>
    7e48:	2825883a 	mov	r18,r5
    7e4c:	d8000015 	stw	zero,0(sp)
    7e50:	90c00003 	ldbu	r3,0(r18)
    7e54:	00801404 	movi	r2,80
    7e58:	282b883a 	mov	r21,r5
    7e5c:	05800044 	movi	r22,1
    7e60:	18bfe21e 	bne	r3,r2,7dec <__gethex+0xf0>
    7e64:	90c00043 	ldbu	r3,1(r18)
    7e68:	00800ac4 	movi	r2,43
    7e6c:	91400044 	addi	r5,r18,1
    7e70:	18805126 	beq	r3,r2,7fb8 <__gethex+0x2bc>
    7e74:	00800b44 	movi	r2,45
    7e78:	18805326 	beq	r3,r2,7fc8 <__gethex+0x2cc>
    7e7c:	002f883a 	mov	r23,zero
    7e80:	1cc5883a 	add	r2,r3,r19
    7e84:	10800003 	ldbu	r2,0(r2)
    7e88:	103fda26 	beq	r2,zero,7df4 <__gethex+0xf8>
    7e8c:	01800644 	movi	r6,25
    7e90:	30bfd816 	blt	r6,r2,7df4 <__gethex+0xf8>
    7e94:	28c00043 	ldbu	r3,1(r5)
    7e98:	113ffc04 	addi	r4,r2,-16
    7e9c:	00800074 	movhi	r2,1
    7ea0:	108a5804 	addi	r2,r2,10592
    7ea4:	1887883a 	add	r3,r3,r2
    7ea8:	18800003 	ldbu	r2,0(r3)
    7eac:	2c400044 	addi	r17,r5,1
    7eb0:	10001126 	beq	r2,zero,7ef8 <__gethex+0x1fc>
    7eb4:	1021883a 	mov	r16,r2
    7eb8:	30800f16 	blt	r6,r2,7ef8 <__gethex+0x1fc>
    7ebc:	3029883a 	mov	r20,r6
    7ec0:	00000106 	br	7ec8 <__gethex+0x1cc>
    7ec4:	a0800c16 	blt	r20,r2,7ef8 <__gethex+0x1fc>
    7ec8:	8c400044 	addi	r17,r17,1
    7ecc:	01400284 	movi	r5,10
    7ed0:	d9c00415 	stw	r7,16(sp)
    7ed4:	000d0e40 	call	d0e4 <__mulsi3>
    7ed8:	88c00003 	ldbu	r3,0(r17)
    7edc:	1405883a 	add	r2,r2,r16
    7ee0:	113ffc04 	addi	r4,r2,-16
    7ee4:	1cc7883a 	add	r3,r3,r19
    7ee8:	18800003 	ldbu	r2,0(r3)
    7eec:	d9c00417 	ldw	r7,16(sp)
    7ef0:	1021883a 	mov	r16,r2
    7ef4:	103ff31e 	bne	r2,zero,7ec4 <__gethex+0x1c8>
    7ef8:	b805003a 	cmpeq	r2,r23,zero
    7efc:	1000011e 	bne	r2,zero,7f04 <__gethex+0x208>
    7f00:	0109c83a 	sub	r4,zero,r4
    7f04:	d8800017 	ldw	r2,0(sp)
    7f08:	1105883a 	add	r2,r2,r4
    7f0c:	d8800015 	stw	r2,0(sp)
    7f10:	003fb906 	br	7df8 <__gethex+0xfc>
    7f14:	04800184 	movi	r18,6
    7f18:	003fbc06 	br	7e0c <__gethex+0x110>
    7f1c:	0007be40 	call	7be4 <__hexdig_init>
    7f20:	e1800017 	ldw	r6,0(fp)
    7f24:	00800c04 	movi	r2,48
    7f28:	31000083 	ldbu	r4,2(r6)
    7f2c:	30c00084 	addi	r3,r6,2
    7f30:	20bf8a26 	beq	r4,r2,7d5c <__gethex+0x60>
    7f34:	180b883a 	mov	r5,r3
    7f38:	000f883a 	mov	r7,zero
    7f3c:	003f8f06 	br	7d7c <__gethex+0x80>
    7f40:	303fa11e 	bne	r6,zero,7dc8 <__gethex+0xcc>
    7f44:	29400044 	addi	r5,r5,1
    7f48:	28800003 	ldbu	r2,0(r5)
    7f4c:	14c5883a 	add	r2,r2,r19
    7f50:	10c00003 	ldbu	r3,0(r2)
    7f54:	1800b526 	beq	r3,zero,822c <__gethex+0x530>
    7f58:	2809883a 	mov	r4,r5
    7f5c:	21000044 	addi	r4,r4,1
    7f60:	20800003 	ldbu	r2,0(r4)
    7f64:	14c5883a 	add	r2,r2,r19
    7f68:	10c00003 	ldbu	r3,0(r2)
    7f6c:	183ffb1e 	bne	r3,zero,7f5c <__gethex+0x260>
    7f70:	2145c83a 	sub	r2,r4,r5
    7f74:	1085883a 	add	r2,r2,r2
    7f78:	1085883a 	add	r2,r2,r2
    7f7c:	0085c83a 	sub	r2,zero,r2
    7f80:	200b883a 	mov	r5,r4
    7f84:	d8800015 	stw	r2,0(sp)
    7f88:	003f9406 	br	7ddc <__gethex+0xe0>
    7f8c:	29000043 	ldbu	r4,1(r5)
    7f90:	00800074 	movhi	r2,1
    7f94:	108a5804 	addi	r2,r2,10592
    7f98:	2c800044 	addi	r18,r5,1
    7f9c:	2085883a 	add	r2,r4,r2
    7fa0:	10c00003 	ldbu	r3,0(r2)
    7fa4:	18000d1e 	bne	r3,zero,7fdc <__gethex+0x2e0>
    7fa8:	282b883a 	mov	r21,r5
    7fac:	05800044 	movi	r22,1
    7fb0:	d8000015 	stw	zero,0(sp)
    7fb4:	003f8a06 	br	7de0 <__gethex+0xe4>
    7fb8:	002f883a 	mov	r23,zero
    7fbc:	29400044 	addi	r5,r5,1
    7fc0:	28c00003 	ldbu	r3,0(r5)
    7fc4:	003fae06 	br	7e80 <__gethex+0x184>
    7fc8:	05c00044 	movi	r23,1
    7fcc:	003ffb06 	br	7fbc <__gethex+0x2c0>
    7fd0:	2825883a 	mov	r18,r5
    7fd4:	d8000015 	stw	zero,0(sp)
    7fd8:	003f8106 	br	7de0 <__gethex+0xe4>
    7fdc:	00800c04 	movi	r2,48
    7fe0:	20800e1e 	bne	r4,r2,801c <__gethex+0x320>
    7fe4:	2007883a 	mov	r3,r4
    7fe8:	900b883a 	mov	r5,r18
    7fec:	29400044 	addi	r5,r5,1
    7ff0:	29000003 	ldbu	r4,0(r5)
    7ff4:	20803fcc 	andi	r2,r4,255
    7ff8:	10fffc26 	beq	r2,r3,7fec <__gethex+0x2f0>
    7ffc:	14c5883a 	add	r2,r2,r19
    8000:	10c00003 	ldbu	r3,0(r2)
    8004:	1800071e 	bne	r3,zero,8024 <__gethex+0x328>
    8008:	01c00044 	movi	r7,1
    800c:	900d883a 	mov	r6,r18
    8010:	282b883a 	mov	r21,r5
    8014:	382d883a 	mov	r22,r7
    8018:	003f5f06 	br	7d98 <__gethex+0x9c>
    801c:	91000003 	ldbu	r4,0(r18)
    8020:	900b883a 	mov	r5,r18
    8024:	900d883a 	mov	r6,r18
    8028:	282b883a 	mov	r21,r5
    802c:	01c00044 	movi	r7,1
    8030:	002d883a 	mov	r22,zero
    8034:	003f5806 	br	7d98 <__gethex+0x9c>
    8038:	9545c83a 	sub	r2,r18,r21
    803c:	10bfffc4 	addi	r2,r2,-1
    8040:	00c001c4 	movi	r3,7
    8044:	1880770e 	bge	r3,r2,8224 <__gethex+0x528>
    8048:	000b883a 	mov	r5,zero
    804c:	1005d07a 	srai	r2,r2,1
    8050:	29400044 	addi	r5,r5,1
    8054:	18bffd16 	blt	r3,r2,804c <__gethex+0x350>
    8058:	d9000117 	ldw	r4,4(sp)
    805c:	00092d40 	call	92d4 <_Balloc>
    8060:	1029883a 	mov	r20,r2
    8064:	15800504 	addi	r22,r2,20
    8068:	ac80562e 	bgeu	r21,r18,81c4 <__gethex+0x4c8>
    806c:	900b883a 	mov	r5,r18
    8070:	b011883a 	mov	r8,r22
    8074:	000f883a 	mov	r7,zero
    8078:	0009883a 	mov	r4,zero
    807c:	02400b84 	movi	r9,46
    8080:	02800804 	movi	r10,32
    8084:	297fffc4 	addi	r5,r5,-1
    8088:	28c00003 	ldbu	r3,0(r5)
    808c:	1a400826 	beq	r3,r9,80b0 <__gethex+0x3b4>
    8090:	380d883a 	mov	r6,r7
    8094:	3a802a26 	beq	r7,r10,8140 <__gethex+0x444>
    8098:	39c00104 	addi	r7,r7,4
    809c:	1cc7883a 	add	r3,r3,r19
    80a0:	18800003 	ldbu	r2,0(r3)
    80a4:	108003cc 	andi	r2,r2,15
    80a8:	1184983a 	sll	r2,r2,r6
    80ac:	2088b03a 	or	r4,r4,r2
    80b0:	a97ff436 	bltu	r21,r5,8084 <__gethex+0x388>
    80b4:	40800104 	addi	r2,r8,4
    80b8:	1585c83a 	sub	r2,r2,r22
    80bc:	1021d0ba 	srai	r16,r2,2
    80c0:	41000015 	stw	r4,0(r8)
    80c4:	a4000415 	stw	r16,16(r20)
    80c8:	0008d7c0 	call	8d7c <__hi0bits>
    80cc:	d9000217 	ldw	r4,8(sp)
    80d0:	8006917a 	slli	r3,r16,5
    80d4:	24c00017 	ldw	r19,0(r4)
    80d8:	1885c83a 	sub	r2,r3,r2
    80dc:	98801f16 	blt	r19,r2,815c <__gethex+0x460>
    80e0:	14c00c16 	blt	r2,r19,8114 <__gethex+0x418>
    80e4:	002b883a 	mov	r21,zero
    80e8:	d9000217 	ldw	r4,8(sp)
    80ec:	d8c00017 	ldw	r3,0(sp)
    80f0:	20800217 	ldw	r2,8(r4)
    80f4:	10c0360e 	bge	r2,r3,81d0 <__gethex+0x4d4>
    80f8:	d9000117 	ldw	r4,4(sp)
    80fc:	a00b883a 	mov	r5,r20
    8100:	048028c4 	movi	r18,163
    8104:	0008d540 	call	8d54 <_Bfree>
    8108:	d9000f17 	ldw	r4,60(sp)
    810c:	20000015 	stw	zero,0(r4)
    8110:	003f3e06 	br	7e0c <__gethex+0x110>
    8114:	d9000117 	ldw	r4,4(sp)
    8118:	98a1c83a 	sub	r16,r19,r2
    811c:	a00b883a 	mov	r5,r20
    8120:	800d883a 	mov	r6,r16
    8124:	00096980 	call	9698 <__lshift>
    8128:	d8c00017 	ldw	r3,0(sp)
    812c:	1029883a 	mov	r20,r2
    8130:	15800504 	addi	r22,r2,20
    8134:	1c07c83a 	sub	r3,r3,r16
    8138:	d8c00015 	stw	r3,0(sp)
    813c:	003fe906 	br	80e4 <__gethex+0x3e8>
    8140:	41000015 	stw	r4,0(r8)
    8144:	28c00003 	ldbu	r3,0(r5)
    8148:	01c00104 	movi	r7,4
    814c:	000d883a 	mov	r6,zero
    8150:	41d1883a 	add	r8,r8,r7
    8154:	0009883a 	mov	r4,zero
    8158:	003fd006 	br	809c <__gethex+0x3a0>
    815c:	14e1c83a 	sub	r16,r2,r19
    8160:	a009883a 	mov	r4,r20
    8164:	800b883a 	mov	r5,r16
    8168:	000924c0 	call	924c <__any_on>
    816c:	1000081e 	bne	r2,zero,8190 <__gethex+0x494>
    8170:	002b883a 	mov	r21,zero
    8174:	a009883a 	mov	r4,r20
    8178:	800b883a 	mov	r5,r16
    817c:	0007c4c0 	call	7c4c <rshift>
    8180:	d8800017 	ldw	r2,0(sp)
    8184:	1405883a 	add	r2,r2,r16
    8188:	d8800015 	stw	r2,0(sp)
    818c:	003fd606 	br	80e8 <__gethex+0x3ec>
    8190:	817fffc4 	addi	r5,r16,-1
    8194:	2805d17a 	srai	r2,r5,5
    8198:	290007cc 	andi	r4,r5,31
    819c:	01800044 	movi	r6,1
    81a0:	1085883a 	add	r2,r2,r2
    81a4:	1085883a 	add	r2,r2,r2
    81a8:	1585883a 	add	r2,r2,r22
    81ac:	3108983a 	sll	r4,r6,r4
    81b0:	10c00017 	ldw	r3,0(r2)
    81b4:	20c8703a 	and	r4,r4,r3
    81b8:	20001e1e 	bne	r4,zero,8234 <__gethex+0x538>
    81bc:	302b883a 	mov	r21,r6
    81c0:	003fec06 	br	8174 <__gethex+0x478>
    81c4:	b011883a 	mov	r8,r22
    81c8:	0009883a 	mov	r4,zero
    81cc:	003fb906 	br	80b4 <__gethex+0x3b8>
    81d0:	d8800217 	ldw	r2,8(sp)
    81d4:	d8c00017 	ldw	r3,0(sp)
    81d8:	11000117 	ldw	r4,4(r2)
    81dc:	19001c16 	blt	r3,r4,8250 <__gethex+0x554>
    81e0:	04800044 	movi	r18,1
    81e4:	a8000926 	beq	r21,zero,820c <__gethex+0x510>
    81e8:	d8c00217 	ldw	r3,8(sp)
    81ec:	00800084 	movi	r2,2
    81f0:	19000317 	ldw	r4,12(r3)
    81f4:	20809826 	beq	r4,r2,8458 <__gethex+0x75c>
    81f8:	008000c4 	movi	r2,3
    81fc:	20805b26 	beq	r4,r2,836c <__gethex+0x670>
    8200:	00800044 	movi	r2,1
    8204:	20804326 	beq	r4,r2,8314 <__gethex+0x618>
    8208:	94800414 	ori	r18,r18,16
    820c:	d9000f17 	ldw	r4,60(sp)
    8210:	d8800017 	ldw	r2,0(sp)
    8214:	d8c00317 	ldw	r3,12(sp)
    8218:	25000015 	stw	r20,0(r4)
    821c:	18800015 	stw	r2,0(r3)
    8220:	003efa06 	br	7e0c <__gethex+0x110>
    8224:	000b883a 	mov	r5,zero
    8228:	003f8b06 	br	8058 <__gethex+0x35c>
    822c:	d8000015 	stw	zero,0(sp)
    8230:	003eea06 	br	7ddc <__gethex+0xe0>
    8234:	3140180e 	bge	r6,r5,8298 <__gethex+0x59c>
    8238:	a009883a 	mov	r4,r20
    823c:	817fff84 	addi	r5,r16,-2
    8240:	000924c0 	call	924c <__any_on>
    8244:	10001426 	beq	r2,zero,8298 <__gethex+0x59c>
    8248:	054000c4 	movi	r21,3
    824c:	003fc906 	br	8174 <__gethex+0x478>
    8250:	d8800017 	ldw	r2,0(sp)
    8254:	20a3c83a 	sub	r17,r4,r2
    8258:	8cc01116 	blt	r17,r19,82a0 <__gethex+0x5a4>
    825c:	d8800217 	ldw	r2,8(sp)
    8260:	10c00317 	ldw	r3,12(r2)
    8264:	00800084 	movi	r2,2
    8268:	18809426 	beq	r3,r2,84bc <__gethex+0x7c0>
    826c:	008000c4 	movi	r2,3
    8270:	18808f26 	beq	r3,r2,84b0 <__gethex+0x7b4>
    8274:	00800044 	movi	r2,1
    8278:	18807c26 	beq	r3,r2,846c <__gethex+0x770>
    827c:	d9000117 	ldw	r4,4(sp)
    8280:	a00b883a 	mov	r5,r20
    8284:	04801404 	movi	r18,80
    8288:	0008d540 	call	8d54 <_Bfree>
    828c:	d9000f17 	ldw	r4,60(sp)
    8290:	20000015 	stw	zero,0(r4)
    8294:	003edd06 	br	7e0c <__gethex+0x110>
    8298:	05400084 	movi	r21,2
    829c:	003fb506 	br	8174 <__gethex+0x478>
    82a0:	8c3fffc4 	addi	r16,r17,-1
    82a4:	a8001526 	beq	r21,zero,82fc <__gethex+0x600>
    82a8:	05400044 	movi	r21,1
    82ac:	8005d17a 	srai	r2,r16,5
    82b0:	814007cc 	andi	r5,r16,31
    82b4:	00c00044 	movi	r3,1
    82b8:	1085883a 	add	r2,r2,r2
    82bc:	1085883a 	add	r2,r2,r2
    82c0:	1585883a 	add	r2,r2,r22
    82c4:	1946983a 	sll	r3,r3,r5
    82c8:	11000017 	ldw	r4,0(r2)
    82cc:	1906703a 	and	r3,r3,r4
    82d0:	18000126 	beq	r3,zero,82d8 <__gethex+0x5dc>
    82d4:	ad400094 	ori	r21,r21,2
    82d8:	880b883a 	mov	r5,r17
    82dc:	a009883a 	mov	r4,r20
    82e0:	0007c4c0 	call	7c4c <rshift>
    82e4:	d8800217 	ldw	r2,8(sp)
    82e8:	9c67c83a 	sub	r19,r19,r17
    82ec:	04800084 	movi	r18,2
    82f0:	10800117 	ldw	r2,4(r2)
    82f4:	d8800015 	stw	r2,0(sp)
    82f8:	003fba06 	br	81e4 <__gethex+0x4e8>
    82fc:	043feb0e 	bge	zero,r16,82ac <__gethex+0x5b0>
    8300:	a009883a 	mov	r4,r20
    8304:	800b883a 	mov	r5,r16
    8308:	000924c0 	call	924c <__any_on>
    830c:	102b883a 	mov	r21,r2
    8310:	003fe606 	br	82ac <__gethex+0x5b0>
    8314:	a880008c 	andi	r2,r21,2
    8318:	103fbb26 	beq	r2,zero,8208 <__gethex+0x50c>
    831c:	b0800017 	ldw	r2,0(r22)
    8320:	a884b03a 	or	r2,r21,r2
    8324:	1104703a 	and	r2,r2,r4
    8328:	103fb726 	beq	r2,zero,8208 <__gethex+0x50c>
    832c:	a4000417 	ldw	r16,16(r20)
    8330:	b007883a 	mov	r3,r22
    8334:	017fffc4 	movi	r5,-1
    8338:	8405883a 	add	r2,r16,r16
    833c:	10ab883a 	add	r21,r2,r2
    8340:	802f883a 	mov	r23,r16
    8344:	b549883a 	add	r4,r22,r21
    8348:	00000306 	br	8358 <__gethex+0x65c>
    834c:	18000015 	stw	zero,0(r3)
    8350:	18c00104 	addi	r3,r3,4
    8354:	1900082e 	bgeu	r3,r4,8378 <__gethex+0x67c>
    8358:	18800017 	ldw	r2,0(r3)
    835c:	117ffb26 	beq	r2,r5,834c <__gethex+0x650>
    8360:	10800044 	addi	r2,r2,1
    8364:	18800015 	stw	r2,0(r3)
    8368:	00001e06 	br	83e4 <__gethex+0x6e8>
    836c:	d8801017 	ldw	r2,64(sp)
    8370:	103fa526 	beq	r2,zero,8208 <__gethex+0x50c>
    8374:	003fed06 	br	832c <__gethex+0x630>
    8378:	a0800217 	ldw	r2,8(r20)
    837c:	80801216 	blt	r16,r2,83c8 <__gethex+0x6cc>
    8380:	a1400117 	ldw	r5,4(r20)
    8384:	d9000117 	ldw	r4,4(sp)
    8388:	29400044 	addi	r5,r5,1
    838c:	00092d40 	call	92d4 <_Balloc>
    8390:	a1800417 	ldw	r6,16(r20)
    8394:	a1400304 	addi	r5,r20,12
    8398:	11000304 	addi	r4,r2,12
    839c:	318d883a 	add	r6,r6,r6
    83a0:	318d883a 	add	r6,r6,r6
    83a4:	31800204 	addi	r6,r6,8
    83a8:	1023883a 	mov	r17,r2
    83ac:	0008b3c0 	call	8b3c <memcpy>
    83b0:	d9000117 	ldw	r4,4(sp)
    83b4:	a00b883a 	mov	r5,r20
    83b8:	8d800504 	addi	r22,r17,20
    83bc:	0008d540 	call	8d54 <_Bfree>
    83c0:	8c000417 	ldw	r16,16(r17)
    83c4:	8829883a 	mov	r20,r17
    83c8:	8405883a 	add	r2,r16,r16
    83cc:	1085883a 	add	r2,r2,r2
    83d0:	1505883a 	add	r2,r2,r20
    83d4:	84000044 	addi	r16,r16,1
    83d8:	00c00044 	movi	r3,1
    83dc:	10c00515 	stw	r3,20(r2)
    83e0:	a4000415 	stw	r16,16(r20)
    83e4:	00800084 	movi	r2,2
    83e8:	90801526 	beq	r18,r2,8440 <__gethex+0x744>
    83ec:	bc000a16 	blt	r23,r16,8418 <__gethex+0x71c>
    83f0:	9c0007cc 	andi	r16,r19,31
    83f4:	8000021e 	bne	r16,zero,8400 <__gethex+0x704>
    83f8:	94800814 	ori	r18,r18,32
    83fc:	003f8306 	br	820c <__gethex+0x510>
    8400:	b545883a 	add	r2,r22,r21
    8404:	113fff17 	ldw	r4,-4(r2)
    8408:	0008d7c0 	call	8d7c <__hi0bits>
    840c:	00c00804 	movi	r3,32
    8410:	1c07c83a 	sub	r3,r3,r16
    8414:	10fff80e 	bge	r2,r3,83f8 <__gethex+0x6fc>
    8418:	a009883a 	mov	r4,r20
    841c:	01400044 	movi	r5,1
    8420:	0007c4c0 	call	7c4c <rshift>
    8424:	d9000217 	ldw	r4,8(sp)
    8428:	d8c00017 	ldw	r3,0(sp)
    842c:	20800217 	ldw	r2,8(r4)
    8430:	18c00044 	addi	r3,r3,1
    8434:	d8c00015 	stw	r3,0(sp)
    8438:	10ff2f16 	blt	r2,r3,80f8 <__gethex+0x3fc>
    843c:	003fee06 	br	83f8 <__gethex+0x6fc>
    8440:	d8c00217 	ldw	r3,8(sp)
    8444:	18800017 	ldw	r2,0(r3)
    8448:	10bfffc4 	addi	r2,r2,-1
    844c:	98801e26 	beq	r19,r2,84c8 <__gethex+0x7cc>
    8450:	04800884 	movi	r18,34
    8454:	003f6d06 	br	820c <__gethex+0x510>
    8458:	d9001017 	ldw	r4,64(sp)
    845c:	00800044 	movi	r2,1
    8460:	1105c83a 	sub	r2,r2,r4
    8464:	103f6826 	beq	r2,zero,8208 <__gethex+0x50c>
    8468:	003fb006 	br	832c <__gethex+0x630>
    846c:	9c7f831e 	bne	r19,r17,827c <__gethex+0x580>
    8470:	1cc0060e 	bge	r3,r19,848c <__gethex+0x790>
    8474:	98cbc83a 	sub	r5,r19,r3
    8478:	a009883a 	mov	r4,r20
    847c:	000924c0 	call	924c <__any_on>
    8480:	103f7e26 	beq	r2,zero,827c <__gethex+0x580>
    8484:	d8c00217 	ldw	r3,8(sp)
    8488:	19000117 	ldw	r4,4(r3)
    848c:	d8800317 	ldw	r2,12(sp)
    8490:	d8c00f17 	ldw	r3,60(sp)
    8494:	04000044 	movi	r16,1
    8498:	11000015 	stw	r4,0(r2)
    849c:	04801884 	movi	r18,98
    84a0:	b4000015 	stw	r16,0(r22)
    84a4:	1d000015 	stw	r20,0(r3)
    84a8:	a4000415 	stw	r16,16(r20)
    84ac:	003e5706 	br	7e0c <__gethex+0x110>
    84b0:	d8801017 	ldw	r2,64(sp)
    84b4:	103f7126 	beq	r2,zero,827c <__gethex+0x580>
    84b8:	003ff406 	br	848c <__gethex+0x790>
    84bc:	d8c01017 	ldw	r3,64(sp)
    84c0:	183ff226 	beq	r3,zero,848c <__gethex+0x790>
    84c4:	003f6d06 	br	827c <__gethex+0x580>
    84c8:	9805d17a 	srai	r2,r19,5
    84cc:	994007cc 	andi	r5,r19,31
    84d0:	00c00044 	movi	r3,1
    84d4:	1085883a 	add	r2,r2,r2
    84d8:	1085883a 	add	r2,r2,r2
    84dc:	1585883a 	add	r2,r2,r22
    84e0:	1946983a 	sll	r3,r3,r5
    84e4:	11000017 	ldw	r4,0(r2)
    84e8:	1906703a 	and	r3,r3,r4
    84ec:	183fd826 	beq	r3,zero,8450 <__gethex+0x754>
    84f0:	04800844 	movi	r18,33
    84f4:	003f4506 	br	820c <__gethex+0x510>

000084f8 <L_shift>:
    84f8:	00800204 	movi	r2,8
    84fc:	1185c83a 	sub	r2,r2,r6
    8500:	1085883a 	add	r2,r2,r2
    8504:	21c00017 	ldw	r7,0(r4)
    8508:	1093883a 	add	r9,r2,r2
    850c:	00800804 	movi	r2,32
    8510:	200d883a 	mov	r6,r4
    8514:	1251c83a 	sub	r8,r2,r9
    8518:	31800104 	addi	r6,r6,4
    851c:	3805883a 	mov	r2,r7
    8520:	31c00017 	ldw	r7,0(r6)
    8524:	3a08983a 	sll	r4,r7,r8
    8528:	3a46d83a 	srl	r3,r7,r9
    852c:	1104b03a 	or	r2,r2,r4
    8530:	180f883a 	mov	r7,r3
    8534:	30bfff15 	stw	r2,-4(r6)
    8538:	30c00015 	stw	r3,0(r6)
    853c:	317ff636 	bltu	r6,r5,8518 <L_shift+0x20>
    8540:	f800283a 	ret

00008544 <__hexnan>:
    8544:	defff404 	addi	sp,sp,-48
    8548:	dd800815 	stw	r22,32(sp)
    854c:	05800074 	movhi	r22,1
    8550:	b58a5804 	addi	r22,r22,10592
    8554:	b0800c03 	ldbu	r2,48(r22)
    8558:	dcc00515 	stw	r19,20(sp)
    855c:	dc000215 	stw	r16,8(sp)
    8560:	dfc00b15 	stw	ra,44(sp)
    8564:	df000a15 	stw	fp,40(sp)
    8568:	ddc00915 	stw	r23,36(sp)
    856c:	dd400715 	stw	r21,28(sp)
    8570:	dd000615 	stw	r20,24(sp)
    8574:	dc800415 	stw	r18,16(sp)
    8578:	dc400315 	stw	r17,12(sp)
    857c:	d9000115 	stw	r4,4(sp)
    8580:	2821883a 	mov	r16,r5
    8584:	3027883a 	mov	r19,r6
    8588:	10007426 	beq	r2,zero,875c <__hexnan+0x218>
    858c:	80c00017 	ldw	r3,0(r16)
    8590:	1805d17a 	srai	r2,r3,5
    8594:	18c007cc 	andi	r3,r3,31
    8598:	1839003a 	cmpeq	fp,r3,zero
    859c:	1085883a 	add	r2,r2,r2
    85a0:	1085883a 	add	r2,r2,r2
    85a4:	d8c00015 	stw	r3,0(sp)
    85a8:	14c5883a 	add	r2,r2,r19
    85ac:	e000011e 	bne	fp,zero,85b4 <__hexnan+0x70>
    85b0:	10800104 	addi	r2,r2,4
    85b4:	d8c00117 	ldw	r3,4(sp)
    85b8:	153fff04 	addi	r20,r2,-4
    85bc:	a021883a 	mov	r16,r20
    85c0:	1c400017 	ldw	r17,0(r3)
    85c4:	a02b883a 	mov	r21,r20
    85c8:	0025883a 	mov	r18,zero
    85cc:	002f883a 	mov	r23,zero
    85d0:	000d883a 	mov	r6,zero
    85d4:	103fff15 	stw	zero,-4(r2)
    85d8:	8c400044 	addi	r17,r17,1
    85dc:	89000003 	ldbu	r4,0(r17)
    85e0:	20000e26 	beq	r4,zero,861c <__hexnan+0xd8>
    85e4:	2585883a 	add	r2,r4,r22
    85e8:	10c00003 	ldbu	r3,0(r2)
    85ec:	18002e1e 	bne	r3,zero,86a8 <__hexnan+0x164>
    85f0:	00800804 	movi	r2,32
    85f4:	11005536 	bltu	r2,r4,874c <__hexnan+0x208>
    85f8:	bcbff70e 	bge	r23,r18,85d8 <__hexnan+0x94>
    85fc:	8540022e 	bgeu	r16,r21,8608 <__hexnan+0xc4>
    8600:	008001c4 	movi	r2,7
    8604:	11803c0e 	bge	r2,r6,86f8 <__hexnan+0x1b4>
    8608:	9c003536 	bltu	r19,r16,86e0 <__hexnan+0x19c>
    860c:	8c400044 	addi	r17,r17,1
    8610:	89000003 	ldbu	r4,0(r17)
    8614:	01800204 	movi	r6,8
    8618:	203ff21e 	bne	r4,zero,85e4 <__hexnan+0xa0>
    861c:	90004d26 	beq	r18,zero,8754 <__hexnan+0x210>
    8620:	85404336 	bltu	r16,r21,8730 <__hexnan+0x1ec>
    8624:	9c00382e 	bgeu	r19,r16,8708 <__hexnan+0x1c4>
    8628:	9807883a 	mov	r3,r19
    862c:	80800017 	ldw	r2,0(r16)
    8630:	84000104 	addi	r16,r16,4
    8634:	18800015 	stw	r2,0(r3)
    8638:	18c00104 	addi	r3,r3,4
    863c:	a43ffb2e 	bgeu	r20,r16,862c <__hexnan+0xe8>
    8640:	18000015 	stw	zero,0(r3)
    8644:	18c00104 	addi	r3,r3,4
    8648:	a0fffd2e 	bgeu	r20,r3,8640 <__hexnan+0xfc>
    864c:	a0800017 	ldw	r2,0(r20)
    8650:	1000071e 	bne	r2,zero,8670 <__hexnan+0x12c>
    8654:	9d004326 	beq	r19,r20,8764 <__hexnan+0x220>
    8658:	a007883a 	mov	r3,r20
    865c:	00000106 	br	8664 <__hexnan+0x120>
    8660:	98c04026 	beq	r19,r3,8764 <__hexnan+0x220>
    8664:	18ffff04 	addi	r3,r3,-4
    8668:	18800017 	ldw	r2,0(r3)
    866c:	103ffc26 	beq	r2,zero,8660 <__hexnan+0x11c>
    8670:	00c00144 	movi	r3,5
    8674:	1805883a 	mov	r2,r3
    8678:	dfc00b17 	ldw	ra,44(sp)
    867c:	df000a17 	ldw	fp,40(sp)
    8680:	ddc00917 	ldw	r23,36(sp)
    8684:	dd800817 	ldw	r22,32(sp)
    8688:	dd400717 	ldw	r21,28(sp)
    868c:	dd000617 	ldw	r20,24(sp)
    8690:	dcc00517 	ldw	r19,20(sp)
    8694:	dc800417 	ldw	r18,16(sp)
    8698:	dc400317 	ldw	r17,12(sp)
    869c:	dc000217 	ldw	r16,8(sp)
    86a0:	dec00c04 	addi	sp,sp,48
    86a4:	f800283a 	ret
    86a8:	31800044 	addi	r6,r6,1
    86ac:	00800204 	movi	r2,8
    86b0:	94800044 	addi	r18,r18,1
    86b4:	1180040e 	bge	r2,r6,86c8 <__hexnan+0x184>
    86b8:	9c3fc72e 	bgeu	r19,r16,85d8 <__hexnan+0x94>
    86bc:	843fff04 	addi	r16,r16,-4
    86c0:	80000015 	stw	zero,0(r16)
    86c4:	01800044 	movi	r6,1
    86c8:	80800017 	ldw	r2,0(r16)
    86cc:	18c003cc 	andi	r3,r3,15
    86d0:	1004913a 	slli	r2,r2,4
    86d4:	10c4b03a 	or	r2,r2,r3
    86d8:	80800015 	stw	r2,0(r16)
    86dc:	003fbe06 	br	85d8 <__hexnan+0x94>
    86e0:	843fff04 	addi	r16,r16,-4
    86e4:	802b883a 	mov	r21,r16
    86e8:	902f883a 	mov	r23,r18
    86ec:	000d883a 	mov	r6,zero
    86f0:	80000015 	stw	zero,0(r16)
    86f4:	003fb806 	br	85d8 <__hexnan+0x94>
    86f8:	8009883a 	mov	r4,r16
    86fc:	a80b883a 	mov	r5,r21
    8700:	00084f80 	call	84f8 <L_shift>
    8704:	003fc006 	br	8608 <__hexnan+0xc4>
    8708:	e03fd01e 	bne	fp,zero,864c <__hexnan+0x108>
    870c:	d8c00017 	ldw	r3,0(sp)
    8710:	00800804 	movi	r2,32
    8714:	10c5c83a 	sub	r2,r2,r3
    8718:	00ffffc4 	movi	r3,-1
    871c:	1886d83a 	srl	r3,r3,r2
    8720:	a0800017 	ldw	r2,0(r20)
    8724:	10c4703a 	and	r2,r2,r3
    8728:	a0800015 	stw	r2,0(r20)
    872c:	003fc806 	br	8650 <__hexnan+0x10c>
    8730:	008001c4 	movi	r2,7
    8734:	11bfbb16 	blt	r2,r6,8624 <__hexnan+0xe0>
    8738:	a80b883a 	mov	r5,r21
    873c:	8009883a 	mov	r4,r16
    8740:	00084f80 	call	84f8 <L_shift>
    8744:	9c3ff02e 	bgeu	r19,r16,8708 <__hexnan+0x1c4>
    8748:	003fb706 	br	8628 <__hexnan+0xe4>
    874c:	00800a44 	movi	r2,41
    8750:	20800826 	beq	r4,r2,8774 <__hexnan+0x230>
    8754:	00c00104 	movi	r3,4
    8758:	003fc606 	br	8674 <__hexnan+0x130>
    875c:	0007be40 	call	7be4 <__hexdig_init>
    8760:	003f8a06 	br	858c <__hexnan+0x48>
    8764:	00800044 	movi	r2,1
    8768:	00c00144 	movi	r3,5
    876c:	98800015 	stw	r2,0(r19)
    8770:	003fc006 	br	8674 <__hexnan+0x130>
    8774:	903ff726 	beq	r18,zero,8754 <__hexnan+0x210>
    8778:	d8c00117 	ldw	r3,4(sp)
    877c:	88800044 	addi	r2,r17,1
    8780:	18800015 	stw	r2,0(r3)
    8784:	857fa72e 	bgeu	r16,r21,8624 <__hexnan+0xe0>
    8788:	003fe906 	br	8730 <__hexnan+0x1ec>

0000878c <__locale_charset>:
    878c:	d0a00617 	ldw	r2,-32744(gp)
    8790:	f800283a 	ret

00008794 <_localeconv_r>:
    8794:	00800074 	movhi	r2,1
    8798:	10bc0d04 	addi	r2,r2,-4044
    879c:	f800283a 	ret

000087a0 <localeconv>:
    87a0:	00800074 	movhi	r2,1
    87a4:	10837004 	addi	r2,r2,3520
    87a8:	11000017 	ldw	r4,0(r2)
    87ac:	00087941 	jmpi	8794 <_localeconv_r>

000087b0 <_setlocale_r>:
    87b0:	defffc04 	addi	sp,sp,-16
    87b4:	00c00074 	movhi	r3,1
    87b8:	18fc0804 	addi	r3,r3,-4064
    87bc:	dc800215 	stw	r18,8(sp)
    87c0:	dc400115 	stw	r17,4(sp)
    87c4:	dc000015 	stw	r16,0(sp)
    87c8:	2023883a 	mov	r17,r4
    87cc:	2825883a 	mov	r18,r5
    87d0:	dfc00315 	stw	ra,12(sp)
    87d4:	3021883a 	mov	r16,r6
    87d8:	3009883a 	mov	r4,r6
    87dc:	180b883a 	mov	r5,r3
    87e0:	30000926 	beq	r6,zero,8808 <_setlocale_r+0x58>
    87e4:	000a85c0 	call	a85c <strcmp>
    87e8:	8009883a 	mov	r4,r16
    87ec:	01400074 	movhi	r5,1
    87f0:	297bb004 	addi	r5,r5,-4416
    87f4:	10000b1e 	bne	r2,zero,8824 <_setlocale_r+0x74>
    87f8:	8c000d15 	stw	r16,52(r17)
    87fc:	8c800c15 	stw	r18,48(r17)
    8800:	00c00074 	movhi	r3,1
    8804:	18fc0804 	addi	r3,r3,-4064
    8808:	1805883a 	mov	r2,r3
    880c:	dfc00317 	ldw	ra,12(sp)
    8810:	dc800217 	ldw	r18,8(sp)
    8814:	dc400117 	ldw	r17,4(sp)
    8818:	dc000017 	ldw	r16,0(sp)
    881c:	dec00404 	addi	sp,sp,16
    8820:	f800283a 	ret
    8824:	000a85c0 	call	a85c <strcmp>
    8828:	0007883a 	mov	r3,zero
    882c:	103ff226 	beq	r2,zero,87f8 <_setlocale_r+0x48>
    8830:	003ff506 	br	8808 <_setlocale_r+0x58>

00008834 <setlocale>:
    8834:	01800074 	movhi	r6,1
    8838:	31837004 	addi	r6,r6,3520
    883c:	2007883a 	mov	r3,r4
    8840:	31000017 	ldw	r4,0(r6)
    8844:	280d883a 	mov	r6,r5
    8848:	180b883a 	mov	r5,r3
    884c:	00087b01 	jmpi	87b0 <_setlocale_r>

00008850 <__smakebuf_r>:
    8850:	2880030b 	ldhu	r2,12(r5)
    8854:	deffed04 	addi	sp,sp,-76
    8858:	dc401015 	stw	r17,64(sp)
    885c:	1080008c 	andi	r2,r2,2
    8860:	dc000f15 	stw	r16,60(sp)
    8864:	dfc01215 	stw	ra,72(sp)
    8868:	dc801115 	stw	r18,68(sp)
    886c:	2821883a 	mov	r16,r5
    8870:	2023883a 	mov	r17,r4
    8874:	10000b26 	beq	r2,zero,88a4 <__smakebuf_r+0x54>
    8878:	28c010c4 	addi	r3,r5,67
    887c:	00800044 	movi	r2,1
    8880:	28800515 	stw	r2,20(r5)
    8884:	28c00415 	stw	r3,16(r5)
    8888:	28c00015 	stw	r3,0(r5)
    888c:	dfc01217 	ldw	ra,72(sp)
    8890:	dc801117 	ldw	r18,68(sp)
    8894:	dc401017 	ldw	r17,64(sp)
    8898:	dc000f17 	ldw	r16,60(sp)
    889c:	dec01304 	addi	sp,sp,76
    88a0:	f800283a 	ret
    88a4:	2940038f 	ldh	r5,14(r5)
    88a8:	28002116 	blt	r5,zero,8930 <__smakebuf_r+0xe0>
    88ac:	d80d883a 	mov	r6,sp
    88b0:	000ad380 	call	ad38 <_fstat_r>
    88b4:	10001e16 	blt	r2,zero,8930 <__smakebuf_r+0xe0>
    88b8:	d8800117 	ldw	r2,4(sp)
    88bc:	00e00014 	movui	r3,32768
    88c0:	113c000c 	andi	r4,r2,61440
    88c4:	20c03126 	beq	r4,r3,898c <__smakebuf_r+0x13c>
    88c8:	8080030b 	ldhu	r2,12(r16)
    88cc:	00c80004 	movi	r3,8192
    88d0:	10820014 	ori	r2,r2,2048
    88d4:	8080030d 	sth	r2,12(r16)
    88d8:	20c01e26 	beq	r4,r3,8954 <__smakebuf_r+0x104>
    88dc:	04810004 	movi	r18,1024
    88e0:	8809883a 	mov	r4,r17
    88e4:	900b883a 	mov	r5,r18
    88e8:	0000b700 	call	b70 <_malloc_r>
    88ec:	1009883a 	mov	r4,r2
    88f0:	10003126 	beq	r2,zero,89b8 <__smakebuf_r+0x168>
    88f4:	80c0030b 	ldhu	r3,12(r16)
    88f8:	00800034 	movhi	r2,0
    88fc:	109bef04 	addi	r2,r2,28604
    8900:	88800f15 	stw	r2,60(r17)
    8904:	18c02014 	ori	r3,r3,128
    8908:	84800515 	stw	r18,20(r16)
    890c:	80c0030d 	sth	r3,12(r16)
    8910:	81000415 	stw	r4,16(r16)
    8914:	81000015 	stw	r4,0(r16)
    8918:	dfc01217 	ldw	ra,72(sp)
    891c:	dc801117 	ldw	r18,68(sp)
    8920:	dc401017 	ldw	r17,64(sp)
    8924:	dc000f17 	ldw	r16,60(sp)
    8928:	dec01304 	addi	sp,sp,76
    892c:	f800283a 	ret
    8930:	80c0030b 	ldhu	r3,12(r16)
    8934:	1880200c 	andi	r2,r3,128
    8938:	10000426 	beq	r2,zero,894c <__smakebuf_r+0xfc>
    893c:	04801004 	movi	r18,64
    8940:	18820014 	ori	r2,r3,2048
    8944:	8080030d 	sth	r2,12(r16)
    8948:	003fe506 	br	88e0 <__smakebuf_r+0x90>
    894c:	04810004 	movi	r18,1024
    8950:	003ffb06 	br	8940 <__smakebuf_r+0xf0>
    8954:	8140038f 	ldh	r5,14(r16)
    8958:	8809883a 	mov	r4,r17
    895c:	000adac0 	call	adac <_isatty_r>
    8960:	103fde26 	beq	r2,zero,88dc <__smakebuf_r+0x8c>
    8964:	8080030b 	ldhu	r2,12(r16)
    8968:	80c010c4 	addi	r3,r16,67
    896c:	04810004 	movi	r18,1024
    8970:	10800054 	ori	r2,r2,1
    8974:	8080030d 	sth	r2,12(r16)
    8978:	00800044 	movi	r2,1
    897c:	80c00415 	stw	r3,16(r16)
    8980:	80800515 	stw	r2,20(r16)
    8984:	80c00015 	stw	r3,0(r16)
    8988:	003fd506 	br	88e0 <__smakebuf_r+0x90>
    898c:	80c00a17 	ldw	r3,40(r16)
    8990:	00800074 	movhi	r2,1
    8994:	10a98e04 	addi	r2,r2,-22984
    8998:	18bfcb1e 	bne	r3,r2,88c8 <__smakebuf_r+0x78>
    899c:	8080030b 	ldhu	r2,12(r16)
    89a0:	00c10004 	movi	r3,1024
    89a4:	1825883a 	mov	r18,r3
    89a8:	10c4b03a 	or	r2,r2,r3
    89ac:	8080030d 	sth	r2,12(r16)
    89b0:	80c01315 	stw	r3,76(r16)
    89b4:	003fca06 	br	88e0 <__smakebuf_r+0x90>
    89b8:	8100030b 	ldhu	r4,12(r16)
    89bc:	2080800c 	andi	r2,r4,512
    89c0:	103fb21e 	bne	r2,zero,888c <__smakebuf_r+0x3c>
    89c4:	80c010c4 	addi	r3,r16,67
    89c8:	21000094 	ori	r4,r4,2
    89cc:	00800044 	movi	r2,1
    89d0:	80800515 	stw	r2,20(r16)
    89d4:	8100030d 	sth	r4,12(r16)
    89d8:	80c00415 	stw	r3,16(r16)
    89dc:	80c00015 	stw	r3,0(r16)
    89e0:	003faa06 	br	888c <__smakebuf_r+0x3c>

000089e4 <memchr>:
    89e4:	008000c4 	movi	r2,3
    89e8:	29403fcc 	andi	r5,r5,255
    89ec:	2007883a 	mov	r3,r4
    89f0:	1180022e 	bgeu	r2,r6,89fc <memchr+0x18>
    89f4:	2084703a 	and	r2,r4,r2
    89f8:	10000b26 	beq	r2,zero,8a28 <memchr+0x44>
    89fc:	313fffc4 	addi	r4,r6,-1
    8a00:	3000051e 	bne	r6,zero,8a18 <memchr+0x34>
    8a04:	00002c06 	br	8ab8 <memchr+0xd4>
    8a08:	213fffc4 	addi	r4,r4,-1
    8a0c:	00bfffc4 	movi	r2,-1
    8a10:	18c00044 	addi	r3,r3,1
    8a14:	20802826 	beq	r4,r2,8ab8 <memchr+0xd4>
    8a18:	18800003 	ldbu	r2,0(r3)
    8a1c:	28bffa1e 	bne	r5,r2,8a08 <memchr+0x24>
    8a20:	1805883a 	mov	r2,r3
    8a24:	f800283a 	ret
    8a28:	0011883a 	mov	r8,zero
    8a2c:	0007883a 	mov	r3,zero
    8a30:	01c00104 	movi	r7,4
    8a34:	4004923a 	slli	r2,r8,8
    8a38:	18c00044 	addi	r3,r3,1
    8a3c:	1151883a 	add	r8,r2,r5
    8a40:	19fffc1e 	bne	r3,r7,8a34 <memchr+0x50>
    8a44:	02bfbff4 	movhi	r10,65279
    8a48:	52bfbfc4 	addi	r10,r10,-257
    8a4c:	02602074 	movhi	r9,32897
    8a50:	4a602004 	addi	r9,r9,-32640
    8a54:	02c000c4 	movi	r11,3
    8a58:	20800017 	ldw	r2,0(r4)
    8a5c:	31bfff04 	addi	r6,r6,-4
    8a60:	200f883a 	mov	r7,r4
    8a64:	1204f03a 	xor	r2,r2,r8
    8a68:	1287883a 	add	r3,r2,r10
    8a6c:	1a46703a 	and	r3,r3,r9
    8a70:	0084303a 	nor	r2,zero,r2
    8a74:	10c4703a 	and	r2,r2,r3
    8a78:	10000b26 	beq	r2,zero,8aa8 <memchr+0xc4>
    8a7c:	20800003 	ldbu	r2,0(r4)
    8a80:	28800f26 	beq	r5,r2,8ac0 <memchr+0xdc>
    8a84:	20800043 	ldbu	r2,1(r4)
    8a88:	21c00044 	addi	r7,r4,1
    8a8c:	28800c26 	beq	r5,r2,8ac0 <memchr+0xdc>
    8a90:	20800083 	ldbu	r2,2(r4)
    8a94:	21c00084 	addi	r7,r4,2
    8a98:	28800926 	beq	r5,r2,8ac0 <memchr+0xdc>
    8a9c:	208000c3 	ldbu	r2,3(r4)
    8aa0:	21c000c4 	addi	r7,r4,3
    8aa4:	28800626 	beq	r5,r2,8ac0 <memchr+0xdc>
    8aa8:	21000104 	addi	r4,r4,4
    8aac:	59bfea36 	bltu	r11,r6,8a58 <memchr+0x74>
    8ab0:	2007883a 	mov	r3,r4
    8ab4:	003fd106 	br	89fc <memchr+0x18>
    8ab8:	0005883a 	mov	r2,zero
    8abc:	f800283a 	ret
    8ac0:	3805883a 	mov	r2,r7
    8ac4:	f800283a 	ret

00008ac8 <memcmp>:
    8ac8:	00c000c4 	movi	r3,3
    8acc:	1980032e 	bgeu	r3,r6,8adc <memcmp+0x14>
    8ad0:	2144b03a 	or	r2,r4,r5
    8ad4:	10c4703a 	and	r2,r2,r3
    8ad8:	10000f26 	beq	r2,zero,8b18 <memcmp+0x50>
    8adc:	31ffffc4 	addi	r7,r6,-1
    8ae0:	3000061e 	bne	r6,zero,8afc <memcmp+0x34>
    8ae4:	00000a06 	br	8b10 <memcmp+0x48>
    8ae8:	39ffffc4 	addi	r7,r7,-1
    8aec:	00bfffc4 	movi	r2,-1
    8af0:	21000044 	addi	r4,r4,1
    8af4:	29400044 	addi	r5,r5,1
    8af8:	38800526 	beq	r7,r2,8b10 <memcmp+0x48>
    8afc:	20c00003 	ldbu	r3,0(r4)
    8b00:	28800003 	ldbu	r2,0(r5)
    8b04:	18bff826 	beq	r3,r2,8ae8 <memcmp+0x20>
    8b08:	1885c83a 	sub	r2,r3,r2
    8b0c:	f800283a 	ret
    8b10:	0005883a 	mov	r2,zero
    8b14:	f800283a 	ret
    8b18:	180f883a 	mov	r7,r3
    8b1c:	20c00017 	ldw	r3,0(r4)
    8b20:	28800017 	ldw	r2,0(r5)
    8b24:	18bfed1e 	bne	r3,r2,8adc <memcmp+0x14>
    8b28:	31bfff04 	addi	r6,r6,-4
    8b2c:	21000104 	addi	r4,r4,4
    8b30:	29400104 	addi	r5,r5,4
    8b34:	39bff936 	bltu	r7,r6,8b1c <memcmp+0x54>
    8b38:	003fe806 	br	8adc <memcmp+0x14>

00008b3c <memcpy>:
    8b3c:	01c003c4 	movi	r7,15
    8b40:	2007883a 	mov	r3,r4
    8b44:	3980032e 	bgeu	r7,r6,8b54 <memcpy+0x18>
    8b48:	2904b03a 	or	r2,r5,r4
    8b4c:	108000cc 	andi	r2,r2,3
    8b50:	10000926 	beq	r2,zero,8b78 <memcpy+0x3c>
    8b54:	30000626 	beq	r6,zero,8b70 <memcpy+0x34>
    8b58:	30cd883a 	add	r6,r6,r3
    8b5c:	28800003 	ldbu	r2,0(r5)
    8b60:	29400044 	addi	r5,r5,1
    8b64:	18800005 	stb	r2,0(r3)
    8b68:	18c00044 	addi	r3,r3,1
    8b6c:	30fffb1e 	bne	r6,r3,8b5c <memcpy+0x20>
    8b70:	2005883a 	mov	r2,r4
    8b74:	f800283a 	ret
    8b78:	3811883a 	mov	r8,r7
    8b7c:	200f883a 	mov	r7,r4
    8b80:	28c00017 	ldw	r3,0(r5)
    8b84:	31bffc04 	addi	r6,r6,-16
    8b88:	38c00015 	stw	r3,0(r7)
    8b8c:	28800117 	ldw	r2,4(r5)
    8b90:	38800115 	stw	r2,4(r7)
    8b94:	28c00217 	ldw	r3,8(r5)
    8b98:	38c00215 	stw	r3,8(r7)
    8b9c:	28800317 	ldw	r2,12(r5)
    8ba0:	29400404 	addi	r5,r5,16
    8ba4:	38800315 	stw	r2,12(r7)
    8ba8:	39c00404 	addi	r7,r7,16
    8bac:	41bff436 	bltu	r8,r6,8b80 <memcpy+0x44>
    8bb0:	008000c4 	movi	r2,3
    8bb4:	1180072e 	bgeu	r2,r6,8bd4 <memcpy+0x98>
    8bb8:	1007883a 	mov	r3,r2
    8bbc:	28800017 	ldw	r2,0(r5)
    8bc0:	31bfff04 	addi	r6,r6,-4
    8bc4:	29400104 	addi	r5,r5,4
    8bc8:	38800015 	stw	r2,0(r7)
    8bcc:	39c00104 	addi	r7,r7,4
    8bd0:	19bffa36 	bltu	r3,r6,8bbc <memcpy+0x80>
    8bd4:	3807883a 	mov	r3,r7
    8bd8:	003fde06 	br	8b54 <memcpy+0x18>

00008bdc <memmove>:
    8bdc:	2807883a 	mov	r3,r5
    8be0:	2011883a 	mov	r8,r4
    8be4:	29000c2e 	bgeu	r5,r4,8c18 <memmove+0x3c>
    8be8:	298f883a 	add	r7,r5,r6
    8bec:	21c00a2e 	bgeu	r4,r7,8c18 <memmove+0x3c>
    8bf0:	30000726 	beq	r6,zero,8c10 <memmove+0x34>
    8bf4:	2187883a 	add	r3,r4,r6
    8bf8:	198dc83a 	sub	r6,r3,r6
    8bfc:	39ffffc4 	addi	r7,r7,-1
    8c00:	38800003 	ldbu	r2,0(r7)
    8c04:	18ffffc4 	addi	r3,r3,-1
    8c08:	18800005 	stb	r2,0(r3)
    8c0c:	19bffb1e 	bne	r3,r6,8bfc <memmove+0x20>
    8c10:	2005883a 	mov	r2,r4
    8c14:	f800283a 	ret
    8c18:	01c003c4 	movi	r7,15
    8c1c:	39800a36 	bltu	r7,r6,8c48 <memmove+0x6c>
    8c20:	303ffb26 	beq	r6,zero,8c10 <memmove+0x34>
    8c24:	400f883a 	mov	r7,r8
    8c28:	320d883a 	add	r6,r6,r8
    8c2c:	28800003 	ldbu	r2,0(r5)
    8c30:	29400044 	addi	r5,r5,1
    8c34:	38800005 	stb	r2,0(r7)
    8c38:	39c00044 	addi	r7,r7,1
    8c3c:	39bffb1e 	bne	r7,r6,8c2c <memmove+0x50>
    8c40:	2005883a 	mov	r2,r4
    8c44:	f800283a 	ret
    8c48:	1904b03a 	or	r2,r3,r4
    8c4c:	108000cc 	andi	r2,r2,3
    8c50:	103ff31e 	bne	r2,zero,8c20 <memmove+0x44>
    8c54:	3811883a 	mov	r8,r7
    8c58:	180b883a 	mov	r5,r3
    8c5c:	200f883a 	mov	r7,r4
    8c60:	28c00017 	ldw	r3,0(r5)
    8c64:	31bffc04 	addi	r6,r6,-16
    8c68:	38c00015 	stw	r3,0(r7)
    8c6c:	28800117 	ldw	r2,4(r5)
    8c70:	38800115 	stw	r2,4(r7)
    8c74:	28c00217 	ldw	r3,8(r5)
    8c78:	38c00215 	stw	r3,8(r7)
    8c7c:	28800317 	ldw	r2,12(r5)
    8c80:	29400404 	addi	r5,r5,16
    8c84:	38800315 	stw	r2,12(r7)
    8c88:	39c00404 	addi	r7,r7,16
    8c8c:	41bff436 	bltu	r8,r6,8c60 <memmove+0x84>
    8c90:	008000c4 	movi	r2,3
    8c94:	1180072e 	bgeu	r2,r6,8cb4 <memmove+0xd8>
    8c98:	1007883a 	mov	r3,r2
    8c9c:	28800017 	ldw	r2,0(r5)
    8ca0:	31bfff04 	addi	r6,r6,-4
    8ca4:	29400104 	addi	r5,r5,4
    8ca8:	38800015 	stw	r2,0(r7)
    8cac:	39c00104 	addi	r7,r7,4
    8cb0:	19bffa36 	bltu	r3,r6,8c9c <memmove+0xc0>
    8cb4:	3811883a 	mov	r8,r7
    8cb8:	003fd906 	br	8c20 <memmove+0x44>

00008cbc <memset>:
    8cbc:	008000c4 	movi	r2,3
    8cc0:	29403fcc 	andi	r5,r5,255
    8cc4:	2007883a 	mov	r3,r4
    8cc8:	1180022e 	bgeu	r2,r6,8cd4 <memset+0x18>
    8ccc:	2084703a 	and	r2,r4,r2
    8cd0:	10000826 	beq	r2,zero,8cf4 <memset+0x38>
    8cd4:	30000526 	beq	r6,zero,8cec <memset+0x30>
    8cd8:	2805883a 	mov	r2,r5
    8cdc:	30cd883a 	add	r6,r6,r3
    8ce0:	18800005 	stb	r2,0(r3)
    8ce4:	18c00044 	addi	r3,r3,1
    8ce8:	19bffd1e 	bne	r3,r6,8ce0 <memset+0x24>
    8cec:	2005883a 	mov	r2,r4
    8cf0:	f800283a 	ret
    8cf4:	2804923a 	slli	r2,r5,8
    8cf8:	020003c4 	movi	r8,15
    8cfc:	200f883a 	mov	r7,r4
    8d00:	2884b03a 	or	r2,r5,r2
    8d04:	1006943a 	slli	r3,r2,16
    8d08:	10c6b03a 	or	r3,r2,r3
    8d0c:	41800a2e 	bgeu	r8,r6,8d38 <memset+0x7c>
    8d10:	4005883a 	mov	r2,r8
    8d14:	31bffc04 	addi	r6,r6,-16
    8d18:	38c00015 	stw	r3,0(r7)
    8d1c:	38c00115 	stw	r3,4(r7)
    8d20:	38c00215 	stw	r3,8(r7)
    8d24:	38c00315 	stw	r3,12(r7)
    8d28:	39c00404 	addi	r7,r7,16
    8d2c:	11bff936 	bltu	r2,r6,8d14 <memset+0x58>
    8d30:	008000c4 	movi	r2,3
    8d34:	1180052e 	bgeu	r2,r6,8d4c <memset+0x90>
    8d38:	31bfff04 	addi	r6,r6,-4
    8d3c:	008000c4 	movi	r2,3
    8d40:	38c00015 	stw	r3,0(r7)
    8d44:	39c00104 	addi	r7,r7,4
    8d48:	11bffb36 	bltu	r2,r6,8d38 <memset+0x7c>
    8d4c:	3807883a 	mov	r3,r7
    8d50:	003fe006 	br	8cd4 <memset+0x18>

00008d54 <_Bfree>:
    8d54:	28000826 	beq	r5,zero,8d78 <_Bfree+0x24>
    8d58:	28800117 	ldw	r2,4(r5)
    8d5c:	21001317 	ldw	r4,76(r4)
    8d60:	1085883a 	add	r2,r2,r2
    8d64:	1085883a 	add	r2,r2,r2
    8d68:	1105883a 	add	r2,r2,r4
    8d6c:	10c00017 	ldw	r3,0(r2)
    8d70:	28c00015 	stw	r3,0(r5)
    8d74:	11400015 	stw	r5,0(r2)
    8d78:	f800283a 	ret

00008d7c <__hi0bits>:
    8d7c:	20bfffec 	andhi	r2,r4,65535
    8d80:	10001426 	beq	r2,zero,8dd4 <__hi0bits+0x58>
    8d84:	0007883a 	mov	r3,zero
    8d88:	20bfc02c 	andhi	r2,r4,65280
    8d8c:	1000021e 	bne	r2,zero,8d98 <__hi0bits+0x1c>
    8d90:	2008923a 	slli	r4,r4,8
    8d94:	18c00204 	addi	r3,r3,8
    8d98:	20bc002c 	andhi	r2,r4,61440
    8d9c:	1000021e 	bne	r2,zero,8da8 <__hi0bits+0x2c>
    8da0:	2008913a 	slli	r4,r4,4
    8da4:	18c00104 	addi	r3,r3,4
    8da8:	20b0002c 	andhi	r2,r4,49152
    8dac:	1000031e 	bne	r2,zero,8dbc <__hi0bits+0x40>
    8db0:	2105883a 	add	r2,r4,r4
    8db4:	18c00084 	addi	r3,r3,2
    8db8:	1089883a 	add	r4,r2,r2
    8dbc:	20000316 	blt	r4,zero,8dcc <__hi0bits+0x50>
    8dc0:	2090002c 	andhi	r2,r4,16384
    8dc4:	10000626 	beq	r2,zero,8de0 <__hi0bits+0x64>
    8dc8:	18c00044 	addi	r3,r3,1
    8dcc:	1805883a 	mov	r2,r3
    8dd0:	f800283a 	ret
    8dd4:	2008943a 	slli	r4,r4,16
    8dd8:	00c00404 	movi	r3,16
    8ddc:	003fea06 	br	8d88 <__hi0bits+0xc>
    8de0:	00c00804 	movi	r3,32
    8de4:	1805883a 	mov	r2,r3
    8de8:	f800283a 	ret

00008dec <__lo0bits>:
    8dec:	20c00017 	ldw	r3,0(r4)
    8df0:	188001cc 	andi	r2,r3,7
    8df4:	10000a26 	beq	r2,zero,8e20 <__lo0bits+0x34>
    8df8:	1880004c 	andi	r2,r3,1
    8dfc:	1005003a 	cmpeq	r2,r2,zero
    8e00:	10002126 	beq	r2,zero,8e88 <__lo0bits+0x9c>
    8e04:	1880008c 	andi	r2,r3,2
    8e08:	1000251e 	bne	r2,zero,8ea0 <__lo0bits+0xb4>
    8e0c:	1804d0ba 	srli	r2,r3,2
    8e10:	01400084 	movi	r5,2
    8e14:	20800015 	stw	r2,0(r4)
    8e18:	2805883a 	mov	r2,r5
    8e1c:	f800283a 	ret
    8e20:	18bfffcc 	andi	r2,r3,65535
    8e24:	10001526 	beq	r2,zero,8e7c <__lo0bits+0x90>
    8e28:	000b883a 	mov	r5,zero
    8e2c:	18803fcc 	andi	r2,r3,255
    8e30:	1000021e 	bne	r2,zero,8e3c <__lo0bits+0x50>
    8e34:	1806d23a 	srli	r3,r3,8
    8e38:	29400204 	addi	r5,r5,8
    8e3c:	188003cc 	andi	r2,r3,15
    8e40:	1000021e 	bne	r2,zero,8e4c <__lo0bits+0x60>
    8e44:	1806d13a 	srli	r3,r3,4
    8e48:	29400104 	addi	r5,r5,4
    8e4c:	188000cc 	andi	r2,r3,3
    8e50:	1000021e 	bne	r2,zero,8e5c <__lo0bits+0x70>
    8e54:	1806d0ba 	srli	r3,r3,2
    8e58:	29400084 	addi	r5,r5,2
    8e5c:	1880004c 	andi	r2,r3,1
    8e60:	1000031e 	bne	r2,zero,8e70 <__lo0bits+0x84>
    8e64:	1806d07a 	srli	r3,r3,1
    8e68:	18000a26 	beq	r3,zero,8e94 <__lo0bits+0xa8>
    8e6c:	29400044 	addi	r5,r5,1
    8e70:	2805883a 	mov	r2,r5
    8e74:	20c00015 	stw	r3,0(r4)
    8e78:	f800283a 	ret
    8e7c:	1806d43a 	srli	r3,r3,16
    8e80:	01400404 	movi	r5,16
    8e84:	003fe906 	br	8e2c <__lo0bits+0x40>
    8e88:	000b883a 	mov	r5,zero
    8e8c:	2805883a 	mov	r2,r5
    8e90:	f800283a 	ret
    8e94:	01400804 	movi	r5,32
    8e98:	2805883a 	mov	r2,r5
    8e9c:	f800283a 	ret
    8ea0:	1804d07a 	srli	r2,r3,1
    8ea4:	01400044 	movi	r5,1
    8ea8:	20800015 	stw	r2,0(r4)
    8eac:	003fda06 	br	8e18 <__lo0bits+0x2c>

00008eb0 <__mcmp>:
    8eb0:	20800417 	ldw	r2,16(r4)
    8eb4:	28c00417 	ldw	r3,16(r5)
    8eb8:	10cfc83a 	sub	r7,r2,r3
    8ebc:	38000c1e 	bne	r7,zero,8ef0 <__mcmp+0x40>
    8ec0:	18c5883a 	add	r2,r3,r3
    8ec4:	1085883a 	add	r2,r2,r2
    8ec8:	10c00504 	addi	r3,r2,20
    8ecc:	21000504 	addi	r4,r4,20
    8ed0:	28cb883a 	add	r5,r5,r3
    8ed4:	2085883a 	add	r2,r4,r2
    8ed8:	10bfff04 	addi	r2,r2,-4
    8edc:	297fff04 	addi	r5,r5,-4
    8ee0:	11800017 	ldw	r6,0(r2)
    8ee4:	28c00017 	ldw	r3,0(r5)
    8ee8:	30c0031e 	bne	r6,r3,8ef8 <__mcmp+0x48>
    8eec:	20bffa36 	bltu	r4,r2,8ed8 <__mcmp+0x28>
    8ef0:	3805883a 	mov	r2,r7
    8ef4:	f800283a 	ret
    8ef8:	30c00336 	bltu	r6,r3,8f08 <__mcmp+0x58>
    8efc:	01c00044 	movi	r7,1
    8f00:	3805883a 	mov	r2,r7
    8f04:	f800283a 	ret
    8f08:	01ffffc4 	movi	r7,-1
    8f0c:	003ff806 	br	8ef0 <__mcmp+0x40>

00008f10 <__ulp>:
    8f10:	295ffc2c 	andhi	r5,r5,32752
    8f14:	013f3034 	movhi	r4,64704
    8f18:	290b883a 	add	r5,r5,r4
    8f1c:	0145c83a 	sub	r2,zero,r5
    8f20:	1007d53a 	srai	r3,r2,20
    8f24:	000d883a 	mov	r6,zero
    8f28:	0140040e 	bge	zero,r5,8f3c <__ulp+0x2c>
    8f2c:	280f883a 	mov	r7,r5
    8f30:	3807883a 	mov	r3,r7
    8f34:	3005883a 	mov	r2,r6
    8f38:	f800283a 	ret
    8f3c:	008004c4 	movi	r2,19
    8f40:	193ffb04 	addi	r4,r3,-20
    8f44:	10c00c0e 	bge	r2,r3,8f78 <__ulp+0x68>
    8f48:	008007c4 	movi	r2,31
    8f4c:	1107c83a 	sub	r3,r2,r4
    8f50:	00800784 	movi	r2,30
    8f54:	01400044 	movi	r5,1
    8f58:	11000216 	blt	r2,r4,8f64 <__ulp+0x54>
    8f5c:	00800044 	movi	r2,1
    8f60:	10ca983a 	sll	r5,r2,r3
    8f64:	000f883a 	mov	r7,zero
    8f68:	280d883a 	mov	r6,r5
    8f6c:	3807883a 	mov	r3,r7
    8f70:	3005883a 	mov	r2,r6
    8f74:	f800283a 	ret
    8f78:	00800234 	movhi	r2,8
    8f7c:	10cfd83a 	sra	r7,r2,r3
    8f80:	000d883a 	mov	r6,zero
    8f84:	3005883a 	mov	r2,r6
    8f88:	3807883a 	mov	r3,r7
    8f8c:	f800283a 	ret

00008f90 <__b2d>:
    8f90:	20800417 	ldw	r2,16(r4)
    8f94:	defff904 	addi	sp,sp,-28
    8f98:	dd000415 	stw	r20,16(sp)
    8f9c:	1085883a 	add	r2,r2,r2
    8fa0:	25000504 	addi	r20,r4,20
    8fa4:	1085883a 	add	r2,r2,r2
    8fa8:	dc000015 	stw	r16,0(sp)
    8fac:	a0a1883a 	add	r16,r20,r2
    8fb0:	dd400515 	stw	r21,20(sp)
    8fb4:	857fff17 	ldw	r21,-4(r16)
    8fb8:	dc400115 	stw	r17,4(sp)
    8fbc:	dfc00615 	stw	ra,24(sp)
    8fc0:	a809883a 	mov	r4,r21
    8fc4:	2823883a 	mov	r17,r5
    8fc8:	dcc00315 	stw	r19,12(sp)
    8fcc:	dc800215 	stw	r18,8(sp)
    8fd0:	0008d7c0 	call	8d7c <__hi0bits>
    8fd4:	100b883a 	mov	r5,r2
    8fd8:	00800804 	movi	r2,32
    8fdc:	1145c83a 	sub	r2,r2,r5
    8fe0:	88800015 	stw	r2,0(r17)
    8fe4:	00800284 	movi	r2,10
    8fe8:	80ffff04 	addi	r3,r16,-4
    8fec:	11401416 	blt	r2,r5,9040 <__b2d+0xb0>
    8ff0:	008002c4 	movi	r2,11
    8ff4:	1149c83a 	sub	r4,r2,r5
    8ff8:	a0c02736 	bltu	r20,r3,9098 <__b2d+0x108>
    8ffc:	000d883a 	mov	r6,zero
    9000:	28800544 	addi	r2,r5,21
    9004:	a906d83a 	srl	r3,r21,r4
    9008:	a884983a 	sll	r2,r21,r2
    900c:	1ccffc34 	orhi	r19,r3,16368
    9010:	11a4b03a 	or	r18,r2,r6
    9014:	9005883a 	mov	r2,r18
    9018:	9807883a 	mov	r3,r19
    901c:	dfc00617 	ldw	ra,24(sp)
    9020:	dd400517 	ldw	r21,20(sp)
    9024:	dd000417 	ldw	r20,16(sp)
    9028:	dcc00317 	ldw	r19,12(sp)
    902c:	dc800217 	ldw	r18,8(sp)
    9030:	dc400117 	ldw	r17,4(sp)
    9034:	dc000017 	ldw	r16,0(sp)
    9038:	dec00704 	addi	sp,sp,28
    903c:	f800283a 	ret
    9040:	a0c00e36 	bltu	r20,r3,907c <__b2d+0xec>
    9044:	293ffd44 	addi	r4,r5,-11
    9048:	000d883a 	mov	r6,zero
    904c:	20000f26 	beq	r4,zero,908c <__b2d+0xfc>
    9050:	00800804 	movi	r2,32
    9054:	110bc83a 	sub	r5,r2,r4
    9058:	a0c01236 	bltu	r20,r3,90a4 <__b2d+0x114>
    905c:	000f883a 	mov	r7,zero
    9060:	a904983a 	sll	r2,r21,r4
    9064:	3146d83a 	srl	r3,r6,r5
    9068:	3108983a 	sll	r4,r6,r4
    906c:	108ffc34 	orhi	r2,r2,16368
    9070:	18a6b03a 	or	r19,r3,r2
    9074:	3924b03a 	or	r18,r7,r4
    9078:	003fe606 	br	9014 <__b2d+0x84>
    907c:	293ffd44 	addi	r4,r5,-11
    9080:	81bffe17 	ldw	r6,-8(r16)
    9084:	80fffe04 	addi	r3,r16,-8
    9088:	203ff11e 	bne	r4,zero,9050 <__b2d+0xc0>
    908c:	accffc34 	orhi	r19,r21,16368
    9090:	3025883a 	mov	r18,r6
    9094:	003fdf06 	br	9014 <__b2d+0x84>
    9098:	18bfff17 	ldw	r2,-4(r3)
    909c:	110cd83a 	srl	r6,r2,r4
    90a0:	003fd706 	br	9000 <__b2d+0x70>
    90a4:	18bfff17 	ldw	r2,-4(r3)
    90a8:	114ed83a 	srl	r7,r2,r5
    90ac:	003fec06 	br	9060 <__b2d+0xd0>

000090b0 <__ratio>:
    90b0:	defff904 	addi	sp,sp,-28
    90b4:	dc400215 	stw	r17,8(sp)
    90b8:	2823883a 	mov	r17,r5
    90bc:	d80b883a 	mov	r5,sp
    90c0:	dfc00615 	stw	ra,24(sp)
    90c4:	dd000515 	stw	r20,20(sp)
    90c8:	dcc00415 	stw	r19,16(sp)
    90cc:	dc800315 	stw	r18,12(sp)
    90d0:	2025883a 	mov	r18,r4
    90d4:	0008f900 	call	8f90 <__b2d>
    90d8:	8809883a 	mov	r4,r17
    90dc:	d9400104 	addi	r5,sp,4
    90e0:	1027883a 	mov	r19,r2
    90e4:	1829883a 	mov	r20,r3
    90e8:	0008f900 	call	8f90 <__b2d>
    90ec:	89000417 	ldw	r4,16(r17)
    90f0:	91c00417 	ldw	r7,16(r18)
    90f4:	d9800117 	ldw	r6,4(sp)
    90f8:	180b883a 	mov	r5,r3
    90fc:	390fc83a 	sub	r7,r7,r4
    9100:	1009883a 	mov	r4,r2
    9104:	d8800017 	ldw	r2,0(sp)
    9108:	380e917a 	slli	r7,r7,5
    910c:	2011883a 	mov	r8,r4
    9110:	1185c83a 	sub	r2,r2,r6
    9114:	11c5883a 	add	r2,r2,r7
    9118:	1006953a 	slli	r3,r2,20
    911c:	2813883a 	mov	r9,r5
    9120:	00800d0e 	bge	zero,r2,9158 <__ratio+0xa8>
    9124:	1d29883a 	add	r20,r3,r20
    9128:	a00b883a 	mov	r5,r20
    912c:	480f883a 	mov	r7,r9
    9130:	9809883a 	mov	r4,r19
    9134:	400d883a 	mov	r6,r8
    9138:	000c6ac0 	call	c6ac <__divdf3>
    913c:	dfc00617 	ldw	ra,24(sp)
    9140:	dd000517 	ldw	r20,20(sp)
    9144:	dcc00417 	ldw	r19,16(sp)
    9148:	dc800317 	ldw	r18,12(sp)
    914c:	dc400217 	ldw	r17,8(sp)
    9150:	dec00704 	addi	sp,sp,28
    9154:	f800283a 	ret
    9158:	28d3c83a 	sub	r9,r5,r3
    915c:	003ff206 	br	9128 <__ratio+0x78>

00009160 <_mprec_log10>:
    9160:	defffe04 	addi	sp,sp,-8
    9164:	008005c4 	movi	r2,23
    9168:	dc000015 	stw	r16,0(sp)
    916c:	dfc00115 	stw	ra,4(sp)
    9170:	2021883a 	mov	r16,r4
    9174:	11000c16 	blt	r2,r4,91a8 <_mprec_log10+0x48>
    9178:	200490fa 	slli	r2,r4,3
    917c:	00c00074 	movhi	r3,1
    9180:	18fc1904 	addi	r3,r3,-3996
    9184:	10c5883a 	add	r2,r2,r3
    9188:	12400117 	ldw	r9,4(r2)
    918c:	12000017 	ldw	r8,0(r2)
    9190:	4807883a 	mov	r3,r9
    9194:	4005883a 	mov	r2,r8
    9198:	dfc00117 	ldw	ra,4(sp)
    919c:	dc000017 	ldw	r16,0(sp)
    91a0:	dec00204 	addi	sp,sp,8
    91a4:	f800283a 	ret
    91a8:	0011883a 	mov	r8,zero
    91ac:	024ffc34 	movhi	r9,16368
    91b0:	0005883a 	mov	r2,zero
    91b4:	00d00934 	movhi	r3,16420
    91b8:	480b883a 	mov	r5,r9
    91bc:	4009883a 	mov	r4,r8
    91c0:	180f883a 	mov	r7,r3
    91c4:	100d883a 	mov	r6,r2
    91c8:	000c2e80 	call	c2e8 <__muldf3>
    91cc:	843fffc4 	addi	r16,r16,-1
    91d0:	1011883a 	mov	r8,r2
    91d4:	1813883a 	mov	r9,r3
    91d8:	803ff51e 	bne	r16,zero,91b0 <_mprec_log10+0x50>
    91dc:	4005883a 	mov	r2,r8
    91e0:	4807883a 	mov	r3,r9
    91e4:	dfc00117 	ldw	ra,4(sp)
    91e8:	dc000017 	ldw	r16,0(sp)
    91ec:	dec00204 	addi	sp,sp,8
    91f0:	f800283a 	ret

000091f4 <__copybits>:
    91f4:	297fffc4 	addi	r5,r5,-1
    91f8:	30800417 	ldw	r2,16(r6)
    91fc:	280bd17a 	srai	r5,r5,5
    9200:	31800504 	addi	r6,r6,20
    9204:	1085883a 	add	r2,r2,r2
    9208:	294b883a 	add	r5,r5,r5
    920c:	294b883a 	add	r5,r5,r5
    9210:	1085883a 	add	r2,r2,r2
    9214:	290b883a 	add	r5,r5,r4
    9218:	3087883a 	add	r3,r6,r2
    921c:	29400104 	addi	r5,r5,4
    9220:	30c0052e 	bgeu	r6,r3,9238 <__copybits+0x44>
    9224:	30800017 	ldw	r2,0(r6)
    9228:	31800104 	addi	r6,r6,4
    922c:	20800015 	stw	r2,0(r4)
    9230:	21000104 	addi	r4,r4,4
    9234:	30fffb36 	bltu	r6,r3,9224 <__copybits+0x30>
    9238:	2140032e 	bgeu	r4,r5,9248 <__copybits+0x54>
    923c:	20000015 	stw	zero,0(r4)
    9240:	21000104 	addi	r4,r4,4
    9244:	217ffd36 	bltu	r4,r5,923c <__copybits+0x48>
    9248:	f800283a 	ret

0000924c <__any_on>:
    924c:	20800417 	ldw	r2,16(r4)
    9250:	2807d17a 	srai	r3,r5,5
    9254:	21000504 	addi	r4,r4,20
    9258:	10c00d0e 	bge	r2,r3,9290 <__any_on+0x44>
    925c:	1085883a 	add	r2,r2,r2
    9260:	1085883a 	add	r2,r2,r2
    9264:	208d883a 	add	r6,r4,r2
    9268:	2180182e 	bgeu	r4,r6,92cc <__any_on+0x80>
    926c:	30bfff17 	ldw	r2,-4(r6)
    9270:	30ffff04 	addi	r3,r6,-4
    9274:	1000041e 	bne	r2,zero,9288 <__any_on+0x3c>
    9278:	20c0142e 	bgeu	r4,r3,92cc <__any_on+0x80>
    927c:	18ffff04 	addi	r3,r3,-4
    9280:	18800017 	ldw	r2,0(r3)
    9284:	103ffc26 	beq	r2,zero,9278 <__any_on+0x2c>
    9288:	00800044 	movi	r2,1
    928c:	f800283a 	ret
    9290:	18800a0e 	bge	r3,r2,92bc <__any_on+0x70>
    9294:	294007cc 	andi	r5,r5,31
    9298:	28000826 	beq	r5,zero,92bc <__any_on+0x70>
    929c:	18c5883a 	add	r2,r3,r3
    92a0:	1085883a 	add	r2,r2,r2
    92a4:	208d883a 	add	r6,r4,r2
    92a8:	30c00017 	ldw	r3,0(r6)
    92ac:	1944d83a 	srl	r2,r3,r5
    92b0:	1144983a 	sll	r2,r2,r5
    92b4:	18bff41e 	bne	r3,r2,9288 <__any_on+0x3c>
    92b8:	003feb06 	br	9268 <__any_on+0x1c>
    92bc:	18c5883a 	add	r2,r3,r3
    92c0:	1085883a 	add	r2,r2,r2
    92c4:	208d883a 	add	r6,r4,r2
    92c8:	003fe706 	br	9268 <__any_on+0x1c>
    92cc:	0005883a 	mov	r2,zero
    92d0:	f800283a 	ret

000092d4 <_Balloc>:
    92d4:	20c01317 	ldw	r3,76(r4)
    92d8:	defffb04 	addi	sp,sp,-20
    92dc:	dcc00315 	stw	r19,12(sp)
    92e0:	dc800215 	stw	r18,8(sp)
    92e4:	dfc00415 	stw	ra,16(sp)
    92e8:	2825883a 	mov	r18,r5
    92ec:	dc400115 	stw	r17,4(sp)
    92f0:	dc000015 	stw	r16,0(sp)
    92f4:	2027883a 	mov	r19,r4
    92f8:	01800404 	movi	r6,16
    92fc:	01400104 	movi	r5,4
    9300:	18001726 	beq	r3,zero,9360 <_Balloc+0x8c>
    9304:	01400044 	movi	r5,1
    9308:	9485883a 	add	r2,r18,r18
    930c:	2ca2983a 	sll	r17,r5,r18
    9310:	1085883a 	add	r2,r2,r2
    9314:	10c7883a 	add	r3,r2,r3
    9318:	1c000017 	ldw	r16,0(r3)
    931c:	8c4d883a 	add	r6,r17,r17
    9320:	318d883a 	add	r6,r6,r6
    9324:	9809883a 	mov	r4,r19
    9328:	31800504 	addi	r6,r6,20
    932c:	80001226 	beq	r16,zero,9378 <_Balloc+0xa4>
    9330:	80800017 	ldw	r2,0(r16)
    9334:	18800015 	stw	r2,0(r3)
    9338:	80000415 	stw	zero,16(r16)
    933c:	80000315 	stw	zero,12(r16)
    9340:	8005883a 	mov	r2,r16
    9344:	dfc00417 	ldw	ra,16(sp)
    9348:	dcc00317 	ldw	r19,12(sp)
    934c:	dc800217 	ldw	r18,8(sp)
    9350:	dc400117 	ldw	r17,4(sp)
    9354:	dc000017 	ldw	r16,0(sp)
    9358:	dec00504 	addi	sp,sp,20
    935c:	f800283a 	ret
    9360:	000aadc0 	call	aadc <_calloc_r>
    9364:	1007883a 	mov	r3,r2
    9368:	0021883a 	mov	r16,zero
    936c:	98801315 	stw	r2,76(r19)
    9370:	103fe41e 	bne	r2,zero,9304 <_Balloc+0x30>
    9374:	003ff206 	br	9340 <_Balloc+0x6c>
    9378:	000aadc0 	call	aadc <_calloc_r>
    937c:	103ff026 	beq	r2,zero,9340 <_Balloc+0x6c>
    9380:	1021883a 	mov	r16,r2
    9384:	14800115 	stw	r18,4(r2)
    9388:	14400215 	stw	r17,8(r2)
    938c:	003fea06 	br	9338 <_Balloc+0x64>

00009390 <__d2b>:
    9390:	defff504 	addi	sp,sp,-44
    9394:	dcc00515 	stw	r19,20(sp)
    9398:	04c00044 	movi	r19,1
    939c:	dc000215 	stw	r16,8(sp)
    93a0:	2821883a 	mov	r16,r5
    93a4:	980b883a 	mov	r5,r19
    93a8:	ddc00915 	stw	r23,36(sp)
    93ac:	dd800815 	stw	r22,32(sp)
    93b0:	dd400715 	stw	r21,28(sp)
    93b4:	dd000615 	stw	r20,24(sp)
    93b8:	dc800415 	stw	r18,16(sp)
    93bc:	dc400315 	stw	r17,12(sp)
    93c0:	dfc00a15 	stw	ra,40(sp)
    93c4:	3023883a 	mov	r17,r6
    93c8:	382d883a 	mov	r22,r7
    93cc:	ddc00b17 	ldw	r23,44(sp)
    93d0:	00092d40 	call	92d4 <_Balloc>
    93d4:	1025883a 	mov	r18,r2
    93d8:	00a00034 	movhi	r2,32768
    93dc:	10bfffc4 	addi	r2,r2,-1
    93e0:	8888703a 	and	r4,r17,r2
    93e4:	202ad53a 	srli	r21,r4,20
    93e8:	00800434 	movhi	r2,16
    93ec:	10bfffc4 	addi	r2,r2,-1
    93f0:	8886703a 	and	r3,r17,r2
    93f4:	a829003a 	cmpeq	r20,r21,zero
    93f8:	800b883a 	mov	r5,r16
    93fc:	d8c00115 	stw	r3,4(sp)
    9400:	94000504 	addi	r16,r18,20
    9404:	a000021e 	bne	r20,zero,9410 <__d2b+0x80>
    9408:	18c00434 	orhi	r3,r3,16
    940c:	d8c00115 	stw	r3,4(sp)
    9410:	28002726 	beq	r5,zero,94b0 <__d2b+0x120>
    9414:	d809883a 	mov	r4,sp
    9418:	d9400015 	stw	r5,0(sp)
    941c:	0008dec0 	call	8dec <__lo0bits>
    9420:	100d883a 	mov	r6,r2
    9424:	10003526 	beq	r2,zero,94fc <__d2b+0x16c>
    9428:	d8c00117 	ldw	r3,4(sp)
    942c:	00800804 	movi	r2,32
    9430:	1185c83a 	sub	r2,r2,r6
    9434:	d9000017 	ldw	r4,0(sp)
    9438:	1886983a 	sll	r3,r3,r2
    943c:	1906b03a 	or	r3,r3,r4
    9440:	90c00515 	stw	r3,20(r18)
    9444:	d8c00117 	ldw	r3,4(sp)
    9448:	1986d83a 	srl	r3,r3,r6
    944c:	d8c00115 	stw	r3,4(sp)
    9450:	180b003a 	cmpeq	r5,r3,zero
    9454:	00800084 	movi	r2,2
    9458:	114bc83a 	sub	r5,r2,r5
    945c:	80c00115 	stw	r3,4(r16)
    9460:	91400415 	stw	r5,16(r18)
    9464:	a0001a1e 	bne	r20,zero,94d0 <__d2b+0x140>
    9468:	3545883a 	add	r2,r6,r21
    946c:	10bef344 	addi	r2,r2,-1075
    9470:	00c00d44 	movi	r3,53
    9474:	b0800015 	stw	r2,0(r22)
    9478:	1987c83a 	sub	r3,r3,r6
    947c:	b8c00015 	stw	r3,0(r23)
    9480:	9005883a 	mov	r2,r18
    9484:	dfc00a17 	ldw	ra,40(sp)
    9488:	ddc00917 	ldw	r23,36(sp)
    948c:	dd800817 	ldw	r22,32(sp)
    9490:	dd400717 	ldw	r21,28(sp)
    9494:	dd000617 	ldw	r20,24(sp)
    9498:	dcc00517 	ldw	r19,20(sp)
    949c:	dc800417 	ldw	r18,16(sp)
    94a0:	dc400317 	ldw	r17,12(sp)
    94a4:	dc000217 	ldw	r16,8(sp)
    94a8:	dec00b04 	addi	sp,sp,44
    94ac:	f800283a 	ret
    94b0:	d9000104 	addi	r4,sp,4
    94b4:	0008dec0 	call	8dec <__lo0bits>
    94b8:	11800804 	addi	r6,r2,32
    94bc:	d8800117 	ldw	r2,4(sp)
    94c0:	94c00415 	stw	r19,16(r18)
    94c4:	980b883a 	mov	r5,r19
    94c8:	90800515 	stw	r2,20(r18)
    94cc:	a03fe626 	beq	r20,zero,9468 <__d2b+0xd8>
    94d0:	2945883a 	add	r2,r5,r5
    94d4:	1085883a 	add	r2,r2,r2
    94d8:	1405883a 	add	r2,r2,r16
    94dc:	113fff17 	ldw	r4,-4(r2)
    94e0:	30fef384 	addi	r3,r6,-1074
    94e4:	2820917a 	slli	r16,r5,5
    94e8:	b0c00015 	stw	r3,0(r22)
    94ec:	0008d7c0 	call	8d7c <__hi0bits>
    94f0:	80a1c83a 	sub	r16,r16,r2
    94f4:	bc000015 	stw	r16,0(r23)
    94f8:	003fe106 	br	9480 <__d2b+0xf0>
    94fc:	d8800017 	ldw	r2,0(sp)
    9500:	90800515 	stw	r2,20(r18)
    9504:	d8c00117 	ldw	r3,4(sp)
    9508:	003fd106 	br	9450 <__d2b+0xc0>

0000950c <__mdiff>:
    950c:	defffb04 	addi	sp,sp,-20
    9510:	dc000015 	stw	r16,0(sp)
    9514:	2821883a 	mov	r16,r5
    9518:	dc800215 	stw	r18,8(sp)
    951c:	300b883a 	mov	r5,r6
    9520:	2025883a 	mov	r18,r4
    9524:	8009883a 	mov	r4,r16
    9528:	dc400115 	stw	r17,4(sp)
    952c:	dfc00415 	stw	ra,16(sp)
    9530:	dcc00315 	stw	r19,12(sp)
    9534:	3023883a 	mov	r17,r6
    9538:	0008eb00 	call	8eb0 <__mcmp>
    953c:	10004226 	beq	r2,zero,9648 <__mdiff+0x13c>
    9540:	10005016 	blt	r2,zero,9684 <__mdiff+0x178>
    9544:	0027883a 	mov	r19,zero
    9548:	81400117 	ldw	r5,4(r16)
    954c:	9009883a 	mov	r4,r18
    9550:	00092d40 	call	92d4 <_Balloc>
    9554:	1019883a 	mov	r12,r2
    9558:	82800417 	ldw	r10,16(r16)
    955c:	88800417 	ldw	r2,16(r17)
    9560:	81800504 	addi	r6,r16,20
    9564:	5287883a 	add	r3,r10,r10
    9568:	1085883a 	add	r2,r2,r2
    956c:	18c7883a 	add	r3,r3,r3
    9570:	1085883a 	add	r2,r2,r2
    9574:	8a000504 	addi	r8,r17,20
    9578:	64c00315 	stw	r19,12(r12)
    957c:	30db883a 	add	r13,r6,r3
    9580:	4097883a 	add	r11,r8,r2
    9584:	61c00504 	addi	r7,r12,20
    9588:	0013883a 	mov	r9,zero
    958c:	31000017 	ldw	r4,0(r6)
    9590:	41400017 	ldw	r5,0(r8)
    9594:	42000104 	addi	r8,r8,4
    9598:	20bfffcc 	andi	r2,r4,65535
    959c:	28ffffcc 	andi	r3,r5,65535
    95a0:	10c5c83a 	sub	r2,r2,r3
    95a4:	1245883a 	add	r2,r2,r9
    95a8:	2008d43a 	srli	r4,r4,16
    95ac:	280ad43a 	srli	r5,r5,16
    95b0:	1007d43a 	srai	r3,r2,16
    95b4:	3880000d 	sth	r2,0(r7)
    95b8:	2149c83a 	sub	r4,r4,r5
    95bc:	20c9883a 	add	r4,r4,r3
    95c0:	3900008d 	sth	r4,2(r7)
    95c4:	31800104 	addi	r6,r6,4
    95c8:	39c00104 	addi	r7,r7,4
    95cc:	2013d43a 	srai	r9,r4,16
    95d0:	42ffee36 	bltu	r8,r11,958c <__mdiff+0x80>
    95d4:	33400c2e 	bgeu	r6,r13,9608 <__mdiff+0xfc>
    95d8:	30800017 	ldw	r2,0(r6)
    95dc:	31800104 	addi	r6,r6,4
    95e0:	10ffffcc 	andi	r3,r2,65535
    95e4:	1a47883a 	add	r3,r3,r9
    95e8:	1004d43a 	srli	r2,r2,16
    95ec:	1809d43a 	srai	r4,r3,16
    95f0:	38c0000d 	sth	r3,0(r7)
    95f4:	1105883a 	add	r2,r2,r4
    95f8:	3880008d 	sth	r2,2(r7)
    95fc:	1013d43a 	srai	r9,r2,16
    9600:	39c00104 	addi	r7,r7,4
    9604:	337ff436 	bltu	r6,r13,95d8 <__mdiff+0xcc>
    9608:	38bfff17 	ldw	r2,-4(r7)
    960c:	38ffff04 	addi	r3,r7,-4
    9610:	1000041e 	bne	r2,zero,9624 <__mdiff+0x118>
    9614:	18ffff04 	addi	r3,r3,-4
    9618:	18800017 	ldw	r2,0(r3)
    961c:	52bfffc4 	addi	r10,r10,-1
    9620:	103ffc26 	beq	r2,zero,9614 <__mdiff+0x108>
    9624:	6005883a 	mov	r2,r12
    9628:	62800415 	stw	r10,16(r12)
    962c:	dfc00417 	ldw	ra,16(sp)
    9630:	dcc00317 	ldw	r19,12(sp)
    9634:	dc800217 	ldw	r18,8(sp)
    9638:	dc400117 	ldw	r17,4(sp)
    963c:	dc000017 	ldw	r16,0(sp)
    9640:	dec00504 	addi	sp,sp,20
    9644:	f800283a 	ret
    9648:	9009883a 	mov	r4,r18
    964c:	000b883a 	mov	r5,zero
    9650:	00092d40 	call	92d4 <_Balloc>
    9654:	1019883a 	mov	r12,r2
    9658:	00800044 	movi	r2,1
    965c:	60800415 	stw	r2,16(r12)
    9660:	6005883a 	mov	r2,r12
    9664:	60000515 	stw	zero,20(r12)
    9668:	dfc00417 	ldw	ra,16(sp)
    966c:	dcc00317 	ldw	r19,12(sp)
    9670:	dc800217 	ldw	r18,8(sp)
    9674:	dc400117 	ldw	r17,4(sp)
    9678:	dc000017 	ldw	r16,0(sp)
    967c:	dec00504 	addi	sp,sp,20
    9680:	f800283a 	ret
    9684:	880d883a 	mov	r6,r17
    9688:	04c00044 	movi	r19,1
    968c:	8023883a 	mov	r17,r16
    9690:	3021883a 	mov	r16,r6
    9694:	003fac06 	br	9548 <__mdiff+0x3c>

00009698 <__lshift>:
    9698:	defff904 	addi	sp,sp,-28
    969c:	28800417 	ldw	r2,16(r5)
    96a0:	dc000015 	stw	r16,0(sp)
    96a4:	3021d17a 	srai	r16,r6,5
    96a8:	28c00217 	ldw	r3,8(r5)
    96ac:	10800044 	addi	r2,r2,1
    96b0:	dc400115 	stw	r17,4(sp)
    96b4:	80a3883a 	add	r17,r16,r2
    96b8:	dd400515 	stw	r21,20(sp)
    96bc:	dd000415 	stw	r20,16(sp)
    96c0:	dc800215 	stw	r18,8(sp)
    96c4:	dfc00615 	stw	ra,24(sp)
    96c8:	2825883a 	mov	r18,r5
    96cc:	dcc00315 	stw	r19,12(sp)
    96d0:	3029883a 	mov	r20,r6
    96d4:	202b883a 	mov	r21,r4
    96d8:	29400117 	ldw	r5,4(r5)
    96dc:	1c40030e 	bge	r3,r17,96ec <__lshift+0x54>
    96e0:	18c7883a 	add	r3,r3,r3
    96e4:	29400044 	addi	r5,r5,1
    96e8:	1c7ffd16 	blt	r3,r17,96e0 <__lshift+0x48>
    96ec:	a809883a 	mov	r4,r21
    96f0:	00092d40 	call	92d4 <_Balloc>
    96f4:	1027883a 	mov	r19,r2
    96f8:	11400504 	addi	r5,r2,20
    96fc:	0400090e 	bge	zero,r16,9724 <__lshift+0x8c>
    9700:	2805883a 	mov	r2,r5
    9704:	0007883a 	mov	r3,zero
    9708:	18c00044 	addi	r3,r3,1
    970c:	10000015 	stw	zero,0(r2)
    9710:	10800104 	addi	r2,r2,4
    9714:	80fffc1e 	bne	r16,r3,9708 <__lshift+0x70>
    9718:	8405883a 	add	r2,r16,r16
    971c:	1085883a 	add	r2,r2,r2
    9720:	288b883a 	add	r5,r5,r2
    9724:	90800417 	ldw	r2,16(r18)
    9728:	91000504 	addi	r4,r18,20
    972c:	a18007cc 	andi	r6,r20,31
    9730:	1085883a 	add	r2,r2,r2
    9734:	1085883a 	add	r2,r2,r2
    9738:	208f883a 	add	r7,r4,r2
    973c:	30001e26 	beq	r6,zero,97b8 <__lshift+0x120>
    9740:	00800804 	movi	r2,32
    9744:	1191c83a 	sub	r8,r2,r6
    9748:	0007883a 	mov	r3,zero
    974c:	20800017 	ldw	r2,0(r4)
    9750:	1184983a 	sll	r2,r2,r6
    9754:	1884b03a 	or	r2,r3,r2
    9758:	28800015 	stw	r2,0(r5)
    975c:	20c00017 	ldw	r3,0(r4)
    9760:	21000104 	addi	r4,r4,4
    9764:	29400104 	addi	r5,r5,4
    9768:	1a06d83a 	srl	r3,r3,r8
    976c:	21fff736 	bltu	r4,r7,974c <__lshift+0xb4>
    9770:	28c00015 	stw	r3,0(r5)
    9774:	18000126 	beq	r3,zero,977c <__lshift+0xe4>
    9778:	8c400044 	addi	r17,r17,1
    977c:	88bfffc4 	addi	r2,r17,-1
    9780:	98800415 	stw	r2,16(r19)
    9784:	a809883a 	mov	r4,r21
    9788:	900b883a 	mov	r5,r18
    978c:	0008d540 	call	8d54 <_Bfree>
    9790:	9805883a 	mov	r2,r19
    9794:	dfc00617 	ldw	ra,24(sp)
    9798:	dd400517 	ldw	r21,20(sp)
    979c:	dd000417 	ldw	r20,16(sp)
    97a0:	dcc00317 	ldw	r19,12(sp)
    97a4:	dc800217 	ldw	r18,8(sp)
    97a8:	dc400117 	ldw	r17,4(sp)
    97ac:	dc000017 	ldw	r16,0(sp)
    97b0:	dec00704 	addi	sp,sp,28
    97b4:	f800283a 	ret
    97b8:	20800017 	ldw	r2,0(r4)
    97bc:	21000104 	addi	r4,r4,4
    97c0:	28800015 	stw	r2,0(r5)
    97c4:	29400104 	addi	r5,r5,4
    97c8:	21ffec2e 	bgeu	r4,r7,977c <__lshift+0xe4>
    97cc:	20800017 	ldw	r2,0(r4)
    97d0:	21000104 	addi	r4,r4,4
    97d4:	28800015 	stw	r2,0(r5)
    97d8:	29400104 	addi	r5,r5,4
    97dc:	21fff636 	bltu	r4,r7,97b8 <__lshift+0x120>
    97e0:	003fe606 	br	977c <__lshift+0xe4>

000097e4 <__multiply>:
    97e4:	defff004 	addi	sp,sp,-64
    97e8:	dc800815 	stw	r18,32(sp)
    97ec:	dc400715 	stw	r17,28(sp)
    97f0:	2c800417 	ldw	r18,16(r5)
    97f4:	34400417 	ldw	r17,16(r6)
    97f8:	dcc00915 	stw	r19,36(sp)
    97fc:	dc000615 	stw	r16,24(sp)
    9800:	dfc00f15 	stw	ra,60(sp)
    9804:	df000e15 	stw	fp,56(sp)
    9808:	ddc00d15 	stw	r23,52(sp)
    980c:	dd800c15 	stw	r22,48(sp)
    9810:	dd400b15 	stw	r21,44(sp)
    9814:	dd000a15 	stw	r20,40(sp)
    9818:	2821883a 	mov	r16,r5
    981c:	3027883a 	mov	r19,r6
    9820:	9440040e 	bge	r18,r17,9834 <__multiply+0x50>
    9824:	8825883a 	mov	r18,r17
    9828:	2c400417 	ldw	r17,16(r5)
    982c:	2827883a 	mov	r19,r5
    9830:	3021883a 	mov	r16,r6
    9834:	80800217 	ldw	r2,8(r16)
    9838:	9447883a 	add	r3,r18,r17
    983c:	d8c00415 	stw	r3,16(sp)
    9840:	81400117 	ldw	r5,4(r16)
    9844:	10c0010e 	bge	r2,r3,984c <__multiply+0x68>
    9848:	29400044 	addi	r5,r5,1
    984c:	00092d40 	call	92d4 <_Balloc>
    9850:	d8800515 	stw	r2,20(sp)
    9854:	d9000417 	ldw	r4,16(sp)
    9858:	d8c00517 	ldw	r3,20(sp)
    985c:	2105883a 	add	r2,r4,r4
    9860:	1085883a 	add	r2,r2,r2
    9864:	19000504 	addi	r4,r3,20
    9868:	2085883a 	add	r2,r4,r2
    986c:	d8800315 	stw	r2,12(sp)
    9870:	2080052e 	bgeu	r4,r2,9888 <__multiply+0xa4>
    9874:	2005883a 	mov	r2,r4
    9878:	d8c00317 	ldw	r3,12(sp)
    987c:	10000015 	stw	zero,0(r2)
    9880:	10800104 	addi	r2,r2,4
    9884:	10fffc36 	bltu	r2,r3,9878 <__multiply+0x94>
    9888:	8c45883a 	add	r2,r17,r17
    988c:	9487883a 	add	r3,r18,r18
    9890:	9dc00504 	addi	r23,r19,20
    9894:	1085883a 	add	r2,r2,r2
    9898:	84000504 	addi	r16,r16,20
    989c:	18c7883a 	add	r3,r3,r3
    98a0:	b885883a 	add	r2,r23,r2
    98a4:	dc000015 	stw	r16,0(sp)
    98a8:	d8800215 	stw	r2,8(sp)
    98ac:	80f9883a 	add	fp,r16,r3
    98b0:	b880432e 	bgeu	r23,r2,99c0 <__multiply+0x1dc>
    98b4:	d9000115 	stw	r4,4(sp)
    98b8:	b9000017 	ldw	r4,0(r23)
    98bc:	253fffcc 	andi	r20,r4,65535
    98c0:	a0001a26 	beq	r20,zero,992c <__multiply+0x148>
    98c4:	dcc00017 	ldw	r19,0(sp)
    98c8:	dc800117 	ldw	r18,4(sp)
    98cc:	002b883a 	mov	r21,zero
    98d0:	9c400017 	ldw	r17,0(r19)
    98d4:	94000017 	ldw	r16,0(r18)
    98d8:	a009883a 	mov	r4,r20
    98dc:	897fffcc 	andi	r5,r17,65535
    98e0:	000d0e40 	call	d0e4 <__mulsi3>
    98e4:	880ad43a 	srli	r5,r17,16
    98e8:	80ffffcc 	andi	r3,r16,65535
    98ec:	a8c7883a 	add	r3,r21,r3
    98f0:	a009883a 	mov	r4,r20
    98f4:	10e3883a 	add	r17,r2,r3
    98f8:	8020d43a 	srli	r16,r16,16
    98fc:	000d0e40 	call	d0e4 <__mulsi3>
    9900:	8806d43a 	srli	r3,r17,16
    9904:	1405883a 	add	r2,r2,r16
    9908:	9cc00104 	addi	r19,r19,4
    990c:	1887883a 	add	r3,r3,r2
    9910:	90c0008d 	sth	r3,2(r18)
    9914:	9440000d 	sth	r17,0(r18)
    9918:	182ad43a 	srli	r21,r3,16
    991c:	94800104 	addi	r18,r18,4
    9920:	9f3feb36 	bltu	r19,fp,98d0 <__multiply+0xec>
    9924:	95400015 	stw	r21,0(r18)
    9928:	b9000017 	ldw	r4,0(r23)
    992c:	202ad43a 	srli	r21,r4,16
    9930:	a8001c26 	beq	r21,zero,99a4 <__multiply+0x1c0>
    9934:	d9000117 	ldw	r4,4(sp)
    9938:	dd000017 	ldw	r20,0(sp)
    993c:	002d883a 	mov	r22,zero
    9940:	24c00017 	ldw	r19,0(r4)
    9944:	2025883a 	mov	r18,r4
    9948:	9823883a 	mov	r17,r19
    994c:	a4000017 	ldw	r16,0(r20)
    9950:	a809883a 	mov	r4,r21
    9954:	a5000104 	addi	r20,r20,4
    9958:	817fffcc 	andi	r5,r16,65535
    995c:	000d0e40 	call	d0e4 <__mulsi3>
    9960:	8806d43a 	srli	r3,r17,16
    9964:	800ad43a 	srli	r5,r16,16
    9968:	94c0000d 	sth	r19,0(r18)
    996c:	b0c7883a 	add	r3,r22,r3
    9970:	10e1883a 	add	r16,r2,r3
    9974:	9400008d 	sth	r16,2(r18)
    9978:	a809883a 	mov	r4,r21
    997c:	94800104 	addi	r18,r18,4
    9980:	000d0e40 	call	d0e4 <__mulsi3>
    9984:	94400017 	ldw	r17,0(r18)
    9988:	8020d43a 	srli	r16,r16,16
    998c:	88ffffcc 	andi	r3,r17,65535
    9990:	10c5883a 	add	r2,r2,r3
    9994:	80a7883a 	add	r19,r16,r2
    9998:	982cd43a 	srli	r22,r19,16
    999c:	a73feb36 	bltu	r20,fp,994c <__multiply+0x168>
    99a0:	94c00015 	stw	r19,0(r18)
    99a4:	d8800217 	ldw	r2,8(sp)
    99a8:	bdc00104 	addi	r23,r23,4
    99ac:	b880042e 	bgeu	r23,r2,99c0 <__multiply+0x1dc>
    99b0:	d8c00117 	ldw	r3,4(sp)
    99b4:	18c00104 	addi	r3,r3,4
    99b8:	d8c00115 	stw	r3,4(sp)
    99bc:	003fbe06 	br	98b8 <__multiply+0xd4>
    99c0:	d9000417 	ldw	r4,16(sp)
    99c4:	01000c0e 	bge	zero,r4,99f8 <__multiply+0x214>
    99c8:	d8c00317 	ldw	r3,12(sp)
    99cc:	18bfff17 	ldw	r2,-4(r3)
    99d0:	18ffff04 	addi	r3,r3,-4
    99d4:	10000326 	beq	r2,zero,99e4 <__multiply+0x200>
    99d8:	00000706 	br	99f8 <__multiply+0x214>
    99dc:	18800017 	ldw	r2,0(r3)
    99e0:	1000051e 	bne	r2,zero,99f8 <__multiply+0x214>
    99e4:	d9000417 	ldw	r4,16(sp)
    99e8:	18ffff04 	addi	r3,r3,-4
    99ec:	213fffc4 	addi	r4,r4,-1
    99f0:	d9000415 	stw	r4,16(sp)
    99f4:	203ff91e 	bne	r4,zero,99dc <__multiply+0x1f8>
    99f8:	d8800417 	ldw	r2,16(sp)
    99fc:	d8c00517 	ldw	r3,20(sp)
    9a00:	18800415 	stw	r2,16(r3)
    9a04:	1805883a 	mov	r2,r3
    9a08:	dfc00f17 	ldw	ra,60(sp)
    9a0c:	df000e17 	ldw	fp,56(sp)
    9a10:	ddc00d17 	ldw	r23,52(sp)
    9a14:	dd800c17 	ldw	r22,48(sp)
    9a18:	dd400b17 	ldw	r21,44(sp)
    9a1c:	dd000a17 	ldw	r20,40(sp)
    9a20:	dcc00917 	ldw	r19,36(sp)
    9a24:	dc800817 	ldw	r18,32(sp)
    9a28:	dc400717 	ldw	r17,28(sp)
    9a2c:	dc000617 	ldw	r16,24(sp)
    9a30:	dec01004 	addi	sp,sp,64
    9a34:	f800283a 	ret

00009a38 <__i2b>:
    9a38:	defffd04 	addi	sp,sp,-12
    9a3c:	dc000015 	stw	r16,0(sp)
    9a40:	04000044 	movi	r16,1
    9a44:	dc800115 	stw	r18,4(sp)
    9a48:	2825883a 	mov	r18,r5
    9a4c:	800b883a 	mov	r5,r16
    9a50:	dfc00215 	stw	ra,8(sp)
    9a54:	00092d40 	call	92d4 <_Balloc>
    9a58:	14000415 	stw	r16,16(r2)
    9a5c:	14800515 	stw	r18,20(r2)
    9a60:	dfc00217 	ldw	ra,8(sp)
    9a64:	dc800117 	ldw	r18,4(sp)
    9a68:	dc000017 	ldw	r16,0(sp)
    9a6c:	dec00304 	addi	sp,sp,12
    9a70:	f800283a 	ret

00009a74 <__multadd>:
    9a74:	defff604 	addi	sp,sp,-40
    9a78:	dd800615 	stw	r22,24(sp)
    9a7c:	2d800417 	ldw	r22,16(r5)
    9a80:	df000815 	stw	fp,32(sp)
    9a84:	ddc00715 	stw	r23,28(sp)
    9a88:	dd400515 	stw	r21,20(sp)
    9a8c:	dd000415 	stw	r20,16(sp)
    9a90:	dcc00315 	stw	r19,12(sp)
    9a94:	dc800215 	stw	r18,8(sp)
    9a98:	dfc00915 	stw	ra,36(sp)
    9a9c:	dc400115 	stw	r17,4(sp)
    9aa0:	dc000015 	stw	r16,0(sp)
    9aa4:	282f883a 	mov	r23,r5
    9aa8:	2039883a 	mov	fp,r4
    9aac:	302b883a 	mov	r21,r6
    9ab0:	3829883a 	mov	r20,r7
    9ab4:	2c800504 	addi	r18,r5,20
    9ab8:	0027883a 	mov	r19,zero
    9abc:	94400017 	ldw	r17,0(r18)
    9ac0:	a80b883a 	mov	r5,r21
    9ac4:	9cc00044 	addi	r19,r19,1
    9ac8:	893fffcc 	andi	r4,r17,65535
    9acc:	000d0e40 	call	d0e4 <__mulsi3>
    9ad0:	8808d43a 	srli	r4,r17,16
    9ad4:	1521883a 	add	r16,r2,r20
    9ad8:	a80b883a 	mov	r5,r21
    9adc:	000d0e40 	call	d0e4 <__mulsi3>
    9ae0:	8008d43a 	srli	r4,r16,16
    9ae4:	843fffcc 	andi	r16,r16,65535
    9ae8:	1105883a 	add	r2,r2,r4
    9aec:	1006943a 	slli	r3,r2,16
    9af0:	1028d43a 	srli	r20,r2,16
    9af4:	1c07883a 	add	r3,r3,r16
    9af8:	90c00015 	stw	r3,0(r18)
    9afc:	94800104 	addi	r18,r18,4
    9b00:	9dbfee16 	blt	r19,r22,9abc <__multadd+0x48>
    9b04:	a0000826 	beq	r20,zero,9b28 <__multadd+0xb4>
    9b08:	b8800217 	ldw	r2,8(r23)
    9b0c:	b080130e 	bge	r22,r2,9b5c <__multadd+0xe8>
    9b10:	b585883a 	add	r2,r22,r22
    9b14:	1085883a 	add	r2,r2,r2
    9b18:	15c5883a 	add	r2,r2,r23
    9b1c:	b0c00044 	addi	r3,r22,1
    9b20:	15000515 	stw	r20,20(r2)
    9b24:	b8c00415 	stw	r3,16(r23)
    9b28:	b805883a 	mov	r2,r23
    9b2c:	dfc00917 	ldw	ra,36(sp)
    9b30:	df000817 	ldw	fp,32(sp)
    9b34:	ddc00717 	ldw	r23,28(sp)
    9b38:	dd800617 	ldw	r22,24(sp)
    9b3c:	dd400517 	ldw	r21,20(sp)
    9b40:	dd000417 	ldw	r20,16(sp)
    9b44:	dcc00317 	ldw	r19,12(sp)
    9b48:	dc800217 	ldw	r18,8(sp)
    9b4c:	dc400117 	ldw	r17,4(sp)
    9b50:	dc000017 	ldw	r16,0(sp)
    9b54:	dec00a04 	addi	sp,sp,40
    9b58:	f800283a 	ret
    9b5c:	b9400117 	ldw	r5,4(r23)
    9b60:	e009883a 	mov	r4,fp
    9b64:	29400044 	addi	r5,r5,1
    9b68:	00092d40 	call	92d4 <_Balloc>
    9b6c:	b9800417 	ldw	r6,16(r23)
    9b70:	b9400304 	addi	r5,r23,12
    9b74:	11000304 	addi	r4,r2,12
    9b78:	318d883a 	add	r6,r6,r6
    9b7c:	318d883a 	add	r6,r6,r6
    9b80:	31800204 	addi	r6,r6,8
    9b84:	1023883a 	mov	r17,r2
    9b88:	0008b3c0 	call	8b3c <memcpy>
    9b8c:	b80b883a 	mov	r5,r23
    9b90:	e009883a 	mov	r4,fp
    9b94:	0008d540 	call	8d54 <_Bfree>
    9b98:	882f883a 	mov	r23,r17
    9b9c:	003fdc06 	br	9b10 <__multadd+0x9c>

00009ba0 <__pow5mult>:
    9ba0:	defffa04 	addi	sp,sp,-24
    9ba4:	308000cc 	andi	r2,r6,3
    9ba8:	dd000415 	stw	r20,16(sp)
    9bac:	dcc00315 	stw	r19,12(sp)
    9bb0:	dc000015 	stw	r16,0(sp)
    9bb4:	dfc00515 	stw	ra,20(sp)
    9bb8:	dc800215 	stw	r18,8(sp)
    9bbc:	dc400115 	stw	r17,4(sp)
    9bc0:	3021883a 	mov	r16,r6
    9bc4:	2027883a 	mov	r19,r4
    9bc8:	2829883a 	mov	r20,r5
    9bcc:	10002b1e 	bne	r2,zero,9c7c <__pow5mult+0xdc>
    9bd0:	8025d0ba 	srai	r18,r16,2
    9bd4:	90001b26 	beq	r18,zero,9c44 <__pow5mult+0xa4>
    9bd8:	9c001217 	ldw	r16,72(r19)
    9bdc:	8000081e 	bne	r16,zero,9c00 <__pow5mult+0x60>
    9be0:	00003006 	br	9ca4 <__pow5mult+0x104>
    9be4:	800b883a 	mov	r5,r16
    9be8:	800d883a 	mov	r6,r16
    9bec:	9809883a 	mov	r4,r19
    9bf0:	90001426 	beq	r18,zero,9c44 <__pow5mult+0xa4>
    9bf4:	80800017 	ldw	r2,0(r16)
    9bf8:	10001b26 	beq	r2,zero,9c68 <__pow5mult+0xc8>
    9bfc:	1021883a 	mov	r16,r2
    9c00:	9080004c 	andi	r2,r18,1
    9c04:	1005003a 	cmpeq	r2,r2,zero
    9c08:	9025d07a 	srai	r18,r18,1
    9c0c:	800d883a 	mov	r6,r16
    9c10:	9809883a 	mov	r4,r19
    9c14:	a00b883a 	mov	r5,r20
    9c18:	103ff21e 	bne	r2,zero,9be4 <__pow5mult+0x44>
    9c1c:	00097e40 	call	97e4 <__multiply>
    9c20:	a00b883a 	mov	r5,r20
    9c24:	9809883a 	mov	r4,r19
    9c28:	1023883a 	mov	r17,r2
    9c2c:	0008d540 	call	8d54 <_Bfree>
    9c30:	8829883a 	mov	r20,r17
    9c34:	800b883a 	mov	r5,r16
    9c38:	800d883a 	mov	r6,r16
    9c3c:	9809883a 	mov	r4,r19
    9c40:	903fec1e 	bne	r18,zero,9bf4 <__pow5mult+0x54>
    9c44:	a005883a 	mov	r2,r20
    9c48:	dfc00517 	ldw	ra,20(sp)
    9c4c:	dd000417 	ldw	r20,16(sp)
    9c50:	dcc00317 	ldw	r19,12(sp)
    9c54:	dc800217 	ldw	r18,8(sp)
    9c58:	dc400117 	ldw	r17,4(sp)
    9c5c:	dc000017 	ldw	r16,0(sp)
    9c60:	dec00604 	addi	sp,sp,24
    9c64:	f800283a 	ret
    9c68:	00097e40 	call	97e4 <__multiply>
    9c6c:	80800015 	stw	r2,0(r16)
    9c70:	1021883a 	mov	r16,r2
    9c74:	10000015 	stw	zero,0(r2)
    9c78:	003fe106 	br	9c00 <__pow5mult+0x60>
    9c7c:	1085883a 	add	r2,r2,r2
    9c80:	00c00074 	movhi	r3,1
    9c84:	18fc5f04 	addi	r3,r3,-3716
    9c88:	1085883a 	add	r2,r2,r2
    9c8c:	10c5883a 	add	r2,r2,r3
    9c90:	11bfff17 	ldw	r6,-4(r2)
    9c94:	000f883a 	mov	r7,zero
    9c98:	0009a740 	call	9a74 <__multadd>
    9c9c:	1029883a 	mov	r20,r2
    9ca0:	003fcb06 	br	9bd0 <__pow5mult+0x30>
    9ca4:	9809883a 	mov	r4,r19
    9ca8:	01409c44 	movi	r5,625
    9cac:	0009a380 	call	9a38 <__i2b>
    9cb0:	98801215 	stw	r2,72(r19)
    9cb4:	1021883a 	mov	r16,r2
    9cb8:	10000015 	stw	zero,0(r2)
    9cbc:	003fd006 	br	9c00 <__pow5mult+0x60>

00009cc0 <__s2b>:
    9cc0:	defff904 	addi	sp,sp,-28
    9cc4:	dcc00315 	stw	r19,12(sp)
    9cc8:	dc800215 	stw	r18,8(sp)
    9ccc:	2827883a 	mov	r19,r5
    9cd0:	2025883a 	mov	r18,r4
    9cd4:	01400244 	movi	r5,9
    9cd8:	39000204 	addi	r4,r7,8
    9cdc:	dd000415 	stw	r20,16(sp)
    9ce0:	dc400115 	stw	r17,4(sp)
    9ce4:	dfc00615 	stw	ra,24(sp)
    9ce8:	dd400515 	stw	r21,20(sp)
    9cec:	dc000015 	stw	r16,0(sp)
    9cf0:	3829883a 	mov	r20,r7
    9cf4:	3023883a 	mov	r17,r6
    9cf8:	000d0140 	call	d014 <__divsi3>
    9cfc:	00c00044 	movi	r3,1
    9d00:	1880350e 	bge	r3,r2,9dd8 <__s2b+0x118>
    9d04:	000b883a 	mov	r5,zero
    9d08:	18c7883a 	add	r3,r3,r3
    9d0c:	29400044 	addi	r5,r5,1
    9d10:	18bffd16 	blt	r3,r2,9d08 <__s2b+0x48>
    9d14:	9009883a 	mov	r4,r18
    9d18:	00092d40 	call	92d4 <_Balloc>
    9d1c:	1011883a 	mov	r8,r2
    9d20:	d8800717 	ldw	r2,28(sp)
    9d24:	00c00044 	movi	r3,1
    9d28:	01800244 	movi	r6,9
    9d2c:	40800515 	stw	r2,20(r8)
    9d30:	40c00415 	stw	r3,16(r8)
    9d34:	3440260e 	bge	r6,r17,9dd0 <__s2b+0x110>
    9d38:	3021883a 	mov	r16,r6
    9d3c:	99ab883a 	add	r21,r19,r6
    9d40:	9c05883a 	add	r2,r19,r16
    9d44:	11c00007 	ldb	r7,0(r2)
    9d48:	400b883a 	mov	r5,r8
    9d4c:	9009883a 	mov	r4,r18
    9d50:	39fff404 	addi	r7,r7,-48
    9d54:	01800284 	movi	r6,10
    9d58:	0009a740 	call	9a74 <__multadd>
    9d5c:	84000044 	addi	r16,r16,1
    9d60:	1011883a 	mov	r8,r2
    9d64:	8c3ff61e 	bne	r17,r16,9d40 <__s2b+0x80>
    9d68:	ac45883a 	add	r2,r21,r17
    9d6c:	117ffe04 	addi	r5,r2,-8
    9d70:	880d883a 	mov	r6,r17
    9d74:	35000c0e 	bge	r6,r20,9da8 <__s2b+0xe8>
    9d78:	a185c83a 	sub	r2,r20,r6
    9d7c:	2821883a 	mov	r16,r5
    9d80:	28a3883a 	add	r17,r5,r2
    9d84:	81c00007 	ldb	r7,0(r16)
    9d88:	400b883a 	mov	r5,r8
    9d8c:	9009883a 	mov	r4,r18
    9d90:	39fff404 	addi	r7,r7,-48
    9d94:	01800284 	movi	r6,10
    9d98:	0009a740 	call	9a74 <__multadd>
    9d9c:	84000044 	addi	r16,r16,1
    9da0:	1011883a 	mov	r8,r2
    9da4:	847ff71e 	bne	r16,r17,9d84 <__s2b+0xc4>
    9da8:	4005883a 	mov	r2,r8
    9dac:	dfc00617 	ldw	ra,24(sp)
    9db0:	dd400517 	ldw	r21,20(sp)
    9db4:	dd000417 	ldw	r20,16(sp)
    9db8:	dcc00317 	ldw	r19,12(sp)
    9dbc:	dc800217 	ldw	r18,8(sp)
    9dc0:	dc400117 	ldw	r17,4(sp)
    9dc4:	dc000017 	ldw	r16,0(sp)
    9dc8:	dec00704 	addi	sp,sp,28
    9dcc:	f800283a 	ret
    9dd0:	99400284 	addi	r5,r19,10
    9dd4:	003fe706 	br	9d74 <__s2b+0xb4>
    9dd8:	000b883a 	mov	r5,zero
    9ddc:	003fcd06 	br	9d14 <__s2b+0x54>

00009de0 <putc>:
    9de0:	defffc04 	addi	sp,sp,-16
    9de4:	dc800215 	stw	r18,8(sp)
    9de8:	04800074 	movhi	r18,1
    9dec:	94837004 	addi	r18,r18,3520
    9df0:	90c00017 	ldw	r3,0(r18)
    9df4:	dc400115 	stw	r17,4(sp)
    9df8:	dc000015 	stw	r16,0(sp)
    9dfc:	dfc00315 	stw	ra,12(sp)
    9e00:	2023883a 	mov	r17,r4
    9e04:	2821883a 	mov	r16,r5
    9e08:	18000226 	beq	r3,zero,9e14 <putc+0x34>
    9e0c:	18800e17 	ldw	r2,56(r3)
    9e10:	10001126 	beq	r2,zero,9e58 <putc+0x78>
    9e14:	80800217 	ldw	r2,8(r16)
    9e18:	10ffffc4 	addi	r3,r2,-1
    9e1c:	80c00215 	stw	r3,8(r16)
    9e20:	18001316 	blt	r3,zero,9e70 <putc+0x90>
    9e24:	80800017 	ldw	r2,0(r16)
    9e28:	14400005 	stb	r17,0(r2)
    9e2c:	80c00017 	ldw	r3,0(r16)
    9e30:	18800044 	addi	r2,r3,1
    9e34:	18c00003 	ldbu	r3,0(r3)
    9e38:	80800015 	stw	r2,0(r16)
    9e3c:	1805883a 	mov	r2,r3
    9e40:	dfc00317 	ldw	ra,12(sp)
    9e44:	dc800217 	ldw	r18,8(sp)
    9e48:	dc400117 	ldw	r17,4(sp)
    9e4c:	dc000017 	ldw	r16,0(sp)
    9e50:	dec00404 	addi	sp,sp,16
    9e54:	f800283a 	ret
    9e58:	1809883a 	mov	r4,r3
    9e5c:	0006ed80 	call	6ed8 <__sinit>
    9e60:	80800217 	ldw	r2,8(r16)
    9e64:	10ffffc4 	addi	r3,r2,-1
    9e68:	80c00215 	stw	r3,8(r16)
    9e6c:	183fed0e 	bge	r3,zero,9e24 <putc+0x44>
    9e70:	80800617 	ldw	r2,24(r16)
    9e74:	18800f16 	blt	r3,r2,9eb4 <putc+0xd4>
    9e78:	80800017 	ldw	r2,0(r16)
    9e7c:	14400005 	stb	r17,0(r2)
    9e80:	81000017 	ldw	r4,0(r16)
    9e84:	00800284 	movi	r2,10
    9e88:	20c00003 	ldbu	r3,0(r4)
    9e8c:	18801226 	beq	r3,r2,9ed8 <putc+0xf8>
    9e90:	20800044 	addi	r2,r4,1
    9e94:	80800015 	stw	r2,0(r16)
    9e98:	1805883a 	mov	r2,r3
    9e9c:	dfc00317 	ldw	ra,12(sp)
    9ea0:	dc800217 	ldw	r18,8(sp)
    9ea4:	dc400117 	ldw	r17,4(sp)
    9ea8:	dc000017 	ldw	r16,0(sp)
    9eac:	dec00404 	addi	sp,sp,16
    9eb0:	f800283a 	ret
    9eb4:	91000017 	ldw	r4,0(r18)
    9eb8:	880b883a 	mov	r5,r17
    9ebc:	800d883a 	mov	r6,r16
    9ec0:	dfc00317 	ldw	ra,12(sp)
    9ec4:	dc800217 	ldw	r18,8(sp)
    9ec8:	dc400117 	ldw	r17,4(sp)
    9ecc:	dc000017 	ldw	r16,0(sp)
    9ed0:	dec00404 	addi	sp,sp,16
    9ed4:	000a9181 	jmpi	a918 <__swbuf_r>
    9ed8:	91000017 	ldw	r4,0(r18)
    9edc:	180b883a 	mov	r5,r3
    9ee0:	003ff606 	br	9ebc <putc+0xdc>

00009ee4 <_putc_r>:
    9ee4:	defffc04 	addi	sp,sp,-16
    9ee8:	dc400215 	stw	r17,8(sp)
    9eec:	dc000115 	stw	r16,4(sp)
    9ef0:	dfc00315 	stw	ra,12(sp)
    9ef4:	2021883a 	mov	r16,r4
    9ef8:	2823883a 	mov	r17,r5
    9efc:	20000226 	beq	r4,zero,9f08 <_putc_r+0x24>
    9f00:	20800e17 	ldw	r2,56(r4)
    9f04:	10001026 	beq	r2,zero,9f48 <_putc_r+0x64>
    9f08:	30800217 	ldw	r2,8(r6)
    9f0c:	10ffffc4 	addi	r3,r2,-1
    9f10:	30c00215 	stw	r3,8(r6)
    9f14:	18001316 	blt	r3,zero,9f64 <_putc_r+0x80>
    9f18:	30800017 	ldw	r2,0(r6)
    9f1c:	14400005 	stb	r17,0(r2)
    9f20:	30c00017 	ldw	r3,0(r6)
    9f24:	18800044 	addi	r2,r3,1
    9f28:	18c00003 	ldbu	r3,0(r3)
    9f2c:	30800015 	stw	r2,0(r6)
    9f30:	1805883a 	mov	r2,r3
    9f34:	dfc00317 	ldw	ra,12(sp)
    9f38:	dc400217 	ldw	r17,8(sp)
    9f3c:	dc000117 	ldw	r16,4(sp)
    9f40:	dec00404 	addi	sp,sp,16
    9f44:	f800283a 	ret
    9f48:	d9800015 	stw	r6,0(sp)
    9f4c:	0006ed80 	call	6ed8 <__sinit>
    9f50:	d9800017 	ldw	r6,0(sp)
    9f54:	30800217 	ldw	r2,8(r6)
    9f58:	10ffffc4 	addi	r3,r2,-1
    9f5c:	30c00215 	stw	r3,8(r6)
    9f60:	183fed0e 	bge	r3,zero,9f18 <_putc_r+0x34>
    9f64:	30800617 	ldw	r2,24(r6)
    9f68:	18800e16 	blt	r3,r2,9fa4 <_putc_r+0xc0>
    9f6c:	30800017 	ldw	r2,0(r6)
    9f70:	14400005 	stb	r17,0(r2)
    9f74:	31000017 	ldw	r4,0(r6)
    9f78:	00800284 	movi	r2,10
    9f7c:	20c00003 	ldbu	r3,0(r4)
    9f80:	18800f26 	beq	r3,r2,9fc0 <_putc_r+0xdc>
    9f84:	20800044 	addi	r2,r4,1
    9f88:	30800015 	stw	r2,0(r6)
    9f8c:	1805883a 	mov	r2,r3
    9f90:	dfc00317 	ldw	ra,12(sp)
    9f94:	dc400217 	ldw	r17,8(sp)
    9f98:	dc000117 	ldw	r16,4(sp)
    9f9c:	dec00404 	addi	sp,sp,16
    9fa0:	f800283a 	ret
    9fa4:	8009883a 	mov	r4,r16
    9fa8:	880b883a 	mov	r5,r17
    9fac:	dfc00317 	ldw	ra,12(sp)
    9fb0:	dc400217 	ldw	r17,8(sp)
    9fb4:	dc000117 	ldw	r16,4(sp)
    9fb8:	dec00404 	addi	sp,sp,16
    9fbc:	000a9181 	jmpi	a918 <__swbuf_r>
    9fc0:	8009883a 	mov	r4,r16
    9fc4:	180b883a 	mov	r5,r3
    9fc8:	003ff806 	br	9fac <_putc_r+0xc8>

00009fcc <_realloc_r>:
    9fcc:	defff404 	addi	sp,sp,-48
    9fd0:	dd800815 	stw	r22,32(sp)
    9fd4:	dc800415 	stw	r18,16(sp)
    9fd8:	dc400315 	stw	r17,12(sp)
    9fdc:	dfc00b15 	stw	ra,44(sp)
    9fe0:	df000a15 	stw	fp,40(sp)
    9fe4:	ddc00915 	stw	r23,36(sp)
    9fe8:	dd400715 	stw	r21,28(sp)
    9fec:	dd000615 	stw	r20,24(sp)
    9ff0:	dcc00515 	stw	r19,20(sp)
    9ff4:	dc000215 	stw	r16,8(sp)
    9ff8:	2825883a 	mov	r18,r5
    9ffc:	3023883a 	mov	r17,r6
    a000:	202d883a 	mov	r22,r4
    a004:	2800c926 	beq	r5,zero,a32c <_realloc_r+0x360>
    a008:	000db200 	call	db20 <__malloc_lock>
    a00c:	943ffe04 	addi	r16,r18,-8
    a010:	88c002c4 	addi	r3,r17,11
    a014:	00800584 	movi	r2,22
    a018:	82000117 	ldw	r8,4(r16)
    a01c:	10c01b2e 	bgeu	r2,r3,a08c <_realloc_r+0xc0>
    a020:	00bffe04 	movi	r2,-8
    a024:	188e703a 	and	r7,r3,r2
    a028:	3839883a 	mov	fp,r7
    a02c:	38001a16 	blt	r7,zero,a098 <_realloc_r+0xcc>
    a030:	e4401936 	bltu	fp,r17,a098 <_realloc_r+0xcc>
    a034:	013fff04 	movi	r4,-4
    a038:	4126703a 	and	r19,r8,r4
    a03c:	99c02616 	blt	r19,r7,a0d8 <_realloc_r+0x10c>
    a040:	802b883a 	mov	r21,r16
    a044:	9829883a 	mov	r20,r19
    a048:	84000204 	addi	r16,r16,8
    a04c:	a80f883a 	mov	r7,r21
    a050:	a70dc83a 	sub	r6,r20,fp
    a054:	008003c4 	movi	r2,15
    a058:	1180c136 	bltu	r2,r6,a360 <_realloc_r+0x394>
    a05c:	38800117 	ldw	r2,4(r7)
    a060:	a549883a 	add	r4,r20,r21
    a064:	1080004c 	andi	r2,r2,1
    a068:	a084b03a 	or	r2,r20,r2
    a06c:	38800115 	stw	r2,4(r7)
    a070:	20c00117 	ldw	r3,4(r4)
    a074:	18c00054 	ori	r3,r3,1
    a078:	20c00115 	stw	r3,4(r4)
    a07c:	b009883a 	mov	r4,r22
    a080:	000db240 	call	db24 <__malloc_unlock>
    a084:	8023883a 	mov	r17,r16
    a088:	00000606 	br	a0a4 <_realloc_r+0xd8>
    a08c:	01c00404 	movi	r7,16
    a090:	3839883a 	mov	fp,r7
    a094:	e47fe72e 	bgeu	fp,r17,a034 <_realloc_r+0x68>
    a098:	00800304 	movi	r2,12
    a09c:	0023883a 	mov	r17,zero
    a0a0:	b0800015 	stw	r2,0(r22)
    a0a4:	8805883a 	mov	r2,r17
    a0a8:	dfc00b17 	ldw	ra,44(sp)
    a0ac:	df000a17 	ldw	fp,40(sp)
    a0b0:	ddc00917 	ldw	r23,36(sp)
    a0b4:	dd800817 	ldw	r22,32(sp)
    a0b8:	dd400717 	ldw	r21,28(sp)
    a0bc:	dd000617 	ldw	r20,24(sp)
    a0c0:	dcc00517 	ldw	r19,20(sp)
    a0c4:	dc800417 	ldw	r18,16(sp)
    a0c8:	dc400317 	ldw	r17,12(sp)
    a0cc:	dc000217 	ldw	r16,8(sp)
    a0d0:	dec00c04 	addi	sp,sp,48
    a0d4:	f800283a 	ret
    a0d8:	00800074 	movhi	r2,1
    a0dc:	10bcbb04 	addi	r2,r2,-3348
    a0e0:	12400217 	ldw	r9,8(r2)
    a0e4:	84cd883a 	add	r6,r16,r19
    a0e8:	802b883a 	mov	r21,r16
    a0ec:	3240b926 	beq	r6,r9,a3d4 <_realloc_r+0x408>
    a0f0:	31400117 	ldw	r5,4(r6)
    a0f4:	00bfff84 	movi	r2,-2
    a0f8:	2884703a 	and	r2,r5,r2
    a0fc:	1185883a 	add	r2,r2,r6
    a100:	10c00117 	ldw	r3,4(r2)
    a104:	18c0004c 	andi	r3,r3,1
    a108:	1807003a 	cmpeq	r3,r3,zero
    a10c:	1800a326 	beq	r3,zero,a39c <_realloc_r+0x3d0>
    a110:	2908703a 	and	r4,r5,r4
    a114:	9929883a 	add	r20,r19,r4
    a118:	a1c0a30e 	bge	r20,r7,a3a8 <_realloc_r+0x3dc>
    a11c:	4080004c 	andi	r2,r8,1
    a120:	1000551e 	bne	r2,zero,a278 <_realloc_r+0x2ac>
    a124:	80800017 	ldw	r2,0(r16)
    a128:	80afc83a 	sub	r23,r16,r2
    a12c:	b8c00117 	ldw	r3,4(r23)
    a130:	00bfff04 	movi	r2,-4
    a134:	1884703a 	and	r2,r3,r2
    a138:	30002e26 	beq	r6,zero,a1f4 <_realloc_r+0x228>
    a13c:	3240b926 	beq	r6,r9,a424 <_realloc_r+0x458>
    a140:	98a9883a 	add	r20,r19,r2
    a144:	2509883a 	add	r4,r4,r20
    a148:	d9000015 	stw	r4,0(sp)
    a14c:	21c02a16 	blt	r4,r7,a1f8 <_realloc_r+0x22c>
    a150:	30800317 	ldw	r2,12(r6)
    a154:	30c00217 	ldw	r3,8(r6)
    a158:	01400904 	movi	r5,36
    a15c:	99bfff04 	addi	r6,r19,-4
    a160:	18800315 	stw	r2,12(r3)
    a164:	10c00215 	stw	r3,8(r2)
    a168:	b9000317 	ldw	r4,12(r23)
    a16c:	b8800217 	ldw	r2,8(r23)
    a170:	b82b883a 	mov	r21,r23
    a174:	bc000204 	addi	r16,r23,8
    a178:	20800215 	stw	r2,8(r4)
    a17c:	11000315 	stw	r4,12(r2)
    a180:	2980e436 	bltu	r5,r6,a514 <_realloc_r+0x548>
    a184:	008004c4 	movi	r2,19
    a188:	9009883a 	mov	r4,r18
    a18c:	8011883a 	mov	r8,r16
    a190:	11800f2e 	bgeu	r2,r6,a1d0 <_realloc_r+0x204>
    a194:	90800017 	ldw	r2,0(r18)
    a198:	ba000404 	addi	r8,r23,16
    a19c:	91000204 	addi	r4,r18,8
    a1a0:	b8800215 	stw	r2,8(r23)
    a1a4:	90c00117 	ldw	r3,4(r18)
    a1a8:	008006c4 	movi	r2,27
    a1ac:	b8c00315 	stw	r3,12(r23)
    a1b0:	1180072e 	bgeu	r2,r6,a1d0 <_realloc_r+0x204>
    a1b4:	90c00217 	ldw	r3,8(r18)
    a1b8:	ba000604 	addi	r8,r23,24
    a1bc:	91000404 	addi	r4,r18,16
    a1c0:	b8c00415 	stw	r3,16(r23)
    a1c4:	90800317 	ldw	r2,12(r18)
    a1c8:	b8800515 	stw	r2,20(r23)
    a1cc:	3140e726 	beq	r6,r5,a56c <_realloc_r+0x5a0>
    a1d0:	20800017 	ldw	r2,0(r4)
    a1d4:	dd000017 	ldw	r20,0(sp)
    a1d8:	b80f883a 	mov	r7,r23
    a1dc:	40800015 	stw	r2,0(r8)
    a1e0:	20c00117 	ldw	r3,4(r4)
    a1e4:	40c00115 	stw	r3,4(r8)
    a1e8:	20800217 	ldw	r2,8(r4)
    a1ec:	40800215 	stw	r2,8(r8)
    a1f0:	003f9706 	br	a050 <_realloc_r+0x84>
    a1f4:	98a9883a 	add	r20,r19,r2
    a1f8:	a1c01f16 	blt	r20,r7,a278 <_realloc_r+0x2ac>
    a1fc:	b8c00317 	ldw	r3,12(r23)
    a200:	b8800217 	ldw	r2,8(r23)
    a204:	99bfff04 	addi	r6,r19,-4
    a208:	01400904 	movi	r5,36
    a20c:	b82b883a 	mov	r21,r23
    a210:	18800215 	stw	r2,8(r3)
    a214:	10c00315 	stw	r3,12(r2)
    a218:	bc000204 	addi	r16,r23,8
    a21c:	2980c336 	bltu	r5,r6,a52c <_realloc_r+0x560>
    a220:	008004c4 	movi	r2,19
    a224:	9009883a 	mov	r4,r18
    a228:	8011883a 	mov	r8,r16
    a22c:	11800f2e 	bgeu	r2,r6,a26c <_realloc_r+0x2a0>
    a230:	90800017 	ldw	r2,0(r18)
    a234:	ba000404 	addi	r8,r23,16
    a238:	91000204 	addi	r4,r18,8
    a23c:	b8800215 	stw	r2,8(r23)
    a240:	90c00117 	ldw	r3,4(r18)
    a244:	008006c4 	movi	r2,27
    a248:	b8c00315 	stw	r3,12(r23)
    a24c:	1180072e 	bgeu	r2,r6,a26c <_realloc_r+0x2a0>
    a250:	90c00217 	ldw	r3,8(r18)
    a254:	ba000604 	addi	r8,r23,24
    a258:	91000404 	addi	r4,r18,16
    a25c:	b8c00415 	stw	r3,16(r23)
    a260:	90800317 	ldw	r2,12(r18)
    a264:	b8800515 	stw	r2,20(r23)
    a268:	3140c726 	beq	r6,r5,a588 <_realloc_r+0x5bc>
    a26c:	20800017 	ldw	r2,0(r4)
    a270:	b80f883a 	mov	r7,r23
    a274:	003fd906 	br	a1dc <_realloc_r+0x210>
    a278:	880b883a 	mov	r5,r17
    a27c:	b009883a 	mov	r4,r22
    a280:	0000b700 	call	b70 <_malloc_r>
    a284:	1023883a 	mov	r17,r2
    a288:	10002526 	beq	r2,zero,a320 <_realloc_r+0x354>
    a28c:	80800117 	ldw	r2,4(r16)
    a290:	00ffff84 	movi	r3,-2
    a294:	893ffe04 	addi	r4,r17,-8
    a298:	10c4703a 	and	r2,r2,r3
    a29c:	8085883a 	add	r2,r16,r2
    a2a0:	20809526 	beq	r4,r2,a4f8 <_realloc_r+0x52c>
    a2a4:	99bfff04 	addi	r6,r19,-4
    a2a8:	01c00904 	movi	r7,36
    a2ac:	39804536 	bltu	r7,r6,a3c4 <_realloc_r+0x3f8>
    a2b0:	008004c4 	movi	r2,19
    a2b4:	9009883a 	mov	r4,r18
    a2b8:	880b883a 	mov	r5,r17
    a2bc:	11800f2e 	bgeu	r2,r6,a2fc <_realloc_r+0x330>
    a2c0:	90800017 	ldw	r2,0(r18)
    a2c4:	89400204 	addi	r5,r17,8
    a2c8:	91000204 	addi	r4,r18,8
    a2cc:	88800015 	stw	r2,0(r17)
    a2d0:	90c00117 	ldw	r3,4(r18)
    a2d4:	008006c4 	movi	r2,27
    a2d8:	88c00115 	stw	r3,4(r17)
    a2dc:	1180072e 	bgeu	r2,r6,a2fc <_realloc_r+0x330>
    a2e0:	90c00217 	ldw	r3,8(r18)
    a2e4:	89400404 	addi	r5,r17,16
    a2e8:	91000404 	addi	r4,r18,16
    a2ec:	88c00215 	stw	r3,8(r17)
    a2f0:	90800317 	ldw	r2,12(r18)
    a2f4:	88800315 	stw	r2,12(r17)
    a2f8:	31c09126 	beq	r6,r7,a540 <_realloc_r+0x574>
    a2fc:	20800017 	ldw	r2,0(r4)
    a300:	28800015 	stw	r2,0(r5)
    a304:	20c00117 	ldw	r3,4(r4)
    a308:	28c00115 	stw	r3,4(r5)
    a30c:	20800217 	ldw	r2,8(r4)
    a310:	28800215 	stw	r2,8(r5)
    a314:	900b883a 	mov	r5,r18
    a318:	b009883a 	mov	r4,r22
    a31c:	00072900 	call	7290 <_free_r>
    a320:	b009883a 	mov	r4,r22
    a324:	000db240 	call	db24 <__malloc_unlock>
    a328:	003f5e06 	br	a0a4 <_realloc_r+0xd8>
    a32c:	300b883a 	mov	r5,r6
    a330:	dfc00b17 	ldw	ra,44(sp)
    a334:	df000a17 	ldw	fp,40(sp)
    a338:	ddc00917 	ldw	r23,36(sp)
    a33c:	dd800817 	ldw	r22,32(sp)
    a340:	dd400717 	ldw	r21,28(sp)
    a344:	dd000617 	ldw	r20,24(sp)
    a348:	dcc00517 	ldw	r19,20(sp)
    a34c:	dc800417 	ldw	r18,16(sp)
    a350:	dc400317 	ldw	r17,12(sp)
    a354:	dc000217 	ldw	r16,8(sp)
    a358:	dec00c04 	addi	sp,sp,48
    a35c:	0000b701 	jmpi	b70 <_malloc_r>
    a360:	38800117 	ldw	r2,4(r7)
    a364:	e54b883a 	add	r5,fp,r21
    a368:	31000054 	ori	r4,r6,1
    a36c:	1080004c 	andi	r2,r2,1
    a370:	1704b03a 	or	r2,r2,fp
    a374:	38800115 	stw	r2,4(r7)
    a378:	29000115 	stw	r4,4(r5)
    a37c:	2987883a 	add	r3,r5,r6
    a380:	18800117 	ldw	r2,4(r3)
    a384:	29400204 	addi	r5,r5,8
    a388:	b009883a 	mov	r4,r22
    a38c:	10800054 	ori	r2,r2,1
    a390:	18800115 	stw	r2,4(r3)
    a394:	00072900 	call	7290 <_free_r>
    a398:	003f3806 	br	a07c <_realloc_r+0xb0>
    a39c:	000d883a 	mov	r6,zero
    a3a0:	0009883a 	mov	r4,zero
    a3a4:	003f5d06 	br	a11c <_realloc_r+0x150>
    a3a8:	30c00217 	ldw	r3,8(r6)
    a3ac:	30800317 	ldw	r2,12(r6)
    a3b0:	800f883a 	mov	r7,r16
    a3b4:	84000204 	addi	r16,r16,8
    a3b8:	10c00215 	stw	r3,8(r2)
    a3bc:	18800315 	stw	r2,12(r3)
    a3c0:	003f2306 	br	a050 <_realloc_r+0x84>
    a3c4:	8809883a 	mov	r4,r17
    a3c8:	900b883a 	mov	r5,r18
    a3cc:	0008bdc0 	call	8bdc <memmove>
    a3d0:	003fd006 	br	a314 <_realloc_r+0x348>
    a3d4:	30800117 	ldw	r2,4(r6)
    a3d8:	e0c00404 	addi	r3,fp,16
    a3dc:	1108703a 	and	r4,r2,r4
    a3e0:	9905883a 	add	r2,r19,r4
    a3e4:	10ff4d16 	blt	r2,r3,a11c <_realloc_r+0x150>
    a3e8:	1705c83a 	sub	r2,r2,fp
    a3ec:	870b883a 	add	r5,r16,fp
    a3f0:	10800054 	ori	r2,r2,1
    a3f4:	28800115 	stw	r2,4(r5)
    a3f8:	80c00117 	ldw	r3,4(r16)
    a3fc:	00800074 	movhi	r2,1
    a400:	10bcbb04 	addi	r2,r2,-3348
    a404:	b009883a 	mov	r4,r22
    a408:	18c0004c 	andi	r3,r3,1
    a40c:	e0c6b03a 	or	r3,fp,r3
    a410:	11400215 	stw	r5,8(r2)
    a414:	80c00115 	stw	r3,4(r16)
    a418:	000db240 	call	db24 <__malloc_unlock>
    a41c:	84400204 	addi	r17,r16,8
    a420:	003f2006 	br	a0a4 <_realloc_r+0xd8>
    a424:	98a9883a 	add	r20,r19,r2
    a428:	2509883a 	add	r4,r4,r20
    a42c:	e0800404 	addi	r2,fp,16
    a430:	d9000115 	stw	r4,4(sp)
    a434:	20bf7016 	blt	r4,r2,a1f8 <_realloc_r+0x22c>
    a438:	b8c00317 	ldw	r3,12(r23)
    a43c:	b8800217 	ldw	r2,8(r23)
    a440:	99bfff04 	addi	r6,r19,-4
    a444:	01400904 	movi	r5,36
    a448:	18800215 	stw	r2,8(r3)
    a44c:	10c00315 	stw	r3,12(r2)
    a450:	bc400204 	addi	r17,r23,8
    a454:	29804136 	bltu	r5,r6,a55c <_realloc_r+0x590>
    a458:	008004c4 	movi	r2,19
    a45c:	9009883a 	mov	r4,r18
    a460:	880f883a 	mov	r7,r17
    a464:	11800f2e 	bgeu	r2,r6,a4a4 <_realloc_r+0x4d8>
    a468:	90800017 	ldw	r2,0(r18)
    a46c:	b9c00404 	addi	r7,r23,16
    a470:	91000204 	addi	r4,r18,8
    a474:	b8800215 	stw	r2,8(r23)
    a478:	90c00117 	ldw	r3,4(r18)
    a47c:	008006c4 	movi	r2,27
    a480:	b8c00315 	stw	r3,12(r23)
    a484:	1180072e 	bgeu	r2,r6,a4a4 <_realloc_r+0x4d8>
    a488:	90c00217 	ldw	r3,8(r18)
    a48c:	b9c00604 	addi	r7,r23,24
    a490:	91000404 	addi	r4,r18,16
    a494:	b8c00415 	stw	r3,16(r23)
    a498:	90800317 	ldw	r2,12(r18)
    a49c:	b8800515 	stw	r2,20(r23)
    a4a0:	31404026 	beq	r6,r5,a5a4 <_realloc_r+0x5d8>
    a4a4:	20800017 	ldw	r2,0(r4)
    a4a8:	38800015 	stw	r2,0(r7)
    a4ac:	20c00117 	ldw	r3,4(r4)
    a4b0:	38c00115 	stw	r3,4(r7)
    a4b4:	20800217 	ldw	r2,8(r4)
    a4b8:	38800215 	stw	r2,8(r7)
    a4bc:	d8c00117 	ldw	r3,4(sp)
    a4c0:	bf0b883a 	add	r5,r23,fp
    a4c4:	b009883a 	mov	r4,r22
    a4c8:	1f05c83a 	sub	r2,r3,fp
    a4cc:	10800054 	ori	r2,r2,1
    a4d0:	28800115 	stw	r2,4(r5)
    a4d4:	b8c00117 	ldw	r3,4(r23)
    a4d8:	00800074 	movhi	r2,1
    a4dc:	10bcbb04 	addi	r2,r2,-3348
    a4e0:	11400215 	stw	r5,8(r2)
    a4e4:	18c0004c 	andi	r3,r3,1
    a4e8:	e0c6b03a 	or	r3,fp,r3
    a4ec:	b8c00115 	stw	r3,4(r23)
    a4f0:	000db240 	call	db24 <__malloc_unlock>
    a4f4:	003eeb06 	br	a0a4 <_realloc_r+0xd8>
    a4f8:	20800117 	ldw	r2,4(r4)
    a4fc:	00ffff04 	movi	r3,-4
    a500:	800f883a 	mov	r7,r16
    a504:	10c4703a 	and	r2,r2,r3
    a508:	98a9883a 	add	r20,r19,r2
    a50c:	84000204 	addi	r16,r16,8
    a510:	003ecf06 	br	a050 <_realloc_r+0x84>
    a514:	900b883a 	mov	r5,r18
    a518:	8009883a 	mov	r4,r16
    a51c:	0008bdc0 	call	8bdc <memmove>
    a520:	dd000017 	ldw	r20,0(sp)
    a524:	b80f883a 	mov	r7,r23
    a528:	003ec906 	br	a050 <_realloc_r+0x84>
    a52c:	900b883a 	mov	r5,r18
    a530:	8009883a 	mov	r4,r16
    a534:	0008bdc0 	call	8bdc <memmove>
    a538:	b80f883a 	mov	r7,r23
    a53c:	003ec406 	br	a050 <_realloc_r+0x84>
    a540:	90c00417 	ldw	r3,16(r18)
    a544:	89400604 	addi	r5,r17,24
    a548:	91000604 	addi	r4,r18,24
    a54c:	88c00415 	stw	r3,16(r17)
    a550:	90800517 	ldw	r2,20(r18)
    a554:	88800515 	stw	r2,20(r17)
    a558:	003f6806 	br	a2fc <_realloc_r+0x330>
    a55c:	900b883a 	mov	r5,r18
    a560:	8809883a 	mov	r4,r17
    a564:	0008bdc0 	call	8bdc <memmove>
    a568:	003fd406 	br	a4bc <_realloc_r+0x4f0>
    a56c:	90c00417 	ldw	r3,16(r18)
    a570:	91000604 	addi	r4,r18,24
    a574:	ba000804 	addi	r8,r23,32
    a578:	b8c00615 	stw	r3,24(r23)
    a57c:	90800517 	ldw	r2,20(r18)
    a580:	b8800715 	stw	r2,28(r23)
    a584:	003f1206 	br	a1d0 <_realloc_r+0x204>
    a588:	90c00417 	ldw	r3,16(r18)
    a58c:	91000604 	addi	r4,r18,24
    a590:	ba000804 	addi	r8,r23,32
    a594:	b8c00615 	stw	r3,24(r23)
    a598:	90800517 	ldw	r2,20(r18)
    a59c:	b8800715 	stw	r2,28(r23)
    a5a0:	003f3206 	br	a26c <_realloc_r+0x2a0>
    a5a4:	90c00417 	ldw	r3,16(r18)
    a5a8:	91000604 	addi	r4,r18,24
    a5ac:	b9c00804 	addi	r7,r23,32
    a5b0:	b8c00615 	stw	r3,24(r23)
    a5b4:	90800517 	ldw	r2,20(r18)
    a5b8:	b8800715 	stw	r2,28(r23)
    a5bc:	003fb906 	br	a4a4 <_realloc_r+0x4d8>

0000a5c0 <__isinfd>:
    a5c0:	200d883a 	mov	r6,r4
    a5c4:	0109c83a 	sub	r4,zero,r4
    a5c8:	2188b03a 	or	r4,r4,r6
    a5cc:	2008d7fa 	srli	r4,r4,31
    a5d0:	00a00034 	movhi	r2,32768
    a5d4:	10bfffc4 	addi	r2,r2,-1
    a5d8:	1144703a 	and	r2,r2,r5
    a5dc:	2088b03a 	or	r4,r4,r2
    a5e0:	009ffc34 	movhi	r2,32752
    a5e4:	1105c83a 	sub	r2,r2,r4
    a5e8:	0087c83a 	sub	r3,zero,r2
    a5ec:	10c4b03a 	or	r2,r2,r3
    a5f0:	1004d7fa 	srli	r2,r2,31
    a5f4:	00c00044 	movi	r3,1
    a5f8:	1885c83a 	sub	r2,r3,r2
    a5fc:	f800283a 	ret

0000a600 <__isnand>:
    a600:	200d883a 	mov	r6,r4
    a604:	0109c83a 	sub	r4,zero,r4
    a608:	2188b03a 	or	r4,r4,r6
    a60c:	2008d7fa 	srli	r4,r4,31
    a610:	00a00034 	movhi	r2,32768
    a614:	10bfffc4 	addi	r2,r2,-1
    a618:	1144703a 	and	r2,r2,r5
    a61c:	2088b03a 	or	r4,r4,r2
    a620:	009ffc34 	movhi	r2,32752
    a624:	1105c83a 	sub	r2,r2,r4
    a628:	1004d7fa 	srli	r2,r2,31
    a62c:	f800283a 	ret

0000a630 <__sclose>:
    a630:	2940038f 	ldh	r5,14(r5)
    a634:	000aba41 	jmpi	aba4 <_close_r>

0000a638 <__sseek>:
    a638:	defffe04 	addi	sp,sp,-8
    a63c:	dc000015 	stw	r16,0(sp)
    a640:	2821883a 	mov	r16,r5
    a644:	2940038f 	ldh	r5,14(r5)
    a648:	dfc00115 	stw	ra,4(sp)
    a64c:	000ae1c0 	call	ae1c <_lseek_r>
    a650:	1007883a 	mov	r3,r2
    a654:	00bfffc4 	movi	r2,-1
    a658:	18800926 	beq	r3,r2,a680 <__sseek+0x48>
    a65c:	8080030b 	ldhu	r2,12(r16)
    a660:	80c01415 	stw	r3,80(r16)
    a664:	10840014 	ori	r2,r2,4096
    a668:	8080030d 	sth	r2,12(r16)
    a66c:	1805883a 	mov	r2,r3
    a670:	dfc00117 	ldw	ra,4(sp)
    a674:	dc000017 	ldw	r16,0(sp)
    a678:	dec00204 	addi	sp,sp,8
    a67c:	f800283a 	ret
    a680:	8080030b 	ldhu	r2,12(r16)
    a684:	10bbffcc 	andi	r2,r2,61439
    a688:	8080030d 	sth	r2,12(r16)
    a68c:	1805883a 	mov	r2,r3
    a690:	dfc00117 	ldw	ra,4(sp)
    a694:	dc000017 	ldw	r16,0(sp)
    a698:	dec00204 	addi	sp,sp,8
    a69c:	f800283a 	ret

0000a6a0 <__swrite>:
    a6a0:	2880030b 	ldhu	r2,12(r5)
    a6a4:	defffb04 	addi	sp,sp,-20
    a6a8:	dcc00315 	stw	r19,12(sp)
    a6ac:	1080400c 	andi	r2,r2,256
    a6b0:	dc800215 	stw	r18,8(sp)
    a6b4:	dc400115 	stw	r17,4(sp)
    a6b8:	dc000015 	stw	r16,0(sp)
    a6bc:	3027883a 	mov	r19,r6
    a6c0:	3825883a 	mov	r18,r7
    a6c4:	dfc00415 	stw	ra,16(sp)
    a6c8:	2821883a 	mov	r16,r5
    a6cc:	000d883a 	mov	r6,zero
    a6d0:	01c00084 	movi	r7,2
    a6d4:	2023883a 	mov	r17,r4
    a6d8:	10000226 	beq	r2,zero,a6e4 <__swrite+0x44>
    a6dc:	2940038f 	ldh	r5,14(r5)
    a6e0:	000ae1c0 	call	ae1c <_lseek_r>
    a6e4:	8080030b 	ldhu	r2,12(r16)
    a6e8:	8140038f 	ldh	r5,14(r16)
    a6ec:	8809883a 	mov	r4,r17
    a6f0:	10bbffcc 	andi	r2,r2,61439
    a6f4:	980d883a 	mov	r6,r19
    a6f8:	900f883a 	mov	r7,r18
    a6fc:	8080030d 	sth	r2,12(r16)
    a700:	dfc00417 	ldw	ra,16(sp)
    a704:	dcc00317 	ldw	r19,12(sp)
    a708:	dc800217 	ldw	r18,8(sp)
    a70c:	dc400117 	ldw	r17,4(sp)
    a710:	dc000017 	ldw	r16,0(sp)
    a714:	dec00504 	addi	sp,sp,20
    a718:	000aa641 	jmpi	aa64 <_write_r>

0000a71c <__sread>:
    a71c:	defffe04 	addi	sp,sp,-8
    a720:	dc000015 	stw	r16,0(sp)
    a724:	2821883a 	mov	r16,r5
    a728:	2940038f 	ldh	r5,14(r5)
    a72c:	dfc00115 	stw	ra,4(sp)
    a730:	000ae940 	call	ae94 <_read_r>
    a734:	1007883a 	mov	r3,r2
    a738:	10000816 	blt	r2,zero,a75c <__sread+0x40>
    a73c:	80801417 	ldw	r2,80(r16)
    a740:	10c5883a 	add	r2,r2,r3
    a744:	80801415 	stw	r2,80(r16)
    a748:	1805883a 	mov	r2,r3
    a74c:	dfc00117 	ldw	ra,4(sp)
    a750:	dc000017 	ldw	r16,0(sp)
    a754:	dec00204 	addi	sp,sp,8
    a758:	f800283a 	ret
    a75c:	8080030b 	ldhu	r2,12(r16)
    a760:	10bbffcc 	andi	r2,r2,61439
    a764:	8080030d 	sth	r2,12(r16)
    a768:	1805883a 	mov	r2,r3
    a76c:	dfc00117 	ldw	ra,4(sp)
    a770:	dc000017 	ldw	r16,0(sp)
    a774:	dec00204 	addi	sp,sp,8
    a778:	f800283a 	ret

0000a77c <strchr>:
    a77c:	208000cc 	andi	r2,r4,3
    a780:	2007883a 	mov	r3,r4
    a784:	1000311e 	bne	r2,zero,a84c <strchr+0xd0>
    a788:	29c03fcc 	andi	r7,r5,255
    a78c:	0015883a 	mov	r10,zero
    a790:	0007883a 	mov	r3,zero
    a794:	01400104 	movi	r5,4
    a798:	5004923a 	slli	r2,r10,8
    a79c:	18c00044 	addi	r3,r3,1
    a7a0:	3894b03a 	or	r10,r7,r2
    a7a4:	197ffc1e 	bne	r3,r5,a798 <strchr+0x1c>
    a7a8:	200d883a 	mov	r6,r4
    a7ac:	21000017 	ldw	r4,0(r4)
    a7b0:	017fbff4 	movhi	r5,65279
    a7b4:	297fbfc4 	addi	r5,r5,-257
    a7b8:	02202074 	movhi	r8,32897
    a7bc:	42202004 	addi	r8,r8,-32640
    a7c0:	2145883a 	add	r2,r4,r5
    a7c4:	1204703a 	and	r2,r2,r8
    a7c8:	0106303a 	nor	r3,zero,r4
    a7cc:	10c4703a 	and	r2,r2,r3
    a7d0:	1000151e 	bne	r2,zero,a828 <strchr+0xac>
    a7d4:	2284f03a 	xor	r2,r4,r10
    a7d8:	1147883a 	add	r3,r2,r5
    a7dc:	1a06703a 	and	r3,r3,r8
    a7e0:	0084303a 	nor	r2,zero,r2
    a7e4:	10c4703a 	and	r2,r2,r3
    a7e8:	10000f1e 	bne	r2,zero,a828 <strchr+0xac>
    a7ec:	2813883a 	mov	r9,r5
    a7f0:	00000106 	br	a7f8 <strchr+0x7c>
    a7f4:	18000c1e 	bne	r3,zero,a828 <strchr+0xac>
    a7f8:	31800104 	addi	r6,r6,4
    a7fc:	30800017 	ldw	r2,0(r6)
    a800:	1286f03a 	xor	r3,r2,r10
    a804:	124b883a 	add	r5,r2,r9
    a808:	1a49883a 	add	r4,r3,r9
    a80c:	2a0a703a 	and	r5,r5,r8
    a810:	0084303a 	nor	r2,zero,r2
    a814:	2208703a 	and	r4,r4,r8
    a818:	00c6303a 	nor	r3,zero,r3
    a81c:	1144703a 	and	r2,r2,r5
    a820:	1906703a 	and	r3,r3,r4
    a824:	103ff326 	beq	r2,zero,a7f4 <strchr+0x78>
    a828:	3007883a 	mov	r3,r6
    a82c:	00000206 	br	a838 <strchr+0xbc>
    a830:	38800426 	beq	r7,r2,a844 <strchr+0xc8>
    a834:	18c00044 	addi	r3,r3,1
    a838:	18800003 	ldbu	r2,0(r3)
    a83c:	103ffc1e 	bne	r2,zero,a830 <strchr+0xb4>
    a840:	3800041e 	bne	r7,zero,a854 <strchr+0xd8>
    a844:	1805883a 	mov	r2,r3
    a848:	f800283a 	ret
    a84c:	29c03fcc 	andi	r7,r5,255
    a850:	003ff906 	br	a838 <strchr+0xbc>
    a854:	0005883a 	mov	r2,zero
    a858:	f800283a 	ret

0000a85c <strcmp>:
    a85c:	2144b03a 	or	r2,r4,r5
    a860:	108000cc 	andi	r2,r2,3
    a864:	10001d1e 	bne	r2,zero,a8dc <strcmp+0x80>
    a868:	200f883a 	mov	r7,r4
    a86c:	28800017 	ldw	r2,0(r5)
    a870:	21000017 	ldw	r4,0(r4)
    a874:	280d883a 	mov	r6,r5
    a878:	2080161e 	bne	r4,r2,a8d4 <strcmp+0x78>
    a87c:	023fbff4 	movhi	r8,65279
    a880:	423fbfc4 	addi	r8,r8,-257
    a884:	2207883a 	add	r3,r4,r8
    a888:	01602074 	movhi	r5,32897
    a88c:	29602004 	addi	r5,r5,-32640
    a890:	1946703a 	and	r3,r3,r5
    a894:	0104303a 	nor	r2,zero,r4
    a898:	10c4703a 	and	r2,r2,r3
    a89c:	10001c1e 	bne	r2,zero,a910 <strcmp+0xb4>
    a8a0:	4013883a 	mov	r9,r8
    a8a4:	2811883a 	mov	r8,r5
    a8a8:	00000106 	br	a8b0 <strcmp+0x54>
    a8ac:	1800181e 	bne	r3,zero,a910 <strcmp+0xb4>
    a8b0:	39c00104 	addi	r7,r7,4
    a8b4:	39000017 	ldw	r4,0(r7)
    a8b8:	31800104 	addi	r6,r6,4
    a8bc:	31400017 	ldw	r5,0(r6)
    a8c0:	2245883a 	add	r2,r4,r9
    a8c4:	1204703a 	and	r2,r2,r8
    a8c8:	0106303a 	nor	r3,zero,r4
    a8cc:	1886703a 	and	r3,r3,r2
    a8d0:	217ff626 	beq	r4,r5,a8ac <strcmp+0x50>
    a8d4:	3809883a 	mov	r4,r7
    a8d8:	300b883a 	mov	r5,r6
    a8dc:	20c00007 	ldb	r3,0(r4)
    a8e0:	1800051e 	bne	r3,zero,a8f8 <strcmp+0x9c>
    a8e4:	00000606 	br	a900 <strcmp+0xa4>
    a8e8:	21000044 	addi	r4,r4,1
    a8ec:	20c00007 	ldb	r3,0(r4)
    a8f0:	29400044 	addi	r5,r5,1
    a8f4:	18000226 	beq	r3,zero,a900 <strcmp+0xa4>
    a8f8:	28800007 	ldb	r2,0(r5)
    a8fc:	18bffa26 	beq	r3,r2,a8e8 <strcmp+0x8c>
    a900:	20c00003 	ldbu	r3,0(r4)
    a904:	28800003 	ldbu	r2,0(r5)
    a908:	1885c83a 	sub	r2,r3,r2
    a90c:	f800283a 	ret
    a910:	0005883a 	mov	r2,zero
    a914:	f800283a 	ret

0000a918 <__swbuf_r>:
    a918:	defffc04 	addi	sp,sp,-16
    a91c:	dc400215 	stw	r17,8(sp)
    a920:	dc000115 	stw	r16,4(sp)
    a924:	dfc00315 	stw	ra,12(sp)
    a928:	2023883a 	mov	r17,r4
    a92c:	2821883a 	mov	r16,r5
    a930:	20000226 	beq	r4,zero,a93c <__swbuf_r+0x24>
    a934:	20800e17 	ldw	r2,56(r4)
    a938:	10002f26 	beq	r2,zero,a9f8 <__swbuf_r+0xe0>
    a93c:	3080030b 	ldhu	r2,12(r6)
    a940:	30c00617 	ldw	r3,24(r6)
    a944:	1080020c 	andi	r2,r2,8
    a948:	30c00215 	stw	r3,8(r6)
    a94c:	10002226 	beq	r2,zero,a9d8 <__swbuf_r+0xc0>
    a950:	30c00417 	ldw	r3,16(r6)
    a954:	18002026 	beq	r3,zero,a9d8 <__swbuf_r+0xc0>
    a958:	31000017 	ldw	r4,0(r6)
    a95c:	30800517 	ldw	r2,20(r6)
    a960:	20c7c83a 	sub	r3,r4,r3
    a964:	18802f0e 	bge	r3,r2,aa24 <__swbuf_r+0x10c>
    a968:	19400044 	addi	r5,r3,1
    a96c:	30800217 	ldw	r2,8(r6)
    a970:	84003fcc 	andi	r16,r16,255
    a974:	20c00044 	addi	r3,r4,1
    a978:	10bfffc4 	addi	r2,r2,-1
    a97c:	30800215 	stw	r2,8(r6)
    a980:	24000005 	stb	r16,0(r4)
    a984:	30800517 	ldw	r2,20(r6)
    a988:	30c00015 	stw	r3,0(r6)
    a98c:	11400c26 	beq	r2,r5,a9c0 <__swbuf_r+0xa8>
    a990:	3080030b 	ldhu	r2,12(r6)
    a994:	1080004c 	andi	r2,r2,1
    a998:	1005003a 	cmpeq	r2,r2,zero
    a99c:	10000626 	beq	r2,zero,a9b8 <__swbuf_r+0xa0>
    a9a0:	8005883a 	mov	r2,r16
    a9a4:	dfc00317 	ldw	ra,12(sp)
    a9a8:	dc400217 	ldw	r17,8(sp)
    a9ac:	dc000117 	ldw	r16,4(sp)
    a9b0:	dec00404 	addi	sp,sp,16
    a9b4:	f800283a 	ret
    a9b8:	00800284 	movi	r2,10
    a9bc:	80bff81e 	bne	r16,r2,a9a0 <__swbuf_r+0x88>
    a9c0:	8809883a 	mov	r4,r17
    a9c4:	300b883a 	mov	r5,r6
    a9c8:	0006c400 	call	6c40 <_fflush_r>
    a9cc:	103ff426 	beq	r2,zero,a9a0 <__swbuf_r+0x88>
    a9d0:	043fffc4 	movi	r16,-1
    a9d4:	003ff206 	br	a9a0 <__swbuf_r+0x88>
    a9d8:	300b883a 	mov	r5,r6
    a9dc:	8809883a 	mov	r4,r17
    a9e0:	d9800015 	stw	r6,0(sp)
    a9e4:	000530c0 	call	530c <__swsetup_r>
    a9e8:	d9800017 	ldw	r6,0(sp)
    a9ec:	1000061e 	bne	r2,zero,aa08 <__swbuf_r+0xf0>
    a9f0:	30c00417 	ldw	r3,16(r6)
    a9f4:	003fd806 	br	a958 <__swbuf_r+0x40>
    a9f8:	d9800015 	stw	r6,0(sp)
    a9fc:	0006ed80 	call	6ed8 <__sinit>
    aa00:	d9800017 	ldw	r6,0(sp)
    aa04:	003fcd06 	br	a93c <__swbuf_r+0x24>
    aa08:	3080030b 	ldhu	r2,12(r6)
    aa0c:	00c00244 	movi	r3,9
    aa10:	043fffc4 	movi	r16,-1
    aa14:	10801014 	ori	r2,r2,64
    aa18:	3080030d 	sth	r2,12(r6)
    aa1c:	88c00015 	stw	r3,0(r17)
    aa20:	003fdf06 	br	a9a0 <__swbuf_r+0x88>
    aa24:	300b883a 	mov	r5,r6
    aa28:	8809883a 	mov	r4,r17
    aa2c:	d9800015 	stw	r6,0(sp)
    aa30:	0006c400 	call	6c40 <_fflush_r>
    aa34:	d9800017 	ldw	r6,0(sp)
    aa38:	103fe51e 	bne	r2,zero,a9d0 <__swbuf_r+0xb8>
    aa3c:	31000017 	ldw	r4,0(r6)
    aa40:	01400044 	movi	r5,1
    aa44:	003fc906 	br	a96c <__swbuf_r+0x54>

0000aa48 <__swbuf>:
    aa48:	01800074 	movhi	r6,1
    aa4c:	31837004 	addi	r6,r6,3520
    aa50:	2007883a 	mov	r3,r4
    aa54:	31000017 	ldw	r4,0(r6)
    aa58:	280d883a 	mov	r6,r5
    aa5c:	180b883a 	mov	r5,r3
    aa60:	000a9181 	jmpi	a918 <__swbuf_r>

0000aa64 <_write_r>:
    aa64:	defffd04 	addi	sp,sp,-12
    aa68:	dc000015 	stw	r16,0(sp)
    aa6c:	04000074 	movhi	r16,1
    aa70:	840a4404 	addi	r16,r16,10512
    aa74:	dc400115 	stw	r17,4(sp)
    aa78:	80000015 	stw	zero,0(r16)
    aa7c:	2023883a 	mov	r17,r4
    aa80:	2809883a 	mov	r4,r5
    aa84:	300b883a 	mov	r5,r6
    aa88:	380d883a 	mov	r6,r7
    aa8c:	dfc00215 	stw	ra,8(sp)
    aa90:	000dcf40 	call	dcf4 <write>
    aa94:	1007883a 	mov	r3,r2
    aa98:	00bfffc4 	movi	r2,-1
    aa9c:	18800626 	beq	r3,r2,aab8 <_write_r+0x54>
    aaa0:	1805883a 	mov	r2,r3
    aaa4:	dfc00217 	ldw	ra,8(sp)
    aaa8:	dc400117 	ldw	r17,4(sp)
    aaac:	dc000017 	ldw	r16,0(sp)
    aab0:	dec00304 	addi	sp,sp,12
    aab4:	f800283a 	ret
    aab8:	80800017 	ldw	r2,0(r16)
    aabc:	103ff826 	beq	r2,zero,aaa0 <_write_r+0x3c>
    aac0:	88800015 	stw	r2,0(r17)
    aac4:	1805883a 	mov	r2,r3
    aac8:	dfc00217 	ldw	ra,8(sp)
    aacc:	dc400117 	ldw	r17,4(sp)
    aad0:	dc000017 	ldw	r16,0(sp)
    aad4:	dec00304 	addi	sp,sp,12
    aad8:	f800283a 	ret

0000aadc <_calloc_r>:
    aadc:	defffe04 	addi	sp,sp,-8
    aae0:	dc400015 	stw	r17,0(sp)
    aae4:	2023883a 	mov	r17,r4
    aae8:	2809883a 	mov	r4,r5
    aaec:	300b883a 	mov	r5,r6
    aaf0:	dfc00115 	stw	ra,4(sp)
    aaf4:	000d0e40 	call	d0e4 <__mulsi3>
    aaf8:	100b883a 	mov	r5,r2
    aafc:	8809883a 	mov	r4,r17
    ab00:	0000b700 	call	b70 <_malloc_r>
    ab04:	1023883a 	mov	r17,r2
    ab08:	01c00904 	movi	r7,36
    ab0c:	10000d26 	beq	r2,zero,ab44 <_calloc_r+0x68>
    ab10:	10ffff17 	ldw	r3,-4(r2)
    ab14:	1009883a 	mov	r4,r2
    ab18:	00bfff04 	movi	r2,-4
    ab1c:	1886703a 	and	r3,r3,r2
    ab20:	1887883a 	add	r3,r3,r2
    ab24:	180d883a 	mov	r6,r3
    ab28:	000b883a 	mov	r5,zero
    ab2c:	38c01736 	bltu	r7,r3,ab8c <_calloc_r+0xb0>
    ab30:	008004c4 	movi	r2,19
    ab34:	10c00836 	bltu	r2,r3,ab58 <_calloc_r+0x7c>
    ab38:	20000215 	stw	zero,8(r4)
    ab3c:	20000015 	stw	zero,0(r4)
    ab40:	20000115 	stw	zero,4(r4)
    ab44:	8805883a 	mov	r2,r17
    ab48:	dfc00117 	ldw	ra,4(sp)
    ab4c:	dc400017 	ldw	r17,0(sp)
    ab50:	dec00204 	addi	sp,sp,8
    ab54:	f800283a 	ret
    ab58:	008006c4 	movi	r2,27
    ab5c:	88000015 	stw	zero,0(r17)
    ab60:	88000115 	stw	zero,4(r17)
    ab64:	89000204 	addi	r4,r17,8
    ab68:	10fff32e 	bgeu	r2,r3,ab38 <_calloc_r+0x5c>
    ab6c:	88000215 	stw	zero,8(r17)
    ab70:	88000315 	stw	zero,12(r17)
    ab74:	89000404 	addi	r4,r17,16
    ab78:	19ffef1e 	bne	r3,r7,ab38 <_calloc_r+0x5c>
    ab7c:	89000604 	addi	r4,r17,24
    ab80:	88000415 	stw	zero,16(r17)
    ab84:	88000515 	stw	zero,20(r17)
    ab88:	003feb06 	br	ab38 <_calloc_r+0x5c>
    ab8c:	0008cbc0 	call	8cbc <memset>
    ab90:	8805883a 	mov	r2,r17
    ab94:	dfc00117 	ldw	ra,4(sp)
    ab98:	dc400017 	ldw	r17,0(sp)
    ab9c:	dec00204 	addi	sp,sp,8
    aba0:	f800283a 	ret

0000aba4 <_close_r>:
    aba4:	defffd04 	addi	sp,sp,-12
    aba8:	dc000015 	stw	r16,0(sp)
    abac:	04000074 	movhi	r16,1
    abb0:	840a4404 	addi	r16,r16,10512
    abb4:	dc400115 	stw	r17,4(sp)
    abb8:	80000015 	stw	zero,0(r16)
    abbc:	2023883a 	mov	r17,r4
    abc0:	2809883a 	mov	r4,r5
    abc4:	dfc00215 	stw	ra,8(sp)
    abc8:	000d7440 	call	d744 <close>
    abcc:	1007883a 	mov	r3,r2
    abd0:	00bfffc4 	movi	r2,-1
    abd4:	18800626 	beq	r3,r2,abf0 <_close_r+0x4c>
    abd8:	1805883a 	mov	r2,r3
    abdc:	dfc00217 	ldw	ra,8(sp)
    abe0:	dc400117 	ldw	r17,4(sp)
    abe4:	dc000017 	ldw	r16,0(sp)
    abe8:	dec00304 	addi	sp,sp,12
    abec:	f800283a 	ret
    abf0:	80800017 	ldw	r2,0(r16)
    abf4:	103ff826 	beq	r2,zero,abd8 <_close_r+0x34>
    abf8:	88800015 	stw	r2,0(r17)
    abfc:	1805883a 	mov	r2,r3
    ac00:	dfc00217 	ldw	ra,8(sp)
    ac04:	dc400117 	ldw	r17,4(sp)
    ac08:	dc000017 	ldw	r16,0(sp)
    ac0c:	dec00304 	addi	sp,sp,12
    ac10:	f800283a 	ret

0000ac14 <_fclose_r>:
    ac14:	defffc04 	addi	sp,sp,-16
    ac18:	dc400115 	stw	r17,4(sp)
    ac1c:	dc000015 	stw	r16,0(sp)
    ac20:	dfc00315 	stw	ra,12(sp)
    ac24:	dc800215 	stw	r18,8(sp)
    ac28:	2821883a 	mov	r16,r5
    ac2c:	2023883a 	mov	r17,r4
    ac30:	28002926 	beq	r5,zero,acd8 <_fclose_r+0xc4>
    ac34:	0006ec80 	call	6ec8 <__sfp_lock_acquire>
    ac38:	88000226 	beq	r17,zero,ac44 <_fclose_r+0x30>
    ac3c:	88800e17 	ldw	r2,56(r17)
    ac40:	10002d26 	beq	r2,zero,acf8 <_fclose_r+0xe4>
    ac44:	8080030f 	ldh	r2,12(r16)
    ac48:	10002226 	beq	r2,zero,acd4 <_fclose_r+0xc0>
    ac4c:	8809883a 	mov	r4,r17
    ac50:	800b883a 	mov	r5,r16
    ac54:	0006c400 	call	6c40 <_fflush_r>
    ac58:	1025883a 	mov	r18,r2
    ac5c:	80800b17 	ldw	r2,44(r16)
    ac60:	10000426 	beq	r2,zero,ac74 <_fclose_r+0x60>
    ac64:	81400717 	ldw	r5,28(r16)
    ac68:	8809883a 	mov	r4,r17
    ac6c:	103ee83a 	callr	r2
    ac70:	10002a16 	blt	r2,zero,ad1c <_fclose_r+0x108>
    ac74:	8080030b 	ldhu	r2,12(r16)
    ac78:	1080200c 	andi	r2,r2,128
    ac7c:	1000231e 	bne	r2,zero,ad0c <_fclose_r+0xf8>
    ac80:	81400c17 	ldw	r5,48(r16)
    ac84:	28000526 	beq	r5,zero,ac9c <_fclose_r+0x88>
    ac88:	80801004 	addi	r2,r16,64
    ac8c:	28800226 	beq	r5,r2,ac98 <_fclose_r+0x84>
    ac90:	8809883a 	mov	r4,r17
    ac94:	00072900 	call	7290 <_free_r>
    ac98:	80000c15 	stw	zero,48(r16)
    ac9c:	81401117 	ldw	r5,68(r16)
    aca0:	28000326 	beq	r5,zero,acb0 <_fclose_r+0x9c>
    aca4:	8809883a 	mov	r4,r17
    aca8:	00072900 	call	7290 <_free_r>
    acac:	80001115 	stw	zero,68(r16)
    acb0:	8000030d 	sth	zero,12(r16)
    acb4:	0006ecc0 	call	6ecc <__sfp_lock_release>
    acb8:	9005883a 	mov	r2,r18
    acbc:	dfc00317 	ldw	ra,12(sp)
    acc0:	dc800217 	ldw	r18,8(sp)
    acc4:	dc400117 	ldw	r17,4(sp)
    acc8:	dc000017 	ldw	r16,0(sp)
    accc:	dec00404 	addi	sp,sp,16
    acd0:	f800283a 	ret
    acd4:	0006ecc0 	call	6ecc <__sfp_lock_release>
    acd8:	0025883a 	mov	r18,zero
    acdc:	9005883a 	mov	r2,r18
    ace0:	dfc00317 	ldw	ra,12(sp)
    ace4:	dc800217 	ldw	r18,8(sp)
    ace8:	dc400117 	ldw	r17,4(sp)
    acec:	dc000017 	ldw	r16,0(sp)
    acf0:	dec00404 	addi	sp,sp,16
    acf4:	f800283a 	ret
    acf8:	8809883a 	mov	r4,r17
    acfc:	0006ed80 	call	6ed8 <__sinit>
    ad00:	8080030f 	ldh	r2,12(r16)
    ad04:	103fd11e 	bne	r2,zero,ac4c <_fclose_r+0x38>
    ad08:	003ff206 	br	acd4 <_fclose_r+0xc0>
    ad0c:	81400417 	ldw	r5,16(r16)
    ad10:	8809883a 	mov	r4,r17
    ad14:	00072900 	call	7290 <_free_r>
    ad18:	003fd906 	br	ac80 <_fclose_r+0x6c>
    ad1c:	04bfffc4 	movi	r18,-1
    ad20:	003fd406 	br	ac74 <_fclose_r+0x60>

0000ad24 <fclose>:
    ad24:	00800074 	movhi	r2,1
    ad28:	10837004 	addi	r2,r2,3520
    ad2c:	200b883a 	mov	r5,r4
    ad30:	11000017 	ldw	r4,0(r2)
    ad34:	000ac141 	jmpi	ac14 <_fclose_r>

0000ad38 <_fstat_r>:
    ad38:	defffd04 	addi	sp,sp,-12
    ad3c:	dc000015 	stw	r16,0(sp)
    ad40:	04000074 	movhi	r16,1
    ad44:	840a4404 	addi	r16,r16,10512
    ad48:	dc400115 	stw	r17,4(sp)
    ad4c:	80000015 	stw	zero,0(r16)
    ad50:	2023883a 	mov	r17,r4
    ad54:	2809883a 	mov	r4,r5
    ad58:	300b883a 	mov	r5,r6
    ad5c:	dfc00215 	stw	ra,8(sp)
    ad60:	000d82c0 	call	d82c <fstat>
    ad64:	1007883a 	mov	r3,r2
    ad68:	00bfffc4 	movi	r2,-1
    ad6c:	18800626 	beq	r3,r2,ad88 <_fstat_r+0x50>
    ad70:	1805883a 	mov	r2,r3
    ad74:	dfc00217 	ldw	ra,8(sp)
    ad78:	dc400117 	ldw	r17,4(sp)
    ad7c:	dc000017 	ldw	r16,0(sp)
    ad80:	dec00304 	addi	sp,sp,12
    ad84:	f800283a 	ret
    ad88:	80800017 	ldw	r2,0(r16)
    ad8c:	103ff826 	beq	r2,zero,ad70 <_fstat_r+0x38>
    ad90:	88800015 	stw	r2,0(r17)
    ad94:	1805883a 	mov	r2,r3
    ad98:	dfc00217 	ldw	ra,8(sp)
    ad9c:	dc400117 	ldw	r17,4(sp)
    ada0:	dc000017 	ldw	r16,0(sp)
    ada4:	dec00304 	addi	sp,sp,12
    ada8:	f800283a 	ret

0000adac <_isatty_r>:
    adac:	defffd04 	addi	sp,sp,-12
    adb0:	dc000015 	stw	r16,0(sp)
    adb4:	04000074 	movhi	r16,1
    adb8:	840a4404 	addi	r16,r16,10512
    adbc:	dc400115 	stw	r17,4(sp)
    adc0:	80000015 	stw	zero,0(r16)
    adc4:	2023883a 	mov	r17,r4
    adc8:	2809883a 	mov	r4,r5
    adcc:	dfc00215 	stw	ra,8(sp)
    add0:	000d8c00 	call	d8c0 <isatty>
    add4:	1007883a 	mov	r3,r2
    add8:	00bfffc4 	movi	r2,-1
    addc:	18800626 	beq	r3,r2,adf8 <_isatty_r+0x4c>
    ade0:	1805883a 	mov	r2,r3
    ade4:	dfc00217 	ldw	ra,8(sp)
    ade8:	dc400117 	ldw	r17,4(sp)
    adec:	dc000017 	ldw	r16,0(sp)
    adf0:	dec00304 	addi	sp,sp,12
    adf4:	f800283a 	ret
    adf8:	80800017 	ldw	r2,0(r16)
    adfc:	103ff826 	beq	r2,zero,ade0 <_isatty_r+0x34>
    ae00:	88800015 	stw	r2,0(r17)
    ae04:	1805883a 	mov	r2,r3
    ae08:	dfc00217 	ldw	ra,8(sp)
    ae0c:	dc400117 	ldw	r17,4(sp)
    ae10:	dc000017 	ldw	r16,0(sp)
    ae14:	dec00304 	addi	sp,sp,12
    ae18:	f800283a 	ret

0000ae1c <_lseek_r>:
    ae1c:	defffd04 	addi	sp,sp,-12
    ae20:	dc000015 	stw	r16,0(sp)
    ae24:	04000074 	movhi	r16,1
    ae28:	840a4404 	addi	r16,r16,10512
    ae2c:	dc400115 	stw	r17,4(sp)
    ae30:	80000015 	stw	zero,0(r16)
    ae34:	2023883a 	mov	r17,r4
    ae38:	2809883a 	mov	r4,r5
    ae3c:	300b883a 	mov	r5,r6
    ae40:	380d883a 	mov	r6,r7
    ae44:	dfc00215 	stw	ra,8(sp)
    ae48:	000da1c0 	call	da1c <lseek>
    ae4c:	1007883a 	mov	r3,r2
    ae50:	00bfffc4 	movi	r2,-1
    ae54:	18800626 	beq	r3,r2,ae70 <_lseek_r+0x54>
    ae58:	1805883a 	mov	r2,r3
    ae5c:	dfc00217 	ldw	ra,8(sp)
    ae60:	dc400117 	ldw	r17,4(sp)
    ae64:	dc000017 	ldw	r16,0(sp)
    ae68:	dec00304 	addi	sp,sp,12
    ae6c:	f800283a 	ret
    ae70:	80800017 	ldw	r2,0(r16)
    ae74:	103ff826 	beq	r2,zero,ae58 <_lseek_r+0x3c>
    ae78:	88800015 	stw	r2,0(r17)
    ae7c:	1805883a 	mov	r2,r3
    ae80:	dfc00217 	ldw	ra,8(sp)
    ae84:	dc400117 	ldw	r17,4(sp)
    ae88:	dc000017 	ldw	r16,0(sp)
    ae8c:	dec00304 	addi	sp,sp,12
    ae90:	f800283a 	ret

0000ae94 <_read_r>:
    ae94:	defffd04 	addi	sp,sp,-12
    ae98:	dc000015 	stw	r16,0(sp)
    ae9c:	04000074 	movhi	r16,1
    aea0:	840a4404 	addi	r16,r16,10512
    aea4:	dc400115 	stw	r17,4(sp)
    aea8:	80000015 	stw	zero,0(r16)
    aeac:	2023883a 	mov	r17,r4
    aeb0:	2809883a 	mov	r4,r5
    aeb4:	300b883a 	mov	r5,r6
    aeb8:	380d883a 	mov	r6,r7
    aebc:	dfc00215 	stw	ra,8(sp)
    aec0:	000db280 	call	db28 <read>
    aec4:	1007883a 	mov	r3,r2
    aec8:	00bfffc4 	movi	r2,-1
    aecc:	18800626 	beq	r3,r2,aee8 <_read_r+0x54>
    aed0:	1805883a 	mov	r2,r3
    aed4:	dfc00217 	ldw	ra,8(sp)
    aed8:	dc400117 	ldw	r17,4(sp)
    aedc:	dc000017 	ldw	r16,0(sp)
    aee0:	dec00304 	addi	sp,sp,12
    aee4:	f800283a 	ret
    aee8:	80800017 	ldw	r2,0(r16)
    aeec:	103ff826 	beq	r2,zero,aed0 <_read_r+0x3c>
    aef0:	88800015 	stw	r2,0(r17)
    aef4:	1805883a 	mov	r2,r3
    aef8:	dfc00217 	ldw	ra,8(sp)
    aefc:	dc400117 	ldw	r17,4(sp)
    af00:	dc000017 	ldw	r16,0(sp)
    af04:	dec00304 	addi	sp,sp,12
    af08:	f800283a 	ret

0000af0c <__fixunsdfsi>:
    af0c:	defffb04 	addi	sp,sp,-20
    af10:	dc400115 	stw	r17,4(sp)
    af14:	dc000015 	stw	r16,0(sp)
    af18:	04507834 	movhi	r17,16864
    af1c:	0021883a 	mov	r16,zero
    af20:	800d883a 	mov	r6,r16
    af24:	880f883a 	mov	r7,r17
    af28:	dcc00315 	stw	r19,12(sp)
    af2c:	dc800215 	stw	r18,8(sp)
    af30:	2827883a 	mov	r19,r5
    af34:	2025883a 	mov	r18,r4
    af38:	dfc00415 	stw	ra,16(sp)
    af3c:	000ca9c0 	call	ca9c <__gedf2>
    af40:	000d883a 	mov	r6,zero
    af44:	880f883a 	mov	r7,r17
    af48:	980b883a 	mov	r5,r19
    af4c:	9009883a 	mov	r4,r18
    af50:	10000d16 	blt	r2,zero,af88 <__fixunsdfsi+0x7c>
    af54:	000c1f40 	call	c1f4 <__subdf3>
    af58:	180b883a 	mov	r5,r3
    af5c:	1009883a 	mov	r4,r2
    af60:	000cd2c0 	call	cd2c <__fixdfsi>
    af64:	00e00034 	movhi	r3,32768
    af68:	10c5883a 	add	r2,r2,r3
    af6c:	dfc00417 	ldw	ra,16(sp)
    af70:	dcc00317 	ldw	r19,12(sp)
    af74:	dc800217 	ldw	r18,8(sp)
    af78:	dc400117 	ldw	r17,4(sp)
    af7c:	dc000017 	ldw	r16,0(sp)
    af80:	dec00504 	addi	sp,sp,20
    af84:	f800283a 	ret
    af88:	980b883a 	mov	r5,r19
    af8c:	9009883a 	mov	r4,r18
    af90:	000cd2c0 	call	cd2c <__fixdfsi>
    af94:	dfc00417 	ldw	ra,16(sp)
    af98:	dcc00317 	ldw	r19,12(sp)
    af9c:	dc800217 	ldw	r18,8(sp)
    afa0:	dc400117 	ldw	r17,4(sp)
    afa4:	dc000017 	ldw	r16,0(sp)
    afa8:	dec00504 	addi	sp,sp,20
    afac:	f800283a 	ret

0000afb0 <__udivdi3>:
    afb0:	defff104 	addi	sp,sp,-60
    afb4:	0015883a 	mov	r10,zero
    afb8:	2005883a 	mov	r2,r4
    afbc:	3011883a 	mov	r8,r6
    afc0:	df000d15 	stw	fp,52(sp)
    afc4:	dd400a15 	stw	r21,40(sp)
    afc8:	dcc00815 	stw	r19,32(sp)
    afcc:	dfc00e15 	stw	ra,56(sp)
    afd0:	ddc00c15 	stw	r23,48(sp)
    afd4:	dd800b15 	stw	r22,44(sp)
    afd8:	dd000915 	stw	r20,36(sp)
    afdc:	dc800715 	stw	r18,28(sp)
    afe0:	dc400615 	stw	r17,24(sp)
    afe4:	dc000515 	stw	r16,20(sp)
    afe8:	da800315 	stw	r10,12(sp)
    afec:	4027883a 	mov	r19,r8
    aff0:	1039883a 	mov	fp,r2
    aff4:	282b883a 	mov	r21,r5
    aff8:	da800415 	stw	r10,16(sp)
    affc:	3800401e 	bne	r7,zero,b100 <__udivdi3+0x150>
    b000:	2a006536 	bltu	r5,r8,b198 <__udivdi3+0x1e8>
    b004:	4000b526 	beq	r8,zero,b2dc <__udivdi3+0x32c>
    b008:	00bfffd4 	movui	r2,65535
    b00c:	14c0ad36 	bltu	r2,r19,b2c4 <__udivdi3+0x314>
    b010:	00803fc4 	movi	r2,255
    b014:	14c15e36 	bltu	r2,r19,b590 <__udivdi3+0x5e0>
    b018:	000b883a 	mov	r5,zero
    b01c:	0005883a 	mov	r2,zero
    b020:	9884d83a 	srl	r2,r19,r2
    b024:	01000074 	movhi	r4,1
    b028:	213c6704 	addi	r4,r4,-3684
    b02c:	01800804 	movi	r6,32
    b030:	1105883a 	add	r2,r2,r4
    b034:	10c00003 	ldbu	r3,0(r2)
    b038:	28c7883a 	add	r3,r5,r3
    b03c:	30e9c83a 	sub	r20,r6,r3
    b040:	a0010a1e 	bne	r20,zero,b46c <__udivdi3+0x4bc>
    b044:	982ed43a 	srli	r23,r19,16
    b048:	acebc83a 	sub	r21,r21,r19
    b04c:	9dbfffcc 	andi	r22,r19,65535
    b050:	05000044 	movi	r20,1
    b054:	a809883a 	mov	r4,r21
    b058:	b80b883a 	mov	r5,r23
    b05c:	000d0d40 	call	d0d4 <__udivsi3>
    b060:	100b883a 	mov	r5,r2
    b064:	b009883a 	mov	r4,r22
    b068:	1021883a 	mov	r16,r2
    b06c:	000d0e40 	call	d0e4 <__mulsi3>
    b070:	a809883a 	mov	r4,r21
    b074:	b80b883a 	mov	r5,r23
    b078:	1023883a 	mov	r17,r2
    b07c:	000d0dc0 	call	d0dc <__umodsi3>
    b080:	1004943a 	slli	r2,r2,16
    b084:	e006d43a 	srli	r3,fp,16
    b088:	10c4b03a 	or	r2,r2,r3
    b08c:	1440042e 	bgeu	r2,r17,b0a0 <__udivdi3+0xf0>
    b090:	14c5883a 	add	r2,r2,r19
    b094:	843fffc4 	addi	r16,r16,-1
    b098:	14c00136 	bltu	r2,r19,b0a0 <__udivdi3+0xf0>
    b09c:	14415c36 	bltu	r2,r17,b610 <__udivdi3+0x660>
    b0a0:	1463c83a 	sub	r17,r2,r17
    b0a4:	8809883a 	mov	r4,r17
    b0a8:	b80b883a 	mov	r5,r23
    b0ac:	000d0d40 	call	d0d4 <__udivsi3>
    b0b0:	100b883a 	mov	r5,r2
    b0b4:	b009883a 	mov	r4,r22
    b0b8:	102b883a 	mov	r21,r2
    b0bc:	000d0e40 	call	d0e4 <__mulsi3>
    b0c0:	8809883a 	mov	r4,r17
    b0c4:	b80b883a 	mov	r5,r23
    b0c8:	1025883a 	mov	r18,r2
    b0cc:	000d0dc0 	call	d0dc <__umodsi3>
    b0d0:	1004943a 	slli	r2,r2,16
    b0d4:	e0ffffcc 	andi	r3,fp,65535
    b0d8:	10c4b03a 	or	r2,r2,r3
    b0dc:	1480042e 	bgeu	r2,r18,b0f0 <__udivdi3+0x140>
    b0e0:	9885883a 	add	r2,r19,r2
    b0e4:	ad7fffc4 	addi	r21,r21,-1
    b0e8:	14c00136 	bltu	r2,r19,b0f0 <__udivdi3+0x140>
    b0ec:	14813c36 	bltu	r2,r18,b5e0 <__udivdi3+0x630>
    b0f0:	8004943a 	slli	r2,r16,16
    b0f4:	a009883a 	mov	r4,r20
    b0f8:	a884b03a 	or	r2,r21,r2
    b0fc:	00001506 	br	b154 <__udivdi3+0x1a4>
    b100:	380d883a 	mov	r6,r7
    b104:	29c06c36 	bltu	r5,r7,b2b8 <__udivdi3+0x308>
    b108:	00bfffd4 	movui	r2,65535
    b10c:	11c06436 	bltu	r2,r7,b2a0 <__udivdi3+0x2f0>
    b110:	00803fc4 	movi	r2,255
    b114:	11c11836 	bltu	r2,r7,b578 <__udivdi3+0x5c8>
    b118:	000b883a 	mov	r5,zero
    b11c:	0005883a 	mov	r2,zero
    b120:	3084d83a 	srl	r2,r6,r2
    b124:	01000074 	movhi	r4,1
    b128:	213c6704 	addi	r4,r4,-3684
    b12c:	01c00804 	movi	r7,32
    b130:	1105883a 	add	r2,r2,r4
    b134:	10c00003 	ldbu	r3,0(r2)
    b138:	28c7883a 	add	r3,r5,r3
    b13c:	38edc83a 	sub	r22,r7,r3
    b140:	b000731e 	bne	r22,zero,b310 <__udivdi3+0x360>
    b144:	35400136 	bltu	r6,r21,b14c <__udivdi3+0x19c>
    b148:	e4c05b36 	bltu	fp,r19,b2b8 <__udivdi3+0x308>
    b14c:	00800044 	movi	r2,1
    b150:	0009883a 	mov	r4,zero
    b154:	d8800315 	stw	r2,12(sp)
    b158:	d9400317 	ldw	r5,12(sp)
    b15c:	2007883a 	mov	r3,r4
    b160:	d9000415 	stw	r4,16(sp)
    b164:	2805883a 	mov	r2,r5
    b168:	dfc00e17 	ldw	ra,56(sp)
    b16c:	df000d17 	ldw	fp,52(sp)
    b170:	ddc00c17 	ldw	r23,48(sp)
    b174:	dd800b17 	ldw	r22,44(sp)
    b178:	dd400a17 	ldw	r21,40(sp)
    b17c:	dd000917 	ldw	r20,36(sp)
    b180:	dcc00817 	ldw	r19,32(sp)
    b184:	dc800717 	ldw	r18,28(sp)
    b188:	dc400617 	ldw	r17,24(sp)
    b18c:	dc000517 	ldw	r16,20(sp)
    b190:	dec00f04 	addi	sp,sp,60
    b194:	f800283a 	ret
    b198:	00bfffd4 	movui	r2,65535
    b19c:	12005636 	bltu	r2,r8,b2f8 <__udivdi3+0x348>
    b1a0:	00803fc4 	movi	r2,255
    b1a4:	12010036 	bltu	r2,r8,b5a8 <__udivdi3+0x5f8>
    b1a8:	000b883a 	mov	r5,zero
    b1ac:	0005883a 	mov	r2,zero
    b1b0:	9884d83a 	srl	r2,r19,r2
    b1b4:	01000074 	movhi	r4,1
    b1b8:	213c6704 	addi	r4,r4,-3684
    b1bc:	01800804 	movi	r6,32
    b1c0:	1105883a 	add	r2,r2,r4
    b1c4:	10c00003 	ldbu	r3,0(r2)
    b1c8:	28c7883a 	add	r3,r5,r3
    b1cc:	30cbc83a 	sub	r5,r6,r3
    b1d0:	28000626 	beq	r5,zero,b1ec <__udivdi3+0x23c>
    b1d4:	3145c83a 	sub	r2,r6,r5
    b1d8:	e084d83a 	srl	r2,fp,r2
    b1dc:	a946983a 	sll	r3,r21,r5
    b1e0:	e178983a 	sll	fp,fp,r5
    b1e4:	9966983a 	sll	r19,r19,r5
    b1e8:	18aab03a 	or	r21,r3,r2
    b1ec:	982ed43a 	srli	r23,r19,16
    b1f0:	a809883a 	mov	r4,r21
    b1f4:	9cbfffcc 	andi	r18,r19,65535
    b1f8:	b80b883a 	mov	r5,r23
    b1fc:	000d0d40 	call	d0d4 <__udivsi3>
    b200:	100b883a 	mov	r5,r2
    b204:	9009883a 	mov	r4,r18
    b208:	1021883a 	mov	r16,r2
    b20c:	000d0e40 	call	d0e4 <__mulsi3>
    b210:	a809883a 	mov	r4,r21
    b214:	b80b883a 	mov	r5,r23
    b218:	1023883a 	mov	r17,r2
    b21c:	000d0dc0 	call	d0dc <__umodsi3>
    b220:	1004943a 	slli	r2,r2,16
    b224:	e006d43a 	srli	r3,fp,16
    b228:	10c4b03a 	or	r2,r2,r3
    b22c:	1440042e 	bgeu	r2,r17,b240 <__udivdi3+0x290>
    b230:	14c5883a 	add	r2,r2,r19
    b234:	843fffc4 	addi	r16,r16,-1
    b238:	14c00136 	bltu	r2,r19,b240 <__udivdi3+0x290>
    b23c:	1440ea36 	bltu	r2,r17,b5e8 <__udivdi3+0x638>
    b240:	1463c83a 	sub	r17,r2,r17
    b244:	8809883a 	mov	r4,r17
    b248:	b80b883a 	mov	r5,r23
    b24c:	000d0d40 	call	d0d4 <__udivsi3>
    b250:	100b883a 	mov	r5,r2
    b254:	9009883a 	mov	r4,r18
    b258:	102b883a 	mov	r21,r2
    b25c:	000d0e40 	call	d0e4 <__mulsi3>
    b260:	8809883a 	mov	r4,r17
    b264:	b80b883a 	mov	r5,r23
    b268:	1025883a 	mov	r18,r2
    b26c:	000d0dc0 	call	d0dc <__umodsi3>
    b270:	1004943a 	slli	r2,r2,16
    b274:	e0ffffcc 	andi	r3,fp,65535
    b278:	10c4b03a 	or	r2,r2,r3
    b27c:	1480042e 	bgeu	r2,r18,b290 <__udivdi3+0x2e0>
    b280:	9885883a 	add	r2,r19,r2
    b284:	ad7fffc4 	addi	r21,r21,-1
    b288:	14c00136 	bltu	r2,r19,b290 <__udivdi3+0x2e0>
    b28c:	1480d936 	bltu	r2,r18,b5f4 <__udivdi3+0x644>
    b290:	8004943a 	slli	r2,r16,16
    b294:	0009883a 	mov	r4,zero
    b298:	a884b03a 	or	r2,r21,r2
    b29c:	003fad06 	br	b154 <__udivdi3+0x1a4>
    b2a0:	00804034 	movhi	r2,256
    b2a4:	10bfffc4 	addi	r2,r2,-1
    b2a8:	11c0b636 	bltu	r2,r7,b584 <__udivdi3+0x5d4>
    b2ac:	01400404 	movi	r5,16
    b2b0:	2805883a 	mov	r2,r5
    b2b4:	003f9a06 	br	b120 <__udivdi3+0x170>
    b2b8:	0005883a 	mov	r2,zero
    b2bc:	0009883a 	mov	r4,zero
    b2c0:	003fa406 	br	b154 <__udivdi3+0x1a4>
    b2c4:	00804034 	movhi	r2,256
    b2c8:	10bfffc4 	addi	r2,r2,-1
    b2cc:	14c0b336 	bltu	r2,r19,b59c <__udivdi3+0x5ec>
    b2d0:	01400404 	movi	r5,16
    b2d4:	2805883a 	mov	r2,r5
    b2d8:	003f5106 	br	b020 <__udivdi3+0x70>
    b2dc:	01000044 	movi	r4,1
    b2e0:	000b883a 	mov	r5,zero
    b2e4:	000d0d40 	call	d0d4 <__udivsi3>
    b2e8:	1027883a 	mov	r19,r2
    b2ec:	00bfffd4 	movui	r2,65535
    b2f0:	14fff436 	bltu	r2,r19,b2c4 <__udivdi3+0x314>
    b2f4:	003f4606 	br	b010 <__udivdi3+0x60>
    b2f8:	00804034 	movhi	r2,256
    b2fc:	10bfffc4 	addi	r2,r2,-1
    b300:	1200ac36 	bltu	r2,r8,b5b4 <__udivdi3+0x604>
    b304:	01400404 	movi	r5,16
    b308:	2805883a 	mov	r2,r5
    b30c:	003fa806 	br	b1b0 <__udivdi3+0x200>
    b310:	3d85c83a 	sub	r2,r7,r22
    b314:	3588983a 	sll	r4,r6,r22
    b318:	9886d83a 	srl	r3,r19,r2
    b31c:	a8a2d83a 	srl	r17,r21,r2
    b320:	e084d83a 	srl	r2,fp,r2
    b324:	20eeb03a 	or	r23,r4,r3
    b328:	b824d43a 	srli	r18,r23,16
    b32c:	ad86983a 	sll	r3,r21,r22
    b330:	8809883a 	mov	r4,r17
    b334:	900b883a 	mov	r5,r18
    b338:	1886b03a 	or	r3,r3,r2
    b33c:	d8c00115 	stw	r3,4(sp)
    b340:	bc3fffcc 	andi	r16,r23,65535
    b344:	000d0d40 	call	d0d4 <__udivsi3>
    b348:	100b883a 	mov	r5,r2
    b34c:	8009883a 	mov	r4,r16
    b350:	1029883a 	mov	r20,r2
    b354:	000d0e40 	call	d0e4 <__mulsi3>
    b358:	900b883a 	mov	r5,r18
    b35c:	8809883a 	mov	r4,r17
    b360:	102b883a 	mov	r21,r2
    b364:	000d0dc0 	call	d0dc <__umodsi3>
    b368:	d9400117 	ldw	r5,4(sp)
    b36c:	1004943a 	slli	r2,r2,16
    b370:	9da6983a 	sll	r19,r19,r22
    b374:	2806d43a 	srli	r3,r5,16
    b378:	10c4b03a 	or	r2,r2,r3
    b37c:	1540032e 	bgeu	r2,r21,b38c <__udivdi3+0x3dc>
    b380:	15c5883a 	add	r2,r2,r23
    b384:	a53fffc4 	addi	r20,r20,-1
    b388:	15c0912e 	bgeu	r2,r23,b5d0 <__udivdi3+0x620>
    b38c:	1563c83a 	sub	r17,r2,r21
    b390:	8809883a 	mov	r4,r17
    b394:	900b883a 	mov	r5,r18
    b398:	000d0d40 	call	d0d4 <__udivsi3>
    b39c:	100b883a 	mov	r5,r2
    b3a0:	8009883a 	mov	r4,r16
    b3a4:	102b883a 	mov	r21,r2
    b3a8:	000d0e40 	call	d0e4 <__mulsi3>
    b3ac:	8809883a 	mov	r4,r17
    b3b0:	900b883a 	mov	r5,r18
    b3b4:	1021883a 	mov	r16,r2
    b3b8:	000d0dc0 	call	d0dc <__umodsi3>
    b3bc:	da800117 	ldw	r10,4(sp)
    b3c0:	1004943a 	slli	r2,r2,16
    b3c4:	50ffffcc 	andi	r3,r10,65535
    b3c8:	10c6b03a 	or	r3,r2,r3
    b3cc:	1c00032e 	bgeu	r3,r16,b3dc <__udivdi3+0x42c>
    b3d0:	1dc7883a 	add	r3,r3,r23
    b3d4:	ad7fffc4 	addi	r21,r21,-1
    b3d8:	1dc0792e 	bgeu	r3,r23,b5c0 <__udivdi3+0x610>
    b3dc:	a004943a 	slli	r2,r20,16
    b3e0:	982ed43a 	srli	r23,r19,16
    b3e4:	9cffffcc 	andi	r19,r19,65535
    b3e8:	a8a4b03a 	or	r18,r21,r2
    b3ec:	947fffcc 	andi	r17,r18,65535
    b3f0:	902ad43a 	srli	r21,r18,16
    b3f4:	8809883a 	mov	r4,r17
    b3f8:	980b883a 	mov	r5,r19
    b3fc:	1c21c83a 	sub	r16,r3,r16
    b400:	000d0e40 	call	d0e4 <__mulsi3>
    b404:	8809883a 	mov	r4,r17
    b408:	b80b883a 	mov	r5,r23
    b40c:	1029883a 	mov	r20,r2
    b410:	000d0e40 	call	d0e4 <__mulsi3>
    b414:	980b883a 	mov	r5,r19
    b418:	a809883a 	mov	r4,r21
    b41c:	1023883a 	mov	r17,r2
    b420:	000d0e40 	call	d0e4 <__mulsi3>
    b424:	a809883a 	mov	r4,r21
    b428:	b80b883a 	mov	r5,r23
    b42c:	1027883a 	mov	r19,r2
    b430:	000d0e40 	call	d0e4 <__mulsi3>
    b434:	1009883a 	mov	r4,r2
    b438:	a004d43a 	srli	r2,r20,16
    b43c:	8ce3883a 	add	r17,r17,r19
    b440:	1447883a 	add	r3,r2,r17
    b444:	1cc0022e 	bgeu	r3,r19,b450 <__udivdi3+0x4a0>
    b448:	00800074 	movhi	r2,1
    b44c:	2089883a 	add	r4,r4,r2
    b450:	1804d43a 	srli	r2,r3,16
    b454:	2085883a 	add	r2,r4,r2
    b458:	80804436 	bltu	r16,r2,b56c <__udivdi3+0x5bc>
    b45c:	80803e26 	beq	r16,r2,b558 <__udivdi3+0x5a8>
    b460:	9005883a 	mov	r2,r18
    b464:	0009883a 	mov	r4,zero
    b468:	003f3a06 	br	b154 <__udivdi3+0x1a4>
    b46c:	9d26983a 	sll	r19,r19,r20
    b470:	3505c83a 	sub	r2,r6,r20
    b474:	a8a2d83a 	srl	r17,r21,r2
    b478:	982ed43a 	srli	r23,r19,16
    b47c:	e084d83a 	srl	r2,fp,r2
    b480:	ad06983a 	sll	r3,r21,r20
    b484:	8809883a 	mov	r4,r17
    b488:	b80b883a 	mov	r5,r23
    b48c:	1886b03a 	or	r3,r3,r2
    b490:	d8c00015 	stw	r3,0(sp)
    b494:	9dbfffcc 	andi	r22,r19,65535
    b498:	000d0d40 	call	d0d4 <__udivsi3>
    b49c:	100b883a 	mov	r5,r2
    b4a0:	b009883a 	mov	r4,r22
    b4a4:	d8800215 	stw	r2,8(sp)
    b4a8:	000d0e40 	call	d0e4 <__mulsi3>
    b4ac:	8809883a 	mov	r4,r17
    b4b0:	b80b883a 	mov	r5,r23
    b4b4:	102b883a 	mov	r21,r2
    b4b8:	000d0dc0 	call	d0dc <__umodsi3>
    b4bc:	d9000017 	ldw	r4,0(sp)
    b4c0:	1004943a 	slli	r2,r2,16
    b4c4:	2006d43a 	srli	r3,r4,16
    b4c8:	10c4b03a 	or	r2,r2,r3
    b4cc:	1540052e 	bgeu	r2,r21,b4e4 <__udivdi3+0x534>
    b4d0:	d9400217 	ldw	r5,8(sp)
    b4d4:	14c5883a 	add	r2,r2,r19
    b4d8:	297fffc4 	addi	r5,r5,-1
    b4dc:	d9400215 	stw	r5,8(sp)
    b4e0:	14c0462e 	bgeu	r2,r19,b5fc <__udivdi3+0x64c>
    b4e4:	1563c83a 	sub	r17,r2,r21
    b4e8:	8809883a 	mov	r4,r17
    b4ec:	b80b883a 	mov	r5,r23
    b4f0:	000d0d40 	call	d0d4 <__udivsi3>
    b4f4:	100b883a 	mov	r5,r2
    b4f8:	b009883a 	mov	r4,r22
    b4fc:	1025883a 	mov	r18,r2
    b500:	000d0e40 	call	d0e4 <__mulsi3>
    b504:	8809883a 	mov	r4,r17
    b508:	b80b883a 	mov	r5,r23
    b50c:	1021883a 	mov	r16,r2
    b510:	000d0dc0 	call	d0dc <__umodsi3>
    b514:	da800017 	ldw	r10,0(sp)
    b518:	1004943a 	slli	r2,r2,16
    b51c:	50ffffcc 	andi	r3,r10,65535
    b520:	10c6b03a 	or	r3,r2,r3
    b524:	1c00062e 	bgeu	r3,r16,b540 <__udivdi3+0x590>
    b528:	1cc7883a 	add	r3,r3,r19
    b52c:	94bfffc4 	addi	r18,r18,-1
    b530:	1cc00336 	bltu	r3,r19,b540 <__udivdi3+0x590>
    b534:	1c00022e 	bgeu	r3,r16,b540 <__udivdi3+0x590>
    b538:	94bfffc4 	addi	r18,r18,-1
    b53c:	1cc7883a 	add	r3,r3,r19
    b540:	d9000217 	ldw	r4,8(sp)
    b544:	e538983a 	sll	fp,fp,r20
    b548:	1c2bc83a 	sub	r21,r3,r16
    b54c:	2004943a 	slli	r2,r4,16
    b550:	90a8b03a 	or	r20,r18,r2
    b554:	003ebf06 	br	b054 <__udivdi3+0xa4>
    b558:	1804943a 	slli	r2,r3,16
    b55c:	e588983a 	sll	r4,fp,r22
    b560:	a0ffffcc 	andi	r3,r20,65535
    b564:	10c5883a 	add	r2,r2,r3
    b568:	20bfbd2e 	bgeu	r4,r2,b460 <__udivdi3+0x4b0>
    b56c:	90bfffc4 	addi	r2,r18,-1
    b570:	0009883a 	mov	r4,zero
    b574:	003ef706 	br	b154 <__udivdi3+0x1a4>
    b578:	01400204 	movi	r5,8
    b57c:	2805883a 	mov	r2,r5
    b580:	003ee706 	br	b120 <__udivdi3+0x170>
    b584:	01400604 	movi	r5,24
    b588:	2805883a 	mov	r2,r5
    b58c:	003ee406 	br	b120 <__udivdi3+0x170>
    b590:	01400204 	movi	r5,8
    b594:	2805883a 	mov	r2,r5
    b598:	003ea106 	br	b020 <__udivdi3+0x70>
    b59c:	01400604 	movi	r5,24
    b5a0:	2805883a 	mov	r2,r5
    b5a4:	003e9e06 	br	b020 <__udivdi3+0x70>
    b5a8:	01400204 	movi	r5,8
    b5ac:	2805883a 	mov	r2,r5
    b5b0:	003eff06 	br	b1b0 <__udivdi3+0x200>
    b5b4:	01400604 	movi	r5,24
    b5b8:	2805883a 	mov	r2,r5
    b5bc:	003efc06 	br	b1b0 <__udivdi3+0x200>
    b5c0:	1c3f862e 	bgeu	r3,r16,b3dc <__udivdi3+0x42c>
    b5c4:	1dc7883a 	add	r3,r3,r23
    b5c8:	ad7fffc4 	addi	r21,r21,-1
    b5cc:	003f8306 	br	b3dc <__udivdi3+0x42c>
    b5d0:	157f6e2e 	bgeu	r2,r21,b38c <__udivdi3+0x3dc>
    b5d4:	a53fffc4 	addi	r20,r20,-1
    b5d8:	15c5883a 	add	r2,r2,r23
    b5dc:	003f6b06 	br	b38c <__udivdi3+0x3dc>
    b5e0:	ad7fffc4 	addi	r21,r21,-1
    b5e4:	003ec206 	br	b0f0 <__udivdi3+0x140>
    b5e8:	843fffc4 	addi	r16,r16,-1
    b5ec:	14c5883a 	add	r2,r2,r19
    b5f0:	003f1306 	br	b240 <__udivdi3+0x290>
    b5f4:	ad7fffc4 	addi	r21,r21,-1
    b5f8:	003f2506 	br	b290 <__udivdi3+0x2e0>
    b5fc:	157fb92e 	bgeu	r2,r21,b4e4 <__udivdi3+0x534>
    b600:	297fffc4 	addi	r5,r5,-1
    b604:	14c5883a 	add	r2,r2,r19
    b608:	d9400215 	stw	r5,8(sp)
    b60c:	003fb506 	br	b4e4 <__udivdi3+0x534>
    b610:	843fffc4 	addi	r16,r16,-1
    b614:	14c5883a 	add	r2,r2,r19
    b618:	003ea106 	br	b0a0 <__udivdi3+0xf0>

0000b61c <__umoddi3>:
    b61c:	defff004 	addi	sp,sp,-64
    b620:	3011883a 	mov	r8,r6
    b624:	000d883a 	mov	r6,zero
    b628:	dd400b15 	stw	r21,44(sp)
    b62c:	dcc00915 	stw	r19,36(sp)
    b630:	dc000615 	stw	r16,24(sp)
    b634:	dfc00f15 	stw	ra,60(sp)
    b638:	df000e15 	stw	fp,56(sp)
    b63c:	ddc00d15 	stw	r23,52(sp)
    b640:	dd800c15 	stw	r22,48(sp)
    b644:	dd000a15 	stw	r20,40(sp)
    b648:	dc800815 	stw	r18,32(sp)
    b64c:	dc400715 	stw	r17,28(sp)
    b650:	2817883a 	mov	r11,r5
    b654:	d9800415 	stw	r6,16(sp)
    b658:	4027883a 	mov	r19,r8
    b65c:	d9800515 	stw	r6,20(sp)
    b660:	2021883a 	mov	r16,r4
    b664:	282b883a 	mov	r21,r5
    b668:	38002c1e 	bne	r7,zero,b71c <__umoddi3+0x100>
    b66c:	2a005636 	bltu	r5,r8,b7c8 <__umoddi3+0x1ac>
    b670:	40009a26 	beq	r8,zero,b8dc <__umoddi3+0x2c0>
    b674:	00bfffd4 	movui	r2,65535
    b678:	14c09236 	bltu	r2,r19,b8c4 <__umoddi3+0x2a8>
    b67c:	00803fc4 	movi	r2,255
    b680:	14c15c36 	bltu	r2,r19,bbf4 <__umoddi3+0x5d8>
    b684:	000b883a 	mov	r5,zero
    b688:	0005883a 	mov	r2,zero
    b68c:	9884d83a 	srl	r2,r19,r2
    b690:	01000074 	movhi	r4,1
    b694:	213c6704 	addi	r4,r4,-3684
    b698:	01800804 	movi	r6,32
    b69c:	1105883a 	add	r2,r2,r4
    b6a0:	10c00003 	ldbu	r3,0(r2)
    b6a4:	28c7883a 	add	r3,r5,r3
    b6a8:	30e5c83a 	sub	r18,r6,r3
    b6ac:	9000a41e 	bne	r18,zero,b940 <__umoddi3+0x324>
    b6b0:	982ed43a 	srli	r23,r19,16
    b6b4:	acebc83a 	sub	r21,r21,r19
    b6b8:	9d3fffcc 	andi	r20,r19,65535
    b6bc:	002d883a 	mov	r22,zero
    b6c0:	a809883a 	mov	r4,r21
    b6c4:	b80b883a 	mov	r5,r23
    b6c8:	000d0d40 	call	d0d4 <__udivsi3>
    b6cc:	100b883a 	mov	r5,r2
    b6d0:	a009883a 	mov	r4,r20
    b6d4:	000d0e40 	call	d0e4 <__mulsi3>
    b6d8:	a809883a 	mov	r4,r21
    b6dc:	b80b883a 	mov	r5,r23
    b6e0:	1023883a 	mov	r17,r2
    b6e4:	000d0dc0 	call	d0dc <__umodsi3>
    b6e8:	1004943a 	slli	r2,r2,16
    b6ec:	8006d43a 	srli	r3,r16,16
    b6f0:	10c4b03a 	or	r2,r2,r3
    b6f4:	1440032e 	bgeu	r2,r17,b704 <__umoddi3+0xe8>
    b6f8:	14c5883a 	add	r2,r2,r19
    b6fc:	14c00136 	bltu	r2,r19,b704 <__umoddi3+0xe8>
    b700:	14415836 	bltu	r2,r17,bc64 <__umoddi3+0x648>
    b704:	1463c83a 	sub	r17,r2,r17
    b708:	8809883a 	mov	r4,r17
    b70c:	b80b883a 	mov	r5,r23
    b710:	000d0d40 	call	d0d4 <__udivsi3>
    b714:	a009883a 	mov	r4,r20
    b718:	00005306 	br	b868 <__umoddi3+0x24c>
    b71c:	380d883a 	mov	r6,r7
    b720:	29c0132e 	bgeu	r5,r7,b770 <__umoddi3+0x154>
    b724:	d9000415 	stw	r4,16(sp)
    b728:	d9400515 	stw	r5,20(sp)
    b72c:	d9400417 	ldw	r5,16(sp)
    b730:	5813883a 	mov	r9,r11
    b734:	2811883a 	mov	r8,r5
    b738:	4005883a 	mov	r2,r8
    b73c:	4807883a 	mov	r3,r9
    b740:	dfc00f17 	ldw	ra,60(sp)
    b744:	df000e17 	ldw	fp,56(sp)
    b748:	ddc00d17 	ldw	r23,52(sp)
    b74c:	dd800c17 	ldw	r22,48(sp)
    b750:	dd400b17 	ldw	r21,44(sp)
    b754:	dd000a17 	ldw	r20,40(sp)
    b758:	dcc00917 	ldw	r19,36(sp)
    b75c:	dc800817 	ldw	r18,32(sp)
    b760:	dc400717 	ldw	r17,28(sp)
    b764:	dc000617 	ldw	r16,24(sp)
    b768:	dec01004 	addi	sp,sp,64
    b76c:	f800283a 	ret
    b770:	00bfffd4 	movui	r2,65535
    b774:	11c06636 	bltu	r2,r7,b910 <__umoddi3+0x2f4>
    b778:	00803fc4 	movi	r2,255
    b77c:	11c12036 	bltu	r2,r7,bc00 <__umoddi3+0x5e4>
    b780:	000b883a 	mov	r5,zero
    b784:	0005883a 	mov	r2,zero
    b788:	3084d83a 	srl	r2,r6,r2
    b78c:	01000074 	movhi	r4,1
    b790:	213c6704 	addi	r4,r4,-3684
    b794:	01c00804 	movi	r7,32
    b798:	1105883a 	add	r2,r2,r4
    b79c:	10c00003 	ldbu	r3,0(r2)
    b7a0:	28c7883a 	add	r3,r5,r3
    b7a4:	38e5c83a 	sub	r18,r7,r3
    b7a8:	9000941e 	bne	r18,zero,b9fc <__umoddi3+0x3e0>
    b7ac:	35405e36 	bltu	r6,r21,b928 <__umoddi3+0x30c>
    b7b0:	84c05d2e 	bgeu	r16,r19,b928 <__umoddi3+0x30c>
    b7b4:	8011883a 	mov	r8,r16
    b7b8:	a813883a 	mov	r9,r21
    b7bc:	dc000415 	stw	r16,16(sp)
    b7c0:	dd400515 	stw	r21,20(sp)
    b7c4:	003fdc06 	br	b738 <__umoddi3+0x11c>
    b7c8:	00bfffd4 	movui	r2,65535
    b7cc:	12004a36 	bltu	r2,r8,b8f8 <__umoddi3+0x2dc>
    b7d0:	00803fc4 	movi	r2,255
    b7d4:	12010d36 	bltu	r2,r8,bc0c <__umoddi3+0x5f0>
    b7d8:	000b883a 	mov	r5,zero
    b7dc:	0005883a 	mov	r2,zero
    b7e0:	9884d83a 	srl	r2,r19,r2
    b7e4:	01000074 	movhi	r4,1
    b7e8:	213c6704 	addi	r4,r4,-3684
    b7ec:	01800804 	movi	r6,32
    b7f0:	1105883a 	add	r2,r2,r4
    b7f4:	10c00003 	ldbu	r3,0(r2)
    b7f8:	28c7883a 	add	r3,r5,r3
    b7fc:	30c7c83a 	sub	r3,r6,r3
    b800:	1800dc1e 	bne	r3,zero,bb74 <__umoddi3+0x558>
    b804:	002d883a 	mov	r22,zero
    b808:	982ed43a 	srli	r23,r19,16
    b80c:	a809883a 	mov	r4,r21
    b810:	9cbfffcc 	andi	r18,r19,65535
    b814:	b80b883a 	mov	r5,r23
    b818:	000d0d40 	call	d0d4 <__udivsi3>
    b81c:	100b883a 	mov	r5,r2
    b820:	9009883a 	mov	r4,r18
    b824:	000d0e40 	call	d0e4 <__mulsi3>
    b828:	a809883a 	mov	r4,r21
    b82c:	b80b883a 	mov	r5,r23
    b830:	1023883a 	mov	r17,r2
    b834:	000d0dc0 	call	d0dc <__umodsi3>
    b838:	1004943a 	slli	r2,r2,16
    b83c:	8006d43a 	srli	r3,r16,16
    b840:	10c4b03a 	or	r2,r2,r3
    b844:	1440032e 	bgeu	r2,r17,b854 <__umoddi3+0x238>
    b848:	14c5883a 	add	r2,r2,r19
    b84c:	14c00136 	bltu	r2,r19,b854 <__umoddi3+0x238>
    b850:	14410236 	bltu	r2,r17,bc5c <__umoddi3+0x640>
    b854:	1463c83a 	sub	r17,r2,r17
    b858:	8809883a 	mov	r4,r17
    b85c:	b80b883a 	mov	r5,r23
    b860:	000d0d40 	call	d0d4 <__udivsi3>
    b864:	9009883a 	mov	r4,r18
    b868:	100b883a 	mov	r5,r2
    b86c:	000d0e40 	call	d0e4 <__mulsi3>
    b870:	8809883a 	mov	r4,r17
    b874:	b80b883a 	mov	r5,r23
    b878:	102b883a 	mov	r21,r2
    b87c:	000d0dc0 	call	d0dc <__umodsi3>
    b880:	1004943a 	slli	r2,r2,16
    b884:	80ffffcc 	andi	r3,r16,65535
    b888:	10c4b03a 	or	r2,r2,r3
    b88c:	1540042e 	bgeu	r2,r21,b8a0 <__umoddi3+0x284>
    b890:	14c5883a 	add	r2,r2,r19
    b894:	14c00236 	bltu	r2,r19,b8a0 <__umoddi3+0x284>
    b898:	1540012e 	bgeu	r2,r21,b8a0 <__umoddi3+0x284>
    b89c:	14c5883a 	add	r2,r2,r19
    b8a0:	1545c83a 	sub	r2,r2,r21
    b8a4:	1584d83a 	srl	r2,r2,r22
    b8a8:	0013883a 	mov	r9,zero
    b8ac:	d8800415 	stw	r2,16(sp)
    b8b0:	d8c00417 	ldw	r3,16(sp)
    b8b4:	0005883a 	mov	r2,zero
    b8b8:	d8800515 	stw	r2,20(sp)
    b8bc:	1811883a 	mov	r8,r3
    b8c0:	003f9d06 	br	b738 <__umoddi3+0x11c>
    b8c4:	00804034 	movhi	r2,256
    b8c8:	10bfffc4 	addi	r2,r2,-1
    b8cc:	14c0c636 	bltu	r2,r19,bbe8 <__umoddi3+0x5cc>
    b8d0:	01400404 	movi	r5,16
    b8d4:	2805883a 	mov	r2,r5
    b8d8:	003f6c06 	br	b68c <__umoddi3+0x70>
    b8dc:	01000044 	movi	r4,1
    b8e0:	000b883a 	mov	r5,zero
    b8e4:	000d0d40 	call	d0d4 <__udivsi3>
    b8e8:	1027883a 	mov	r19,r2
    b8ec:	00bfffd4 	movui	r2,65535
    b8f0:	14fff436 	bltu	r2,r19,b8c4 <__umoddi3+0x2a8>
    b8f4:	003f6106 	br	b67c <__umoddi3+0x60>
    b8f8:	00804034 	movhi	r2,256
    b8fc:	10bfffc4 	addi	r2,r2,-1
    b900:	1200c536 	bltu	r2,r8,bc18 <__umoddi3+0x5fc>
    b904:	01400404 	movi	r5,16
    b908:	2805883a 	mov	r2,r5
    b90c:	003fb406 	br	b7e0 <__umoddi3+0x1c4>
    b910:	00804034 	movhi	r2,256
    b914:	10bfffc4 	addi	r2,r2,-1
    b918:	11c0c236 	bltu	r2,r7,bc24 <__umoddi3+0x608>
    b91c:	01400404 	movi	r5,16
    b920:	2805883a 	mov	r2,r5
    b924:	003f9806 	br	b788 <__umoddi3+0x16c>
    b928:	84c9c83a 	sub	r4,r16,r19
    b92c:	8105803a 	cmpltu	r2,r16,r4
    b930:	a987c83a 	sub	r3,r21,r6
    b934:	18abc83a 	sub	r21,r3,r2
    b938:	2021883a 	mov	r16,r4
    b93c:	003f9d06 	br	b7b4 <__umoddi3+0x198>
    b940:	9ca6983a 	sll	r19,r19,r18
    b944:	3485c83a 	sub	r2,r6,r18
    b948:	a8a2d83a 	srl	r17,r21,r2
    b94c:	982ed43a 	srli	r23,r19,16
    b950:	ac86983a 	sll	r3,r21,r18
    b954:	8084d83a 	srl	r2,r16,r2
    b958:	8809883a 	mov	r4,r17
    b95c:	b80b883a 	mov	r5,r23
    b960:	18b8b03a 	or	fp,r3,r2
    b964:	9d3fffcc 	andi	r20,r19,65535
    b968:	000d0d40 	call	d0d4 <__udivsi3>
    b96c:	100b883a 	mov	r5,r2
    b970:	a009883a 	mov	r4,r20
    b974:	000d0e40 	call	d0e4 <__mulsi3>
    b978:	8809883a 	mov	r4,r17
    b97c:	b80b883a 	mov	r5,r23
    b980:	102b883a 	mov	r21,r2
    b984:	000d0dc0 	call	d0dc <__umodsi3>
    b988:	1004943a 	slli	r2,r2,16
    b98c:	e006d43a 	srli	r3,fp,16
    b990:	902d883a 	mov	r22,r18
    b994:	10c4b03a 	or	r2,r2,r3
    b998:	1540022e 	bgeu	r2,r21,b9a4 <__umoddi3+0x388>
    b99c:	14c5883a 	add	r2,r2,r19
    b9a0:	14c0ab2e 	bgeu	r2,r19,bc50 <__umoddi3+0x634>
    b9a4:	1563c83a 	sub	r17,r2,r21
    b9a8:	8809883a 	mov	r4,r17
    b9ac:	b80b883a 	mov	r5,r23
    b9b0:	000d0d40 	call	d0d4 <__udivsi3>
    b9b4:	100b883a 	mov	r5,r2
    b9b8:	a009883a 	mov	r4,r20
    b9bc:	000d0e40 	call	d0e4 <__mulsi3>
    b9c0:	8809883a 	mov	r4,r17
    b9c4:	b80b883a 	mov	r5,r23
    b9c8:	102b883a 	mov	r21,r2
    b9cc:	000d0dc0 	call	d0dc <__umodsi3>
    b9d0:	1004943a 	slli	r2,r2,16
    b9d4:	e0ffffcc 	andi	r3,fp,65535
    b9d8:	10c4b03a 	or	r2,r2,r3
    b9dc:	1540042e 	bgeu	r2,r21,b9f0 <__umoddi3+0x3d4>
    b9e0:	14c5883a 	add	r2,r2,r19
    b9e4:	14c00236 	bltu	r2,r19,b9f0 <__umoddi3+0x3d4>
    b9e8:	1540012e 	bgeu	r2,r21,b9f0 <__umoddi3+0x3d4>
    b9ec:	14c5883a 	add	r2,r2,r19
    b9f0:	84a0983a 	sll	r16,r16,r18
    b9f4:	156bc83a 	sub	r21,r2,r21
    b9f8:	003f3106 	br	b6c0 <__umoddi3+0xa4>
    b9fc:	3c8fc83a 	sub	r7,r7,r18
    ba00:	3486983a 	sll	r3,r6,r18
    ba04:	99c4d83a 	srl	r2,r19,r7
    ba08:	a9e2d83a 	srl	r17,r21,r7
    ba0c:	ac8c983a 	sll	r6,r21,r18
    ba10:	18acb03a 	or	r22,r3,r2
    ba14:	b02ed43a 	srli	r23,r22,16
    ba18:	81c4d83a 	srl	r2,r16,r7
    ba1c:	8809883a 	mov	r4,r17
    ba20:	b80b883a 	mov	r5,r23
    ba24:	308cb03a 	or	r6,r6,r2
    ba28:	d9c00315 	stw	r7,12(sp)
    ba2c:	d9800215 	stw	r6,8(sp)
    ba30:	b53fffcc 	andi	r20,r22,65535
    ba34:	000d0d40 	call	d0d4 <__udivsi3>
    ba38:	100b883a 	mov	r5,r2
    ba3c:	a009883a 	mov	r4,r20
    ba40:	1039883a 	mov	fp,r2
    ba44:	000d0e40 	call	d0e4 <__mulsi3>
    ba48:	8809883a 	mov	r4,r17
    ba4c:	b80b883a 	mov	r5,r23
    ba50:	102b883a 	mov	r21,r2
    ba54:	000d0dc0 	call	d0dc <__umodsi3>
    ba58:	d9000217 	ldw	r4,8(sp)
    ba5c:	1004943a 	slli	r2,r2,16
    ba60:	9ca6983a 	sll	r19,r19,r18
    ba64:	2006d43a 	srli	r3,r4,16
    ba68:	84a0983a 	sll	r16,r16,r18
    ba6c:	dcc00015 	stw	r19,0(sp)
    ba70:	10c4b03a 	or	r2,r2,r3
    ba74:	dc000115 	stw	r16,4(sp)
    ba78:	1540032e 	bgeu	r2,r21,ba88 <__umoddi3+0x46c>
    ba7c:	1585883a 	add	r2,r2,r22
    ba80:	e73fffc4 	addi	fp,fp,-1
    ba84:	15806e2e 	bgeu	r2,r22,bc40 <__umoddi3+0x624>
    ba88:	1563c83a 	sub	r17,r2,r21
    ba8c:	8809883a 	mov	r4,r17
    ba90:	b80b883a 	mov	r5,r23
    ba94:	000d0d40 	call	d0d4 <__udivsi3>
    ba98:	100b883a 	mov	r5,r2
    ba9c:	a009883a 	mov	r4,r20
    baa0:	1021883a 	mov	r16,r2
    baa4:	000d0e40 	call	d0e4 <__mulsi3>
    baa8:	b80b883a 	mov	r5,r23
    baac:	8809883a 	mov	r4,r17
    bab0:	1029883a 	mov	r20,r2
    bab4:	000d0dc0 	call	d0dc <__umodsi3>
    bab8:	d9400217 	ldw	r5,8(sp)
    babc:	1004943a 	slli	r2,r2,16
    bac0:	28ffffcc 	andi	r3,r5,65535
    bac4:	10c4b03a 	or	r2,r2,r3
    bac8:	1500032e 	bgeu	r2,r20,bad8 <__umoddi3+0x4bc>
    bacc:	1585883a 	add	r2,r2,r22
    bad0:	843fffc4 	addi	r16,r16,-1
    bad4:	1580562e 	bgeu	r2,r22,bc30 <__umoddi3+0x614>
    bad8:	d9800017 	ldw	r6,0(sp)
    badc:	e022943a 	slli	r17,fp,16
    bae0:	302ed43a 	srli	r23,r6,16
    bae4:	8462b03a 	or	r17,r16,r17
    bae8:	34ffffcc 	andi	r19,r6,65535
    baec:	882ad43a 	srli	r21,r17,16
    baf0:	8c7fffcc 	andi	r17,r17,65535
    baf4:	8809883a 	mov	r4,r17
    baf8:	980b883a 	mov	r5,r19
    bafc:	1521c83a 	sub	r16,r2,r20
    bb00:	000d0e40 	call	d0e4 <__mulsi3>
    bb04:	8809883a 	mov	r4,r17
    bb08:	b80b883a 	mov	r5,r23
    bb0c:	1029883a 	mov	r20,r2
    bb10:	000d0e40 	call	d0e4 <__mulsi3>
    bb14:	980b883a 	mov	r5,r19
    bb18:	a809883a 	mov	r4,r21
    bb1c:	1023883a 	mov	r17,r2
    bb20:	000d0e40 	call	d0e4 <__mulsi3>
    bb24:	a809883a 	mov	r4,r21
    bb28:	b80b883a 	mov	r5,r23
    bb2c:	1027883a 	mov	r19,r2
    bb30:	000d0e40 	call	d0e4 <__mulsi3>
    bb34:	100b883a 	mov	r5,r2
    bb38:	a004d43a 	srli	r2,r20,16
    bb3c:	8ce3883a 	add	r17,r17,r19
    bb40:	1449883a 	add	r4,r2,r17
    bb44:	24c0022e 	bgeu	r4,r19,bb50 <__umoddi3+0x534>
    bb48:	00800074 	movhi	r2,1
    bb4c:	288b883a 	add	r5,r5,r2
    bb50:	2004d43a 	srli	r2,r4,16
    bb54:	2008943a 	slli	r4,r4,16
    bb58:	a0ffffcc 	andi	r3,r20,65535
    bb5c:	288d883a 	add	r6,r5,r2
    bb60:	20c9883a 	add	r4,r4,r3
    bb64:	81800b36 	bltu	r16,r6,bb94 <__umoddi3+0x578>
    bb68:	81804026 	beq	r16,r6,bc6c <__umoddi3+0x650>
    bb6c:	818dc83a 	sub	r6,r16,r6
    bb70:	00000f06 	br	bbb0 <__umoddi3+0x594>
    bb74:	30c5c83a 	sub	r2,r6,r3
    bb78:	182d883a 	mov	r22,r3
    bb7c:	8084d83a 	srl	r2,r16,r2
    bb80:	a8c6983a 	sll	r3,r21,r3
    bb84:	9da6983a 	sll	r19,r19,r22
    bb88:	85a0983a 	sll	r16,r16,r22
    bb8c:	18aab03a 	or	r21,r3,r2
    bb90:	003f1d06 	br	b808 <__umoddi3+0x1ec>
    bb94:	d8c00017 	ldw	r3,0(sp)
    bb98:	20c5c83a 	sub	r2,r4,r3
    bb9c:	2089803a 	cmpltu	r4,r4,r2
    bba0:	3587c83a 	sub	r3,r6,r22
    bba4:	1907c83a 	sub	r3,r3,r4
    bba8:	80cdc83a 	sub	r6,r16,r3
    bbac:	1009883a 	mov	r4,r2
    bbb0:	d9400117 	ldw	r5,4(sp)
    bbb4:	2905c83a 	sub	r2,r5,r4
    bbb8:	2887803a 	cmpltu	r3,r5,r2
    bbbc:	30c7c83a 	sub	r3,r6,r3
    bbc0:	d9800317 	ldw	r6,12(sp)
    bbc4:	1484d83a 	srl	r2,r2,r18
    bbc8:	1988983a 	sll	r4,r3,r6
    bbcc:	1c86d83a 	srl	r3,r3,r18
    bbd0:	2088b03a 	or	r4,r4,r2
    bbd4:	2011883a 	mov	r8,r4
    bbd8:	1813883a 	mov	r9,r3
    bbdc:	d9000415 	stw	r4,16(sp)
    bbe0:	d8c00515 	stw	r3,20(sp)
    bbe4:	003ed406 	br	b738 <__umoddi3+0x11c>
    bbe8:	01400604 	movi	r5,24
    bbec:	2805883a 	mov	r2,r5
    bbf0:	003ea606 	br	b68c <__umoddi3+0x70>
    bbf4:	01400204 	movi	r5,8
    bbf8:	2805883a 	mov	r2,r5
    bbfc:	003ea306 	br	b68c <__umoddi3+0x70>
    bc00:	01400204 	movi	r5,8
    bc04:	2805883a 	mov	r2,r5
    bc08:	003edf06 	br	b788 <__umoddi3+0x16c>
    bc0c:	01400204 	movi	r5,8
    bc10:	2805883a 	mov	r2,r5
    bc14:	003ef206 	br	b7e0 <__umoddi3+0x1c4>
    bc18:	01400604 	movi	r5,24
    bc1c:	2805883a 	mov	r2,r5
    bc20:	003eef06 	br	b7e0 <__umoddi3+0x1c4>
    bc24:	01400604 	movi	r5,24
    bc28:	2805883a 	mov	r2,r5
    bc2c:	003ed606 	br	b788 <__umoddi3+0x16c>
    bc30:	153fa92e 	bgeu	r2,r20,bad8 <__umoddi3+0x4bc>
    bc34:	843fffc4 	addi	r16,r16,-1
    bc38:	1585883a 	add	r2,r2,r22
    bc3c:	003fa606 	br	bad8 <__umoddi3+0x4bc>
    bc40:	157f912e 	bgeu	r2,r21,ba88 <__umoddi3+0x46c>
    bc44:	e73fffc4 	addi	fp,fp,-1
    bc48:	1585883a 	add	r2,r2,r22
    bc4c:	003f8e06 	br	ba88 <__umoddi3+0x46c>
    bc50:	157f542e 	bgeu	r2,r21,b9a4 <__umoddi3+0x388>
    bc54:	14c5883a 	add	r2,r2,r19
    bc58:	003f5206 	br	b9a4 <__umoddi3+0x388>
    bc5c:	14c5883a 	add	r2,r2,r19
    bc60:	003efc06 	br	b854 <__umoddi3+0x238>
    bc64:	14c5883a 	add	r2,r2,r19
    bc68:	003ea606 	br	b704 <__umoddi3+0xe8>
    bc6c:	d8800117 	ldw	r2,4(sp)
    bc70:	113fc836 	bltu	r2,r4,bb94 <__umoddi3+0x578>
    bc74:	000d883a 	mov	r6,zero
    bc78:	003fcd06 	br	bbb0 <__umoddi3+0x594>

0000bc7c <__nesf2>:
    bc7c:	defff304 	addi	sp,sp,-52
    bc80:	dc400b15 	stw	r17,44(sp)
    bc84:	dc400204 	addi	r17,sp,8
    bc88:	dc000a15 	stw	r16,40(sp)
    bc8c:	d9000015 	stw	r4,0(sp)
    bc90:	d9400115 	stw	r5,4(sp)
    bc94:	d809883a 	mov	r4,sp
    bc98:	880b883a 	mov	r5,r17
    bc9c:	dc000604 	addi	r16,sp,24
    bca0:	dfc00c15 	stw	ra,48(sp)
    bca4:	00007b40 	call	7b4 <__unpack_f>
    bca8:	d9000104 	addi	r4,sp,4
    bcac:	800b883a 	mov	r5,r16
    bcb0:	00007b40 	call	7b4 <__unpack_f>
    bcb4:	d8800217 	ldw	r2,8(sp)
    bcb8:	00c00044 	movi	r3,1
    bcbc:	180d883a 	mov	r6,r3
    bcc0:	1880062e 	bgeu	r3,r2,bcdc <__nesf2+0x60>
    bcc4:	d8800617 	ldw	r2,24(sp)
    bcc8:	8809883a 	mov	r4,r17
    bccc:	800b883a 	mov	r5,r16
    bcd0:	1880022e 	bgeu	r3,r2,bcdc <__nesf2+0x60>
    bcd4:	000d2c00 	call	d2c0 <__fpcmp_parts_f>
    bcd8:	100d883a 	mov	r6,r2
    bcdc:	3005883a 	mov	r2,r6
    bce0:	dfc00c17 	ldw	ra,48(sp)
    bce4:	dc400b17 	ldw	r17,44(sp)
    bce8:	dc000a17 	ldw	r16,40(sp)
    bcec:	dec00d04 	addi	sp,sp,52
    bcf0:	f800283a 	ret

0000bcf4 <__gtsf2>:
    bcf4:	defff304 	addi	sp,sp,-52
    bcf8:	dc400b15 	stw	r17,44(sp)
    bcfc:	dc400204 	addi	r17,sp,8
    bd00:	dc000a15 	stw	r16,40(sp)
    bd04:	d9000015 	stw	r4,0(sp)
    bd08:	d9400115 	stw	r5,4(sp)
    bd0c:	d809883a 	mov	r4,sp
    bd10:	880b883a 	mov	r5,r17
    bd14:	dc000604 	addi	r16,sp,24
    bd18:	dfc00c15 	stw	ra,48(sp)
    bd1c:	00007b40 	call	7b4 <__unpack_f>
    bd20:	d9000104 	addi	r4,sp,4
    bd24:	800b883a 	mov	r5,r16
    bd28:	00007b40 	call	7b4 <__unpack_f>
    bd2c:	d8800217 	ldw	r2,8(sp)
    bd30:	00c00044 	movi	r3,1
    bd34:	01bfffc4 	movi	r6,-1
    bd38:	1880062e 	bgeu	r3,r2,bd54 <__gtsf2+0x60>
    bd3c:	d8800617 	ldw	r2,24(sp)
    bd40:	8809883a 	mov	r4,r17
    bd44:	800b883a 	mov	r5,r16
    bd48:	1880022e 	bgeu	r3,r2,bd54 <__gtsf2+0x60>
    bd4c:	000d2c00 	call	d2c0 <__fpcmp_parts_f>
    bd50:	100d883a 	mov	r6,r2
    bd54:	3005883a 	mov	r2,r6
    bd58:	dfc00c17 	ldw	ra,48(sp)
    bd5c:	dc400b17 	ldw	r17,44(sp)
    bd60:	dc000a17 	ldw	r16,40(sp)
    bd64:	dec00d04 	addi	sp,sp,52
    bd68:	f800283a 	ret

0000bd6c <__ltsf2>:
    bd6c:	defff304 	addi	sp,sp,-52
    bd70:	dc400b15 	stw	r17,44(sp)
    bd74:	dc400204 	addi	r17,sp,8
    bd78:	dc000a15 	stw	r16,40(sp)
    bd7c:	d9000015 	stw	r4,0(sp)
    bd80:	d9400115 	stw	r5,4(sp)
    bd84:	d809883a 	mov	r4,sp
    bd88:	880b883a 	mov	r5,r17
    bd8c:	dc000604 	addi	r16,sp,24
    bd90:	dfc00c15 	stw	ra,48(sp)
    bd94:	00007b40 	call	7b4 <__unpack_f>
    bd98:	d9000104 	addi	r4,sp,4
    bd9c:	800b883a 	mov	r5,r16
    bda0:	00007b40 	call	7b4 <__unpack_f>
    bda4:	d8800217 	ldw	r2,8(sp)
    bda8:	00c00044 	movi	r3,1
    bdac:	180d883a 	mov	r6,r3
    bdb0:	1880062e 	bgeu	r3,r2,bdcc <__ltsf2+0x60>
    bdb4:	d8800617 	ldw	r2,24(sp)
    bdb8:	8809883a 	mov	r4,r17
    bdbc:	800b883a 	mov	r5,r16
    bdc0:	1880022e 	bgeu	r3,r2,bdcc <__ltsf2+0x60>
    bdc4:	000d2c00 	call	d2c0 <__fpcmp_parts_f>
    bdc8:	100d883a 	mov	r6,r2
    bdcc:	3005883a 	mov	r2,r6
    bdd0:	dfc00c17 	ldw	ra,48(sp)
    bdd4:	dc400b17 	ldw	r17,44(sp)
    bdd8:	dc000a17 	ldw	r16,40(sp)
    bddc:	dec00d04 	addi	sp,sp,52
    bde0:	f800283a 	ret

0000bde4 <_fpadd_parts>:
    bde4:	defff804 	addi	sp,sp,-32
    bde8:	dcc00315 	stw	r19,12(sp)
    bdec:	2027883a 	mov	r19,r4
    bdf0:	21000017 	ldw	r4,0(r4)
    bdf4:	00c00044 	movi	r3,1
    bdf8:	dd400515 	stw	r21,20(sp)
    bdfc:	dd000415 	stw	r20,16(sp)
    be00:	ddc00715 	stw	r23,28(sp)
    be04:	dd800615 	stw	r22,24(sp)
    be08:	dc800215 	stw	r18,8(sp)
    be0c:	dc400115 	stw	r17,4(sp)
    be10:	dc000015 	stw	r16,0(sp)
    be14:	282b883a 	mov	r21,r5
    be18:	3029883a 	mov	r20,r6
    be1c:	1900632e 	bgeu	r3,r4,bfac <_fpadd_parts+0x1c8>
    be20:	28800017 	ldw	r2,0(r5)
    be24:	1880812e 	bgeu	r3,r2,c02c <_fpadd_parts+0x248>
    be28:	00c00104 	movi	r3,4
    be2c:	20c0dc26 	beq	r4,r3,c1a0 <_fpadd_parts+0x3bc>
    be30:	10c07e26 	beq	r2,r3,c02c <_fpadd_parts+0x248>
    be34:	00c00084 	movi	r3,2
    be38:	10c06726 	beq	r2,r3,bfd8 <_fpadd_parts+0x1f4>
    be3c:	20c07b26 	beq	r4,r3,c02c <_fpadd_parts+0x248>
    be40:	9dc00217 	ldw	r23,8(r19)
    be44:	28c00217 	ldw	r3,8(r5)
    be48:	9c400317 	ldw	r17,12(r19)
    be4c:	2bc00317 	ldw	r15,12(r5)
    be50:	b8cdc83a 	sub	r6,r23,r3
    be54:	9c800417 	ldw	r18,16(r19)
    be58:	2c000417 	ldw	r16,16(r5)
    be5c:	3009883a 	mov	r4,r6
    be60:	30009716 	blt	r6,zero,c0c0 <_fpadd_parts+0x2dc>
    be64:	00800fc4 	movi	r2,63
    be68:	11806b16 	blt	r2,r6,c018 <_fpadd_parts+0x234>
    be6c:	0100a40e 	bge	zero,r4,c100 <_fpadd_parts+0x31c>
    be70:	35bff804 	addi	r22,r6,-32
    be74:	b000bc16 	blt	r22,zero,c168 <_fpadd_parts+0x384>
    be78:	8596d83a 	srl	r11,r16,r22
    be7c:	0019883a 	mov	r12,zero
    be80:	0013883a 	mov	r9,zero
    be84:	01000044 	movi	r4,1
    be88:	0015883a 	mov	r10,zero
    be8c:	b000be16 	blt	r22,zero,c188 <_fpadd_parts+0x3a4>
    be90:	2590983a 	sll	r8,r4,r22
    be94:	000f883a 	mov	r7,zero
    be98:	00bfffc4 	movi	r2,-1
    be9c:	3889883a 	add	r4,r7,r2
    bea0:	408b883a 	add	r5,r8,r2
    bea4:	21cd803a 	cmpltu	r6,r4,r7
    bea8:	314b883a 	add	r5,r6,r5
    beac:	7904703a 	and	r2,r15,r4
    beb0:	8146703a 	and	r3,r16,r5
    beb4:	10c4b03a 	or	r2,r2,r3
    beb8:	10000226 	beq	r2,zero,bec4 <_fpadd_parts+0xe0>
    bebc:	02400044 	movi	r9,1
    bec0:	0015883a 	mov	r10,zero
    bec4:	5a5eb03a 	or	r15,r11,r9
    bec8:	62a0b03a 	or	r16,r12,r10
    becc:	99400117 	ldw	r5,4(r19)
    bed0:	a8800117 	ldw	r2,4(r21)
    bed4:	28806e26 	beq	r5,r2,c090 <_fpadd_parts+0x2ac>
    bed8:	28006626 	beq	r5,zero,c074 <_fpadd_parts+0x290>
    bedc:	7c45c83a 	sub	r2,r15,r17
    bee0:	7889803a 	cmpltu	r4,r15,r2
    bee4:	8487c83a 	sub	r3,r16,r18
    bee8:	1909c83a 	sub	r4,r3,r4
    beec:	100d883a 	mov	r6,r2
    bef0:	200f883a 	mov	r7,r4
    bef4:	38007716 	blt	r7,zero,c0d4 <_fpadd_parts+0x2f0>
    bef8:	a5c00215 	stw	r23,8(r20)
    befc:	a1c00415 	stw	r7,16(r20)
    bf00:	a0000115 	stw	zero,4(r20)
    bf04:	a1800315 	stw	r6,12(r20)
    bf08:	a2000317 	ldw	r8,12(r20)
    bf0c:	a2400417 	ldw	r9,16(r20)
    bf10:	00bfffc4 	movi	r2,-1
    bf14:	408b883a 	add	r5,r8,r2
    bf18:	2a09803a 	cmpltu	r4,r5,r8
    bf1c:	488d883a 	add	r6,r9,r2
    bf20:	01c40034 	movhi	r7,4096
    bf24:	39ffffc4 	addi	r7,r7,-1
    bf28:	218d883a 	add	r6,r4,r6
    bf2c:	39801736 	bltu	r7,r6,bf8c <_fpadd_parts+0x1a8>
    bf30:	31c06526 	beq	r6,r7,c0c8 <_fpadd_parts+0x2e4>
    bf34:	a3000217 	ldw	r12,8(r20)
    bf38:	4209883a 	add	r4,r8,r8
    bf3c:	00bfffc4 	movi	r2,-1
    bf40:	220f803a 	cmpltu	r7,r4,r8
    bf44:	4a4b883a 	add	r5,r9,r9
    bf48:	394f883a 	add	r7,r7,r5
    bf4c:	2095883a 	add	r10,r4,r2
    bf50:	3897883a 	add	r11,r7,r2
    bf54:	510d803a 	cmpltu	r6,r10,r4
    bf58:	6099883a 	add	r12,r12,r2
    bf5c:	32d7883a 	add	r11,r6,r11
    bf60:	00840034 	movhi	r2,4096
    bf64:	10bfffc4 	addi	r2,r2,-1
    bf68:	2011883a 	mov	r8,r4
    bf6c:	3813883a 	mov	r9,r7
    bf70:	a1000315 	stw	r4,12(r20)
    bf74:	a1c00415 	stw	r7,16(r20)
    bf78:	a3000215 	stw	r12,8(r20)
    bf7c:	12c00336 	bltu	r2,r11,bf8c <_fpadd_parts+0x1a8>
    bf80:	58bfed1e 	bne	r11,r2,bf38 <_fpadd_parts+0x154>
    bf84:	00bfff84 	movi	r2,-2
    bf88:	12bfeb2e 	bgeu	r2,r10,bf38 <_fpadd_parts+0x154>
    bf8c:	a2800417 	ldw	r10,16(r20)
    bf90:	008000c4 	movi	r2,3
    bf94:	00c80034 	movhi	r3,8192
    bf98:	18ffffc4 	addi	r3,r3,-1
    bf9c:	a2400317 	ldw	r9,12(r20)
    bfa0:	a0800015 	stw	r2,0(r20)
    bfa4:	1a802336 	bltu	r3,r10,c034 <_fpadd_parts+0x250>
    bfa8:	a027883a 	mov	r19,r20
    bfac:	9805883a 	mov	r2,r19
    bfb0:	ddc00717 	ldw	r23,28(sp)
    bfb4:	dd800617 	ldw	r22,24(sp)
    bfb8:	dd400517 	ldw	r21,20(sp)
    bfbc:	dd000417 	ldw	r20,16(sp)
    bfc0:	dcc00317 	ldw	r19,12(sp)
    bfc4:	dc800217 	ldw	r18,8(sp)
    bfc8:	dc400117 	ldw	r17,4(sp)
    bfcc:	dc000017 	ldw	r16,0(sp)
    bfd0:	dec00804 	addi	sp,sp,32
    bfd4:	f800283a 	ret
    bfd8:	20fff41e 	bne	r4,r3,bfac <_fpadd_parts+0x1c8>
    bfdc:	31000015 	stw	r4,0(r6)
    bfe0:	98800117 	ldw	r2,4(r19)
    bfe4:	30800115 	stw	r2,4(r6)
    bfe8:	98c00217 	ldw	r3,8(r19)
    bfec:	30c00215 	stw	r3,8(r6)
    bff0:	98800317 	ldw	r2,12(r19)
    bff4:	30800315 	stw	r2,12(r6)
    bff8:	98c00417 	ldw	r3,16(r19)
    bffc:	30c00415 	stw	r3,16(r6)
    c000:	98800117 	ldw	r2,4(r19)
    c004:	28c00117 	ldw	r3,4(r5)
    c008:	3027883a 	mov	r19,r6
    c00c:	10c4703a 	and	r2,r2,r3
    c010:	30800115 	stw	r2,4(r6)
    c014:	003fe506 	br	bfac <_fpadd_parts+0x1c8>
    c018:	1dc02616 	blt	r3,r23,c0b4 <_fpadd_parts+0x2d0>
    c01c:	0023883a 	mov	r17,zero
    c020:	182f883a 	mov	r23,r3
    c024:	0025883a 	mov	r18,zero
    c028:	003fa806 	br	becc <_fpadd_parts+0xe8>
    c02c:	a827883a 	mov	r19,r21
    c030:	003fde06 	br	bfac <_fpadd_parts+0x1c8>
    c034:	01800044 	movi	r6,1
    c038:	500497fa 	slli	r2,r10,31
    c03c:	4808d07a 	srli	r4,r9,1
    c040:	518ad83a 	srl	r5,r10,r6
    c044:	a2000217 	ldw	r8,8(r20)
    c048:	1108b03a 	or	r4,r2,r4
    c04c:	0007883a 	mov	r3,zero
    c050:	4984703a 	and	r2,r9,r6
    c054:	208cb03a 	or	r6,r4,r2
    c058:	28ceb03a 	or	r7,r5,r3
    c05c:	42000044 	addi	r8,r8,1
    c060:	a027883a 	mov	r19,r20
    c064:	a1c00415 	stw	r7,16(r20)
    c068:	a2000215 	stw	r8,8(r20)
    c06c:	a1800315 	stw	r6,12(r20)
    c070:	003fce06 	br	bfac <_fpadd_parts+0x1c8>
    c074:	8bc5c83a 	sub	r2,r17,r15
    c078:	8889803a 	cmpltu	r4,r17,r2
    c07c:	9407c83a 	sub	r3,r18,r16
    c080:	1909c83a 	sub	r4,r3,r4
    c084:	100d883a 	mov	r6,r2
    c088:	200f883a 	mov	r7,r4
    c08c:	003f9906 	br	bef4 <_fpadd_parts+0x110>
    c090:	7c45883a 	add	r2,r15,r17
    c094:	13c9803a 	cmpltu	r4,r2,r15
    c098:	8487883a 	add	r3,r16,r18
    c09c:	20c9883a 	add	r4,r4,r3
    c0a0:	a1400115 	stw	r5,4(r20)
    c0a4:	a5c00215 	stw	r23,8(r20)
    c0a8:	a0800315 	stw	r2,12(r20)
    c0ac:	a1000415 	stw	r4,16(r20)
    c0b0:	003fb606 	br	bf8c <_fpadd_parts+0x1a8>
    c0b4:	001f883a 	mov	r15,zero
    c0b8:	0021883a 	mov	r16,zero
    c0bc:	003f8306 	br	becc <_fpadd_parts+0xe8>
    c0c0:	018dc83a 	sub	r6,zero,r6
    c0c4:	003f6706 	br	be64 <_fpadd_parts+0x80>
    c0c8:	00bfff84 	movi	r2,-2
    c0cc:	117faf36 	bltu	r2,r5,bf8c <_fpadd_parts+0x1a8>
    c0d0:	003f9806 	br	bf34 <_fpadd_parts+0x150>
    c0d4:	0005883a 	mov	r2,zero
    c0d8:	1189c83a 	sub	r4,r2,r6
    c0dc:	1105803a 	cmpltu	r2,r2,r4
    c0e0:	01cbc83a 	sub	r5,zero,r7
    c0e4:	2885c83a 	sub	r2,r5,r2
    c0e8:	01800044 	movi	r6,1
    c0ec:	a1800115 	stw	r6,4(r20)
    c0f0:	a5c00215 	stw	r23,8(r20)
    c0f4:	a1000315 	stw	r4,12(r20)
    c0f8:	a0800415 	stw	r2,16(r20)
    c0fc:	003f8206 	br	bf08 <_fpadd_parts+0x124>
    c100:	203f7226 	beq	r4,zero,becc <_fpadd_parts+0xe8>
    c104:	35bff804 	addi	r22,r6,-32
    c108:	b9af883a 	add	r23,r23,r6
    c10c:	b0003116 	blt	r22,zero,c1d4 <_fpadd_parts+0x3f0>
    c110:	959ad83a 	srl	r13,r18,r22
    c114:	001d883a 	mov	r14,zero
    c118:	000f883a 	mov	r7,zero
    c11c:	01000044 	movi	r4,1
    c120:	0011883a 	mov	r8,zero
    c124:	b0002516 	blt	r22,zero,c1bc <_fpadd_parts+0x3d8>
    c128:	2594983a 	sll	r10,r4,r22
    c12c:	0013883a 	mov	r9,zero
    c130:	00bfffc4 	movi	r2,-1
    c134:	4889883a 	add	r4,r9,r2
    c138:	508b883a 	add	r5,r10,r2
    c13c:	224d803a 	cmpltu	r6,r4,r9
    c140:	314b883a 	add	r5,r6,r5
    c144:	8904703a 	and	r2,r17,r4
    c148:	9146703a 	and	r3,r18,r5
    c14c:	10c4b03a 	or	r2,r2,r3
    c150:	10000226 	beq	r2,zero,c15c <_fpadd_parts+0x378>
    c154:	01c00044 	movi	r7,1
    c158:	0011883a 	mov	r8,zero
    c15c:	69e2b03a 	or	r17,r13,r7
    c160:	7224b03a 	or	r18,r14,r8
    c164:	003f5906 	br	becc <_fpadd_parts+0xe8>
    c168:	8407883a 	add	r3,r16,r16
    c16c:	008007c4 	movi	r2,31
    c170:	1185c83a 	sub	r2,r2,r6
    c174:	1886983a 	sll	r3,r3,r2
    c178:	7996d83a 	srl	r11,r15,r6
    c17c:	8198d83a 	srl	r12,r16,r6
    c180:	1ad6b03a 	or	r11,r3,r11
    c184:	003f3e06 	br	be80 <_fpadd_parts+0x9c>
    c188:	2006d07a 	srli	r3,r4,1
    c18c:	008007c4 	movi	r2,31
    c190:	1185c83a 	sub	r2,r2,r6
    c194:	1890d83a 	srl	r8,r3,r2
    c198:	218e983a 	sll	r7,r4,r6
    c19c:	003f3e06 	br	be98 <_fpadd_parts+0xb4>
    c1a0:	113f821e 	bne	r2,r4,bfac <_fpadd_parts+0x1c8>
    c1a4:	28c00117 	ldw	r3,4(r5)
    c1a8:	98800117 	ldw	r2,4(r19)
    c1ac:	10ff7f26 	beq	r2,r3,bfac <_fpadd_parts+0x1c8>
    c1b0:	04c00074 	movhi	r19,1
    c1b4:	9cfc6204 	addi	r19,r19,-3704
    c1b8:	003f7c06 	br	bfac <_fpadd_parts+0x1c8>
    c1bc:	2006d07a 	srli	r3,r4,1
    c1c0:	008007c4 	movi	r2,31
    c1c4:	1185c83a 	sub	r2,r2,r6
    c1c8:	1894d83a 	srl	r10,r3,r2
    c1cc:	2192983a 	sll	r9,r4,r6
    c1d0:	003fd706 	br	c130 <_fpadd_parts+0x34c>
    c1d4:	9487883a 	add	r3,r18,r18
    c1d8:	008007c4 	movi	r2,31
    c1dc:	1185c83a 	sub	r2,r2,r6
    c1e0:	1886983a 	sll	r3,r3,r2
    c1e4:	899ad83a 	srl	r13,r17,r6
    c1e8:	919cd83a 	srl	r14,r18,r6
    c1ec:	1b5ab03a 	or	r13,r3,r13
    c1f0:	003fc906 	br	c118 <_fpadd_parts+0x334>

0000c1f4 <__subdf3>:
    c1f4:	deffea04 	addi	sp,sp,-88
    c1f8:	dcc01415 	stw	r19,80(sp)
    c1fc:	dcc00404 	addi	r19,sp,16
    c200:	2011883a 	mov	r8,r4
    c204:	2813883a 	mov	r9,r5
    c208:	dc401315 	stw	r17,76(sp)
    c20c:	d809883a 	mov	r4,sp
    c210:	980b883a 	mov	r5,r19
    c214:	dc400904 	addi	r17,sp,36
    c218:	dfc01515 	stw	ra,84(sp)
    c21c:	da400115 	stw	r9,4(sp)
    c220:	d9c00315 	stw	r7,12(sp)
    c224:	da000015 	stw	r8,0(sp)
    c228:	d9800215 	stw	r6,8(sp)
    c22c:	00008a80 	call	8a8 <__unpack_d>
    c230:	d9000204 	addi	r4,sp,8
    c234:	880b883a 	mov	r5,r17
    c238:	00008a80 	call	8a8 <__unpack_d>
    c23c:	d8800a17 	ldw	r2,40(sp)
    c240:	880b883a 	mov	r5,r17
    c244:	9809883a 	mov	r4,r19
    c248:	d9800e04 	addi	r6,sp,56
    c24c:	1080005c 	xori	r2,r2,1
    c250:	d8800a15 	stw	r2,40(sp)
    c254:	000bde40 	call	bde4 <_fpadd_parts>
    c258:	1009883a 	mov	r4,r2
    c25c:	000d3680 	call	d368 <__pack_d>
    c260:	dfc01517 	ldw	ra,84(sp)
    c264:	dcc01417 	ldw	r19,80(sp)
    c268:	dc401317 	ldw	r17,76(sp)
    c26c:	dec01604 	addi	sp,sp,88
    c270:	f800283a 	ret

0000c274 <__adddf3>:
    c274:	deffea04 	addi	sp,sp,-88
    c278:	dcc01415 	stw	r19,80(sp)
    c27c:	dcc00404 	addi	r19,sp,16
    c280:	2011883a 	mov	r8,r4
    c284:	2813883a 	mov	r9,r5
    c288:	dc401315 	stw	r17,76(sp)
    c28c:	d809883a 	mov	r4,sp
    c290:	980b883a 	mov	r5,r19
    c294:	dc400904 	addi	r17,sp,36
    c298:	dfc01515 	stw	ra,84(sp)
    c29c:	da400115 	stw	r9,4(sp)
    c2a0:	d9c00315 	stw	r7,12(sp)
    c2a4:	da000015 	stw	r8,0(sp)
    c2a8:	d9800215 	stw	r6,8(sp)
    c2ac:	00008a80 	call	8a8 <__unpack_d>
    c2b0:	d9000204 	addi	r4,sp,8
    c2b4:	880b883a 	mov	r5,r17
    c2b8:	00008a80 	call	8a8 <__unpack_d>
    c2bc:	d9800e04 	addi	r6,sp,56
    c2c0:	9809883a 	mov	r4,r19
    c2c4:	880b883a 	mov	r5,r17
    c2c8:	000bde40 	call	bde4 <_fpadd_parts>
    c2cc:	1009883a 	mov	r4,r2
    c2d0:	000d3680 	call	d368 <__pack_d>
    c2d4:	dfc01517 	ldw	ra,84(sp)
    c2d8:	dcc01417 	ldw	r19,80(sp)
    c2dc:	dc401317 	ldw	r17,76(sp)
    c2e0:	dec01604 	addi	sp,sp,88
    c2e4:	f800283a 	ret

0000c2e8 <__muldf3>:
    c2e8:	deffe004 	addi	sp,sp,-128
    c2ec:	dc401815 	stw	r17,96(sp)
    c2f0:	dc400404 	addi	r17,sp,16
    c2f4:	2011883a 	mov	r8,r4
    c2f8:	2813883a 	mov	r9,r5
    c2fc:	dc001715 	stw	r16,92(sp)
    c300:	d809883a 	mov	r4,sp
    c304:	880b883a 	mov	r5,r17
    c308:	dc000904 	addi	r16,sp,36
    c30c:	dfc01f15 	stw	ra,124(sp)
    c310:	da400115 	stw	r9,4(sp)
    c314:	d9c00315 	stw	r7,12(sp)
    c318:	da000015 	stw	r8,0(sp)
    c31c:	d9800215 	stw	r6,8(sp)
    c320:	ddc01e15 	stw	r23,120(sp)
    c324:	dd801d15 	stw	r22,116(sp)
    c328:	dd401c15 	stw	r21,112(sp)
    c32c:	dd001b15 	stw	r20,108(sp)
    c330:	dcc01a15 	stw	r19,104(sp)
    c334:	dc801915 	stw	r18,100(sp)
    c338:	00008a80 	call	8a8 <__unpack_d>
    c33c:	d9000204 	addi	r4,sp,8
    c340:	800b883a 	mov	r5,r16
    c344:	00008a80 	call	8a8 <__unpack_d>
    c348:	d9000417 	ldw	r4,16(sp)
    c34c:	00800044 	movi	r2,1
    c350:	1100102e 	bgeu	r2,r4,c394 <__muldf3+0xac>
    c354:	d8c00917 	ldw	r3,36(sp)
    c358:	10c0062e 	bgeu	r2,r3,c374 <__muldf3+0x8c>
    c35c:	00800104 	movi	r2,4
    c360:	20800a26 	beq	r4,r2,c38c <__muldf3+0xa4>
    c364:	1880cc26 	beq	r3,r2,c698 <__muldf3+0x3b0>
    c368:	00800084 	movi	r2,2
    c36c:	20800926 	beq	r4,r2,c394 <__muldf3+0xac>
    c370:	1880191e 	bne	r3,r2,c3d8 <__muldf3+0xf0>
    c374:	d8c00a17 	ldw	r3,40(sp)
    c378:	d8800517 	ldw	r2,20(sp)
    c37c:	8009883a 	mov	r4,r16
    c380:	10c4c03a 	cmpne	r2,r2,r3
    c384:	d8800a15 	stw	r2,40(sp)
    c388:	00000706 	br	c3a8 <__muldf3+0xc0>
    c38c:	00800084 	movi	r2,2
    c390:	1880c326 	beq	r3,r2,c6a0 <__muldf3+0x3b8>
    c394:	d8800517 	ldw	r2,20(sp)
    c398:	d8c00a17 	ldw	r3,40(sp)
    c39c:	8809883a 	mov	r4,r17
    c3a0:	10c4c03a 	cmpne	r2,r2,r3
    c3a4:	d8800515 	stw	r2,20(sp)
    c3a8:	000d3680 	call	d368 <__pack_d>
    c3ac:	dfc01f17 	ldw	ra,124(sp)
    c3b0:	ddc01e17 	ldw	r23,120(sp)
    c3b4:	dd801d17 	ldw	r22,116(sp)
    c3b8:	dd401c17 	ldw	r21,112(sp)
    c3bc:	dd001b17 	ldw	r20,108(sp)
    c3c0:	dcc01a17 	ldw	r19,104(sp)
    c3c4:	dc801917 	ldw	r18,100(sp)
    c3c8:	dc401817 	ldw	r17,96(sp)
    c3cc:	dc001717 	ldw	r16,92(sp)
    c3d0:	dec02004 	addi	sp,sp,128
    c3d4:	f800283a 	ret
    c3d8:	dd800717 	ldw	r22,28(sp)
    c3dc:	dc800c17 	ldw	r18,48(sp)
    c3e0:	002b883a 	mov	r21,zero
    c3e4:	0023883a 	mov	r17,zero
    c3e8:	a80b883a 	mov	r5,r21
    c3ec:	b00d883a 	mov	r6,r22
    c3f0:	880f883a 	mov	r7,r17
    c3f4:	ddc00817 	ldw	r23,32(sp)
    c3f8:	dcc00d17 	ldw	r19,52(sp)
    c3fc:	9009883a 	mov	r4,r18
    c400:	000d11c0 	call	d11c <__muldi3>
    c404:	001b883a 	mov	r13,zero
    c408:	680f883a 	mov	r7,r13
    c40c:	b009883a 	mov	r4,r22
    c410:	000b883a 	mov	r5,zero
    c414:	980d883a 	mov	r6,r19
    c418:	b82d883a 	mov	r22,r23
    c41c:	002f883a 	mov	r23,zero
    c420:	db401615 	stw	r13,88(sp)
    c424:	d8801315 	stw	r2,76(sp)
    c428:	d8c01415 	stw	r3,80(sp)
    c42c:	dcc01515 	stw	r19,84(sp)
    c430:	000d11c0 	call	d11c <__muldi3>
    c434:	b00d883a 	mov	r6,r22
    c438:	000b883a 	mov	r5,zero
    c43c:	9009883a 	mov	r4,r18
    c440:	b80f883a 	mov	r7,r23
    c444:	1021883a 	mov	r16,r2
    c448:	1823883a 	mov	r17,r3
    c44c:	000d11c0 	call	d11c <__muldi3>
    c450:	8085883a 	add	r2,r16,r2
    c454:	140d803a 	cmpltu	r6,r2,r16
    c458:	88c7883a 	add	r3,r17,r3
    c45c:	30cd883a 	add	r6,r6,r3
    c460:	1029883a 	mov	r20,r2
    c464:	302b883a 	mov	r21,r6
    c468:	da801317 	ldw	r10,76(sp)
    c46c:	dac01417 	ldw	r11,80(sp)
    c470:	db001517 	ldw	r12,84(sp)
    c474:	db401617 	ldw	r13,88(sp)
    c478:	3440612e 	bgeu	r6,r17,c600 <__muldf3+0x318>
    c47c:	0009883a 	mov	r4,zero
    c480:	5105883a 	add	r2,r10,r4
    c484:	128d803a 	cmpltu	r6,r2,r10
    c488:	5d07883a 	add	r3,r11,r20
    c48c:	30cd883a 	add	r6,r6,r3
    c490:	0021883a 	mov	r16,zero
    c494:	04400044 	movi	r17,1
    c498:	1025883a 	mov	r18,r2
    c49c:	3027883a 	mov	r19,r6
    c4a0:	32c06236 	bltu	r6,r11,c62c <__muldf3+0x344>
    c4a4:	59807a26 	beq	r11,r6,c690 <__muldf3+0x3a8>
    c4a8:	680b883a 	mov	r5,r13
    c4ac:	b80f883a 	mov	r7,r23
    c4b0:	6009883a 	mov	r4,r12
    c4b4:	b00d883a 	mov	r6,r22
    c4b8:	000d11c0 	call	d11c <__muldi3>
    c4bc:	1009883a 	mov	r4,r2
    c4c0:	000f883a 	mov	r7,zero
    c4c4:	1545883a 	add	r2,r2,r21
    c4c8:	1111803a 	cmpltu	r8,r2,r4
    c4cc:	19c7883a 	add	r3,r3,r7
    c4d0:	40c7883a 	add	r3,r8,r3
    c4d4:	88cb883a 	add	r5,r17,r3
    c4d8:	d8c00617 	ldw	r3,24(sp)
    c4dc:	8089883a 	add	r4,r16,r2
    c4e0:	d8800b17 	ldw	r2,44(sp)
    c4e4:	18c00104 	addi	r3,r3,4
    c4e8:	240d803a 	cmpltu	r6,r4,r16
    c4ec:	10c7883a 	add	r3,r2,r3
    c4f0:	2013883a 	mov	r9,r4
    c4f4:	d8800a17 	ldw	r2,40(sp)
    c4f8:	d9000517 	ldw	r4,20(sp)
    c4fc:	314d883a 	add	r6,r6,r5
    c500:	3015883a 	mov	r10,r6
    c504:	2088c03a 	cmpne	r4,r4,r2
    c508:	00880034 	movhi	r2,8192
    c50c:	10bfffc4 	addi	r2,r2,-1
    c510:	d9000f15 	stw	r4,60(sp)
    c514:	d8c01015 	stw	r3,64(sp)
    c518:	1180162e 	bgeu	r2,r6,c574 <__muldf3+0x28c>
    c51c:	1811883a 	mov	r8,r3
    c520:	101f883a 	mov	r15,r2
    c524:	980497fa 	slli	r2,r19,31
    c528:	9016d07a 	srli	r11,r18,1
    c52c:	500697fa 	slli	r3,r10,31
    c530:	480cd07a 	srli	r6,r9,1
    c534:	500ed07a 	srli	r7,r10,1
    c538:	12d6b03a 	or	r11,r2,r11
    c53c:	00800044 	movi	r2,1
    c540:	198cb03a 	or	r6,r3,r6
    c544:	4888703a 	and	r4,r9,r2
    c548:	9818d07a 	srli	r12,r19,1
    c54c:	001b883a 	mov	r13,zero
    c550:	03a00034 	movhi	r14,32768
    c554:	3013883a 	mov	r9,r6
    c558:	3815883a 	mov	r10,r7
    c55c:	4091883a 	add	r8,r8,r2
    c560:	20000226 	beq	r4,zero,c56c <__muldf3+0x284>
    c564:	5b64b03a 	or	r18,r11,r13
    c568:	63a6b03a 	or	r19,r12,r14
    c56c:	7abfed36 	bltu	r15,r10,c524 <__muldf3+0x23c>
    c570:	da001015 	stw	r8,64(sp)
    c574:	00840034 	movhi	r2,4096
    c578:	10bfffc4 	addi	r2,r2,-1
    c57c:	12801436 	bltu	r2,r10,c5d0 <__muldf3+0x2e8>
    c580:	da001017 	ldw	r8,64(sp)
    c584:	101f883a 	mov	r15,r2
    c588:	4a45883a 	add	r2,r9,r9
    c58c:	124d803a 	cmpltu	r6,r2,r9
    c590:	5287883a 	add	r3,r10,r10
    c594:	9497883a 	add	r11,r18,r18
    c598:	5c8f803a 	cmpltu	r7,r11,r18
    c59c:	9cd9883a 	add	r12,r19,r19
    c5a0:	01000044 	movi	r4,1
    c5a4:	30cd883a 	add	r6,r6,r3
    c5a8:	3b0f883a 	add	r7,r7,r12
    c5ac:	423fffc4 	addi	r8,r8,-1
    c5b0:	1013883a 	mov	r9,r2
    c5b4:	3015883a 	mov	r10,r6
    c5b8:	111ab03a 	or	r13,r2,r4
    c5bc:	98003016 	blt	r19,zero,c680 <__muldf3+0x398>
    c5c0:	5825883a 	mov	r18,r11
    c5c4:	3827883a 	mov	r19,r7
    c5c8:	7abfef2e 	bgeu	r15,r10,c588 <__muldf3+0x2a0>
    c5cc:	da001015 	stw	r8,64(sp)
    c5d0:	00803fc4 	movi	r2,255
    c5d4:	488e703a 	and	r7,r9,r2
    c5d8:	00802004 	movi	r2,128
    c5dc:	0007883a 	mov	r3,zero
    c5e0:	0011883a 	mov	r8,zero
    c5e4:	38801826 	beq	r7,r2,c648 <__muldf3+0x360>
    c5e8:	008000c4 	movi	r2,3
    c5ec:	d9000e04 	addi	r4,sp,56
    c5f0:	da801215 	stw	r10,72(sp)
    c5f4:	d8800e15 	stw	r2,56(sp)
    c5f8:	da401115 	stw	r9,68(sp)
    c5fc:	003f6a06 	br	c3a8 <__muldf3+0xc0>
    c600:	89802126 	beq	r17,r6,c688 <__muldf3+0x3a0>
    c604:	0009883a 	mov	r4,zero
    c608:	5105883a 	add	r2,r10,r4
    c60c:	128d803a 	cmpltu	r6,r2,r10
    c610:	5d07883a 	add	r3,r11,r20
    c614:	30cd883a 	add	r6,r6,r3
    c618:	0021883a 	mov	r16,zero
    c61c:	0023883a 	mov	r17,zero
    c620:	1025883a 	mov	r18,r2
    c624:	3027883a 	mov	r19,r6
    c628:	32ff9e2e 	bgeu	r6,r11,c4a4 <__muldf3+0x1bc>
    c62c:	00800044 	movi	r2,1
    c630:	8089883a 	add	r4,r16,r2
    c634:	240d803a 	cmpltu	r6,r4,r16
    c638:	344d883a 	add	r6,r6,r17
    c63c:	2021883a 	mov	r16,r4
    c640:	3023883a 	mov	r17,r6
    c644:	003f9806 	br	c4a8 <__muldf3+0x1c0>
    c648:	403fe71e 	bne	r8,zero,c5e8 <__muldf3+0x300>
    c64c:	01004004 	movi	r4,256
    c650:	4904703a 	and	r2,r9,r4
    c654:	10c4b03a 	or	r2,r2,r3
    c658:	103fe31e 	bne	r2,zero,c5e8 <__muldf3+0x300>
    c65c:	94c4b03a 	or	r2,r18,r19
    c660:	103fe126 	beq	r2,zero,c5e8 <__muldf3+0x300>
    c664:	49c5883a 	add	r2,r9,r7
    c668:	1251803a 	cmpltu	r8,r2,r9
    c66c:	4291883a 	add	r8,r8,r10
    c670:	013fc004 	movi	r4,-256
    c674:	1112703a 	and	r9,r2,r4
    c678:	4015883a 	mov	r10,r8
    c67c:	003fda06 	br	c5e8 <__muldf3+0x300>
    c680:	6813883a 	mov	r9,r13
    c684:	003fce06 	br	c5c0 <__muldf3+0x2d8>
    c688:	143f7c36 	bltu	r2,r16,c47c <__muldf3+0x194>
    c68c:	003fdd06 	br	c604 <__muldf3+0x31c>
    c690:	12bf852e 	bgeu	r2,r10,c4a8 <__muldf3+0x1c0>
    c694:	003fe506 	br	c62c <__muldf3+0x344>
    c698:	00800084 	movi	r2,2
    c69c:	20bf351e 	bne	r4,r2,c374 <__muldf3+0x8c>
    c6a0:	01000074 	movhi	r4,1
    c6a4:	213c6204 	addi	r4,r4,-3704
    c6a8:	003f3f06 	br	c3a8 <__muldf3+0xc0>

0000c6ac <__divdf3>:
    c6ac:	deffed04 	addi	sp,sp,-76
    c6b0:	dcc01115 	stw	r19,68(sp)
    c6b4:	dcc00404 	addi	r19,sp,16
    c6b8:	2011883a 	mov	r8,r4
    c6bc:	2813883a 	mov	r9,r5
    c6c0:	dc000e15 	stw	r16,56(sp)
    c6c4:	d809883a 	mov	r4,sp
    c6c8:	980b883a 	mov	r5,r19
    c6cc:	dc000904 	addi	r16,sp,36
    c6d0:	dfc01215 	stw	ra,72(sp)
    c6d4:	da400115 	stw	r9,4(sp)
    c6d8:	d9c00315 	stw	r7,12(sp)
    c6dc:	da000015 	stw	r8,0(sp)
    c6e0:	d9800215 	stw	r6,8(sp)
    c6e4:	dc801015 	stw	r18,64(sp)
    c6e8:	dc400f15 	stw	r17,60(sp)
    c6ec:	00008a80 	call	8a8 <__unpack_d>
    c6f0:	d9000204 	addi	r4,sp,8
    c6f4:	800b883a 	mov	r5,r16
    c6f8:	00008a80 	call	8a8 <__unpack_d>
    c6fc:	d9000417 	ldw	r4,16(sp)
    c700:	00800044 	movi	r2,1
    c704:	11000b2e 	bgeu	r2,r4,c734 <__divdf3+0x88>
    c708:	d9400917 	ldw	r5,36(sp)
    c70c:	1140762e 	bgeu	r2,r5,c8e8 <__divdf3+0x23c>
    c710:	d8800517 	ldw	r2,20(sp)
    c714:	d8c00a17 	ldw	r3,40(sp)
    c718:	01800104 	movi	r6,4
    c71c:	10c4f03a 	xor	r2,r2,r3
    c720:	d8800515 	stw	r2,20(sp)
    c724:	21800226 	beq	r4,r6,c730 <__divdf3+0x84>
    c728:	00800084 	movi	r2,2
    c72c:	2080141e 	bne	r4,r2,c780 <__divdf3+0xd4>
    c730:	29000926 	beq	r5,r4,c758 <__divdf3+0xac>
    c734:	9809883a 	mov	r4,r19
    c738:	000d3680 	call	d368 <__pack_d>
    c73c:	dfc01217 	ldw	ra,72(sp)
    c740:	dcc01117 	ldw	r19,68(sp)
    c744:	dc801017 	ldw	r18,64(sp)
    c748:	dc400f17 	ldw	r17,60(sp)
    c74c:	dc000e17 	ldw	r16,56(sp)
    c750:	dec01304 	addi	sp,sp,76
    c754:	f800283a 	ret
    c758:	01000074 	movhi	r4,1
    c75c:	213c6204 	addi	r4,r4,-3704
    c760:	000d3680 	call	d368 <__pack_d>
    c764:	dfc01217 	ldw	ra,72(sp)
    c768:	dcc01117 	ldw	r19,68(sp)
    c76c:	dc801017 	ldw	r18,64(sp)
    c770:	dc400f17 	ldw	r17,60(sp)
    c774:	dc000e17 	ldw	r16,56(sp)
    c778:	dec01304 	addi	sp,sp,76
    c77c:	f800283a 	ret
    c780:	29805b26 	beq	r5,r6,c8f0 <__divdf3+0x244>
    c784:	28802d26 	beq	r5,r2,c83c <__divdf3+0x190>
    c788:	d8c00617 	ldw	r3,24(sp)
    c78c:	d8800b17 	ldw	r2,44(sp)
    c790:	d9c00817 	ldw	r7,32(sp)
    c794:	dc400d17 	ldw	r17,52(sp)
    c798:	188bc83a 	sub	r5,r3,r2
    c79c:	d9800717 	ldw	r6,28(sp)
    c7a0:	dc000c17 	ldw	r16,48(sp)
    c7a4:	d9400615 	stw	r5,24(sp)
    c7a8:	3c403836 	bltu	r7,r17,c88c <__divdf3+0x1e0>
    c7ac:	89c03626 	beq	r17,r7,c888 <__divdf3+0x1dc>
    c7b0:	0015883a 	mov	r10,zero
    c7b4:	001d883a 	mov	r14,zero
    c7b8:	02c40034 	movhi	r11,4096
    c7bc:	001f883a 	mov	r15,zero
    c7c0:	003f883a 	mov	ra,zero
    c7c4:	04800f44 	movi	r18,61
    c7c8:	00000f06 	br	c808 <__divdf3+0x15c>
    c7cc:	601d883a 	mov	r14,r12
    c7d0:	681f883a 	mov	r15,r13
    c7d4:	400d883a 	mov	r6,r8
    c7d8:	100f883a 	mov	r7,r2
    c7dc:	3191883a 	add	r8,r6,r6
    c7e0:	5808d07a 	srli	r4,r11,1
    c7e4:	4185803a 	cmpltu	r2,r8,r6
    c7e8:	39d3883a 	add	r9,r7,r7
    c7ec:	28c6b03a 	or	r3,r5,r3
    c7f0:	1245883a 	add	r2,r2,r9
    c7f4:	1815883a 	mov	r10,r3
    c7f8:	2017883a 	mov	r11,r4
    c7fc:	400d883a 	mov	r6,r8
    c800:	100f883a 	mov	r7,r2
    c804:	fc801726 	beq	ra,r18,c864 <__divdf3+0x1b8>
    c808:	580a97fa 	slli	r5,r11,31
    c80c:	5006d07a 	srli	r3,r10,1
    c810:	ffc00044 	addi	ra,ra,1
    c814:	3c7ff136 	bltu	r7,r17,c7dc <__divdf3+0x130>
    c818:	3411c83a 	sub	r8,r6,r16
    c81c:	3205803a 	cmpltu	r2,r6,r8
    c820:	3c53c83a 	sub	r9,r7,r17
    c824:	7298b03a 	or	r12,r14,r10
    c828:	7adab03a 	or	r13,r15,r11
    c82c:	4885c83a 	sub	r2,r9,r2
    c830:	89ffe61e 	bne	r17,r7,c7cc <__divdf3+0x120>
    c834:	343fe936 	bltu	r6,r16,c7dc <__divdf3+0x130>
    c838:	003fe406 	br	c7cc <__divdf3+0x120>
    c83c:	9809883a 	mov	r4,r19
    c840:	d9800415 	stw	r6,16(sp)
    c844:	000d3680 	call	d368 <__pack_d>
    c848:	dfc01217 	ldw	ra,72(sp)
    c84c:	dcc01117 	ldw	r19,68(sp)
    c850:	dc801017 	ldw	r18,64(sp)
    c854:	dc400f17 	ldw	r17,60(sp)
    c858:	dc000e17 	ldw	r16,56(sp)
    c85c:	dec01304 	addi	sp,sp,76
    c860:	f800283a 	ret
    c864:	00803fc4 	movi	r2,255
    c868:	7090703a 	and	r8,r14,r2
    c86c:	00802004 	movi	r2,128
    c870:	0007883a 	mov	r3,zero
    c874:	0013883a 	mov	r9,zero
    c878:	40800d26 	beq	r8,r2,c8b0 <__divdf3+0x204>
    c87c:	dbc00815 	stw	r15,32(sp)
    c880:	db800715 	stw	r14,28(sp)
    c884:	003fab06 	br	c734 <__divdf3+0x88>
    c888:	343fc92e 	bgeu	r6,r16,c7b0 <__divdf3+0x104>
    c88c:	3185883a 	add	r2,r6,r6
    c890:	1189803a 	cmpltu	r4,r2,r6
    c894:	39c7883a 	add	r3,r7,r7
    c898:	20c9883a 	add	r4,r4,r3
    c89c:	297fffc4 	addi	r5,r5,-1
    c8a0:	100d883a 	mov	r6,r2
    c8a4:	200f883a 	mov	r7,r4
    c8a8:	d9400615 	stw	r5,24(sp)
    c8ac:	003fc006 	br	c7b0 <__divdf3+0x104>
    c8b0:	483ff21e 	bne	r9,zero,c87c <__divdf3+0x1d0>
    c8b4:	01004004 	movi	r4,256
    c8b8:	7104703a 	and	r2,r14,r4
    c8bc:	10c4b03a 	or	r2,r2,r3
    c8c0:	103fee1e 	bne	r2,zero,c87c <__divdf3+0x1d0>
    c8c4:	31c4b03a 	or	r2,r6,r7
    c8c8:	103fec26 	beq	r2,zero,c87c <__divdf3+0x1d0>
    c8cc:	7205883a 	add	r2,r14,r8
    c8d0:	1391803a 	cmpltu	r8,r2,r14
    c8d4:	43d1883a 	add	r8,r8,r15
    c8d8:	013fc004 	movi	r4,-256
    c8dc:	111c703a 	and	r14,r2,r4
    c8e0:	401f883a 	mov	r15,r8
    c8e4:	003fe506 	br	c87c <__divdf3+0x1d0>
    c8e8:	8009883a 	mov	r4,r16
    c8ec:	003f9206 	br	c738 <__divdf3+0x8c>
    c8f0:	9809883a 	mov	r4,r19
    c8f4:	d8000715 	stw	zero,28(sp)
    c8f8:	d8000815 	stw	zero,32(sp)
    c8fc:	d8000615 	stw	zero,24(sp)
    c900:	003f8d06 	br	c738 <__divdf3+0x8c>

0000c904 <__eqdf2>:
    c904:	deffef04 	addi	sp,sp,-68
    c908:	dc400f15 	stw	r17,60(sp)
    c90c:	dc400404 	addi	r17,sp,16
    c910:	2005883a 	mov	r2,r4
    c914:	2807883a 	mov	r3,r5
    c918:	dc000e15 	stw	r16,56(sp)
    c91c:	d809883a 	mov	r4,sp
    c920:	880b883a 	mov	r5,r17
    c924:	dc000904 	addi	r16,sp,36
    c928:	d8c00115 	stw	r3,4(sp)
    c92c:	d8800015 	stw	r2,0(sp)
    c930:	d9800215 	stw	r6,8(sp)
    c934:	dfc01015 	stw	ra,64(sp)
    c938:	d9c00315 	stw	r7,12(sp)
    c93c:	00008a80 	call	8a8 <__unpack_d>
    c940:	d9000204 	addi	r4,sp,8
    c944:	800b883a 	mov	r5,r16
    c948:	00008a80 	call	8a8 <__unpack_d>
    c94c:	d8800417 	ldw	r2,16(sp)
    c950:	00c00044 	movi	r3,1
    c954:	180d883a 	mov	r6,r3
    c958:	1880062e 	bgeu	r3,r2,c974 <__eqdf2+0x70>
    c95c:	d8800917 	ldw	r2,36(sp)
    c960:	8809883a 	mov	r4,r17
    c964:	800b883a 	mov	r5,r16
    c968:	1880022e 	bgeu	r3,r2,c974 <__eqdf2+0x70>
    c96c:	000d67c0 	call	d67c <__fpcmp_parts_d>
    c970:	100d883a 	mov	r6,r2
    c974:	3005883a 	mov	r2,r6
    c978:	dfc01017 	ldw	ra,64(sp)
    c97c:	dc400f17 	ldw	r17,60(sp)
    c980:	dc000e17 	ldw	r16,56(sp)
    c984:	dec01104 	addi	sp,sp,68
    c988:	f800283a 	ret

0000c98c <__nedf2>:
    c98c:	deffef04 	addi	sp,sp,-68
    c990:	dc400f15 	stw	r17,60(sp)
    c994:	dc400404 	addi	r17,sp,16
    c998:	2005883a 	mov	r2,r4
    c99c:	2807883a 	mov	r3,r5
    c9a0:	dc000e15 	stw	r16,56(sp)
    c9a4:	d809883a 	mov	r4,sp
    c9a8:	880b883a 	mov	r5,r17
    c9ac:	dc000904 	addi	r16,sp,36
    c9b0:	d8c00115 	stw	r3,4(sp)
    c9b4:	d8800015 	stw	r2,0(sp)
    c9b8:	d9800215 	stw	r6,8(sp)
    c9bc:	dfc01015 	stw	ra,64(sp)
    c9c0:	d9c00315 	stw	r7,12(sp)
    c9c4:	00008a80 	call	8a8 <__unpack_d>
    c9c8:	d9000204 	addi	r4,sp,8
    c9cc:	800b883a 	mov	r5,r16
    c9d0:	00008a80 	call	8a8 <__unpack_d>
    c9d4:	d8800417 	ldw	r2,16(sp)
    c9d8:	00c00044 	movi	r3,1
    c9dc:	180d883a 	mov	r6,r3
    c9e0:	1880062e 	bgeu	r3,r2,c9fc <__nedf2+0x70>
    c9e4:	d8800917 	ldw	r2,36(sp)
    c9e8:	8809883a 	mov	r4,r17
    c9ec:	800b883a 	mov	r5,r16
    c9f0:	1880022e 	bgeu	r3,r2,c9fc <__nedf2+0x70>
    c9f4:	000d67c0 	call	d67c <__fpcmp_parts_d>
    c9f8:	100d883a 	mov	r6,r2
    c9fc:	3005883a 	mov	r2,r6
    ca00:	dfc01017 	ldw	ra,64(sp)
    ca04:	dc400f17 	ldw	r17,60(sp)
    ca08:	dc000e17 	ldw	r16,56(sp)
    ca0c:	dec01104 	addi	sp,sp,68
    ca10:	f800283a 	ret

0000ca14 <__gtdf2>:
    ca14:	deffef04 	addi	sp,sp,-68
    ca18:	dc400f15 	stw	r17,60(sp)
    ca1c:	dc400404 	addi	r17,sp,16
    ca20:	2005883a 	mov	r2,r4
    ca24:	2807883a 	mov	r3,r5
    ca28:	dc000e15 	stw	r16,56(sp)
    ca2c:	d809883a 	mov	r4,sp
    ca30:	880b883a 	mov	r5,r17
    ca34:	dc000904 	addi	r16,sp,36
    ca38:	d8c00115 	stw	r3,4(sp)
    ca3c:	d8800015 	stw	r2,0(sp)
    ca40:	d9800215 	stw	r6,8(sp)
    ca44:	dfc01015 	stw	ra,64(sp)
    ca48:	d9c00315 	stw	r7,12(sp)
    ca4c:	00008a80 	call	8a8 <__unpack_d>
    ca50:	d9000204 	addi	r4,sp,8
    ca54:	800b883a 	mov	r5,r16
    ca58:	00008a80 	call	8a8 <__unpack_d>
    ca5c:	d8800417 	ldw	r2,16(sp)
    ca60:	00c00044 	movi	r3,1
    ca64:	01bfffc4 	movi	r6,-1
    ca68:	1880062e 	bgeu	r3,r2,ca84 <__gtdf2+0x70>
    ca6c:	d8800917 	ldw	r2,36(sp)
    ca70:	8809883a 	mov	r4,r17
    ca74:	800b883a 	mov	r5,r16
    ca78:	1880022e 	bgeu	r3,r2,ca84 <__gtdf2+0x70>
    ca7c:	000d67c0 	call	d67c <__fpcmp_parts_d>
    ca80:	100d883a 	mov	r6,r2
    ca84:	3005883a 	mov	r2,r6
    ca88:	dfc01017 	ldw	ra,64(sp)
    ca8c:	dc400f17 	ldw	r17,60(sp)
    ca90:	dc000e17 	ldw	r16,56(sp)
    ca94:	dec01104 	addi	sp,sp,68
    ca98:	f800283a 	ret

0000ca9c <__gedf2>:
    ca9c:	deffef04 	addi	sp,sp,-68
    caa0:	dc400f15 	stw	r17,60(sp)
    caa4:	dc400404 	addi	r17,sp,16
    caa8:	2005883a 	mov	r2,r4
    caac:	2807883a 	mov	r3,r5
    cab0:	dc000e15 	stw	r16,56(sp)
    cab4:	d809883a 	mov	r4,sp
    cab8:	880b883a 	mov	r5,r17
    cabc:	dc000904 	addi	r16,sp,36
    cac0:	d8c00115 	stw	r3,4(sp)
    cac4:	d8800015 	stw	r2,0(sp)
    cac8:	d9800215 	stw	r6,8(sp)
    cacc:	dfc01015 	stw	ra,64(sp)
    cad0:	d9c00315 	stw	r7,12(sp)
    cad4:	00008a80 	call	8a8 <__unpack_d>
    cad8:	d9000204 	addi	r4,sp,8
    cadc:	800b883a 	mov	r5,r16
    cae0:	00008a80 	call	8a8 <__unpack_d>
    cae4:	d8800417 	ldw	r2,16(sp)
    cae8:	00c00044 	movi	r3,1
    caec:	01bfffc4 	movi	r6,-1
    caf0:	1880062e 	bgeu	r3,r2,cb0c <__gedf2+0x70>
    caf4:	d8800917 	ldw	r2,36(sp)
    caf8:	8809883a 	mov	r4,r17
    cafc:	800b883a 	mov	r5,r16
    cb00:	1880022e 	bgeu	r3,r2,cb0c <__gedf2+0x70>
    cb04:	000d67c0 	call	d67c <__fpcmp_parts_d>
    cb08:	100d883a 	mov	r6,r2
    cb0c:	3005883a 	mov	r2,r6
    cb10:	dfc01017 	ldw	ra,64(sp)
    cb14:	dc400f17 	ldw	r17,60(sp)
    cb18:	dc000e17 	ldw	r16,56(sp)
    cb1c:	dec01104 	addi	sp,sp,68
    cb20:	f800283a 	ret

0000cb24 <__ltdf2>:
    cb24:	deffef04 	addi	sp,sp,-68
    cb28:	dc400f15 	stw	r17,60(sp)
    cb2c:	dc400404 	addi	r17,sp,16
    cb30:	2005883a 	mov	r2,r4
    cb34:	2807883a 	mov	r3,r5
    cb38:	dc000e15 	stw	r16,56(sp)
    cb3c:	d809883a 	mov	r4,sp
    cb40:	880b883a 	mov	r5,r17
    cb44:	dc000904 	addi	r16,sp,36
    cb48:	d8c00115 	stw	r3,4(sp)
    cb4c:	d8800015 	stw	r2,0(sp)
    cb50:	d9800215 	stw	r6,8(sp)
    cb54:	dfc01015 	stw	ra,64(sp)
    cb58:	d9c00315 	stw	r7,12(sp)
    cb5c:	00008a80 	call	8a8 <__unpack_d>
    cb60:	d9000204 	addi	r4,sp,8
    cb64:	800b883a 	mov	r5,r16
    cb68:	00008a80 	call	8a8 <__unpack_d>
    cb6c:	d8800417 	ldw	r2,16(sp)
    cb70:	00c00044 	movi	r3,1
    cb74:	180d883a 	mov	r6,r3
    cb78:	1880062e 	bgeu	r3,r2,cb94 <__ltdf2+0x70>
    cb7c:	d8800917 	ldw	r2,36(sp)
    cb80:	8809883a 	mov	r4,r17
    cb84:	800b883a 	mov	r5,r16
    cb88:	1880022e 	bgeu	r3,r2,cb94 <__ltdf2+0x70>
    cb8c:	000d67c0 	call	d67c <__fpcmp_parts_d>
    cb90:	100d883a 	mov	r6,r2
    cb94:	3005883a 	mov	r2,r6
    cb98:	dfc01017 	ldw	ra,64(sp)
    cb9c:	dc400f17 	ldw	r17,60(sp)
    cba0:	dc000e17 	ldw	r16,56(sp)
    cba4:	dec01104 	addi	sp,sp,68
    cba8:	f800283a 	ret

0000cbac <__ledf2>:
    cbac:	deffef04 	addi	sp,sp,-68
    cbb0:	dc400f15 	stw	r17,60(sp)
    cbb4:	dc400404 	addi	r17,sp,16
    cbb8:	2005883a 	mov	r2,r4
    cbbc:	2807883a 	mov	r3,r5
    cbc0:	dc000e15 	stw	r16,56(sp)
    cbc4:	d809883a 	mov	r4,sp
    cbc8:	880b883a 	mov	r5,r17
    cbcc:	dc000904 	addi	r16,sp,36
    cbd0:	d8c00115 	stw	r3,4(sp)
    cbd4:	d8800015 	stw	r2,0(sp)
    cbd8:	d9800215 	stw	r6,8(sp)
    cbdc:	dfc01015 	stw	ra,64(sp)
    cbe0:	d9c00315 	stw	r7,12(sp)
    cbe4:	00008a80 	call	8a8 <__unpack_d>
    cbe8:	d9000204 	addi	r4,sp,8
    cbec:	800b883a 	mov	r5,r16
    cbf0:	00008a80 	call	8a8 <__unpack_d>
    cbf4:	d8800417 	ldw	r2,16(sp)
    cbf8:	00c00044 	movi	r3,1
    cbfc:	180d883a 	mov	r6,r3
    cc00:	1880062e 	bgeu	r3,r2,cc1c <__ledf2+0x70>
    cc04:	d8800917 	ldw	r2,36(sp)
    cc08:	8809883a 	mov	r4,r17
    cc0c:	800b883a 	mov	r5,r16
    cc10:	1880022e 	bgeu	r3,r2,cc1c <__ledf2+0x70>
    cc14:	000d67c0 	call	d67c <__fpcmp_parts_d>
    cc18:	100d883a 	mov	r6,r2
    cc1c:	3005883a 	mov	r2,r6
    cc20:	dfc01017 	ldw	ra,64(sp)
    cc24:	dc400f17 	ldw	r17,60(sp)
    cc28:	dc000e17 	ldw	r16,56(sp)
    cc2c:	dec01104 	addi	sp,sp,68
    cc30:	f800283a 	ret

0000cc34 <__floatsidf>:
    cc34:	2006d7fa 	srli	r3,r4,31
    cc38:	defff604 	addi	sp,sp,-40
    cc3c:	008000c4 	movi	r2,3
    cc40:	dfc00915 	stw	ra,36(sp)
    cc44:	dcc00815 	stw	r19,32(sp)
    cc48:	dc800715 	stw	r18,28(sp)
    cc4c:	dc400615 	stw	r17,24(sp)
    cc50:	dc000515 	stw	r16,20(sp)
    cc54:	d8800015 	stw	r2,0(sp)
    cc58:	d8c00115 	stw	r3,4(sp)
    cc5c:	20000f1e 	bne	r4,zero,cc9c <__floatsidf+0x68>
    cc60:	00800084 	movi	r2,2
    cc64:	d8800015 	stw	r2,0(sp)
    cc68:	d809883a 	mov	r4,sp
    cc6c:	000d3680 	call	d368 <__pack_d>
    cc70:	1009883a 	mov	r4,r2
    cc74:	180b883a 	mov	r5,r3
    cc78:	2005883a 	mov	r2,r4
    cc7c:	2807883a 	mov	r3,r5
    cc80:	dfc00917 	ldw	ra,36(sp)
    cc84:	dcc00817 	ldw	r19,32(sp)
    cc88:	dc800717 	ldw	r18,28(sp)
    cc8c:	dc400617 	ldw	r17,24(sp)
    cc90:	dc000517 	ldw	r16,20(sp)
    cc94:	dec00a04 	addi	sp,sp,40
    cc98:	f800283a 	ret
    cc9c:	00800f04 	movi	r2,60
    cca0:	1807003a 	cmpeq	r3,r3,zero
    cca4:	d8800215 	stw	r2,8(sp)
    cca8:	18001126 	beq	r3,zero,ccf0 <__floatsidf+0xbc>
    ccac:	0027883a 	mov	r19,zero
    ccb0:	2025883a 	mov	r18,r4
    ccb4:	d9000315 	stw	r4,12(sp)
    ccb8:	dcc00415 	stw	r19,16(sp)
    ccbc:	000d2400 	call	d240 <__clzsi2>
    ccc0:	11000744 	addi	r4,r2,29
    ccc4:	013fe80e 	bge	zero,r4,cc68 <__floatsidf+0x34>
    ccc8:	10bfff44 	addi	r2,r2,-3
    cccc:	10000c16 	blt	r2,zero,cd00 <__floatsidf+0xcc>
    ccd0:	90a2983a 	sll	r17,r18,r2
    ccd4:	0021883a 	mov	r16,zero
    ccd8:	d8800217 	ldw	r2,8(sp)
    ccdc:	dc400415 	stw	r17,16(sp)
    cce0:	dc000315 	stw	r16,12(sp)
    cce4:	1105c83a 	sub	r2,r2,r4
    cce8:	d8800215 	stw	r2,8(sp)
    ccec:	003fde06 	br	cc68 <__floatsidf+0x34>
    ccf0:	00a00034 	movhi	r2,32768
    ccf4:	20800a26 	beq	r4,r2,cd20 <__floatsidf+0xec>
    ccf8:	0109c83a 	sub	r4,zero,r4
    ccfc:	003feb06 	br	ccac <__floatsidf+0x78>
    cd00:	9006d07a 	srli	r3,r18,1
    cd04:	008007c4 	movi	r2,31
    cd08:	1105c83a 	sub	r2,r2,r4
    cd0c:	1886d83a 	srl	r3,r3,r2
    cd10:	9922983a 	sll	r17,r19,r4
    cd14:	9120983a 	sll	r16,r18,r4
    cd18:	1c62b03a 	or	r17,r3,r17
    cd1c:	003fee06 	br	ccd8 <__floatsidf+0xa4>
    cd20:	0009883a 	mov	r4,zero
    cd24:	01707834 	movhi	r5,49632
    cd28:	003fd306 	br	cc78 <__floatsidf+0x44>

0000cd2c <__fixdfsi>:
    cd2c:	defff804 	addi	sp,sp,-32
    cd30:	2005883a 	mov	r2,r4
    cd34:	2807883a 	mov	r3,r5
    cd38:	d809883a 	mov	r4,sp
    cd3c:	d9400204 	addi	r5,sp,8
    cd40:	d8c00115 	stw	r3,4(sp)
    cd44:	d8800015 	stw	r2,0(sp)
    cd48:	dfc00715 	stw	ra,28(sp)
    cd4c:	00008a80 	call	8a8 <__unpack_d>
    cd50:	d8c00217 	ldw	r3,8(sp)
    cd54:	00800084 	movi	r2,2
    cd58:	1880051e 	bne	r3,r2,cd70 <__fixdfsi+0x44>
    cd5c:	0007883a 	mov	r3,zero
    cd60:	1805883a 	mov	r2,r3
    cd64:	dfc00717 	ldw	ra,28(sp)
    cd68:	dec00804 	addi	sp,sp,32
    cd6c:	f800283a 	ret
    cd70:	00800044 	movi	r2,1
    cd74:	10fff92e 	bgeu	r2,r3,cd5c <__fixdfsi+0x30>
    cd78:	00800104 	movi	r2,4
    cd7c:	18800426 	beq	r3,r2,cd90 <__fixdfsi+0x64>
    cd80:	d8c00417 	ldw	r3,16(sp)
    cd84:	183ff516 	blt	r3,zero,cd5c <__fixdfsi+0x30>
    cd88:	00800784 	movi	r2,30
    cd8c:	10c0080e 	bge	r2,r3,cdb0 <__fixdfsi+0x84>
    cd90:	d8800317 	ldw	r2,12(sp)
    cd94:	1000121e 	bne	r2,zero,cde0 <__fixdfsi+0xb4>
    cd98:	00e00034 	movhi	r3,32768
    cd9c:	18ffffc4 	addi	r3,r3,-1
    cda0:	1805883a 	mov	r2,r3
    cda4:	dfc00717 	ldw	ra,28(sp)
    cda8:	dec00804 	addi	sp,sp,32
    cdac:	f800283a 	ret
    cdb0:	00800f04 	movi	r2,60
    cdb4:	10d1c83a 	sub	r8,r2,r3
    cdb8:	40bff804 	addi	r2,r8,-32
    cdbc:	d9800517 	ldw	r6,20(sp)
    cdc0:	d9c00617 	ldw	r7,24(sp)
    cdc4:	10000816 	blt	r2,zero,cde8 <__fixdfsi+0xbc>
    cdc8:	3888d83a 	srl	r4,r7,r2
    cdcc:	d8800317 	ldw	r2,12(sp)
    cdd0:	2007883a 	mov	r3,r4
    cdd4:	103fe226 	beq	r2,zero,cd60 <__fixdfsi+0x34>
    cdd8:	0107c83a 	sub	r3,zero,r4
    cddc:	003fe006 	br	cd60 <__fixdfsi+0x34>
    cde0:	00e00034 	movhi	r3,32768
    cde4:	003fde06 	br	cd60 <__fixdfsi+0x34>
    cde8:	39c7883a 	add	r3,r7,r7
    cdec:	008007c4 	movi	r2,31
    cdf0:	1205c83a 	sub	r2,r2,r8
    cdf4:	1886983a 	sll	r3,r3,r2
    cdf8:	3208d83a 	srl	r4,r6,r8
    cdfc:	1908b03a 	or	r4,r3,r4
    ce00:	003ff206 	br	cdcc <__fixdfsi+0xa0>

0000ce04 <__floatunsidf>:
    ce04:	defff204 	addi	sp,sp,-56
    ce08:	dfc00d15 	stw	ra,52(sp)
    ce0c:	ddc00c15 	stw	r23,48(sp)
    ce10:	dd800b15 	stw	r22,44(sp)
    ce14:	dd400a15 	stw	r21,40(sp)
    ce18:	dd000915 	stw	r20,36(sp)
    ce1c:	dcc00815 	stw	r19,32(sp)
    ce20:	dc800715 	stw	r18,28(sp)
    ce24:	dc400615 	stw	r17,24(sp)
    ce28:	dc000515 	stw	r16,20(sp)
    ce2c:	d8000115 	stw	zero,4(sp)
    ce30:	20000f1e 	bne	r4,zero,ce70 <__floatunsidf+0x6c>
    ce34:	00800084 	movi	r2,2
    ce38:	d8800015 	stw	r2,0(sp)
    ce3c:	d809883a 	mov	r4,sp
    ce40:	000d3680 	call	d368 <__pack_d>
    ce44:	dfc00d17 	ldw	ra,52(sp)
    ce48:	ddc00c17 	ldw	r23,48(sp)
    ce4c:	dd800b17 	ldw	r22,44(sp)
    ce50:	dd400a17 	ldw	r21,40(sp)
    ce54:	dd000917 	ldw	r20,36(sp)
    ce58:	dcc00817 	ldw	r19,32(sp)
    ce5c:	dc800717 	ldw	r18,28(sp)
    ce60:	dc400617 	ldw	r17,24(sp)
    ce64:	dc000517 	ldw	r16,20(sp)
    ce68:	dec00e04 	addi	sp,sp,56
    ce6c:	f800283a 	ret
    ce70:	008000c4 	movi	r2,3
    ce74:	00c00f04 	movi	r3,60
    ce78:	002f883a 	mov	r23,zero
    ce7c:	202d883a 	mov	r22,r4
    ce80:	d8800015 	stw	r2,0(sp)
    ce84:	d8c00215 	stw	r3,8(sp)
    ce88:	d9000315 	stw	r4,12(sp)
    ce8c:	ddc00415 	stw	r23,16(sp)
    ce90:	000d2400 	call	d240 <__clzsi2>
    ce94:	12400744 	addi	r9,r2,29
    ce98:	48000b16 	blt	r9,zero,cec8 <__floatunsidf+0xc4>
    ce9c:	483fe726 	beq	r9,zero,ce3c <__floatunsidf+0x38>
    cea0:	10bfff44 	addi	r2,r2,-3
    cea4:	10002e16 	blt	r2,zero,cf60 <__floatunsidf+0x15c>
    cea8:	b0a2983a 	sll	r17,r22,r2
    ceac:	0021883a 	mov	r16,zero
    ceb0:	d8800217 	ldw	r2,8(sp)
    ceb4:	dc400415 	stw	r17,16(sp)
    ceb8:	dc000315 	stw	r16,12(sp)
    cebc:	1245c83a 	sub	r2,r2,r9
    cec0:	d8800215 	stw	r2,8(sp)
    cec4:	003fdd06 	br	ce3c <__floatunsidf+0x38>
    cec8:	0255c83a 	sub	r10,zero,r9
    cecc:	51bff804 	addi	r6,r10,-32
    ced0:	30001b16 	blt	r6,zero,cf40 <__floatunsidf+0x13c>
    ced4:	b9a8d83a 	srl	r20,r23,r6
    ced8:	002b883a 	mov	r21,zero
    cedc:	000f883a 	mov	r7,zero
    cee0:	01000044 	movi	r4,1
    cee4:	0011883a 	mov	r8,zero
    cee8:	30002516 	blt	r6,zero,cf80 <__floatunsidf+0x17c>
    ceec:	21a6983a 	sll	r19,r4,r6
    cef0:	0025883a 	mov	r18,zero
    cef4:	00bfffc4 	movi	r2,-1
    cef8:	9089883a 	add	r4,r18,r2
    cefc:	988b883a 	add	r5,r19,r2
    cf00:	248d803a 	cmpltu	r6,r4,r18
    cf04:	314b883a 	add	r5,r6,r5
    cf08:	b104703a 	and	r2,r22,r4
    cf0c:	b946703a 	and	r3,r23,r5
    cf10:	10c4b03a 	or	r2,r2,r3
    cf14:	10000226 	beq	r2,zero,cf20 <__floatunsidf+0x11c>
    cf18:	01c00044 	movi	r7,1
    cf1c:	0011883a 	mov	r8,zero
    cf20:	d9000217 	ldw	r4,8(sp)
    cf24:	a1c4b03a 	or	r2,r20,r7
    cf28:	aa06b03a 	or	r3,r21,r8
    cf2c:	2249c83a 	sub	r4,r4,r9
    cf30:	d8c00415 	stw	r3,16(sp)
    cf34:	d9000215 	stw	r4,8(sp)
    cf38:	d8800315 	stw	r2,12(sp)
    cf3c:	003fbf06 	br	ce3c <__floatunsidf+0x38>
    cf40:	bdc7883a 	add	r3,r23,r23
    cf44:	008007c4 	movi	r2,31
    cf48:	1285c83a 	sub	r2,r2,r10
    cf4c:	1886983a 	sll	r3,r3,r2
    cf50:	b2a8d83a 	srl	r20,r22,r10
    cf54:	baaad83a 	srl	r21,r23,r10
    cf58:	1d28b03a 	or	r20,r3,r20
    cf5c:	003fdf06 	br	cedc <__floatunsidf+0xd8>
    cf60:	b006d07a 	srli	r3,r22,1
    cf64:	008007c4 	movi	r2,31
    cf68:	1245c83a 	sub	r2,r2,r9
    cf6c:	1886d83a 	srl	r3,r3,r2
    cf70:	ba62983a 	sll	r17,r23,r9
    cf74:	b260983a 	sll	r16,r22,r9
    cf78:	1c62b03a 	or	r17,r3,r17
    cf7c:	003fcc06 	br	ceb0 <__floatunsidf+0xac>
    cf80:	2006d07a 	srli	r3,r4,1
    cf84:	008007c4 	movi	r2,31
    cf88:	1285c83a 	sub	r2,r2,r10
    cf8c:	18a6d83a 	srl	r19,r3,r2
    cf90:	22a4983a 	sll	r18,r4,r10
    cf94:	003fd706 	br	cef4 <__floatunsidf+0xf0>

0000cf98 <udivmodsi4>:
    cf98:	29001b2e 	bgeu	r5,r4,d008 <udivmodsi4+0x70>
    cf9c:	28001a16 	blt	r5,zero,d008 <udivmodsi4+0x70>
    cfa0:	00800044 	movi	r2,1
    cfa4:	0007883a 	mov	r3,zero
    cfa8:	01c007c4 	movi	r7,31
    cfac:	00000306 	br	cfbc <udivmodsi4+0x24>
    cfb0:	19c01326 	beq	r3,r7,d000 <udivmodsi4+0x68>
    cfb4:	18c00044 	addi	r3,r3,1
    cfb8:	28000416 	blt	r5,zero,cfcc <udivmodsi4+0x34>
    cfbc:	294b883a 	add	r5,r5,r5
    cfc0:	1085883a 	add	r2,r2,r2
    cfc4:	293ffa36 	bltu	r5,r4,cfb0 <udivmodsi4+0x18>
    cfc8:	10000d26 	beq	r2,zero,d000 <udivmodsi4+0x68>
    cfcc:	0007883a 	mov	r3,zero
    cfd0:	21400236 	bltu	r4,r5,cfdc <udivmodsi4+0x44>
    cfd4:	2149c83a 	sub	r4,r4,r5
    cfd8:	1886b03a 	or	r3,r3,r2
    cfdc:	1004d07a 	srli	r2,r2,1
    cfe0:	280ad07a 	srli	r5,r5,1
    cfe4:	103ffa1e 	bne	r2,zero,cfd0 <udivmodsi4+0x38>
    cfe8:	30000226 	beq	r6,zero,cff4 <udivmodsi4+0x5c>
    cfec:	2005883a 	mov	r2,r4
    cff0:	f800283a 	ret
    cff4:	1809883a 	mov	r4,r3
    cff8:	2005883a 	mov	r2,r4
    cffc:	f800283a 	ret
    d000:	0007883a 	mov	r3,zero
    d004:	003ff806 	br	cfe8 <udivmodsi4+0x50>
    d008:	00800044 	movi	r2,1
    d00c:	0007883a 	mov	r3,zero
    d010:	003fef06 	br	cfd0 <udivmodsi4+0x38>

0000d014 <__divsi3>:
    d014:	defffe04 	addi	sp,sp,-8
    d018:	dc000015 	stw	r16,0(sp)
    d01c:	dfc00115 	stw	ra,4(sp)
    d020:	0021883a 	mov	r16,zero
    d024:	20000c16 	blt	r4,zero,d058 <__divsi3+0x44>
    d028:	000d883a 	mov	r6,zero
    d02c:	28000e16 	blt	r5,zero,d068 <__divsi3+0x54>
    d030:	000cf980 	call	cf98 <udivmodsi4>
    d034:	1007883a 	mov	r3,r2
    d038:	8005003a 	cmpeq	r2,r16,zero
    d03c:	1000011e 	bne	r2,zero,d044 <__divsi3+0x30>
    d040:	00c7c83a 	sub	r3,zero,r3
    d044:	1805883a 	mov	r2,r3
    d048:	dfc00117 	ldw	ra,4(sp)
    d04c:	dc000017 	ldw	r16,0(sp)
    d050:	dec00204 	addi	sp,sp,8
    d054:	f800283a 	ret
    d058:	0109c83a 	sub	r4,zero,r4
    d05c:	04000044 	movi	r16,1
    d060:	000d883a 	mov	r6,zero
    d064:	283ff20e 	bge	r5,zero,d030 <__divsi3+0x1c>
    d068:	014bc83a 	sub	r5,zero,r5
    d06c:	8021003a 	cmpeq	r16,r16,zero
    d070:	003fef06 	br	d030 <__divsi3+0x1c>

0000d074 <__modsi3>:
    d074:	deffff04 	addi	sp,sp,-4
    d078:	dfc00015 	stw	ra,0(sp)
    d07c:	01800044 	movi	r6,1
    d080:	2807883a 	mov	r3,r5
    d084:	20000416 	blt	r4,zero,d098 <__modsi3+0x24>
    d088:	28000c16 	blt	r5,zero,d0bc <__modsi3+0x48>
    d08c:	dfc00017 	ldw	ra,0(sp)
    d090:	dec00104 	addi	sp,sp,4
    d094:	000cf981 	jmpi	cf98 <udivmodsi4>
    d098:	0109c83a 	sub	r4,zero,r4
    d09c:	28000b16 	blt	r5,zero,d0cc <__modsi3+0x58>
    d0a0:	180b883a 	mov	r5,r3
    d0a4:	01800044 	movi	r6,1
    d0a8:	000cf980 	call	cf98 <udivmodsi4>
    d0ac:	0085c83a 	sub	r2,zero,r2
    d0b0:	dfc00017 	ldw	ra,0(sp)
    d0b4:	dec00104 	addi	sp,sp,4
    d0b8:	f800283a 	ret
    d0bc:	014bc83a 	sub	r5,zero,r5
    d0c0:	dfc00017 	ldw	ra,0(sp)
    d0c4:	dec00104 	addi	sp,sp,4
    d0c8:	000cf981 	jmpi	cf98 <udivmodsi4>
    d0cc:	0147c83a 	sub	r3,zero,r5
    d0d0:	003ff306 	br	d0a0 <__modsi3+0x2c>

0000d0d4 <__udivsi3>:
    d0d4:	000d883a 	mov	r6,zero
    d0d8:	000cf981 	jmpi	cf98 <udivmodsi4>

0000d0dc <__umodsi3>:
    d0dc:	01800044 	movi	r6,1
    d0e0:	000cf981 	jmpi	cf98 <udivmodsi4>

0000d0e4 <__mulsi3>:
    d0e4:	20000a26 	beq	r4,zero,d110 <__mulsi3+0x2c>
    d0e8:	0007883a 	mov	r3,zero
    d0ec:	2080004c 	andi	r2,r4,1
    d0f0:	1005003a 	cmpeq	r2,r2,zero
    d0f4:	2008d07a 	srli	r4,r4,1
    d0f8:	1000011e 	bne	r2,zero,d100 <__mulsi3+0x1c>
    d0fc:	1947883a 	add	r3,r3,r5
    d100:	294b883a 	add	r5,r5,r5
    d104:	203ff91e 	bne	r4,zero,d0ec <__mulsi3+0x8>
    d108:	1805883a 	mov	r2,r3
    d10c:	f800283a 	ret
    d110:	0007883a 	mov	r3,zero
    d114:	1805883a 	mov	r2,r3
    d118:	f800283a 	ret

0000d11c <__muldi3>:
    d11c:	defff204 	addi	sp,sp,-56
    d120:	df000c15 	stw	fp,48(sp)
    d124:	3038d43a 	srli	fp,r6,16
    d128:	dd000815 	stw	r20,32(sp)
    d12c:	dc400515 	stw	r17,20(sp)
    d130:	2028d43a 	srli	r20,r4,16
    d134:	247fffcc 	andi	r17,r4,65535
    d138:	dc000415 	stw	r16,16(sp)
    d13c:	343fffcc 	andi	r16,r6,65535
    d140:	dcc00715 	stw	r19,28(sp)
    d144:	d9000015 	stw	r4,0(sp)
    d148:	2827883a 	mov	r19,r5
    d14c:	8809883a 	mov	r4,r17
    d150:	d9400115 	stw	r5,4(sp)
    d154:	800b883a 	mov	r5,r16
    d158:	d9800215 	stw	r6,8(sp)
    d15c:	dfc00d15 	stw	ra,52(sp)
    d160:	d9c00315 	stw	r7,12(sp)
    d164:	dd800a15 	stw	r22,40(sp)
    d168:	dd400915 	stw	r21,36(sp)
    d16c:	302d883a 	mov	r22,r6
    d170:	ddc00b15 	stw	r23,44(sp)
    d174:	dc800615 	stw	r18,24(sp)
    d178:	000d0e40 	call	d0e4 <__mulsi3>
    d17c:	8809883a 	mov	r4,r17
    d180:	e00b883a 	mov	r5,fp
    d184:	102b883a 	mov	r21,r2
    d188:	000d0e40 	call	d0e4 <__mulsi3>
    d18c:	800b883a 	mov	r5,r16
    d190:	a009883a 	mov	r4,r20
    d194:	1023883a 	mov	r17,r2
    d198:	000d0e40 	call	d0e4 <__mulsi3>
    d19c:	a009883a 	mov	r4,r20
    d1a0:	e00b883a 	mov	r5,fp
    d1a4:	1021883a 	mov	r16,r2
    d1a8:	000d0e40 	call	d0e4 <__mulsi3>
    d1ac:	a8ffffcc 	andi	r3,r21,65535
    d1b0:	a82ad43a 	srli	r21,r21,16
    d1b4:	8c23883a 	add	r17,r17,r16
    d1b8:	1011883a 	mov	r8,r2
    d1bc:	ac6b883a 	add	r21,r21,r17
    d1c0:	a804943a 	slli	r2,r21,16
    d1c4:	b009883a 	mov	r4,r22
    d1c8:	980b883a 	mov	r5,r19
    d1cc:	10c7883a 	add	r3,r2,r3
    d1d0:	a812d43a 	srli	r9,r21,16
    d1d4:	180d883a 	mov	r6,r3
    d1d8:	ac00022e 	bgeu	r21,r16,d1e4 <__muldi3+0xc8>
    d1dc:	00800074 	movhi	r2,1
    d1e0:	4091883a 	add	r8,r8,r2
    d1e4:	4267883a 	add	r19,r8,r9
    d1e8:	302d883a 	mov	r22,r6
    d1ec:	000d0e40 	call	d0e4 <__mulsi3>
    d1f0:	d9400317 	ldw	r5,12(sp)
    d1f4:	d9000017 	ldw	r4,0(sp)
    d1f8:	1023883a 	mov	r17,r2
    d1fc:	000d0e40 	call	d0e4 <__mulsi3>
    d200:	14cb883a 	add	r5,r2,r19
    d204:	894b883a 	add	r5,r17,r5
    d208:	b005883a 	mov	r2,r22
    d20c:	2807883a 	mov	r3,r5
    d210:	dfc00d17 	ldw	ra,52(sp)
    d214:	df000c17 	ldw	fp,48(sp)
    d218:	ddc00b17 	ldw	r23,44(sp)
    d21c:	dd800a17 	ldw	r22,40(sp)
    d220:	dd400917 	ldw	r21,36(sp)
    d224:	dd000817 	ldw	r20,32(sp)
    d228:	dcc00717 	ldw	r19,28(sp)
    d22c:	dc800617 	ldw	r18,24(sp)
    d230:	dc400517 	ldw	r17,20(sp)
    d234:	dc000417 	ldw	r16,16(sp)
    d238:	dec00e04 	addi	sp,sp,56
    d23c:	f800283a 	ret

0000d240 <__clzsi2>:
    d240:	00bfffd4 	movui	r2,65535
    d244:	11000e36 	bltu	r2,r4,d280 <__clzsi2+0x40>
    d248:	00803fc4 	movi	r2,255
    d24c:	01400204 	movi	r5,8
    d250:	0007883a 	mov	r3,zero
    d254:	11001036 	bltu	r2,r4,d298 <__clzsi2+0x58>
    d258:	000b883a 	mov	r5,zero
    d25c:	20c6d83a 	srl	r3,r4,r3
    d260:	00800074 	movhi	r2,1
    d264:	10bc6704 	addi	r2,r2,-3684
    d268:	1887883a 	add	r3,r3,r2
    d26c:	18800003 	ldbu	r2,0(r3)
    d270:	00c00804 	movi	r3,32
    d274:	2885883a 	add	r2,r5,r2
    d278:	1885c83a 	sub	r2,r3,r2
    d27c:	f800283a 	ret
    d280:	01400404 	movi	r5,16
    d284:	00804034 	movhi	r2,256
    d288:	10bfffc4 	addi	r2,r2,-1
    d28c:	2807883a 	mov	r3,r5
    d290:	113ff22e 	bgeu	r2,r4,d25c <__clzsi2+0x1c>
    d294:	01400604 	movi	r5,24
    d298:	2807883a 	mov	r3,r5
    d29c:	20c6d83a 	srl	r3,r4,r3
    d2a0:	00800074 	movhi	r2,1
    d2a4:	10bc6704 	addi	r2,r2,-3684
    d2a8:	1887883a 	add	r3,r3,r2
    d2ac:	18800003 	ldbu	r2,0(r3)
    d2b0:	00c00804 	movi	r3,32
    d2b4:	2885883a 	add	r2,r5,r2
    d2b8:	1885c83a 	sub	r2,r3,r2
    d2bc:	f800283a 	ret

0000d2c0 <__fpcmp_parts_f>:
    d2c0:	21800017 	ldw	r6,0(r4)
    d2c4:	00c00044 	movi	r3,1
    d2c8:	19800a2e 	bgeu	r3,r6,d2f4 <__fpcmp_parts_f+0x34>
    d2cc:	28800017 	ldw	r2,0(r5)
    d2d0:	1880082e 	bgeu	r3,r2,d2f4 <__fpcmp_parts_f+0x34>
    d2d4:	00c00104 	movi	r3,4
    d2d8:	30c01e26 	beq	r6,r3,d354 <__fpcmp_parts_f+0x94>
    d2dc:	10c01a26 	beq	r2,r3,d348 <__fpcmp_parts_f+0x88>
    d2e0:	00c00084 	movi	r3,2
    d2e4:	30c00526 	beq	r6,r3,d2fc <__fpcmp_parts_f+0x3c>
    d2e8:	10c0071e 	bne	r2,r3,d308 <__fpcmp_parts_f+0x48>
    d2ec:	20800117 	ldw	r2,4(r4)
    d2f0:	1000091e 	bne	r2,zero,d318 <__fpcmp_parts_f+0x58>
    d2f4:	00800044 	movi	r2,1
    d2f8:	f800283a 	ret
    d2fc:	10c0121e 	bne	r2,r3,d348 <__fpcmp_parts_f+0x88>
    d300:	0005883a 	mov	r2,zero
    d304:	f800283a 	ret
    d308:	20c00117 	ldw	r3,4(r4)
    d30c:	28800117 	ldw	r2,4(r5)
    d310:	18800326 	beq	r3,r2,d320 <__fpcmp_parts_f+0x60>
    d314:	183ff726 	beq	r3,zero,d2f4 <__fpcmp_parts_f+0x34>
    d318:	00bfffc4 	movi	r2,-1
    d31c:	f800283a 	ret
    d320:	21800217 	ldw	r6,8(r4)
    d324:	28800217 	ldw	r2,8(r5)
    d328:	11bffa16 	blt	r2,r6,d314 <__fpcmp_parts_f+0x54>
    d32c:	30800416 	blt	r6,r2,d340 <__fpcmp_parts_f+0x80>
    d330:	21000317 	ldw	r4,12(r4)
    d334:	29400317 	ldw	r5,12(r5)
    d338:	293ff636 	bltu	r5,r4,d314 <__fpcmp_parts_f+0x54>
    d33c:	217ff02e 	bgeu	r4,r5,d300 <__fpcmp_parts_f+0x40>
    d340:	183fec1e 	bne	r3,zero,d2f4 <__fpcmp_parts_f+0x34>
    d344:	003ff406 	br	d318 <__fpcmp_parts_f+0x58>
    d348:	28800117 	ldw	r2,4(r5)
    d34c:	103fe91e 	bne	r2,zero,d2f4 <__fpcmp_parts_f+0x34>
    d350:	003ff106 	br	d318 <__fpcmp_parts_f+0x58>
    d354:	11bfe51e 	bne	r2,r6,d2ec <__fpcmp_parts_f+0x2c>
    d358:	28c00117 	ldw	r3,4(r5)
    d35c:	20800117 	ldw	r2,4(r4)
    d360:	1885c83a 	sub	r2,r3,r2
    d364:	f800283a 	ret

0000d368 <__pack_d>:
    d368:	20c00017 	ldw	r3,0(r4)
    d36c:	defffd04 	addi	sp,sp,-12
    d370:	dc000015 	stw	r16,0(sp)
    d374:	dc800215 	stw	r18,8(sp)
    d378:	dc400115 	stw	r17,4(sp)
    d37c:	00800044 	movi	r2,1
    d380:	22000317 	ldw	r8,12(r4)
    d384:	001f883a 	mov	r15,zero
    d388:	22400417 	ldw	r9,16(r4)
    d38c:	24000117 	ldw	r16,4(r4)
    d390:	10c0552e 	bgeu	r2,r3,d4e8 <__pack_d+0x180>
    d394:	00800104 	movi	r2,4
    d398:	18804f26 	beq	r3,r2,d4d8 <__pack_d+0x170>
    d39c:	00800084 	movi	r2,2
    d3a0:	18800226 	beq	r3,r2,d3ac <__pack_d+0x44>
    d3a4:	4244b03a 	or	r2,r8,r9
    d3a8:	10001a1e 	bne	r2,zero,d414 <__pack_d+0xac>
    d3ac:	000d883a 	mov	r6,zero
    d3b0:	000f883a 	mov	r7,zero
    d3b4:	0011883a 	mov	r8,zero
    d3b8:	00800434 	movhi	r2,16
    d3bc:	10bfffc4 	addi	r2,r2,-1
    d3c0:	301d883a 	mov	r14,r6
    d3c4:	3884703a 	and	r2,r7,r2
    d3c8:	400a953a 	slli	r5,r8,20
    d3cc:	79bffc2c 	andhi	r6,r15,65520
    d3d0:	308cb03a 	or	r6,r6,r2
    d3d4:	00e00434 	movhi	r3,32784
    d3d8:	18ffffc4 	addi	r3,r3,-1
    d3dc:	800497fa 	slli	r2,r16,31
    d3e0:	30c6703a 	and	r3,r6,r3
    d3e4:	1946b03a 	or	r3,r3,r5
    d3e8:	01600034 	movhi	r5,32768
    d3ec:	297fffc4 	addi	r5,r5,-1
    d3f0:	194a703a 	and	r5,r3,r5
    d3f4:	288ab03a 	or	r5,r5,r2
    d3f8:	2807883a 	mov	r3,r5
    d3fc:	7005883a 	mov	r2,r14
    d400:	dc800217 	ldw	r18,8(sp)
    d404:	dc400117 	ldw	r17,4(sp)
    d408:	dc000017 	ldw	r16,0(sp)
    d40c:	dec00304 	addi	sp,sp,12
    d410:	f800283a 	ret
    d414:	21000217 	ldw	r4,8(r4)
    d418:	00bf0084 	movi	r2,-1022
    d41c:	20803f16 	blt	r4,r2,d51c <__pack_d+0x1b4>
    d420:	0080ffc4 	movi	r2,1023
    d424:	11002c16 	blt	r2,r4,d4d8 <__pack_d+0x170>
    d428:	00803fc4 	movi	r2,255
    d42c:	408c703a 	and	r6,r8,r2
    d430:	00802004 	movi	r2,128
    d434:	0007883a 	mov	r3,zero
    d438:	000f883a 	mov	r7,zero
    d43c:	2280ffc4 	addi	r10,r4,1023
    d440:	30801e26 	beq	r6,r2,d4bc <__pack_d+0x154>
    d444:	00801fc4 	movi	r2,127
    d448:	4089883a 	add	r4,r8,r2
    d44c:	220d803a 	cmpltu	r6,r4,r8
    d450:	324d883a 	add	r6,r6,r9
    d454:	2011883a 	mov	r8,r4
    d458:	3013883a 	mov	r9,r6
    d45c:	00880034 	movhi	r2,8192
    d460:	10bfffc4 	addi	r2,r2,-1
    d464:	12400d36 	bltu	r2,r9,d49c <__pack_d+0x134>
    d468:	4804963a 	slli	r2,r9,24
    d46c:	400cd23a 	srli	r6,r8,8
    d470:	480ed23a 	srli	r7,r9,8
    d474:	013fffc4 	movi	r4,-1
    d478:	118cb03a 	or	r6,r2,r6
    d47c:	01400434 	movhi	r5,16
    d480:	297fffc4 	addi	r5,r5,-1
    d484:	3104703a 	and	r2,r6,r4
    d488:	3946703a 	and	r3,r7,r5
    d48c:	5201ffcc 	andi	r8,r10,2047
    d490:	100d883a 	mov	r6,r2
    d494:	180f883a 	mov	r7,r3
    d498:	003fc706 	br	d3b8 <__pack_d+0x50>
    d49c:	480897fa 	slli	r4,r9,31
    d4a0:	4004d07a 	srli	r2,r8,1
    d4a4:	4806d07a 	srli	r3,r9,1
    d4a8:	52800044 	addi	r10,r10,1
    d4ac:	2084b03a 	or	r2,r4,r2
    d4b0:	1011883a 	mov	r8,r2
    d4b4:	1813883a 	mov	r9,r3
    d4b8:	003feb06 	br	d468 <__pack_d+0x100>
    d4bc:	383fe11e 	bne	r7,zero,d444 <__pack_d+0xdc>
    d4c0:	01004004 	movi	r4,256
    d4c4:	4104703a 	and	r2,r8,r4
    d4c8:	10c4b03a 	or	r2,r2,r3
    d4cc:	103fe326 	beq	r2,zero,d45c <__pack_d+0xf4>
    d4d0:	3005883a 	mov	r2,r6
    d4d4:	003fdc06 	br	d448 <__pack_d+0xe0>
    d4d8:	000d883a 	mov	r6,zero
    d4dc:	000f883a 	mov	r7,zero
    d4e0:	0201ffc4 	movi	r8,2047
    d4e4:	003fb406 	br	d3b8 <__pack_d+0x50>
    d4e8:	0005883a 	mov	r2,zero
    d4ec:	00c00234 	movhi	r3,8
    d4f0:	408cb03a 	or	r6,r8,r2
    d4f4:	48ceb03a 	or	r7,r9,r3
    d4f8:	013fffc4 	movi	r4,-1
    d4fc:	01400434 	movhi	r5,16
    d500:	297fffc4 	addi	r5,r5,-1
    d504:	3104703a 	and	r2,r6,r4
    d508:	3946703a 	and	r3,r7,r5
    d50c:	100d883a 	mov	r6,r2
    d510:	180f883a 	mov	r7,r3
    d514:	0201ffc4 	movi	r8,2047
    d518:	003fa706 	br	d3b8 <__pack_d+0x50>
    d51c:	1109c83a 	sub	r4,r2,r4
    d520:	00800e04 	movi	r2,56
    d524:	11004316 	blt	r2,r4,d634 <__pack_d+0x2cc>
    d528:	21fff804 	addi	r7,r4,-32
    d52c:	38004516 	blt	r7,zero,d644 <__pack_d+0x2dc>
    d530:	49d8d83a 	srl	r12,r9,r7
    d534:	001b883a 	mov	r13,zero
    d538:	0023883a 	mov	r17,zero
    d53c:	01400044 	movi	r5,1
    d540:	0025883a 	mov	r18,zero
    d544:	38004716 	blt	r7,zero,d664 <__pack_d+0x2fc>
    d548:	29d6983a 	sll	r11,r5,r7
    d54c:	0015883a 	mov	r10,zero
    d550:	00bfffc4 	movi	r2,-1
    d554:	5089883a 	add	r4,r10,r2
    d558:	588b883a 	add	r5,r11,r2
    d55c:	228d803a 	cmpltu	r6,r4,r10
    d560:	314b883a 	add	r5,r6,r5
    d564:	4104703a 	and	r2,r8,r4
    d568:	4946703a 	and	r3,r9,r5
    d56c:	10c4b03a 	or	r2,r2,r3
    d570:	10000226 	beq	r2,zero,d57c <__pack_d+0x214>
    d574:	04400044 	movi	r17,1
    d578:	0025883a 	mov	r18,zero
    d57c:	00803fc4 	movi	r2,255
    d580:	644eb03a 	or	r7,r12,r17
    d584:	3892703a 	and	r9,r7,r2
    d588:	00802004 	movi	r2,128
    d58c:	6c90b03a 	or	r8,r13,r18
    d590:	0015883a 	mov	r10,zero
    d594:	48801626 	beq	r9,r2,d5f0 <__pack_d+0x288>
    d598:	01001fc4 	movi	r4,127
    d59c:	3905883a 	add	r2,r7,r4
    d5a0:	11cd803a 	cmpltu	r6,r2,r7
    d5a4:	320d883a 	add	r6,r6,r8
    d5a8:	100f883a 	mov	r7,r2
    d5ac:	00840034 	movhi	r2,4096
    d5b0:	10bfffc4 	addi	r2,r2,-1
    d5b4:	3011883a 	mov	r8,r6
    d5b8:	0007883a 	mov	r3,zero
    d5bc:	11801b36 	bltu	r2,r6,d62c <__pack_d+0x2c4>
    d5c0:	4004963a 	slli	r2,r8,24
    d5c4:	3808d23a 	srli	r4,r7,8
    d5c8:	400ad23a 	srli	r5,r8,8
    d5cc:	1813883a 	mov	r9,r3
    d5d0:	1108b03a 	or	r4,r2,r4
    d5d4:	00bfffc4 	movi	r2,-1
    d5d8:	00c00434 	movhi	r3,16
    d5dc:	18ffffc4 	addi	r3,r3,-1
    d5e0:	208c703a 	and	r6,r4,r2
    d5e4:	28ce703a 	and	r7,r5,r3
    d5e8:	4a01ffcc 	andi	r8,r9,2047
    d5ec:	003f7206 	br	d3b8 <__pack_d+0x50>
    d5f0:	503fe91e 	bne	r10,zero,d598 <__pack_d+0x230>
    d5f4:	01004004 	movi	r4,256
    d5f8:	3904703a 	and	r2,r7,r4
    d5fc:	0007883a 	mov	r3,zero
    d600:	10c4b03a 	or	r2,r2,r3
    d604:	10000626 	beq	r2,zero,d620 <__pack_d+0x2b8>
    d608:	3a45883a 	add	r2,r7,r9
    d60c:	11cd803a 	cmpltu	r6,r2,r7
    d610:	320d883a 	add	r6,r6,r8
    d614:	100f883a 	mov	r7,r2
    d618:	3011883a 	mov	r8,r6
    d61c:	0007883a 	mov	r3,zero
    d620:	00840034 	movhi	r2,4096
    d624:	10bfffc4 	addi	r2,r2,-1
    d628:	123fe52e 	bgeu	r2,r8,d5c0 <__pack_d+0x258>
    d62c:	00c00044 	movi	r3,1
    d630:	003fe306 	br	d5c0 <__pack_d+0x258>
    d634:	0009883a 	mov	r4,zero
    d638:	0013883a 	mov	r9,zero
    d63c:	000b883a 	mov	r5,zero
    d640:	003fe406 	br	d5d4 <__pack_d+0x26c>
    d644:	4a47883a 	add	r3,r9,r9
    d648:	008007c4 	movi	r2,31
    d64c:	1105c83a 	sub	r2,r2,r4
    d650:	1886983a 	sll	r3,r3,r2
    d654:	4118d83a 	srl	r12,r8,r4
    d658:	491ad83a 	srl	r13,r9,r4
    d65c:	1b18b03a 	or	r12,r3,r12
    d660:	003fb506 	br	d538 <__pack_d+0x1d0>
    d664:	2806d07a 	srli	r3,r5,1
    d668:	008007c4 	movi	r2,31
    d66c:	1105c83a 	sub	r2,r2,r4
    d670:	1896d83a 	srl	r11,r3,r2
    d674:	2914983a 	sll	r10,r5,r4
    d678:	003fb506 	br	d550 <__pack_d+0x1e8>

0000d67c <__fpcmp_parts_d>:
    d67c:	21800017 	ldw	r6,0(r4)
    d680:	00c00044 	movi	r3,1
    d684:	19800a2e 	bgeu	r3,r6,d6b0 <__fpcmp_parts_d+0x34>
    d688:	28800017 	ldw	r2,0(r5)
    d68c:	1880082e 	bgeu	r3,r2,d6b0 <__fpcmp_parts_d+0x34>
    d690:	00c00104 	movi	r3,4
    d694:	30c02626 	beq	r6,r3,d730 <__fpcmp_parts_d+0xb4>
    d698:	10c02226 	beq	r2,r3,d724 <__fpcmp_parts_d+0xa8>
    d69c:	00c00084 	movi	r3,2
    d6a0:	30c00526 	beq	r6,r3,d6b8 <__fpcmp_parts_d+0x3c>
    d6a4:	10c0071e 	bne	r2,r3,d6c4 <__fpcmp_parts_d+0x48>
    d6a8:	20800117 	ldw	r2,4(r4)
    d6ac:	1000091e 	bne	r2,zero,d6d4 <__fpcmp_parts_d+0x58>
    d6b0:	00800044 	movi	r2,1
    d6b4:	f800283a 	ret
    d6b8:	10c01a1e 	bne	r2,r3,d724 <__fpcmp_parts_d+0xa8>
    d6bc:	0005883a 	mov	r2,zero
    d6c0:	f800283a 	ret
    d6c4:	22000117 	ldw	r8,4(r4)
    d6c8:	28800117 	ldw	r2,4(r5)
    d6cc:	40800326 	beq	r8,r2,d6dc <__fpcmp_parts_d+0x60>
    d6d0:	403ff726 	beq	r8,zero,d6b0 <__fpcmp_parts_d+0x34>
    d6d4:	00bfffc4 	movi	r2,-1
    d6d8:	f800283a 	ret
    d6dc:	20c00217 	ldw	r3,8(r4)
    d6e0:	28800217 	ldw	r2,8(r5)
    d6e4:	10fffa16 	blt	r2,r3,d6d0 <__fpcmp_parts_d+0x54>
    d6e8:	18800916 	blt	r3,r2,d710 <__fpcmp_parts_d+0x94>
    d6ec:	21c00417 	ldw	r7,16(r4)
    d6f0:	28c00417 	ldw	r3,16(r5)
    d6f4:	21800317 	ldw	r6,12(r4)
    d6f8:	28800317 	ldw	r2,12(r5)
    d6fc:	19fff436 	bltu	r3,r7,d6d0 <__fpcmp_parts_d+0x54>
    d700:	38c00526 	beq	r7,r3,d718 <__fpcmp_parts_d+0x9c>
    d704:	38c00236 	bltu	r7,r3,d710 <__fpcmp_parts_d+0x94>
    d708:	19ffec1e 	bne	r3,r7,d6bc <__fpcmp_parts_d+0x40>
    d70c:	30bfeb2e 	bgeu	r6,r2,d6bc <__fpcmp_parts_d+0x40>
    d710:	403fe71e 	bne	r8,zero,d6b0 <__fpcmp_parts_d+0x34>
    d714:	003fef06 	br	d6d4 <__fpcmp_parts_d+0x58>
    d718:	11bffa2e 	bgeu	r2,r6,d704 <__fpcmp_parts_d+0x88>
    d71c:	403fe426 	beq	r8,zero,d6b0 <__fpcmp_parts_d+0x34>
    d720:	003fec06 	br	d6d4 <__fpcmp_parts_d+0x58>
    d724:	28800117 	ldw	r2,4(r5)
    d728:	103fe11e 	bne	r2,zero,d6b0 <__fpcmp_parts_d+0x34>
    d72c:	003fe906 	br	d6d4 <__fpcmp_parts_d+0x58>
    d730:	11bfdd1e 	bne	r2,r6,d6a8 <__fpcmp_parts_d+0x2c>
    d734:	28c00117 	ldw	r3,4(r5)
    d738:	20800117 	ldw	r2,4(r4)
    d73c:	1885c83a 	sub	r2,r3,r2
    d740:	f800283a 	ret

0000d744 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d744:	defffd04 	addi	sp,sp,-12
    d748:	dfc00215 	stw	ra,8(sp)
    d74c:	dc400115 	stw	r17,4(sp)
    d750:	dc000015 	stw	r16,0(sp)
    d754:	2021883a 	mov	r16,r4
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d758:	20001d16 	blt	r4,zero,d7d0 <close+0x8c>
    d75c:	01400304 	movi	r5,12
    d760:	000d0e40 	call	d0e4 <__mulsi3>
    d764:	00c00074 	movhi	r3,1
    d768:	18fed404 	addi	r3,r3,-1200
    d76c:	10c9883a 	add	r4,r2,r3

  if (fd)
    d770:	20001726 	beq	r4,zero,d7d0 <close+0x8c>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d774:	20800017 	ldw	r2,0(r4)
    d778:	10800417 	ldw	r2,16(r2)
    d77c:	10002126 	beq	r2,zero,d804 <close+0xc0>
    d780:	103ee83a 	callr	r2
    d784:	1023883a 	mov	r17,r2

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d788:	8009883a 	mov	r4,r16
    d78c:	000dc3c0 	call	dc3c <alt_release_fd>
    if (rval < 0)
    d790:	88000216 	blt	r17,zero,d79c <close+0x58>
    d794:	0005883a 	mov	r2,zero
    d798:	00001d06 	br	d810 <close+0xcc>

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  return ((alt_errno) ? alt_errno() : &errno);
    d79c:	00800074 	movhi	r2,1
    d7a0:	10837904 	addi	r2,r2,3556
    d7a4:	10800017 	ldw	r2,0(r2)
    d7a8:	1000031e 	bne	r2,zero,d7b8 <close+0x74>
    d7ac:	00c00074 	movhi	r3,1
    d7b0:	18ca4404 	addi	r3,r3,10512
    d7b4:	00000206 	br	d7c0 <close+0x7c>
    d7b8:	103ee83a 	callr	r2
    d7bc:	1007883a 	mov	r3,r2
    {
      ALT_ERRNO = -rval;
    d7c0:	0445c83a 	sub	r2,zero,r17
    d7c4:	18800015 	stw	r2,0(r3)
    d7c8:	00bfffc4 	movi	r2,-1
    d7cc:	00001006 	br	d810 <close+0xcc>
    d7d0:	00800074 	movhi	r2,1
    d7d4:	10837904 	addi	r2,r2,3556
    d7d8:	10800017 	ldw	r2,0(r2)
    d7dc:	1000031e 	bne	r2,zero,d7ec <close+0xa8>
    d7e0:	00c00074 	movhi	r3,1
    d7e4:	18ca4404 	addi	r3,r3,10512
    d7e8:	00000206 	br	d7f4 <close+0xb0>
    d7ec:	103ee83a 	callr	r2
    d7f0:	1007883a 	mov	r3,r2
    }
    return 0;
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d7f4:	00801444 	movi	r2,81
    d7f8:	18800015 	stw	r2,0(r3)
    d7fc:	00bfffc4 	movi	r2,-1
    d800:	00000306 	br	d810 <close+0xcc>

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d804:	8009883a 	mov	r4,r16
    d808:	000dc3c0 	call	dc3c <alt_release_fd>
    d80c:	0005883a 	mov	r2,zero
  else
  {
    ALT_ERRNO = EBADFD;
    return -1;
  }
}
    d810:	dfc00217 	ldw	ra,8(sp)
    d814:	dc400117 	ldw	r17,4(sp)
    d818:	dc000017 	ldw	r16,0(sp)
    d81c:	dec00304 	addi	sp,sp,12
    d820:	f800283a 	ret

0000d824 <alt_dev_null_write>:
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  return len;
}
    d824:	3005883a 	mov	r2,r6
    d828:	f800283a 	ret

0000d82c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d82c:	defffe04 	addi	sp,sp,-8
    d830:	dfc00115 	stw	ra,4(sp)
    d834:	dc000015 	stw	r16,0(sp)
    d838:	2821883a 	mov	r16,r5
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d83c:	20001016 	blt	r4,zero,d880 <fstat+0x54>
    d840:	01400304 	movi	r5,12
    d844:	000d0e40 	call	d0e4 <__mulsi3>
    d848:	00c00074 	movhi	r3,1
    d84c:	18fed404 	addi	r3,r3,-1200
    d850:	10c9883a 	add	r4,r2,r3
  
  if (fd)
    d854:	20000a26 	beq	r4,zero,d880 <fstat+0x54>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d858:	20800017 	ldw	r2,0(r4)
    d85c:	10800817 	ldw	r2,32(r2)
    d860:	10000326 	beq	r2,zero,d870 <fstat+0x44>
    {
      return fd->dev->fstat(fd, st);
    d864:	800b883a 	mov	r5,r16
    d868:	103ee83a 	callr	r2
    d86c:	00001006 	br	d8b0 <fstat+0x84>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d870:	00880004 	movi	r2,8192
    d874:	80800115 	stw	r2,4(r16)
    d878:	0005883a 	mov	r2,zero
    d87c:	00000c06 	br	d8b0 <fstat+0x84>
    d880:	00800074 	movhi	r2,1
    d884:	10837904 	addi	r2,r2,3556
    d888:	10800017 	ldw	r2,0(r2)
    d88c:	1000031e 	bne	r2,zero,d89c <fstat+0x70>
    d890:	00c00074 	movhi	r3,1
    d894:	18ca4404 	addi	r3,r3,10512
    d898:	00000206 	br	d8a4 <fstat+0x78>
    d89c:	103ee83a 	callr	r2
    d8a0:	1007883a 	mov	r3,r2
      return 0;
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d8a4:	00801444 	movi	r2,81
    d8a8:	18800015 	stw	r2,0(r3)
    d8ac:	00bfffc4 	movi	r2,-1
    return -1;
  }
}
    d8b0:	dfc00117 	ldw	ra,4(sp)
    d8b4:	dc000017 	ldw	r16,0(sp)
    d8b8:	dec00204 	addi	sp,sp,8
    d8bc:	f800283a 	ret

0000d8c0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d8c0:	deffef04 	addi	sp,sp,-68
    d8c4:	dfc01015 	stw	ra,64(sp)
    d8c8:	dc000f15 	stw	r16,60(sp)
    d8cc:	2021883a 	mov	r16,r4
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d8d0:	20001116 	blt	r4,zero,d918 <isatty+0x58>
    d8d4:	01400304 	movi	r5,12
    d8d8:	000d0e40 	call	d0e4 <__mulsi3>
    d8dc:	00c00074 	movhi	r3,1
    d8e0:	18fed404 	addi	r3,r3,-1200
    d8e4:	10c5883a 	add	r2,r2,r3
  
  if (fd)
    d8e8:	10000b26 	beq	r2,zero,d918 <isatty+0x58>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d8ec:	10800017 	ldw	r2,0(r2)
    d8f0:	10800817 	ldw	r2,32(r2)
    d8f4:	1000021e 	bne	r2,zero,d900 <isatty+0x40>
    d8f8:	00800044 	movi	r2,1
    d8fc:	00001206 	br	d948 <isatty+0x88>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d900:	8009883a 	mov	r4,r16
    d904:	d80b883a 	mov	r5,sp
    d908:	000d82c0 	call	d82c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d90c:	d8800117 	ldw	r2,4(sp)
    d910:	10880020 	cmpeqi	r2,r2,8192
    d914:	00000c06 	br	d948 <isatty+0x88>
    d918:	00800074 	movhi	r2,1
    d91c:	10837904 	addi	r2,r2,3556
    d920:	10800017 	ldw	r2,0(r2)
    d924:	1000031e 	bne	r2,zero,d934 <isatty+0x74>
    d928:	00c00074 	movhi	r3,1
    d92c:	18ca4404 	addi	r3,r3,10512
    d930:	00000206 	br	d93c <isatty+0x7c>
    d934:	103ee83a 	callr	r2
    d938:	1007883a 	mov	r3,r2
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d93c:	00801444 	movi	r2,81
    d940:	18800015 	stw	r2,0(r3)
    d944:	0005883a 	mov	r2,zero
    return 0;
  }
}
    d948:	dfc01017 	ldw	ra,64(sp)
    d94c:	dc000f17 	ldw	r16,60(sp)
    d950:	dec01104 	addi	sp,sp,68
    d954:	f800283a 	ret

0000d958 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d958:	deffff04 	addi	sp,sp,-4
    d95c:	dfc00015 	stw	ra,0(sp)
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d960:	01000074 	movhi	r4,1
    d964:	21037e04 	addi	r4,r4,3576
    d968:	00c00074 	movhi	r3,1
    d96c:	18fcbb04 	addi	r3,r3,-3348

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
    d970:	20c00926 	beq	r4,r3,d998 <alt_load+0x40>
    d974:	01800074 	movhi	r6,1
    d978:	31837e04 	addi	r6,r6,3576
  {
    while( to != end )
    d97c:	19800626 	beq	r3,r6,d998 <alt_load+0x40>
    d980:	01400104 	movi	r5,4
    {
      *to++ = *from++;
    d984:	20800017 	ldw	r2,0(r4)
    d988:	18800015 	stw	r2,0(r3)
    d98c:	1947883a 	add	r3,r3,r5
    d990:	2149883a 	add	r4,r4,r5
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d994:	30fffb1e 	bne	r6,r3,d984 <alt_load+0x2c>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d998:	01000034 	movhi	r4,0
    d99c:	21000804 	addi	r4,r4,32
    d9a0:	00c00034 	movhi	r3,0
    d9a4:	18c00804 	addi	r3,r3,32

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
    d9a8:	20c00926 	beq	r4,r3,d9d0 <alt_load+0x78>
    d9ac:	01800034 	movhi	r6,0
    d9b0:	31805a04 	addi	r6,r6,360
  {
    while( to != end )
    d9b4:	19800626 	beq	r3,r6,d9d0 <alt_load+0x78>
    d9b8:	01400104 	movi	r5,4
    {
      *to++ = *from++;
    d9bc:	20800017 	ldw	r2,0(r4)
    d9c0:	18800015 	stw	r2,0(r3)
    d9c4:	1947883a 	add	r3,r3,r5
    d9c8:	2149883a 	add	r4,r4,r5
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d9cc:	30fffb1e 	bne	r6,r3,d9bc <alt_load+0x64>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d9d0:	01000074 	movhi	r4,1
    d9d4:	213b9304 	addi	r4,r4,-4532
    d9d8:	00c00074 	movhi	r3,1
    d9dc:	18fb9304 	addi	r3,r3,-4532

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
    d9e0:	20c00926 	beq	r4,r3,da08 <alt_load+0xb0>
    d9e4:	01800074 	movhi	r6,1
    d9e8:	31bcbb04 	addi	r6,r6,-3348
  {
    while( to != end )
    d9ec:	19800626 	beq	r3,r6,da08 <alt_load+0xb0>
    d9f0:	01400104 	movi	r5,4
    {
      *to++ = *from++;
    d9f4:	20800017 	ldw	r2,0(r4)
    d9f8:	18800015 	stw	r2,0(r3)
    d9fc:	1947883a 	add	r3,r3,r5
    da00:	2149883a 	add	r4,r4,r5
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    da04:	30fffb1e 	bne	r6,r3,d9f4 <alt_load+0x9c>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    da08:	000e5680 	call	e568 <alt_dcache_flush_all>
  alt_icache_flush_all();
    da0c:	000e5dc0 	call	e5dc <alt_icache_flush_all>
}
    da10:	dfc00017 	ldw	ra,0(sp)
    da14:	dec00104 	addi	sp,sp,4
    da18:	f800283a 	ret

0000da1c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    da1c:	defffd04 	addi	sp,sp,-12
    da20:	dfc00215 	stw	ra,8(sp)
    da24:	dc400115 	stw	r17,4(sp)
    da28:	dc000015 	stw	r16,0(sp)
    da2c:	2821883a 	mov	r16,r5
    da30:	3023883a 	mov	r17,r6
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    da34:	2000020e 	bge	r4,zero,da40 <lseek+0x24>
    da38:	043febc4 	movi	r16,-81
    da3c:	00001006 	br	da80 <lseek+0x64>
    da40:	01400304 	movi	r5,12
    da44:	000d0e40 	call	d0e4 <__mulsi3>
    da48:	00c00074 	movhi	r3,1
    da4c:	18fed404 	addi	r3,r3,-1200
    da50:	10c9883a 	add	r4,r2,r3
  
  if (fd) 
    da54:	20001726 	beq	r4,zero,dab4 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    da58:	20800017 	ldw	r2,0(r4)
    da5c:	10800717 	ldw	r2,28(r2)
    da60:	1000021e 	bne	r2,zero,da6c <lseek+0x50>
    da64:	043fde84 	movi	r16,-134
    da68:	00000506 	br	da80 <lseek+0x64>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    da6c:	800b883a 	mov	r5,r16
    da70:	880d883a 	mov	r6,r17
    da74:	103ee83a 	callr	r2
  else  
  {
    rc = -EBADFD;
  }

  if (rc < 0)
    da78:	1000100e 	bge	r2,zero,dabc <lseek+0xa0>
    da7c:	1021883a 	mov	r16,r2
    da80:	00800074 	movhi	r2,1
    da84:	10837904 	addi	r2,r2,3556
    da88:	10800017 	ldw	r2,0(r2)
    da8c:	1000031e 	bne	r2,zero,da9c <lseek+0x80>
    da90:	00c00074 	movhi	r3,1
    da94:	18ca4404 	addi	r3,r3,10512
    da98:	00000206 	br	daa4 <lseek+0x88>
    da9c:	103ee83a 	callr	r2
    daa0:	1007883a 	mov	r3,r2
  {
    ALT_ERRNO = -rc;
    daa4:	0405c83a 	sub	r2,zero,r16
    daa8:	18800015 	stw	r2,0(r3)
    daac:	00bfffc4 	movi	r2,-1
    dab0:	00000206 	br	dabc <lseek+0xa0>
    dab4:	043febc4 	movi	r16,-81
    dab8:	003ff106 	br	da80 <lseek+0x64>
    rc = -1;
  }

  return rc;
}
    dabc:	dfc00217 	ldw	ra,8(sp)
    dac0:	dc400117 	ldw	r17,4(sp)
    dac4:	dc000017 	ldw	r16,0(sp)
    dac8:	dec00304 	addi	sp,sp,12
    dacc:	f800283a 	ret

0000dad0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    dad0:	defffe04 	addi	sp,sp,-8
    dad4:	dfc00115 	stw	ra,4(sp)
    dad8:	dc000015 	stw	r16,0(sp)
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    dadc:	0009883a 	mov	r4,zero
    dae0:	000de040 	call	de04 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    dae4:	000de240 	call	de24 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    dae8:	01800074 	movhi	r6,1
    daec:	31bcaa04 	addi	r6,r6,-3416
    daf0:	3009883a 	mov	r4,r6
    daf4:	300b883a 	mov	r5,r6
    daf8:	000e7780 	call	e778 <alt_io_redirect>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    dafc:	d126db17 	ldw	r4,-25748(gp)
    db00:	d166dc17 	ldw	r5,-25744(gp)
    db04:	d1a6dd17 	ldw	r6,-25740(gp)
    db08:	00001c80 	call	1c8 <main>
    db0c:	1021883a 	mov	r16,r2
  close(STDOUT_FILENO);
    db10:	01000044 	movi	r4,1
    db14:	000d7440 	call	d744 <close>
  exit (result);
    db18:	8009883a 	mov	r4,r16
    db1c:	000ec480 	call	ec48 <exit>

0000db20 <__malloc_lock>:
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
}
    db20:	f800283a 	ret

0000db24 <__malloc_unlock>:
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
}
    db24:	f800283a 	ret

0000db28 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    db28:	defffd04 	addi	sp,sp,-12
    db2c:	dfc00215 	stw	ra,8(sp)
    db30:	dc400115 	stw	r17,4(sp)
    db34:	dc000015 	stw	r16,0(sp)
    db38:	2821883a 	mov	r16,r5
    db3c:	3023883a 	mov	r17,r6
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    db40:	20002c16 	blt	r4,zero,dbf4 <read+0xcc>
    db44:	01400304 	movi	r5,12
    db48:	000d0e40 	call	d0e4 <__mulsi3>
    db4c:	00c00074 	movhi	r3,1
    db50:	18fed404 	addi	r3,r3,-1200
    db54:	10c9883a 	add	r4,r2,r3
  
  if (fd)
    db58:	20002626 	beq	r4,zero,dbf4 <read+0xcc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    db5c:	20800217 	ldw	r2,8(r4)
    db60:	108000cc 	andi	r2,r2,3
    db64:	00c00044 	movi	r3,1
    db68:	10c01526 	beq	r2,r3,dbc0 <read+0x98>
    db6c:	20800017 	ldw	r2,0(r4)
    db70:	10800517 	ldw	r2,20(r2)
    db74:	10001226 	beq	r2,zero,dbc0 <read+0x98>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    db78:	800b883a 	mov	r5,r16
    db7c:	880d883a 	mov	r6,r17
    db80:	103ee83a 	callr	r2
    db84:	1021883a 	mov	r16,r2
    db88:	1000260e 	bge	r2,zero,dc24 <read+0xfc>
    db8c:	00800074 	movhi	r2,1
    db90:	10837904 	addi	r2,r2,3556
    db94:	10800017 	ldw	r2,0(r2)
    db98:	1000031e 	bne	r2,zero,dba8 <read+0x80>
    db9c:	00c00074 	movhi	r3,1
    dba0:	18ca4404 	addi	r3,r3,10512
    dba4:	00000206 	br	dbb0 <read+0x88>
    dba8:	103ee83a 	callr	r2
    dbac:	1007883a 	mov	r3,r2
        {
          ALT_ERRNO = -rval;
    dbb0:	0405c83a 	sub	r2,zero,r16
    dbb4:	18800015 	stw	r2,0(r3)
    dbb8:	043fffc4 	movi	r16,-1
    dbbc:	00001906 	br	dc24 <read+0xfc>
    dbc0:	00800074 	movhi	r2,1
    dbc4:	10837904 	addi	r2,r2,3556
    dbc8:	10800017 	ldw	r2,0(r2)
    dbcc:	1000031e 	bne	r2,zero,dbdc <read+0xb4>
    dbd0:	00c00074 	movhi	r3,1
    dbd4:	18ca4404 	addi	r3,r3,10512
    dbd8:	00000206 	br	dbe4 <read+0xbc>
    dbdc:	103ee83a 	callr	r2
    dbe0:	1007883a 	mov	r3,r2
        }
        return rval;
      }
      else
      {
        ALT_ERRNO = EACCES;
    dbe4:	00800344 	movi	r2,13
    dbe8:	18800015 	stw	r2,0(r3)
    dbec:	043fffc4 	movi	r16,-1
    dbf0:	00000c06 	br	dc24 <read+0xfc>
    dbf4:	00800074 	movhi	r2,1
    dbf8:	10837904 	addi	r2,r2,3556
    dbfc:	10800017 	ldw	r2,0(r2)
    dc00:	1000031e 	bne	r2,zero,dc10 <read+0xe8>
    dc04:	00c00074 	movhi	r3,1
    dc08:	18ca4404 	addi	r3,r3,10512
    dc0c:	00000206 	br	dc18 <read+0xf0>
    dc10:	103ee83a 	callr	r2
    dc14:	1007883a 	mov	r3,r2
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    dc18:	00801444 	movi	r2,81
    dc1c:	18800015 	stw	r2,0(r3)
    dc20:	043fffc4 	movi	r16,-1
  }
  return -1;
}
    dc24:	8005883a 	mov	r2,r16
    dc28:	dfc00217 	ldw	ra,8(sp)
    dc2c:	dc400117 	ldw	r17,4(sp)
    dc30:	dc000017 	ldw	r16,0(sp)
    dc34:	dec00304 	addi	sp,sp,12
    dc38:	f800283a 	ret

0000dc3c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    dc3c:	defffc04 	addi	sp,sp,-16
    dc40:	dfc00315 	stw	ra,12(sp)
    dc44:	dc800215 	stw	r18,8(sp)
    dc48:	dc400115 	stw	r17,4(sp)
    dc4c:	dc000015 	stw	r16,0(sp)
    dc50:	2025883a 	mov	r18,r4
  if (fd > 2)
    dc54:	00800084 	movi	r2,2
    dc58:	11000c0e 	bge	r2,r4,dc8c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
    dc5c:	04400074 	movhi	r17,1
    dc60:	8c7ed404 	addi	r17,r17,-1200
    dc64:	04000304 	movi	r16,12
    dc68:	800b883a 	mov	r5,r16
    dc6c:	000d0e40 	call	d0e4 <__mulsi3>
    dc70:	1445883a 	add	r2,r2,r17
    dc74:	10000215 	stw	zero,8(r2)
    alt_fd_list[fd].dev      = 0;
    dc78:	9009883a 	mov	r4,r18
    dc7c:	800b883a 	mov	r5,r16
    dc80:	000d0e40 	call	d0e4 <__mulsi3>
    dc84:	1445883a 	add	r2,r2,r17
    dc88:	10000015 	stw	zero,0(r2)
  }
}
    dc8c:	dfc00317 	ldw	ra,12(sp)
    dc90:	dc800217 	ldw	r18,8(sp)
    dc94:	dc400117 	ldw	r17,4(sp)
    dc98:	dc000017 	ldw	r16,0(sp)
    dc9c:	dec00404 	addi	sp,sp,16
    dca0:	f800283a 	ret

0000dca4 <sbrk>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    dca4:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dca8:	00bfff84 	movi	r2,-2
    dcac:	2884703a 	and	r2,r5,r2
    dcb0:	1001703a 	wrctl	status,r2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    dcb4:	d0a00d17 	ldw	r2,-32716(gp)
    dcb8:	108000c4 	addi	r2,r2,3
    dcbc:	00ffff04 	movi	r3,-4
    dcc0:	10c6703a 	and	r3,r2,r3
    dcc4:	d0e00d15 	stw	r3,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    dcc8:	1909883a 	add	r4,r3,r4
    dccc:	00820034 	movhi	r2,2048
    dcd0:	10800004 	addi	r2,r2,0
    dcd4:	1100032e 	bgeu	r2,r4,dce4 <sbrk+0x40>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dcd8:	2801703a 	wrctl	status,r5
    dcdc:	00ffffc4 	movi	r3,-1
    dce0:	00000206 	br	dcec <sbrk+0x48>
    return (caddr_t)-1;
  }
#endif

  prev_heap_end = heap_end; 
  heap_end += incr; 
    dce4:	d1200d15 	stw	r4,-32716(gp)
    dce8:	2801703a 	wrctl	status,r5
#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
} 
    dcec:	1805883a 	mov	r2,r3
    dcf0:	f800283a 	ret

0000dcf4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    dcf4:	defffd04 	addi	sp,sp,-12
    dcf8:	dfc00215 	stw	ra,8(sp)
    dcfc:	dc400115 	stw	r17,4(sp)
    dd00:	dc000015 	stw	r16,0(sp)
    dd04:	2821883a 	mov	r16,r5
    dd08:	3023883a 	mov	r17,r6
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dd0c:	20002b16 	blt	r4,zero,ddbc <write+0xc8>
    dd10:	01400304 	movi	r5,12
    dd14:	000d0e40 	call	d0e4 <__mulsi3>
    dd18:	00c00074 	movhi	r3,1
    dd1c:	18fed404 	addi	r3,r3,-1200
    dd20:	10c9883a 	add	r4,r2,r3
  
  if (fd)
    dd24:	20002526 	beq	r4,zero,ddbc <write+0xc8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    dd28:	20800217 	ldw	r2,8(r4)
    dd2c:	108000cc 	andi	r2,r2,3
    dd30:	10001526 	beq	r2,zero,dd88 <write+0x94>
    dd34:	20800017 	ldw	r2,0(r4)
    dd38:	10800617 	ldw	r2,24(r2)
    dd3c:	10001226 	beq	r2,zero,dd88 <write+0x94>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    dd40:	800b883a 	mov	r5,r16
    dd44:	880d883a 	mov	r6,r17
    dd48:	103ee83a 	callr	r2
    dd4c:	1021883a 	mov	r16,r2
    dd50:	1000260e 	bge	r2,zero,ddec <write+0xf8>
    dd54:	00800074 	movhi	r2,1
    dd58:	10837904 	addi	r2,r2,3556
    dd5c:	10800017 	ldw	r2,0(r2)
    dd60:	1000031e 	bne	r2,zero,dd70 <write+0x7c>
    dd64:	00c00074 	movhi	r3,1
    dd68:	18ca4404 	addi	r3,r3,10512
    dd6c:	00000206 	br	dd78 <write+0x84>
    dd70:	103ee83a 	callr	r2
    dd74:	1007883a 	mov	r3,r2
      {
        ALT_ERRNO = -rval;
    dd78:	0405c83a 	sub	r2,zero,r16
    dd7c:	18800015 	stw	r2,0(r3)
    dd80:	043fffc4 	movi	r16,-1
    dd84:	00001906 	br	ddec <write+0xf8>
    dd88:	00800074 	movhi	r2,1
    dd8c:	10837904 	addi	r2,r2,3556
    dd90:	10800017 	ldw	r2,0(r2)
    dd94:	1000031e 	bne	r2,zero,dda4 <write+0xb0>
    dd98:	00c00074 	movhi	r3,1
    dd9c:	18ca4404 	addi	r3,r3,10512
    dda0:	00000206 	br	ddac <write+0xb8>
    dda4:	103ee83a 	callr	r2
    dda8:	1007883a 	mov	r3,r2
      }
      return rval;
    }
    else
    {
      ALT_ERRNO = EACCES;
    ddac:	00800344 	movi	r2,13
    ddb0:	18800015 	stw	r2,0(r3)
    ddb4:	043fffc4 	movi	r16,-1
    ddb8:	00000c06 	br	ddec <write+0xf8>
    ddbc:	00800074 	movhi	r2,1
    ddc0:	10837904 	addi	r2,r2,3556
    ddc4:	10800017 	ldw	r2,0(r2)
    ddc8:	1000031e 	bne	r2,zero,ddd8 <write+0xe4>
    ddcc:	00c00074 	movhi	r3,1
    ddd0:	18ca4404 	addi	r3,r3,10512
    ddd4:	00000206 	br	dde0 <write+0xec>
    ddd8:	103ee83a 	callr	r2
    dddc:	1007883a 	mov	r3,r2
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    dde0:	00801444 	movi	r2,81
    dde4:	18800015 	stw	r2,0(r3)
    dde8:	043fffc4 	movi	r16,-1
  }
  return -1;
}
    ddec:	8005883a 	mov	r2,r16
    ddf0:	dfc00217 	ldw	ra,8(sp)
    ddf4:	dc400117 	ldw	r17,4(sp)
    ddf8:	dc000017 	ldw	r16,0(sp)
    ddfc:	dec00304 	addi	sp,sp,12
    de00:	f800283a 	ret

0000de04 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    de04:	deffff04 	addi	sp,sp,-4
    de08:	dfc00015 	stw	ra,0(sp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, CPU);
    de0c:	000ea740 	call	ea74 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    de10:	00800044 	movi	r2,1
    de14:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    de18:	dfc00017 	ldw	ra,0(sp)
    de1c:	dec00104 	addi	sp,sp,4
    de20:	f800283a 	ret

0000de24 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    de24:	defffd04 	addi	sp,sp,-12
    de28:	dfc00215 	stw	ra,8(sp)
    de2c:	dc400115 	stw	r17,4(sp)
    de30:	dc000015 	stw	r16,0(sp)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
    de34:	04400074 	movhi	r17,1
    de38:	8c7f3e04 	addi	r17,r17,-776
    de3c:	8809883a 	mov	r4,r17
    de40:	000b883a 	mov	r5,zero
    de44:	01800204 	movi	r6,8
    de48:	000dfc80 	call	dfc8 <altera_avalon_jtag_uart_init>

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    de4c:	04000074 	movhi	r16,1
    de50:	84037604 	addi	r16,r16,3544
    de54:	893ff604 	addi	r4,r17,-40
    de58:	800b883a 	mov	r5,r16
    de5c:	000e56c0 	call	e56c <alt_dev_llist_insert>
    de60:	01000074 	movhi	r4,1
    de64:	21034c04 	addi	r4,r4,3376
    de68:	800b883a 	mov	r5,r16
    de6c:	000e56c0 	call	e56c <alt_dev_llist_insert>
    de70:	01000074 	movhi	r4,1
    de74:	21035704 	addi	r4,r4,3420
    de78:	800b883a 	mov	r5,r16
    de7c:	000e56c0 	call	e56c <alt_dev_llist_insert>
    de80:	01000074 	movhi	r4,1
    de84:	21036204 	addi	r4,r4,3464
    de88:	800b883a 	mov	r5,r16
    de8c:	000e56c0 	call	e56c <alt_dev_llist_insert>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
    ALTERA_UP_AVALON_PARALLEL_PORT_INIT ( DDA_OPTIONS, DDA_Options);
    ALTERA_UP_AVALON_PARALLEL_PORT_INIT ( GREEN_LEDS, Green_LEDs);
    ALTERA_UP_AVALON_PARALLEL_PORT_INIT ( HEX3_HEX0, HEX3_HEX0);
}
    de90:	dfc00217 	ldw	ra,8(sp)
    de94:	dc400117 	ldw	r17,4(sp)
    de98:	dc000017 	ldw	r16,0(sp)
    de9c:	dec00304 	addi	sp,sp,12
    dea0:	f800283a 	ret

0000dea4 <altera_avalon_jtag_uart_ioctl_fd>:
    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
}

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    dea4:	deffff04 	addi	sp,sp,-4
    dea8:	dfc00015 	stw	ra,0(sp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    deac:	21000017 	ldw	r4,0(r4)
    deb0:	21000a04 	addi	r4,r4,40
    deb4:	000e17c0 	call	e17c <altera_avalon_jtag_uart_ioctl>
}
    deb8:	dfc00017 	ldw	ra,0(sp)
    debc:	dec00104 	addi	sp,sp,4
    dec0:	f800283a 	ret

0000dec4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    dec4:	deffff04 	addi	sp,sp,-4
    dec8:	dfc00015 	stw	ra,0(sp)
    decc:	2005883a 	mov	r2,r4
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    ded0:	21000017 	ldw	r4,0(r4)
    ded4:	21000a04 	addi	r4,r4,40
    ded8:	11400217 	ldw	r5,8(r2)
    dedc:	000df3c0 	call	df3c <altera_avalon_jtag_uart_close>
}
    dee0:	dfc00017 	ldw	ra,0(sp)
    dee4:	dec00104 	addi	sp,sp,4
    dee8:	f800283a 	ret

0000deec <altera_avalon_jtag_uart_write_fd>:
      fd->fd_flags);
}

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    deec:	deffff04 	addi	sp,sp,-4
    def0:	dfc00015 	stw	ra,0(sp)
    def4:	2005883a 	mov	r2,r4
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    def8:	21000017 	ldw	r4,0(r4)
    defc:	21000a04 	addi	r4,r4,40
    df00:	11c00217 	ldw	r7,8(r2)
    df04:	000e3580 	call	e358 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    df08:	dfc00017 	ldw	ra,0(sp)
    df0c:	dec00104 	addi	sp,sp,4
    df10:	f800283a 	ret

0000df14 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    df14:	deffff04 	addi	sp,sp,-4
    df18:	dfc00015 	stw	ra,0(sp)
    df1c:	2005883a 	mov	r2,r4
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    df20:	21000017 	ldw	r4,0(r4)
    df24:	21000a04 	addi	r4,r4,40
    df28:	11c00217 	ldw	r7,8(r2)
    df2c:	000e1f00 	call	e1f0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    df30:	dfc00017 	ldw	ra,0(sp)
    df34:	dec00104 	addi	sp,sp,4
    df38:	f800283a 	ret

0000df3c <altera_avalon_jtag_uart_close>:
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    df3c:	21800c17 	ldw	r6,48(r4)
    df40:	2950000c 	andi	r5,r5,16384
    df44:	280b003a 	cmpeq	r5,r5,zero
    df48:	00000306 	br	df58 <altera_avalon_jtag_uart_close+0x1c>
    if (flags & O_NONBLOCK) {
    df4c:	2800021e 	bne	r5,zero,df58 <altera_avalon_jtag_uart_close+0x1c>
    df50:	00bffd44 	movi	r2,-11
    df54:	f800283a 	ret
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    df58:	20800d17 	ldw	r2,52(r4)
    df5c:	11800326 	beq	r2,r6,df6c <altera_avalon_jtag_uart_close+0x30>
    df60:	20c00917 	ldw	r3,36(r4)
    df64:	20800117 	ldw	r2,4(r4)
    df68:	18bff836 	bltu	r3,r2,df4c <altera_avalon_jtag_uart_close+0x10>
    df6c:	0005883a 	mov	r2,zero
      return -EWOULDBLOCK; 
    }
  }

  return 0;
}
    df70:	f800283a 	ret

0000df74 <altera_avalon_jtag_uart_timeout>:
static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    df74:	20800017 	ldw	r2,0(r4)
    df78:	10c00104 	addi	r3,r2,4
    df7c:	18800037 	ldwio	r2,0(r3)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    df80:	01410004 	movi	r5,1024
    df84:	1144703a 	and	r2,r2,r5
    df88:	10000526 	beq	r2,zero,dfa0 <altera_avalon_jtag_uart_timeout+0x2c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    df8c:	20800817 	ldw	r2,32(r4)
    df90:	1144b03a 	or	r2,r2,r5
    df94:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    df98:	20000915 	stw	zero,36(r4)
    df9c:	00000606 	br	dfb8 <altera_avalon_jtag_uart_timeout+0x44>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    dfa0:	20c00917 	ldw	r3,36(r4)
    dfa4:	00a00034 	movhi	r2,32768
    dfa8:	10bfff04 	addi	r2,r2,-4
    dfac:	10c00236 	bltu	r2,r3,dfb8 <altera_avalon_jtag_uart_timeout+0x44>
    sp->host_inactive++;
    dfb0:	18800044 	addi	r2,r3,1
    dfb4:	20800915 	stw	r2,36(r4)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    dfb8:	00800074 	movhi	r2,1
    dfbc:	108a4c04 	addi	r2,r2,10544
    dfc0:	10800017 	ldw	r2,0(r2)
    dfc4:	f800283a 	ret

0000dfc8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    dfc8:	defffd04 	addi	sp,sp,-12
    dfcc:	dfc00215 	stw	ra,8(sp)
    dfd0:	dc000115 	stw	r16,4(sp)
    dfd4:	2021883a 	mov	r16,r4
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    dfd8:	00c00044 	movi	r3,1
    dfdc:	20c00815 	stw	r3,32(r4)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    dfe0:	20800017 	ldw	r2,0(r4)
    dfe4:	10c00135 	stwio	r3,4(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    dfe8:	d8000015 	stw	zero,0(sp)
    dfec:	2809883a 	mov	r4,r5
    dff0:	300b883a 	mov	r5,r6
    dff4:	01800074 	movhi	r6,1
    dff8:	31b81204 	addi	r6,r6,-8120
    dffc:	800f883a 	mov	r7,r16
    e000:	000e6780 	call	e678 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    e004:	80000915 	stw	zero,36(r16)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e008:	81000204 	addi	r4,r16,8
    e00c:	00800074 	movhi	r2,1
    e010:	108a4c04 	addi	r2,r2,10544
    e014:	11400017 	ldw	r5,0(r2)
    e018:	01800074 	movhi	r6,1
    e01c:	31b7dd04 	addi	r6,r6,-8332
    e020:	800f883a 	mov	r7,r16
    e024:	000e4d40 	call	e4d4 <alt_alarm_start>
    e028:	1000030e 	bge	r2,zero,e038 <altera_avalon_jtag_uart_init+0x70>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    e02c:	00a00034 	movhi	r2,32768
    e030:	10bfffc4 	addi	r2,r2,-1
    e034:	80800115 	stw	r2,4(r16)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    e038:	dfc00217 	ldw	ra,8(sp)
    e03c:	dc000117 	ldw	r16,4(sp)
    e040:	dec00304 	addi	sp,sp,12
    e044:	f800283a 	ret

0000e048 <altera_avalon_jtag_uart_irq>:
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  unsigned int base = sp->base;
    e048:	22000017 	ldw	r8,0(r4)
    e04c:	03800104 	movi	r14,4
    e050:	4399883a 	add	r12,r8,r14
    e054:	037ffff4 	movhi	r13,65535
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e058:	62c00037 	ldwio	r11,0(r12)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e05c:	5880c00c 	andi	r2,r11,768
    e060:	10004526 	beq	r2,zero,e178 <altera_avalon_jtag_uart_irq+0x130>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e064:	5880400c 	andi	r2,r11,256
    e068:	10002126 	beq	r2,zero,e0f0 <altera_avalon_jtag_uart_irq+0xa8>
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e06c:	20800a17 	ldw	r2,40(r4)
        if (next == sp->rx_out)
    e070:	10800044 	addi	r2,r2,1
    e074:	1081ffcc 	andi	r2,r2,2047
    e078:	20c00b17 	ldw	r3,44(r4)
    e07c:	10c01626 	beq	r2,r3,e0d8 <altera_avalon_jtag_uart_irq+0x90>
    e080:	02a00014 	movui	r10,32768
    e084:	02400e04 	movi	r9,56
    e088:	01c00044 	movi	r7,1
    e08c:	0181ffc4 	movi	r6,2047
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e090:	41400037 	ldwio	r5,0(r8)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e094:	2a84703a 	and	r2,r5,r10
    e098:	10000d26 	beq	r2,zero,e0d0 <altera_avalon_jtag_uart_irq+0x88>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e09c:	20800a17 	ldw	r2,40(r4)
    e0a0:	1105883a 	add	r2,r2,r4
    e0a4:	1245883a 	add	r2,r2,r9
    e0a8:	11400005 	stb	r5,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e0ac:	20800a17 	ldw	r2,40(r4)
    e0b0:	11c5883a 	add	r2,r2,r7
    e0b4:	1184703a 	and	r2,r2,r6
    e0b8:	20800a15 	stw	r2,40(r4)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e0bc:	20800a17 	ldw	r2,40(r4)
        if (next == sp->rx_out)
    e0c0:	11c5883a 	add	r2,r2,r7
    e0c4:	1184703a 	and	r2,r2,r6
    e0c8:	20c00b17 	ldw	r3,44(r4)
    e0cc:	10fff01e 	bne	r2,r3,e090 <altera_avalon_jtag_uart_irq+0x48>

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e0d0:	2b44703a 	and	r2,r5,r13
    e0d4:	10000626 	beq	r2,zero,e0f0 <altera_avalon_jtag_uart_irq+0xa8>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e0d8:	20800817 	ldw	r2,32(r4)
    e0dc:	00ffff84 	movi	r3,-2
    e0e0:	10c4703a 	and	r2,r2,r3
    e0e4:	20800815 	stw	r2,32(r4)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e0e8:	60800035 	stwio	r2,0(r12)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e0ec:	60800037 	ldwio	r2,0(r12)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e0f0:	5880800c 	andi	r2,r11,512
    e0f4:	103fd826 	beq	r2,zero,e058 <altera_avalon_jtag_uart_irq+0x10>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e0f8:	5b44703a 	and	r2,r11,r13
    e0fc:	100ad43a 	srli	r5,r2,16

      while (space > 0 && sp->tx_out != sp->tx_in)
    e100:	283fd526 	beq	r5,zero,e058 <altera_avalon_jtag_uart_irq+0x10>
    e104:	20c00d17 	ldw	r3,52(r4)
    e108:	20800c17 	ldw	r2,48(r4)
    e10c:	18801126 	beq	r3,r2,e154 <altera_avalon_jtag_uart_irq+0x10c>
    e110:	02420e04 	movi	r9,2104
    e114:	01800044 	movi	r6,1
    e118:	01c1ffc4 	movi	r7,2047
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e11c:	20800d17 	ldw	r2,52(r4)
    e120:	1105883a 	add	r2,r2,r4
    e124:	1245883a 	add	r2,r2,r9
    e128:	10800007 	ldb	r2,0(r2)
    e12c:	40800035 	stwio	r2,0(r8)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e130:	20800d17 	ldw	r2,52(r4)
    e134:	1185883a 	add	r2,r2,r6
    e138:	11c4703a 	and	r2,r2,r7
    e13c:	20800d15 	stw	r2,52(r4)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e140:	298bc83a 	sub	r5,r5,r6
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e144:	283fc426 	beq	r5,zero,e058 <altera_avalon_jtag_uart_irq+0x10>
    e148:	20c00d17 	ldw	r3,52(r4)
    e14c:	20800c17 	ldw	r2,48(r4)
    e150:	18bff21e 	bne	r3,r2,e11c <altera_avalon_jtag_uart_irq+0xd4>
      }

      if (space > 0)
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e154:	20c00817 	ldw	r3,32(r4)
    e158:	00bfff44 	movi	r2,-3
    e15c:	1886703a 	and	r3,r3,r2
    e160:	20c00815 	stw	r3,32(r4)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e164:	20800017 	ldw	r2,0(r4)
    e168:	1385883a 	add	r2,r2,r14
    e16c:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e170:	60800037 	ldwio	r2,0(r12)
    e174:	003fb806 	br	e058 <altera_avalon_jtag_uart_irq+0x10>
    e178:	f800283a 	ret

0000e17c <altera_avalon_jtag_uart_ioctl>:
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  int rc = -ENOTTY;

  switch (req)
    e17c:	009a8044 	movi	r2,27137
    e180:	28800326 	beq	r5,r2,e190 <altera_avalon_jtag_uart_ioctl+0x14>
    e184:	009a8084 	movi	r2,27138
    e188:	2880171e 	bne	r5,r2,e1e8 <altera_avalon_jtag_uart_ioctl+0x6c>
    e18c:	00000d06 	br	e1c4 <altera_avalon_jtag_uart_ioctl+0x48>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    e190:	20c00117 	ldw	r3,4(r4)
    e194:	00a00034 	movhi	r2,32768
    e198:	10bfffc4 	addi	r2,r2,-1
    e19c:	18801226 	beq	r3,r2,e1e8 <altera_avalon_jtag_uart_ioctl+0x6c>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e1a0:	31800017 	ldw	r6,0(r6)
    e1a4:	30ffff84 	addi	r3,r6,-2
    e1a8:	10bfff44 	addi	r2,r2,-3
    e1ac:	10c0022e 	bgeu	r2,r3,e1b8 <altera_avalon_jtag_uart_ioctl+0x3c>
    e1b0:	01a00034 	movhi	r6,32768
    e1b4:	31bfff84 	addi	r6,r6,-2
    e1b8:	21800115 	stw	r6,4(r4)
    e1bc:	0005883a 	mov	r2,zero
    e1c0:	f800283a 	ret
    }
    break;

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e1c4:	20c00117 	ldw	r3,4(r4)
    e1c8:	00a00034 	movhi	r2,32768
    e1cc:	10bfffc4 	addi	r2,r2,-1
    e1d0:	18800526 	beq	r3,r2,e1e8 <altera_avalon_jtag_uart_ioctl+0x6c>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e1d4:	20800917 	ldw	r2,36(r4)
    e1d8:	10c5803a 	cmpltu	r2,r2,r3
    e1dc:	30800015 	stw	r2,0(r6)
    e1e0:	0005883a 	mov	r2,zero
    e1e4:	f800283a 	ret
    e1e8:	00bff9c4 	movi	r2,-25
  default:
    break;
  }

  return rc;
}
    e1ec:	f800283a 	ret

0000e1f0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e1f0:	defff604 	addi	sp,sp,-40
    e1f4:	dfc00915 	stw	ra,36(sp)
    e1f8:	df000815 	stw	fp,32(sp)
    e1fc:	ddc00715 	stw	r23,28(sp)
    e200:	dd800615 	stw	r22,24(sp)
    e204:	dd400515 	stw	r21,20(sp)
    e208:	dd000415 	stw	r20,16(sp)
    e20c:	dcc00315 	stw	r19,12(sp)
    e210:	dc800215 	stw	r18,8(sp)
    e214:	dc400115 	stw	r17,4(sp)
    e218:	dc000015 	stw	r16,0(sp)
    e21c:	2025883a 	mov	r18,r4
    e220:	282f883a 	mov	r23,r5
    e224:	3027883a 	mov	r19,r6
    e228:	3839883a 	mov	fp,r7
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e22c:	0180220e 	bge	zero,r6,e2b8 <altera_avalon_jtag_uart_read+0xc8>
    e230:	b82b883a 	mov	r21,r23
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e234:	95800a17 	ldw	r22,40(r18)
      out = sp->rx_out;
    e238:	94400b17 	ldw	r17,44(r18)

      if (in >= out)
    e23c:	b4400236 	bltu	r22,r17,e248 <altera_avalon_jtag_uart_read+0x58>
        n = in - out;
    e240:	b461c83a 	sub	r16,r22,r17
    e244:	00000206 	br	e250 <altera_avalon_jtag_uart_read+0x60>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e248:	00820004 	movi	r2,2048
    e24c:	1461c83a 	sub	r16,r2,r17

      if (n == 0)
    e250:	80000d26 	beq	r16,zero,e288 <altera_avalon_jtag_uart_read+0x98>
        break; /* No more data available */

      if (n > space)
    e254:	9829883a 	mov	r20,r19
    e258:	9c001d36 	bltu	r19,r16,e2d0 <altera_avalon_jtag_uart_read+0xe0>
        n = space;

      memcpy(ptr, sp->rx_buf + out, n);
    e25c:	91400e04 	addi	r5,r18,56
    e260:	a809883a 	mov	r4,r21
    e264:	2c4b883a 	add	r5,r5,r17
    e268:	800d883a 	mov	r6,r16
    e26c:	0008b3c0 	call	8b3c <memcpy>
      ptr   += n;
    e270:	ac2b883a 	add	r21,r21,r16
      space -= n;
    e274:	9c27c83a 	sub	r19,r19,r16

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e278:	8445883a 	add	r2,r16,r17
    e27c:	1081ffcc 	andi	r2,r2,2047
    e280:	90800b15 	stw	r2,44(r18)
    }
    while (space > 0);
    e284:	04ffeb16 	blt	zero,r19,e234 <altera_avalon_jtag_uart_read+0x44>

    /* If we read any data then return it */
    if (ptr != buffer)
    e288:	adc01c1e 	bne	r21,r23,e2fc <altera_avalon_jtag_uart_read+0x10c>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e28c:	e090000c 	andi	r2,fp,16384
    e290:	10000d1e 	bne	r2,zero,e2c8 <altera_avalon_jtag_uart_read+0xd8>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e294:	90800a17 	ldw	r2,40(r18)
    e298:	b080031e 	bne	r22,r2,e2a8 <altera_avalon_jtag_uart_read+0xb8>
    e29c:	90c00917 	ldw	r3,36(r18)
    e2a0:	90800117 	ldw	r2,4(r18)
    e2a4:	18bffb36 	bltu	r3,r2,e294 <altera_avalon_jtag_uart_read+0xa4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e2a8:	90800a17 	ldw	r2,40(r18)
    e2ac:	b0800426 	beq	r22,r2,e2c0 <altera_avalon_jtag_uart_read+0xd0>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e2b0:	04c0030e 	bge	zero,r19,e2c0 <altera_avalon_jtag_uart_read+0xd0>
    e2b4:	003fde06 	br	e230 <altera_avalon_jtag_uart_read+0x40>
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
    e2b8:	3890000c 	andi	r2,r7,16384
    e2bc:	1000021e 	bne	r2,zero,e2c8 <altera_avalon_jtag_uart_read+0xd8>
    e2c0:	00bffec4 	movi	r2,-5
    e2c4:	00001806 	br	e328 <altera_avalon_jtag_uart_read+0x138>
    e2c8:	00bffd44 	movi	r2,-11
    e2cc:	00001606 	br	e328 <altera_avalon_jtag_uart_read+0x138>
        break; /* No more data available */

      if (n > space)
        n = space;

      memcpy(ptr, sp->rx_buf + out, n);
    e2d0:	91400e04 	addi	r5,r18,56
    e2d4:	a809883a 	mov	r4,r21
    e2d8:	894b883a 	add	r5,r17,r5
    e2dc:	980d883a 	mov	r6,r19
    e2e0:	0008b3c0 	call	8b3c <memcpy>
      ptr   += n;
    e2e4:	aceb883a 	add	r21,r21,r19
      space -= n;
    e2e8:	0027883a 	mov	r19,zero

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e2ec:	a445883a 	add	r2,r20,r17
    e2f0:	1081ffcc 	andi	r2,r2,2047
    e2f4:	90800b15 	stw	r2,44(r18)
    e2f8:	003fe306 	br	e288 <altera_avalon_jtag_uart_read+0x98>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e2fc:	0009303a 	rdctl	r4,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e300:	00bfff84 	movi	r2,-2
    e304:	2084703a 	and	r2,r4,r2
    e308:	1001703a 	wrctl	status,r2

  if (ptr != buffer)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e30c:	90800817 	ldw	r2,32(r18)
    e310:	10800054 	ori	r2,r2,1
    e314:	90800815 	stw	r2,32(r18)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e318:	90c00017 	ldw	r3,0(r18)
    e31c:	18800135 	stwio	r2,4(r3)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e320:	2001703a 	wrctl	status,r4
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    return ptr - buffer;
    e324:	adc5c83a 	sub	r2,r21,r23
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
  else
    return -EIO;
}
    e328:	dfc00917 	ldw	ra,36(sp)
    e32c:	df000817 	ldw	fp,32(sp)
    e330:	ddc00717 	ldw	r23,28(sp)
    e334:	dd800617 	ldw	r22,24(sp)
    e338:	dd400517 	ldw	r21,20(sp)
    e33c:	dd000417 	ldw	r20,16(sp)
    e340:	dcc00317 	ldw	r19,12(sp)
    e344:	dc800217 	ldw	r18,8(sp)
    e348:	dc400117 	ldw	r17,4(sp)
    e34c:	dc000017 	ldw	r16,0(sp)
    e350:	dec00a04 	addi	sp,sp,40
    e354:	f800283a 	ret

0000e358 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e358:	defff804 	addi	sp,sp,-32
    e35c:	dfc00715 	stw	ra,28(sp)
    e360:	dd800615 	stw	r22,24(sp)
    e364:	dd400515 	stw	r21,20(sp)
    e368:	dd000415 	stw	r20,16(sp)
    e36c:	dcc00315 	stw	r19,12(sp)
    e370:	dc800215 	stw	r18,8(sp)
    e374:	dc400115 	stw	r17,4(sp)
    e378:	dc000015 	stw	r16,0(sp)
    e37c:	2021883a 	mov	r16,r4
    e380:	282d883a 	mov	r22,r5
    e384:	3011883a 	mov	r8,r6
    e388:	382b883a 	mov	r21,r7
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e38c:	01800616 	blt	zero,r6,e3a8 <altera_avalon_jtag_uart_write+0x50>
    e390:	2829883a 	mov	r20,r5
    e394:	00002106 	br	e41c <altera_avalon_jtag_uart_write+0xc4>
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    return ptr - start;
    e398:	a585c83a 	sub	r2,r20,r22
    e39c:	00004306 	br	e4ac <altera_avalon_jtag_uart_write+0x154>
  else if (flags & O_NONBLOCK)
    e3a0:	00bffd44 	movi	r2,-11
    e3a4:	00004106 	br	e4ac <altera_avalon_jtag_uart_write+0x154>
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e3a8:	2829883a 	mov	r20,r5
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e3ac:	84800c17 	ldw	r18,48(r16)
      out = sp->tx_out;
    e3b0:	81400d17 	ldw	r5,52(r16)

      if (in < out)
    e3b4:	9140032e 	bgeu	r18,r5,e3c4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e3b8:	2c85c83a 	sub	r2,r5,r18
    e3bc:	11bfffc4 	addi	r6,r2,-1
    e3c0:	00000606 	br	e3dc <altera_avalon_jtag_uart_write+0x84>
      else if (out > 0)
    e3c4:	28000326 	beq	r5,zero,e3d4 <altera_avalon_jtag_uart_write+0x7c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e3c8:	00820004 	movi	r2,2048
    e3cc:	148dc83a 	sub	r6,r2,r18
    e3d0:	00000206 	br	e3dc <altera_avalon_jtag_uart_write+0x84>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e3d4:	0081ffc4 	movi	r2,2047
    e3d8:	148dc83a 	sub	r6,r2,r18

      if (n == 0)
    e3dc:	30002626 	beq	r6,zero,e478 <altera_avalon_jtag_uart_write+0x120>
        break;

      if (n > count)
    e3e0:	4027883a 	mov	r19,r8
    e3e4:	3023883a 	mov	r17,r6
    e3e8:	4180012e 	bgeu	r8,r6,e3f0 <altera_avalon_jtag_uart_write+0x98>
    e3ec:	4023883a 	mov	r17,r8
        n = count;

      memcpy(sp->tx_buf + in, ptr, n);
    e3f0:	81020e04 	addi	r4,r16,2104
    e3f4:	2489883a 	add	r4,r4,r18
    e3f8:	a00b883a 	mov	r5,r20
    e3fc:	880d883a 	mov	r6,r17
    e400:	0008b3c0 	call	8b3c <memcpy>
      ptr   += n;
    e404:	a469883a 	add	r20,r20,r17
      count -= n;
    e408:	9c51c83a 	sub	r8,r19,r17

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e40c:	9445883a 	add	r2,r18,r17
    e410:	1081ffcc 	andi	r2,r2,2047
    e414:	80800c15 	stw	r2,48(r16)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e418:	023fe416 	blt	zero,r8,e3ac <altera_avalon_jtag_uart_write+0x54>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e41c:	0009303a 	rdctl	r4,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e420:	00bfff84 	movi	r2,-2
    e424:	2084703a 	and	r2,r4,r2
    e428:	1001703a 	wrctl	status,r2
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e42c:	80800817 	ldw	r2,32(r16)
    e430:	10800094 	ori	r2,r2,2
    e434:	80800815 	stw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e438:	80c00017 	ldw	r3,0(r16)
    e43c:	18800135 	stwio	r2,4(r3)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e440:	2001703a 	wrctl	status,r4
    e444:	00000706 	br	e464 <altera_avalon_jtag_uart_write+0x10c>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e448:	80800d17 	ldw	r2,52(r16)
    e44c:	1140031e 	bne	r2,r5,e45c <altera_avalon_jtag_uart_write+0x104>
    e450:	80c00917 	ldw	r3,36(r16)
    e454:	80800117 	ldw	r2,4(r16)
    e458:	18bffb36 	bltu	r3,r2,e448 <altera_avalon_jtag_uart_write+0xf0>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
    e45c:	80800d17 	ldw	r2,52(r16)
    e460:	117fed1e 	bne	r2,r5,e418 <altera_avalon_jtag_uart_write+0xc0>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e464:	b53fcc1e 	bne	r22,r20,e398 <altera_avalon_jtag_uart_write+0x40>
    return ptr - start;
  else if (flags & O_NONBLOCK)
    e468:	a890000c 	andi	r2,r21,16384
    e46c:	103fcc1e 	bne	r2,zero,e3a0 <altera_avalon_jtag_uart_write+0x48>
    e470:	00bffec4 	movi	r2,-5
    e474:	00000d06 	br	e4ac <altera_avalon_jtag_uart_write+0x154>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e478:	0009303a 	rdctl	r4,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e47c:	00bfff84 	movi	r2,-2
    e480:	2084703a 	and	r2,r4,r2
    e484:	1001703a 	wrctl	status,r2
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e488:	80800817 	ldw	r2,32(r16)
    e48c:	10800094 	ori	r2,r2,2
    e490:	80800815 	stw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e494:	80c00017 	ldw	r3,0(r16)
    e498:	18800135 	stwio	r2,4(r3)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e49c:	2001703a 	wrctl	status,r4
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
    e4a0:	a890000c 	andi	r2,r21,16384
    e4a4:	103fe826 	beq	r2,zero,e448 <altera_avalon_jtag_uart_write+0xf0>
    e4a8:	003fee06 	br	e464 <altera_avalon_jtag_uart_write+0x10c>
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
}
    e4ac:	dfc00717 	ldw	ra,28(sp)
    e4b0:	dd800617 	ldw	r22,24(sp)
    e4b4:	dd400517 	ldw	r21,20(sp)
    e4b8:	dd000417 	ldw	r20,16(sp)
    e4bc:	dcc00317 	ldw	r19,12(sp)
    e4c0:	dc800217 	ldw	r18,8(sp)
    e4c4:	dc400117 	ldw	r17,4(sp)
    e4c8:	dc000017 	ldw	r16,0(sp)
    e4cc:	dec00804 	addi	sp,sp,32
    e4d0:	f800283a 	ret

0000e4d4 <alt_alarm_start>:
                     void* context)
{
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  
  if (alt_ticks_per_second ())
    e4d4:	00800074 	movhi	r2,1
    e4d8:	108a4c04 	addi	r2,r2,10544
    e4dc:	10800017 	ldw	r2,0(r2)
    e4e0:	1000021e 	bne	r2,zero,e4ec <alt_alarm_start+0x18>
    e4e4:	00bfde84 	movi	r2,-134
    e4e8:	f800283a 	ret
  {
    if (alarm)
    e4ec:	2000021e 	bne	r4,zero,e4f8 <alt_alarm_start+0x24>
    e4f0:	00bffa84 	movi	r2,-22
    e4f4:	f800283a 	ret
    {
      alarm->callback = callback;
    e4f8:	21800315 	stw	r6,12(r4)
      alarm->context  = context;
    e4fc:	21c00515 	stw	r7,20(r4)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e500:	000f303a 	rdctl	r7,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e504:	00bfff84 	movi	r2,-2
    e508:	3884703a 	and	r2,r7,r2
    e50c:	1001703a 	wrctl	status,r2
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e510:	00800074 	movhi	r2,1
    e514:	108a4d04 	addi	r2,r2,10548
    e518:	10c00017 	ldw	r3,0(r2)
 
      irq_context = alt_irq_disable_all ();
      
      current_nticks = alt_nticks();
      
      alarm->time = nticks + current_nticks + 1; 
    e51c:	01800044 	movi	r6,1
    e520:	1985883a 	add	r2,r3,r6
    e524:	2885883a 	add	r2,r5,r2
    e528:	20800215 	stw	r2,8(r4)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e52c:	10c0022e 	bgeu	r2,r3,e538 <alt_alarm_start+0x64>
      {
        alarm->rollover = 1;
    e530:	21800405 	stb	r6,16(r4)
    e534:	00000106 	br	e53c <alt_alarm_start+0x68>
      }
      else
      {
        alarm->rollover = 0;
    e538:	20000405 	stb	zero,16(r4)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e53c:	00800074 	movhi	r2,1
    e540:	10837c04 	addi	r2,r2,3568
    e544:	20800115 	stw	r2,4(r4)
  entry->next     = list->next;
    e548:	10c00017 	ldw	r3,0(r2)
    e54c:	20c00015 	stw	r3,0(r4)

  list->next->previous = entry;
    e550:	10c00017 	ldw	r3,0(r2)
    e554:	19000115 	stw	r4,4(r3)
  list->next           = entry;
    e558:	11000015 	stw	r4,0(r2)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e55c:	3801703a 	wrctl	status,r7
    e560:	0005883a 	mov	r2,zero
  }
  else
  {
    return -ENOTSUP;
  }
}
    e564:	f800283a 	ret

0000e568 <alt_dcache_flush_all>:
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    e568:	f800283a 	ret

0000e56c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e56c:	deffff04 	addi	sp,sp,-4
    e570:	dfc00015 	stw	ra,0(sp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e574:	20000226 	beq	r4,zero,e580 <alt_dev_llist_insert+0x14>
    e578:	20800217 	ldw	r2,8(r4)
    e57c:	10000d1e 	bne	r2,zero,e5b4 <alt_dev_llist_insert+0x48>
    e580:	00800074 	movhi	r2,1
    e584:	10837904 	addi	r2,r2,3556
    e588:	10800017 	ldw	r2,0(r2)
    e58c:	1000031e 	bne	r2,zero,e59c <alt_dev_llist_insert+0x30>
    e590:	00c00074 	movhi	r3,1
    e594:	18ca4404 	addi	r3,r3,10512
    e598:	00000206 	br	e5a4 <alt_dev_llist_insert+0x38>
    e59c:	103ee83a 	callr	r2
    e5a0:	1007883a 	mov	r3,r2
  {
    ALT_ERRNO = EINVAL;
    e5a4:	00800584 	movi	r2,22
    e5a8:	18800015 	stw	r2,0(r3)
    e5ac:	00bffa84 	movi	r2,-22
    e5b0:	00000706 	br	e5d0 <alt_dev_llist_insert+0x64>
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e5b4:	21400115 	stw	r5,4(r4)
  entry->next     = list->next;
    e5b8:	28800017 	ldw	r2,0(r5)
    e5bc:	20800015 	stw	r2,0(r4)

  list->next->previous = entry;
    e5c0:	28800017 	ldw	r2,0(r5)
    e5c4:	11000115 	stw	r4,4(r2)
  list->next           = entry;
    e5c8:	29000015 	stw	r4,0(r5)
    e5cc:	0005883a 	mov	r2,zero
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
    e5d0:	dfc00017 	ldw	ra,0(sp)
    e5d4:	dec00104 	addi	sp,sp,4
    e5d8:	f800283a 	ret

0000e5dc <alt_icache_flush_all>:
void alt_icache_flush_all (void)
{
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    e5dc:	f800283a 	ret

0000e5e0 <alt_ic_irq_enabled>:
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    e5e0:	000530fa 	rdctl	r2,ienable
    e5e4:	00c00044 	movi	r3,1
    e5e8:	1946983a 	sll	r3,r3,r5
    e5ec:	10c4703a 	and	r2,r2,r3

    return (irq_enabled & (1 << irq)) ? 1: 0;
}
    e5f0:	1004c03a 	cmpne	r2,r2,zero
    e5f4:	f800283a 	ret

0000e5f8 <alt_ic_irq_enable>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e5f8:	000d303a 	rdctl	r6,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e5fc:	00bfff84 	movi	r2,-2
    e600:	3084703a 	and	r2,r6,r2
    e604:	1001703a 	wrctl	status,r2
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active |= (1 << id);
    e608:	00c00074 	movhi	r3,1
    e60c:	18ca4b04 	addi	r3,r3,10540
    e610:	19000017 	ldw	r4,0(r3)
    e614:	00800044 	movi	r2,1
    e618:	1144983a 	sll	r2,r2,r5
    e61c:	1104b03a 	or	r2,r2,r4
    e620:	18800015 	stw	r2,0(r3)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e624:	18800017 	ldw	r2,0(r3)
    e628:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e62c:	3001703a 	wrctl	status,r6
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    return alt_irq_enable(irq);
}
    e630:	0005883a 	mov	r2,zero
    e634:	f800283a 	ret

0000e638 <alt_ic_irq_disable>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e638:	000d303a 	rdctl	r6,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e63c:	00bfff84 	movi	r2,-2
    e640:	3084703a 	and	r2,r6,r2
    e644:	1001703a 	wrctl	status,r2
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active &= ~(1 << id);
    e648:	00c00074 	movhi	r3,1
    e64c:	18ca4b04 	addi	r3,r3,10540
    e650:	19000017 	ldw	r4,0(r3)
    e654:	00bfff84 	movi	r2,-2
    e658:	1144183a 	rol	r2,r2,r5
    e65c:	1104703a 	and	r2,r2,r4
    e660:	18800015 	stw	r2,0(r3)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e664:	18800017 	ldw	r2,0(r3)
    e668:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e66c:	3001703a 	wrctl	status,r6
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    return alt_irq_disable(irq);
}
    e670:	0005883a 	mov	r2,zero
    e674:	f800283a 	ret

0000e678 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e678:	defffe04 	addi	sp,sp,-8
    e67c:	dfc00115 	stw	ra,4(sp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    e680:	d8800217 	ldw	r2,8(sp)
    e684:	d8800015 	stw	r2,0(sp)
    e688:	000e6980 	call	e698 <alt_iic_isr_register>
}  
    e68c:	dfc00117 	ldw	ra,4(sp)
    e690:	dec00204 	addi	sp,sp,8
    e694:	f800283a 	ret

0000e698 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e698:	defffe04 	addi	sp,sp,-8
    e69c:	dfc00115 	stw	ra,4(sp)
    e6a0:	dc000015 	stw	r16,0(sp)
  int rc = -EINVAL;  
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  alt_irq_context status;

  if (id < ALT_NIRQ)
    e6a4:	008007c4 	movi	r2,31
    e6a8:	1140020e 	bge	r2,r5,e6b4 <alt_iic_isr_register+0x1c>
    e6ac:	00bffa84 	movi	r2,-22
    e6b0:	00000f06 	br	e6f0 <alt_iic_isr_register+0x58>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e6b4:	0021303a 	rdctl	r16,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e6b8:	00bfff84 	movi	r2,-2
    e6bc:	8084703a 	and	r2,r16,r2
    e6c0:	1001703a 	wrctl	status,r2
     * state.
     */

    status = alt_irq_disable_all();

    alt_irq[id].handler = isr;
    e6c4:	280490fa 	slli	r2,r5,3
    e6c8:	00c00074 	movhi	r3,1
    e6cc:	18ca9804 	addi	r3,r3,10848
    e6d0:	10c5883a 	add	r2,r2,r3
    e6d4:	11800015 	stw	r6,0(r2)
    alt_irq[id].context = isr_context;
    e6d8:	11c00115 	stw	r7,4(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    e6dc:	30000226 	beq	r6,zero,e6e8 <alt_iic_isr_register+0x50>
    e6e0:	000e5f80 	call	e5f8 <alt_ic_irq_enable>
    e6e4:	00000106 	br	e6ec <alt_iic_isr_register+0x54>
    e6e8:	000e6380 	call	e638 <alt_ic_irq_disable>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e6ec:	8001703a 	wrctl	status,r16

    alt_irq_enable_all(status);
  }

  return rc; 
}
    e6f0:	dfc00117 	ldw	ra,4(sp)
    e6f4:	dc000017 	ldw	r16,0(sp)
    e6f8:	dec00204 	addi	sp,sp,8
    e6fc:	f800283a 	ret

0000e700 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    e700:	defffd04 	addi	sp,sp,-12
    e704:	dfc00215 	stw	ra,8(sp)
    e708:	dc400115 	stw	r17,4(sp)
    e70c:	dc000015 	stw	r16,0(sp)
    e710:	2023883a 	mov	r17,r4
  int old;

  old = open (name, flags, mode);
    e714:	2809883a 	mov	r4,r5
    e718:	300b883a 	mov	r5,r6
    e71c:	380d883a 	mov	r6,r7
    e720:	000e8100 	call	e810 <open>
    e724:	1021883a 	mov	r16,r2

  if (old >= 0)
    e728:	10000e16 	blt	r2,zero,e764 <alt_open_fd+0x64>
  {
    fd->dev      = alt_fd_list[old].dev;
    e72c:	1009883a 	mov	r4,r2
    e730:	01400304 	movi	r5,12
    e734:	000d0e40 	call	d0e4 <__mulsi3>
    e738:	00c00074 	movhi	r3,1
    e73c:	18fed404 	addi	r3,r3,-1200
    e740:	10c5883a 	add	r2,r2,r3
    e744:	10c00017 	ldw	r3,0(r2)
    e748:	88c00015 	stw	r3,0(r17)
    fd->priv     = alt_fd_list[old].priv;
    e74c:	10c00117 	ldw	r3,4(r2)
    e750:	88c00115 	stw	r3,4(r17)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    e754:	10800217 	ldw	r2,8(r2)
    e758:	88800215 	stw	r2,8(r17)

    alt_release_fd (old);
    e75c:	8009883a 	mov	r4,r16
    e760:	000dc3c0 	call	dc3c <alt_release_fd>
  }
} 
    e764:	dfc00217 	ldw	ra,8(sp)
    e768:	dc400117 	ldw	r17,4(sp)
    e76c:	dc000017 	ldw	r16,0(sp)
    e770:	dec00304 	addi	sp,sp,12
    e774:	f800283a 	ret

0000e778 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    e778:	defffa04 	addi	sp,sp,-24
    e77c:	dfc00515 	stw	ra,20(sp)
    e780:	dd000415 	stw	r20,16(sp)
    e784:	dcc00315 	stw	r19,12(sp)
    e788:	dc800215 	stw	r18,8(sp)
    e78c:	dc400115 	stw	r17,4(sp)
    e790:	dc000015 	stw	r16,0(sp)
    e794:	2005883a 	mov	r2,r4
    e798:	2827883a 	mov	r19,r5
    e79c:	3029883a 	mov	r20,r6
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    e7a0:	04000074 	movhi	r16,1
    e7a4:	843ed704 	addi	r16,r16,-1188
    e7a8:	04800044 	movi	r18,1
    e7ac:	04407fc4 	movi	r17,511
    e7b0:	8009883a 	mov	r4,r16
    e7b4:	100b883a 	mov	r5,r2
    e7b8:	900d883a 	mov	r6,r18
    e7bc:	880f883a 	mov	r7,r17
    e7c0:	000e7000 	call	e700 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    e7c4:	843ffd04 	addi	r16,r16,-12
    e7c8:	8009883a 	mov	r4,r16
    e7cc:	980b883a 	mov	r5,r19
    e7d0:	000d883a 	mov	r6,zero
    e7d4:	880f883a 	mov	r7,r17
    e7d8:	000e7000 	call	e700 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    e7dc:	81000604 	addi	r4,r16,24
    e7e0:	a00b883a 	mov	r5,r20
    e7e4:	900d883a 	mov	r6,r18
    e7e8:	880f883a 	mov	r7,r17
    e7ec:	000e7000 	call	e700 <alt_open_fd>
}  
    e7f0:	dfc00517 	ldw	ra,20(sp)
    e7f4:	dd000417 	ldw	r20,16(sp)
    e7f8:	dcc00317 	ldw	r19,12(sp)
    e7fc:	dc800217 	ldw	r18,8(sp)
    e800:	dc400117 	ldw	r17,4(sp)
    e804:	dc000017 	ldw	r16,0(sp)
    e808:	dec00604 	addi	sp,sp,24
    e80c:	f800283a 	ret

0000e810 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    e810:	defff904 	addi	sp,sp,-28
    e814:	dfc00615 	stw	ra,24(sp)
    e818:	dd400515 	stw	r21,20(sp)
    e81c:	dd000415 	stw	r20,16(sp)
    e820:	dcc00315 	stw	r19,12(sp)
    e824:	dc800215 	stw	r18,8(sp)
    e828:	dc400115 	stw	r17,4(sp)
    e82c:	dc000015 	stw	r16,0(sp)
    e830:	2029883a 	mov	r20,r4
    e834:	2827883a 	mov	r19,r5
    e838:	302b883a 	mov	r21,r6
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    e83c:	01400074 	movhi	r5,1
    e840:	29437604 	addi	r5,r5,3544
    e844:	000ea7c0 	call	ea7c <alt_find_dev>
    e848:	1021883a 	mov	r16,r2
    e84c:	10000226 	beq	r2,zero,e858 <open+0x48>
    e850:	0025883a 	mov	r18,zero
    e854:	00000a06 	br	e880 <open+0x70>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    e858:	a009883a 	mov	r4,r20
    e85c:	000eaec0 	call	eaec <alt_find_file>
    e860:	1021883a 	mov	r16,r2

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    e864:	1000051e 	bne	r2,zero,e87c <open+0x6c>
    e868:	047fffc4 	movi	r17,-1
    e86c:	043ffb44 	movi	r16,-19
    e870:	00002d06 	br	e928 <open+0x118>
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    e874:	043ffcc4 	movi	r16,-13
    e878:	00002b06 	br	e928 <open+0x118>

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    e87c:	04800044 	movi	r18,1
  {
    if ((index = alt_get_fd (dev)) < 0)
    e880:	8009883a 	mov	r4,r16
    e884:	000eba80 	call	eba8 <alt_get_fd>
    e888:	1023883a 	mov	r17,r2
    e88c:	10003516 	blt	r2,zero,e964 <open+0x154>
    {
      status = index;
    }
    else
    {
      fd = &alt_fd_list[index];
    e890:	1009883a 	mov	r4,r2
    e894:	01400304 	movi	r5,12
    e898:	000d0e40 	call	d0e4 <__mulsi3>
    e89c:	02000074 	movhi	r8,1
    e8a0:	423ed404 	addi	r8,r8,-1200
    e8a4:	1209883a 	add	r4,r2,r8
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    e8a8:	00900034 	movhi	r2,16384
    e8ac:	10bfffc4 	addi	r2,r2,-1
    e8b0:	9886703a 	and	r3,r19,r2
    e8b4:	20c00215 	stw	r3,8(r4)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    e8b8:	9004c03a 	cmpne	r2,r18,zero
    e8bc:	1000121e 	bne	r2,zero,e908 <open+0xf8>

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    e8c0:	18900034 	orhi	r2,r3,16384
    e8c4:	20800215 	stw	r2,8(r4)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    e8c8:	00800074 	movhi	r2,1
    e8cc:	10837804 	addi	r2,r2,3552
    e8d0:	11c00017 	ldw	r7,0(r2)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    e8d4:	21800017 	ldw	r6,0(r4)
    e8d8:	000b883a 	mov	r5,zero
    e8dc:	4007883a 	mov	r3,r8
    e8e0:	02400044 	movi	r9,1
    e8e4:	02000304 	movi	r8,12
    e8e8:	18800017 	ldw	r2,0(r3)
    e8ec:	1180031e 	bne	r2,r6,e8fc <open+0xec>
    e8f0:	18800217 	ldw	r2,8(r3)
    e8f4:	1000010e 	bge	r2,zero,e8fc <open+0xec>
    e8f8:	193fde1e 	bne	r3,r4,e874 <open+0x64>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    e8fc:	2a4b883a 	add	r5,r5,r9
    e900:	1a07883a 	add	r3,r3,r8
    e904:	397ff82e 	bgeu	r7,r5,e8e8 <open+0xd8>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    e908:	80800317 	ldw	r2,12(r16)
    e90c:	10001726 	beq	r2,zero,e96c <open+0x15c>
    e910:	a00b883a 	mov	r5,r20
    e914:	980d883a 	mov	r6,r19
    e918:	a80f883a 	mov	r7,r21
    e91c:	103ee83a 	callr	r2
    e920:	1021883a 	mov	r16,r2
    status = -ENODEV;
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    e924:	1000110e 	bge	r2,zero,e96c <open+0x15c>
  {
    alt_release_fd (index);  
    e928:	8809883a 	mov	r4,r17
    e92c:	000dc3c0 	call	dc3c <alt_release_fd>
    e930:	00800074 	movhi	r2,1
    e934:	10837904 	addi	r2,r2,3556
    e938:	10800017 	ldw	r2,0(r2)
    e93c:	1000031e 	bne	r2,zero,e94c <open+0x13c>
    e940:	00c00074 	movhi	r3,1
    e944:	18ca4404 	addi	r3,r3,10512
    e948:	00000206 	br	e954 <open+0x144>
    e94c:	103ee83a 	callr	r2
    e950:	1007883a 	mov	r3,r2
    ALT_ERRNO = -status;
    e954:	0405c83a 	sub	r2,zero,r16
    e958:	18800015 	stw	r2,0(r3)
    e95c:	047fffc4 	movi	r17,-1
    e960:	00000206 	br	e96c <open+0x15c>
    e964:	1021883a 	mov	r16,r2
    e968:	003fef06 	br	e928 <open+0x118>
  }
  
  /* return the reference upon success */

  return index;
}
    e96c:	8805883a 	mov	r2,r17
    e970:	dfc00617 	ldw	ra,24(sp)
    e974:	dd400517 	ldw	r21,20(sp)
    e978:	dd000417 	ldw	r20,16(sp)
    e97c:	dcc00317 	ldw	r19,12(sp)
    e980:	dc800217 	ldw	r18,8(sp)
    e984:	dc400117 	ldw	r17,4(sp)
    e988:	dc000017 	ldw	r16,0(sp)
    e98c:	dec00704 	addi	sp,sp,28
    e990:	f800283a 	ret

0000e994 <alt_alarm_stop>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e994:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e998:	00bfff84 	movi	r2,-2
    e99c:	2884703a 	and	r2,r5,r2
    e9a0:	1001703a 	wrctl	status,r2
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    e9a4:	20c00017 	ldw	r3,0(r4)
    e9a8:	20800117 	ldw	r2,4(r4)
    e9ac:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
    e9b0:	20800117 	ldw	r2,4(r4)
    e9b4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    e9b8:	21000115 	stw	r4,4(r4)
  entry->next     = entry;
    e9bc:	21000015 	stw	r4,0(r4)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e9c0:	2801703a 	wrctl	status,r5
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  alt_llist_remove (&alarm->llist);
  alt_irq_enable_all (irq_context);
}
    e9c4:	f800283a 	ret

0000e9c8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    e9c8:	defffd04 	addi	sp,sp,-12
    e9cc:	dfc00215 	stw	ra,8(sp)
    e9d0:	dc400115 	stw	r17,4(sp)
    e9d4:	dc000015 	stw	r16,0(sp)
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    e9d8:	d4200f17 	ldw	r16,-32708(gp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    e9dc:	d0a6e017 	ldw	r2,-25728(gp)
    e9e0:	10800044 	addi	r2,r2,1
    e9e4:	d0a6e015 	stw	r2,-25728(gp)
    e9e8:	00001b06 	br	ea58 <alt_tick+0x90>

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  {
    next = (alt_alarm*) alarm->llist.next;
    e9ec:	84400017 	ldw	r17,0(r16)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    e9f0:	80800403 	ldbu	r2,16(r16)
    e9f4:	10000326 	beq	r2,zero,ea04 <alt_tick+0x3c>
    e9f8:	d0a6e017 	ldw	r2,-25728(gp)
    e9fc:	1000011e 	bne	r2,zero,ea04 <alt_tick+0x3c>
    {
      alarm->rollover = 0;
    ea00:	80000405 	stb	zero,16(r16)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    ea04:	d0e6e017 	ldw	r3,-25728(gp)
    ea08:	80800217 	ldw	r2,8(r16)
    ea0c:	18801136 	bltu	r3,r2,ea54 <alt_tick+0x8c>
    ea10:	80800403 	ldbu	r2,16(r16)
    ea14:	10000f1e 	bne	r2,zero,ea54 <alt_tick+0x8c>
    {
      next_callback = alarm->callback (alarm->context);
    ea18:	80800317 	ldw	r2,12(r16)
    ea1c:	81000517 	ldw	r4,20(r16)
    ea20:	103ee83a 	callr	r2
    ea24:	1007883a 	mov	r3,r2

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    ea28:	1000031e 	bne	r2,zero,ea38 <alt_tick+0x70>
      {
        alt_alarm_stop (alarm);
    ea2c:	8009883a 	mov	r4,r16
    ea30:	000e9940 	call	e994 <alt_alarm_stop>
    ea34:	00000706 	br	ea54 <alt_tick+0x8c>
      }
      else
      {
        alarm->time += next_callback;
    ea38:	80800217 	ldw	r2,8(r16)
    ea3c:	1885883a 	add	r2,r3,r2
    ea40:	80800215 	stw	r2,8(r16)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    ea44:	d0e6e017 	ldw	r3,-25728(gp)
    ea48:	10c0022e 	bgeu	r2,r3,ea54 <alt_tick+0x8c>
        {
          alarm->rollover = 1;
    ea4c:	00800044 	movi	r2,1
    ea50:	80800405 	stb	r2,16(r16)
    ea54:	8821883a 	mov	r16,r17

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    ea58:	d0a00f04 	addi	r2,gp,-32708
    ea5c:	80bfe31e 	bne	r16,r2,e9ec <alt_tick+0x24>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
    ea60:	dfc00217 	ldw	ra,8(sp)
    ea64:	dc400117 	ldw	r17,4(sp)
    ea68:	dc000017 	ldw	r16,0(sp)
    ea6c:	dec00304 	addi	sp,sp,12
    ea70:	f800283a 	ret

0000ea74 <altera_nios2_qsys_irq_init>:
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
    NIOS2_WRITE_IENABLE(0);
    ea74:	000170fa 	wrctl	ienable,zero
}
    ea78:	f800283a 	ret

0000ea7c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    ea7c:	defffb04 	addi	sp,sp,-20
    ea80:	dfc00415 	stw	ra,16(sp)
    ea84:	dcc00315 	stw	r19,12(sp)
    ea88:	dc800215 	stw	r18,8(sp)
    ea8c:	dc400115 	stw	r17,4(sp)
    ea90:	dc000015 	stw	r16,0(sp)
    ea94:	2027883a 	mov	r19,r4
    ea98:	2821883a 	mov	r16,r5
  alt_dev* next = (alt_dev*) llist->next;
    ea9c:	2c400017 	ldw	r17,0(r5)
  alt_32 len;

  len  = strlen(name) + 1;
    eaa0:	00014700 	call	1470 <strlen>
    eaa4:	14800044 	addi	r18,r2,1
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    eaa8:	8c000726 	beq	r17,r16,eac8 <alt_find_dev+0x4c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    eaac:	89000217 	ldw	r4,8(r17)
    eab0:	980b883a 	mov	r5,r19
    eab4:	900d883a 	mov	r6,r18
    eab8:	0008ac80 	call	8ac8 <memcmp>
    eabc:	10000326 	beq	r2,zero,eacc <alt_find_dev+0x50>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
    eac0:	8c400017 	ldw	r17,0(r17)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    eac4:	847ff91e 	bne	r16,r17,eaac <alt_find_dev+0x30>
    eac8:	0023883a 	mov	r17,zero
  }
  
  /* No match found */
  
  return NULL;
}
    eacc:	8805883a 	mov	r2,r17
    ead0:	dfc00417 	ldw	ra,16(sp)
    ead4:	dcc00317 	ldw	r19,12(sp)
    ead8:	dc800217 	ldw	r18,8(sp)
    eadc:	dc400117 	ldw	r17,4(sp)
    eae0:	dc000017 	ldw	r16,0(sp)
    eae4:	dec00504 	addi	sp,sp,20
    eae8:	f800283a 	ret

0000eaec <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    eaec:	defff904 	addi	sp,sp,-28
    eaf0:	dfc00615 	stw	ra,24(sp)
    eaf4:	dd400515 	stw	r21,20(sp)
    eaf8:	dd000415 	stw	r20,16(sp)
    eafc:	dcc00315 	stw	r19,12(sp)
    eb00:	dc800215 	stw	r18,8(sp)
    eb04:	dc400115 	stw	r17,4(sp)
    eb08:	dc000015 	stw	r16,0(sp)
    eb0c:	2025883a 	mov	r18,r4
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    eb10:	00800074 	movhi	r2,1
    eb14:	10837404 	addi	r2,r2,3536
    eb18:	14400017 	ldw	r17,0(r2)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    eb1c:	102b883a 	mov	r21,r2
    eb20:	88801626 	beq	r17,r2,eb7c <alt_find_file+0x90>
    eb24:	053fffc4 	movi	r20,-1
    eb28:	04c00bc4 	movi	r19,47
  {
    len = strlen(next->name);
    eb2c:	8c000217 	ldw	r16,8(r17)
    eb30:	8009883a 	mov	r4,r16
    eb34:	00014700 	call	1470 <strlen>
    eb38:	1007883a 	mov	r3,r2
    
    if (next->name[len-1] == '/')
    eb3c:	8085883a 	add	r2,r16,r2
    eb40:	1505883a 	add	r2,r2,r20
    eb44:	10800007 	ldb	r2,0(r2)
    eb48:	14c0011e 	bne	r2,r19,eb50 <alt_find_file+0x64>
    {
      len -= 1;
    eb4c:	1d07883a 	add	r3,r3,r20
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    eb50:	1c85883a 	add	r2,r3,r18
    eb54:	10800007 	ldb	r2,0(r2)
    eb58:	14c00126 	beq	r2,r19,eb60 <alt_find_file+0x74>
    eb5c:	1000051e 	bne	r2,zero,eb74 <alt_find_file+0x88>
    eb60:	8009883a 	mov	r4,r16
    eb64:	900b883a 	mov	r5,r18
    eb68:	180d883a 	mov	r6,r3
    eb6c:	0008ac80 	call	8ac8 <memcmp>
    eb70:	10000326 	beq	r2,zero,eb80 <alt_find_file+0x94>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
    eb74:	8c400017 	ldw	r17,0(r17)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    eb78:	8d7fec1e 	bne	r17,r21,eb2c <alt_find_file+0x40>
    eb7c:	0023883a 	mov	r17,zero
  }
  
  /* No match found */
  
  return NULL;     
}
    eb80:	8805883a 	mov	r2,r17
    eb84:	dfc00617 	ldw	ra,24(sp)
    eb88:	dd400517 	ldw	r21,20(sp)
    eb8c:	dd000417 	ldw	r20,16(sp)
    eb90:	dcc00317 	ldw	r19,12(sp)
    eb94:	dc800217 	ldw	r18,8(sp)
    eb98:	dc400117 	ldw	r17,4(sp)
    eb9c:	dc000017 	ldw	r16,0(sp)
    eba0:	dec00704 	addi	sp,sp,28
    eba4:	f800283a 	ret

0000eba8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    eba8:	defffb04 	addi	sp,sp,-20
    ebac:	dfc00415 	stw	ra,16(sp)
    ebb0:	dcc00315 	stw	r19,12(sp)
    ebb4:	dc800215 	stw	r18,8(sp)
    ebb8:	dc400115 	stw	r17,4(sp)
    ebbc:	dc000015 	stw	r16,0(sp)
    ebc0:	2025883a 	mov	r18,r4
    ebc4:	0021883a 	mov	r16,zero
    ebc8:	00c00074 	movhi	r3,1
    ebcc:	18fed404 	addi	r3,r3,-1200
    ebd0:	04c00074 	movhi	r19,1
    ebd4:	9cc37804 	addi	r19,r19,3552
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  {
    if (!alt_fd_list[i].dev)
    ebd8:	18800017 	ldw	r2,0(r3)
    ebdc:	10000e1e 	bne	r2,zero,ec18 <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
    ebe0:	8009883a 	mov	r4,r16
    ebe4:	01400304 	movi	r5,12
    ebe8:	000d0e40 	call	d0e4 <__mulsi3>
    ebec:	00c00074 	movhi	r3,1
    ebf0:	18fed404 	addi	r3,r3,-1200
    ebf4:	10c5883a 	add	r2,r2,r3
    ebf8:	14800015 	stw	r18,0(r2)
      if (i > alt_max_fd)
    ebfc:	98800017 	ldw	r2,0(r19)
    ec00:	14000216 	blt	r2,r16,ec0c <alt_get_fd+0x64>
    ec04:	8005883a 	mov	r2,r16
    ec08:	00000806 	br	ec2c <alt_get_fd+0x84>
      {
        alt_max_fd = i;
    ec0c:	9c000015 	stw	r16,0(r19)
    ec10:	8005883a 	mov	r2,r16
    ec14:	00000506 	br	ec2c <alt_get_fd+0x84>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    ec18:	84000044 	addi	r16,r16,1
    ec1c:	18c00304 	addi	r3,r3,12
    ec20:	00800804 	movi	r2,32
    ec24:	80bfec1e 	bne	r16,r2,ebd8 <alt_get_fd+0x30>
    ec28:	00bffa04 	movi	r2,-24
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
}
    ec2c:	dfc00417 	ldw	ra,16(sp)
    ec30:	dcc00317 	ldw	r19,12(sp)
    ec34:	dc800217 	ldw	r18,8(sp)
    ec38:	dc400117 	ldw	r17,4(sp)
    ec3c:	dc000017 	ldw	r16,0(sp)
    ec40:	dec00504 	addi	sp,sp,20
    ec44:	f800283a 	ret

0000ec48 <exit>:
    ec48:	defffe04 	addi	sp,sp,-8
    ec4c:	000b883a 	mov	r5,zero
    ec50:	dc000015 	stw	r16,0(sp)
    ec54:	dfc00115 	stw	ra,4(sp)
    ec58:	2021883a 	mov	r16,r4
    ec5c:	000ec840 	call	ec84 <__call_exitprocs>
    ec60:	00800074 	movhi	r2,1
    ec64:	10837104 	addi	r2,r2,3524
    ec68:	11000017 	ldw	r4,0(r2)
    ec6c:	20800f17 	ldw	r2,60(r4)
    ec70:	10000126 	beq	r2,zero,ec78 <exit+0x30>
    ec74:	103ee83a 	callr	r2
    ec78:	8009883a 	mov	r4,r16
    ec7c:	000ee340 	call	ee34 <_exit>

0000ec80 <register_fini>:
    ec80:	f800283a 	ret

0000ec84 <__call_exitprocs>:
    ec84:	00800074 	movhi	r2,1
    ec88:	10837104 	addi	r2,r2,3524
    ec8c:	10800017 	ldw	r2,0(r2)
    ec90:	defff304 	addi	sp,sp,-52
    ec94:	df000b15 	stw	fp,44(sp)
    ec98:	d8800115 	stw	r2,4(sp)
    ec9c:	00800034 	movhi	r2,0
    eca0:	1082d204 	addi	r2,r2,2888
    eca4:	1005003a 	cmpeq	r2,r2,zero
    eca8:	d8800215 	stw	r2,8(sp)
    ecac:	d8800117 	ldw	r2,4(sp)
    ecb0:	dd400815 	stw	r21,32(sp)
    ecb4:	dd000715 	stw	r20,28(sp)
    ecb8:	10805204 	addi	r2,r2,328
    ecbc:	dfc00c15 	stw	ra,48(sp)
    ecc0:	ddc00a15 	stw	r23,40(sp)
    ecc4:	dd800915 	stw	r22,36(sp)
    ecc8:	dcc00615 	stw	r19,24(sp)
    eccc:	dc800515 	stw	r18,20(sp)
    ecd0:	dc400415 	stw	r17,16(sp)
    ecd4:	dc000315 	stw	r16,12(sp)
    ecd8:	282b883a 	mov	r21,r5
    ecdc:	2039883a 	mov	fp,r4
    ece0:	d8800015 	stw	r2,0(sp)
    ece4:	2829003a 	cmpeq	r20,r5,zero
    ece8:	d8800117 	ldw	r2,4(sp)
    ecec:	14405217 	ldw	r17,328(r2)
    ecf0:	88001026 	beq	r17,zero,ed34 <__call_exitprocs+0xb0>
    ecf4:	ddc00017 	ldw	r23,0(sp)
    ecf8:	88800117 	ldw	r2,4(r17)
    ecfc:	8c802204 	addi	r18,r17,136
    ed00:	143fffc4 	addi	r16,r2,-1
    ed04:	80000916 	blt	r16,zero,ed2c <__call_exitprocs+0xa8>
    ed08:	05bfffc4 	movi	r22,-1
    ed0c:	a000151e 	bne	r20,zero,ed64 <__call_exitprocs+0xe0>
    ed10:	8409883a 	add	r4,r16,r16
    ed14:	2105883a 	add	r2,r4,r4
    ed18:	1485883a 	add	r2,r2,r18
    ed1c:	10c02017 	ldw	r3,128(r2)
    ed20:	a8c01126 	beq	r21,r3,ed68 <__call_exitprocs+0xe4>
    ed24:	843fffc4 	addi	r16,r16,-1
    ed28:	85bff81e 	bne	r16,r22,ed0c <__call_exitprocs+0x88>
    ed2c:	d8800217 	ldw	r2,8(sp)
    ed30:	10003126 	beq	r2,zero,edf8 <__call_exitprocs+0x174>
    ed34:	dfc00c17 	ldw	ra,48(sp)
    ed38:	df000b17 	ldw	fp,44(sp)
    ed3c:	ddc00a17 	ldw	r23,40(sp)
    ed40:	dd800917 	ldw	r22,36(sp)
    ed44:	dd400817 	ldw	r21,32(sp)
    ed48:	dd000717 	ldw	r20,28(sp)
    ed4c:	dcc00617 	ldw	r19,24(sp)
    ed50:	dc800517 	ldw	r18,20(sp)
    ed54:	dc400417 	ldw	r17,16(sp)
    ed58:	dc000317 	ldw	r16,12(sp)
    ed5c:	dec00d04 	addi	sp,sp,52
    ed60:	f800283a 	ret
    ed64:	8409883a 	add	r4,r16,r16
    ed68:	88c00117 	ldw	r3,4(r17)
    ed6c:	2105883a 	add	r2,r4,r4
    ed70:	1445883a 	add	r2,r2,r17
    ed74:	18ffffc4 	addi	r3,r3,-1
    ed78:	11800217 	ldw	r6,8(r2)
    ed7c:	1c001526 	beq	r3,r16,edd4 <__call_exitprocs+0x150>
    ed80:	10000215 	stw	zero,8(r2)
    ed84:	303fe726 	beq	r6,zero,ed24 <__call_exitprocs+0xa0>
    ed88:	00c00044 	movi	r3,1
    ed8c:	1c06983a 	sll	r3,r3,r16
    ed90:	90804017 	ldw	r2,256(r18)
    ed94:	8cc00117 	ldw	r19,4(r17)
    ed98:	1884703a 	and	r2,r3,r2
    ed9c:	10001426 	beq	r2,zero,edf0 <__call_exitprocs+0x16c>
    eda0:	90804117 	ldw	r2,260(r18)
    eda4:	1884703a 	and	r2,r3,r2
    eda8:	10000c1e 	bne	r2,zero,eddc <__call_exitprocs+0x158>
    edac:	2105883a 	add	r2,r4,r4
    edb0:	1485883a 	add	r2,r2,r18
    edb4:	11400017 	ldw	r5,0(r2)
    edb8:	e009883a 	mov	r4,fp
    edbc:	303ee83a 	callr	r6
    edc0:	88800117 	ldw	r2,4(r17)
    edc4:	98bfc81e 	bne	r19,r2,ece8 <__call_exitprocs+0x64>
    edc8:	b8800017 	ldw	r2,0(r23)
    edcc:	147fd526 	beq	r2,r17,ed24 <__call_exitprocs+0xa0>
    edd0:	003fc506 	br	ece8 <__call_exitprocs+0x64>
    edd4:	8c000115 	stw	r16,4(r17)
    edd8:	003fea06 	br	ed84 <__call_exitprocs+0x100>
    eddc:	2105883a 	add	r2,r4,r4
    ede0:	1485883a 	add	r2,r2,r18
    ede4:	11000017 	ldw	r4,0(r2)
    ede8:	303ee83a 	callr	r6
    edec:	003ff406 	br	edc0 <__call_exitprocs+0x13c>
    edf0:	303ee83a 	callr	r6
    edf4:	003ff206 	br	edc0 <__call_exitprocs+0x13c>
    edf8:	88800117 	ldw	r2,4(r17)
    edfc:	1000081e 	bne	r2,zero,ee20 <__call_exitprocs+0x19c>
    ee00:	89000017 	ldw	r4,0(r17)
    ee04:	20000726 	beq	r4,zero,ee24 <__call_exitprocs+0x1a0>
    ee08:	b9000015 	stw	r4,0(r23)
    ee0c:	8809883a 	mov	r4,r17
    ee10:	0000b480 	call	b48 <free>
    ee14:	bc400017 	ldw	r17,0(r23)
    ee18:	883fb71e 	bne	r17,zero,ecf8 <__call_exitprocs+0x74>
    ee1c:	003fc506 	br	ed34 <__call_exitprocs+0xb0>
    ee20:	89000017 	ldw	r4,0(r17)
    ee24:	882f883a 	mov	r23,r17
    ee28:	2023883a 	mov	r17,r4
    ee2c:	883fb21e 	bne	r17,zero,ecf8 <__call_exitprocs+0x74>
    ee30:	003fc006 	br	ed34 <__call_exitprocs+0xb0>

0000ee34 <_exit>:
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    ee34:	20000226 	beq	r4,zero,ee40 <_exit+0xc>
    ALT_SIM_FAIL();
    ee38:	002af070 	cmpltui	zero,zero,43969
    ee3c:	00000106 	br	ee44 <_exit+0x10>
  } else {
    ALT_SIM_PASS();
    ee40:	002af0b0 	cmpltui	zero,zero,43970
    ee44:	003fff06 	br	ee44 <_exit+0x10>
    ee48:	0000ec80 	call	ec8 <_malloc_r+0x358>
