
C:/ECE5760_Epiphyte/lab2_DDA/DE2-115_Basic_Computer/app_software/JTAG_UART_C/JTAG_UART.elf:     file format elf32-littlenios2
C:/ECE5760_Epiphyte/lab2_DDA/DE2-115_Basic_Computer/app_software/JTAG_UART_C/JTAG_UART.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000168

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000f274 memsz 0x0000f274 flags r-x
    LOAD off    0x00010294 vaddr 0x0000f294 paddr 0x00010da0 align 2**12
         filesz 0x00001b0c memsz 0x00001b0c flags rw-
    LOAD off    0x000128ac vaddr 0x000128ac paddr 0x000128ac align 2**12
         filesz 0x00000000 memsz 0x0000025c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000148  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000ec94  00000168  00000168  00001168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000498  0000edfc  0000edfc  0000fdfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b0c  0000f294  00010da0  00010294  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000025c  000128ac  000128ac  000128ac  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00011da0  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000e78  00000000  00000000  00011dc8  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 0000156b  00000000  00000000  00012c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002516b  00000000  00000000  000141ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000094d3  00000000  00000000  00039316  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00016a04  00000000  00000000  000427e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001990  00000000  00000000  000591f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000030b0  00000000  00000000  0005ab80  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00010983  00000000  00000000  0005dc30  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0006e5b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000d40  00000000  00000000  0006e5c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00072454  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00072457  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0007245a  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0007245b  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0007245c  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00072460  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00072464  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00072468  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00072471  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0007247a  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000b  00000000  00000000  00072483  2**0
                  CONTENTS, READONLY
 28 .jdi          00004aa8  00000000  00000000  0007248e  2**0
                  CONTENTS, READONLY
 29 .sopcinfo     00047e89  00000000  00000000  00076f36  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000168 l    d  .text	00000000 .text
0000edfc l    d  .rodata	00000000 .rodata
0000f294 l    d  .rwdata	00000000 .rwdata
000128ac l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
000001a0 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 JTAG_UART.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 atof.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strstr.c
00001494 l     F .text	00000134 critical_factorization
00000000 l    df *ABS*	00000000 strtod.c
00001c28 l     F .text	00000048 match
0000f6b0 l     O .rwdata	00000014 fpi.1950
0000eef4 l     O .rodata	00000028 tinytens
0000f69c l     O .rwdata	00000014 fpinan.1986
00000000 l    df *ABS*	00000000 vfprintf.c
0000337c l     F .text	00000058 __sprint_r
0000ef8c l     O .rodata	00000010 blanks.3452
0000ef7c l     O .rodata	00000010 zeroes.3453
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000053f8 l     F .text	00000244 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00006e20 l     F .text	00000058 std
00006f2c l     F .text	00000008 __fp_lock
00006f34 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00007b70 l     F .text	00000024 htinit
00007bfc l     F .text	000000b0 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
000084a8 l     F .text	0000004c L_shift
00000000 l    df *ABS*	00000000 impure.c
0000f6c4 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
00010d74 l     O .rwdata	00000004 charset
0000efdc l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000f124 l     O .rodata	0000000c p05.2458
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
0000bd94 l     F .text	00000410 _fpadd_parts
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0000cf48 l     F .text	0000007c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 dp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
00000000 l    df *ABS*	00000000 alt_dev.c
0000d7d4 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_lseek.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00010d90 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000fc78 l     O .rwdata	00001060 JTAG_UART
00010cd8 l     O .rwdata	0000002c DDA_Options
00010d04 l     O .rwdata	0000002c Green_LEDs
00010d30 l     O .rwdata	0000002c HEX3_HEX0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000df24 l     F .text	00000054 altera_avalon_jtag_uart_timeout
0000dff8 l     F .text	00000134 altera_avalon_jtag_uart_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000e6b0 l     F .text	00000078 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
0000ec30 l     F .text	00000004 register_fini
00000000 l    df *ABS*	00000000 alt_exit.c
000012d8 g     F .text	0000001c putchar
00009110 g     F .text	00000094 _mprec_log10
000091fc g     F .text	00000088 __any_on
0000ad5c g     F .text	00000070 _isatty_r
0000f0fc g     O .rodata	00000028 __mprec_tinytens
0000da80 g     F .text	00000050 alt_main
000012fc g     F .text	000000a0 _puts_r
00012a08 g     O .bss	00000100 alt_irq
0000adcc g     F .text	00000078 _lseek_r
00010da0 g       *ABS*	00000000 __flash_rwdata_start
0000c8b4 g     F .text	00000088 __eqdf2
00012b08 g       *ABS*	00000000 __alt_heap_start
00001260 g     F .text	00000044 printf
0000a5e8 g     F .text	00000068 __sseek
00006e88 g     F .text	000000a4 __sinit
0000a8c8 g     F .text	00000130 __swbuf_r
00008760 g     F .text	00000084 _setlocale_r
00006f88 g     F .text	0000009c __sfmoreglue
0000dad4 g     F .text	00000004 __malloc_unlock
00001c70 g     F .text	000015cc _strtod_r
00008b8c g     F .text	000000e0 memmove
00006f78 g     F .text	00000010 _cleanup
00009284 g     F .text	000000bc _Balloc
0000065c g     F .text	00000094 __fixsfsi
0000c9c4 g     F .text	00000088 __gtdf2
00000000  w      *UND*	00000000 __errno
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
0000ace8 g     F .text	00000074 _fstat_r
000128b8 g     O .bss	00000004 errno
0000082c g     F .text	0000002c __make_fp
000128cc g     O .bss	00000004 alt_argv
00018d5c g       *ABS*	00000000 _gp
0000faf8 g     O .rwdata	00000180 alt_fd_list
000012f4 g     F .text	00000008 _putchar_r
0000ea2c g     F .text	00000070 alt_find_dev
00008aec g     F .text	000000a0 memcpy
000084f4 g     F .text	00000248 __hexnan
00006f6c g     F .text	0000000c _cleanup_r
0000cbe4 g     F .text	000000f8 __floatsidf
0000e728 g     F .text	00000098 alt_io_redirect
0000cad4 g     F .text	00000088 __ltdf2
0000139c g     F .text	00000014 puts
00009060 g     F .text	000000b0 __ratio
0000e1a0 g     F .text	00000168 altera_avalon_jtag_uart_read
00000b0c g     F .text	00000014 malloc
000012a4 g     F .text	00000034 _printf_r
0000d084 g     F .text	00000008 __udivsi3
0000d870 g     F .text	00000098 isatty
0000f00c g     O .rodata	000000c8 __mprec_tens
0000873c g     F .text	00000008 __locale_charset
0000aebc g     F .text	000000a4 __fixunsdfsi
000128ac g     O .bss	00000004 __malloc_top_pad
00010d70 g     O .rwdata	00000004 __mb_cur_max
00008744 g     F .text	0000000c _localeconv_r
000099e8 g     F .text	0000003c __i2b
00007554 g     F .text	0000049c __sfvwrite_r
000013b0 g     F .text	00000070 _sbrk_r
0000ae44 g     F .text	00000078 _read_r
0000fac4 g     O .rwdata	0000000c __lc_ctype
00010d88 g     O .rwdata	00000004 alt_max_fd
00000858 g     F .text	00000138 __unpack_d
0000abc4 g     F .text	00000110 _fclose_r
00006dec g     F .text	00000034 fflush
000128b0 g     O .bss	00000004 __malloc_max_sbrked_mem
0000c224 g     F .text	00000074 __adddf3
0000bc2c g     F .text	00000078 __nesf2
00008f40 g     F .text	00000120 __b2d
0000b5cc g     F .text	00000660 __umoddi3
0000d9cc g     F .text	000000b4 lseek
00010d6c g     O .rwdata	00000004 _global_impure_ptr
00009f7c g     F .text	000005f4 _realloc_r
00012b08 g       *ABS*	00000000 __bss_end
0000e648 g     F .text	00000068 alt_iic_isr_register
0000e978 g     F .text	000000ac alt_tick
00012908 g     O .bss	00000100 __hexdig
0000af60 g     F .text	0000066c __udivdi3
0000f0d4 g     O .rodata	00000028 __mprec_bigtens
00009c70 g     F .text	00000120 __s2b
0000cdb4 g     F .text	00000194 __floatunsidf
00008e60 g     F .text	00000060 __mcmp
00006f54 g     F .text	00000018 __fp_lock_all
0000e590 g     F .text	00000018 alt_ic_irq_enabled
0000e944 g     F .text	00000034 alt_alarm_stop
000128d4 g     O .bss	00000004 alt_irq_active
000000ec g     F .exceptions	0000007c alt_irq_handler
0000fad0 g     O .rwdata	00000028 alt_dev_null
00000764 g     F .text	000000c8 __unpack_f
0000e518 g     F .text	00000004 alt_dcache_flush_all
00008d2c g     F .text	00000070 __hi0bits
0000ccdc g     F .text	000000d8 __fixdfsi
00003360 g     F .text	0000001c strtod
00010da0 g       *ABS*	00000000 __ram_rwdata_end
00010d80 g     O .rwdata	00000008 alt_dev_list
0000dca4 g     F .text	00000110 write
00009e94 g     F .text	000000e8 _putc_r
00000af0 g     F .text	00000008 atof
0000bca4 g     F .text	00000078 __gtsf2
0000f294 g       *ABS*	00000000 __ram_rodata_end
0000d7dc g     F .text	00000094 fstat
00000000 g       *ABS*	00000000 __alt_mem_SDRAM
0000cb5c g     F .text	00000088 __ledf2
00009b50 g     F .text	00000120 __pow5mult
000128bc g     O .bss	00000004 __nlocale_changed
0000d08c g     F .text	00000008 __umodsi3
00012b08 g       *ABS*	00000000 end
00000990 g     F .text	00000160 __pack_f
0000df78 g     F .text	00000080 altera_avalon_jtag_uart_init
08000000 g       *ABS*	00000000 __alt_stack_pointer
0000d1f0 g     F .text	00000080 __clzsi2
0000e308 g     F .text	0000017c altera_avalon_jtag_uart_write
00006e78 g     F .text	00000004 __sfp_lock_acquire
00008994 g     F .text	000000e4 memchr
000033d4 g     F .text	00001ec4 ___vfprintf_internal_r
00007240 g     F .text	00000314 _free_r
0000ec34 g     F .text	000001b0 __call_exitprocs
000128c0 g     O .bss	00000004 __mlocale_changed
00010d64 g     O .rwdata	00000004 __malloc_sbrk_base
00000168 g     F .text	0000003c _start
000128d8 g     O .bss	00000004 _alt_tick_rate
000015c8 g     F .text	00000660 strstr
00009648 g     F .text	0000014c __lshift
000128dc g     O .bss	00000004 _alt_nticks
0000dad8 g     F .text	00000114 read
0000ddd4 g     F .text	00000080 alt_sys_init
00009794 g     F .text	00000254 __multiply
0000deec g     F .text	00000038 altera_avalon_jtag_uart_close
0000d094 g     F .text	00000038 __mulsi3
0000f294 g       *ABS*	00000000 __ram_rwdata_start
0000edfc g       *ABS*	00000000 __ram_rodata_start
000128e0 g     O .bss	00000028 __malloc_current_mallinfo
00009340 g     F .text	0000017c __d2b
0000dec4 g     F .text	00000028 altera_avalon_jtag_uart_read_fd
0000eb58 g     F .text	000000a0 alt_get_fd
0000d62c g     F .text	000000c8 __fpcmp_parts_d
0000ab54 g     F .text	00000070 _close_r
00008a78 g     F .text	00000074 memcmp
0000de74 g     F .text	00000028 altera_avalon_jtag_uart_close_fd
00012b08 g       *ABS*	00000000 __alt_stack_base
0000de54 g     F .text	00000020 altera_avalon_jtag_uart_ioctl_fd
000052bc g     F .text	0000013c __swsetup_r
0000c65c g     F .text	00000258 __divdf3
00007024 g     F .text	000000f0 __sfp
000091a4 g     F .text	00000058 __copybits
0000f294 g     O .rwdata	00000408 __malloc_av_
00006e84 g     F .text	00000004 __sinit_lock_release
0000c298 g     F .text	000003c4 __muldf3
0000a6cc g     F .text	00000060 __sread
0000ea9c g     F .text	000000bc alt_find_file
0000e51c g     F .text	00000070 alt_dev_llist_insert
0000dad0 g     F .text	00000004 __malloc_lock
0000dc54 g     F .text	00000050 sbrk
00006bf0 g     F .text	000001fc _fflush_r
0000aa8c g     F .text	000000c8 _calloc_r
000128ac g       *ABS*	00000000 __bss_start
00008c6c g     F .text	00000098 memset
000001c8 g     F .text	00000494 main
000128d0 g     O .bss	00000004 alt_envp
000128b4 g     O .bss	00000004 __malloc_max_total_mem
0000de9c g     F .text	00000028 altera_avalon_jtag_uart_write_fd
0000a9f8 g     F .text	0000001c __swbuf
0000bd1c g     F .text	00000078 __ltsf2
0000a5e0 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
0000acd4 g     F .text	00000014 fclose
000006f0 g     F .text	00000074 __truncdfsf2
0000563c g     F .text	000015b4 _dtoa_r
00000b20 g     F .text	00000740 _malloc_r
00010d8c g     O .rwdata	00000004 alt_errno
00007ab8 g     F .text	000000b8 _fwalk
00010d5c g     O .rwdata	00000004 dda_ptr
00009d90 g     F .text	00000104 putc
0000cfc4 g     F .text	00000060 __divsi3
0000f130 g     O .rodata	00000014 __thenan_df
00007114 g     F .text	0000012c _malloc_trim_r
0000a80c g     F .text	000000bc strcmp
0000edfc g       *ABS*	00000000 __flash_rodata_start
0000c93c g     F .text	00000088 __nedf2
0000ddb4 g     F .text	00000020 alt_irq_init
0000dbec g     F .text	00000068 alt_release_fd
0000f144 g     O .rodata	00000100 __clz_tab
000128c4 g     O .bss	00000004 _PathLocale
0000323c g     F .text	00000124 strtof
0000aa14 g     F .text	00000078 _write_r
000087e4 g     F .text	0000001c setlocale
00010d68 g     O .rwdata	00000004 _impure_ptr
000128c8 g     O .bss	00000004 alt_argc
00000020 g       .exceptions	00000000 alt_irq_entry
00008ec0 g     F .text	00000080 __ulp
0000a570 g     F .text	00000040 __isinfd
00006f3c g     F .text	00000018 __fp_unlock_all
00010d78 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00008750 g     F .text	00000010 localeconv
0000e628 g     F .text	00000020 alt_ic_isr_register
00007b94 g     F .text	00000068 __hexdig_init
00010da0 g       *ABS*	00000000 _edata
00012b08 g       *ABS*	00000000 _end
00000168 g       *ABS*	00000000 __ram_exceptions_end
0000e12c g     F .text	00000074 altera_avalon_jtag_uart_ioctl
0000e5e8 g     F .text	00000040 alt_ic_irq_disable
0000a650 g     F .text	0000007c __swrite
00010d60 g     O .rwdata	00000004 __malloc_trim_threshold
0000ea24 g     F .text	00000008 altera_nios2_qsys_irq_init
0000ebf8 g     F .text	00000038 exit
000079f0 g     F .text	000000c8 _fwalk_reent
000094bc g     F .text	0000018c __mdiff
0000d024 g     F .text	00000060 __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00006e7c g     F .text	00000004 __sfp_lock_release
0000d270 g     F .text	000000a8 __fpcmp_parts_f
0000ede4 g     F .text	00000014 _exit
0000a5b0 g     F .text	00000030 __isnand
0000e484 g     F .text	00000094 alt_alarm_start
0000d0cc g     F .text	00000124 __muldi3
00008800 g     F .text	00000194 __smakebuf_r
00001420 g     F .text	00000074 strlen
0000e7c0 g     F .text	00000184 open
0000ca4c g     F .text	00000088 __gedf2
00007cac g     F .text	000007fc __gethex
0000e58c g     F .text	00000004 alt_icache_flush_all
0000a72c g     F .text	000000e0 strchr
00010d94 g     O .rwdata	00000004 alt_priority_mask
0000e5a8 g     F .text	00000040 alt_ic_irq_enable
00005298 g     F .text	00000024 __vfprintf_internal
0000c1a4 g     F .text	00000080 __subdf3
000001a4 g     F .text	00000024 put_jtag
00008d9c g     F .text	000000c4 __lo0bits
00010d98 g     O .rwdata	00000008 alt_alarm_list
09000000 g       *ABS*	00000000 __alt_mem_Onchip_memory
0000d6f4 g     F .text	000000e0 close
0000d908 g     F .text	000000c4 alt_load
0000d318 g     F .text	00000314 __pack_d
00000af8 g     F .text	00000014 free
00006e80 g     F .text	00000004 __sinit_lock_acquire
00009a24 g     F .text	0000012c __multadd
00008d04 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08405a14 	ori	at,at,360
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:
         * Process an exception.  For all exceptions we must preserve all
         * caller saved registers on the stack (See the Nios2 ABI
         * documentation for details).
         */

        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76

#endif

#endif

        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        /*
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */

        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)

        rdctl r5, estatus
  44:	000b307a 	rdctl	r5,estatus

        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000ec0 	call	ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000306 	br	98 <alt_exception+0x78>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  94:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  98:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  9c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  c0:	d9c00817 	ldw	r7,32(sp)
#ifdef ALT_STACK_CHECK
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif
#endif

        ldw   r8,  36(sp)
  c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  e0:	dbc01017 	ldw	r15,64(sp)
#endif

        ldw   sp,  76(sp)

#else
        addi  sp, sp, 76
  e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  e8:	ef80083a 	eret

000000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  ec:	defffe04 	addi	sp,sp,-8
  f0:	dfc00115 	stw	ra,4(sp)
  f4:	dc000015 	stw	r16,0(sp)
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  f8:	000d313a 	rdctl	r6,ipending
  fc:	04000074 	movhi	r16,1
 100:	840a8204 	addi	r16,r16,10760
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 104:	3080004c 	andi	r2,r6,1
 108:	1005003a 	cmpeq	r2,r2,zero
 10c:	10000a1e 	bne	r2,zero,138 <alt_irq_handler+0x4c>
 110:	0009883a 	mov	r4,zero
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 114:	200490fa 	slli	r2,r4,3
 118:	1405883a 	add	r2,r2,r16
 11c:	10c00017 	ldw	r3,0(r2)
 120:	11000117 	ldw	r4,4(r2)
 124:	183ee83a 	callr	r3
 128:	0005313a 	rdctl	r2,ipending

    } while (1);

    active = alt_irq_pending ();
    
  } while (active);
 12c:	10000a26 	beq	r2,zero,158 <alt_irq_handler+0x6c>
 130:	100d883a 	mov	r6,r2
 134:	003ff306 	br	104 <alt_irq_handler+0x18>
 138:	00c00044 	movi	r3,1
 13c:	0009883a 	mov	r4,zero
 140:	180b883a 	mov	r5,r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 144:	18c7883a 	add	r3,r3,r3
      i++;
 148:	2149883a 	add	r4,r4,r5
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 14c:	30c4703a 	and	r2,r6,r3
 150:	103ff01e 	bne	r2,zero,114 <alt_irq_handler+0x28>
 154:	003ffb06 	br	144 <alt_irq_handler+0x58>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 158:	dfc00117 	ldw	ra,4(sp)
 15c:	dc000017 	ldw	r16,0(sp)
 160:	dec00204 	addi	sp,sp,8
 164:	f800283a 	ret

Disassembly of section .text:

00000168 <_start>:
#if (NIOS2_NUM_OF_SHADOW_REG_SETS == 0)    
    /*
     * Now that the caches are initialized, set up the stack pointer.
     * The value provided by the linker is assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     168:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
     16c:	dec00014 	ori	sp,sp,0

    /* Set up the global pointer. */
    movhi gp, %hi(_gp)
     170:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     174:	d6a35714 	ori	gp,gp,36188
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     178:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     17c:	108a2b14 	ori	r2,r2,10412

    movhi r3, %hi(__bss_end)
     180:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     184:	18cac214 	ori	r3,r3,11016

    beq r2, r3, 1f
     188:	10c00326 	beq	r2,r3,198 <_start+0x30>

0:
    stw zero, (r2)
     18c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     190:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     194:	10fffd36 	bltu	r2,r3,18c <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     198:	000d9080 	call	d908 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     19c:	000da800 	call	da80 <alt_main>

000001a0 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     1a0:	003fff06 	br	1a0 <alt_after_alt_main>

000001a4 <put_jtag>:
 * Subroutine to send a character to the JTAG UART
********************************************************************************/
void put_jtag( volatile int * JTAG_UART_ptr, char c )
{
	int control;
	control = *(JTAG_UART_ptr + 1);			// read the JTAG_UART control register
     1a4:	20800104 	addi	r2,r4,4
     1a8:	10800017 	ldw	r2,0(r2)
	if (control & 0xFFFF0000)					// if space, then echo character, else ignore 
     1ac:	10bfffec 	andhi	r2,r2,65535
     1b0:	10000426 	beq	r2,zero,1c4 <put_jtag+0x20>
		*(JTAG_UART_ptr) = c;
     1b4:	28803fcc 	andi	r2,r5,255
     1b8:	1080201c 	xori	r2,r2,128
     1bc:	10bfe004 	addi	r2,r2,-128
     1c0:	20800015 	stw	r2,0(r4)
     1c4:	f800283a 	ret

000001c8 <main>:
 * 	2. reads character data from the JTAG UART
 * 	3. echos the character data back to the JTAG UART
********************************************************************************/
volatile int * dda_ptr = (int *) DDA_OPTIONS_BASE;
int main(void)
{
     1c8:	deffe504 	addi	sp,sp,-108
     1cc:	dfc01a15 	stw	ra,104(sp)
     1d0:	dd401915 	stw	r21,100(sp)
     1d4:	dd001815 	stw	r20,96(sp)
     1d8:	dcc01715 	stw	r19,92(sp)
     1dc:	dc801615 	stw	r18,88(sp)
     1e0:	dc401515 	stw	r17,84(sp)
     1e4:	dc001415 	stw	r16,80(sp)
	uint32_t dataLine;

	int data, i, n;
	int k1, k2, k13, kmid, x1, v1, x2, v2;
	char command_index = 0;
	char text_string[] = "\nInput Spring-Mass System Parameters\n> \0";
     1e8:	00c00074 	movhi	r3,1
     1ec:	18fbad04 	addi	r3,r3,-4428
     1f0:	18800017 	ldw	r2,0(r3)
     1f4:	d8800115 	stw	r2,4(sp)
     1f8:	18800117 	ldw	r2,4(r3)
     1fc:	d8800215 	stw	r2,8(sp)
     200:	18800217 	ldw	r2,8(r3)
     204:	d8800315 	stw	r2,12(sp)
     208:	18800317 	ldw	r2,12(r3)
     20c:	d8800415 	stw	r2,16(sp)
     210:	18800417 	ldw	r2,16(r3)
     214:	d8800515 	stw	r2,20(sp)
     218:	18800517 	ldw	r2,20(r3)
     21c:	d8800615 	stw	r2,24(sp)
     220:	18800617 	ldw	r2,24(r3)
     224:	d8800715 	stw	r2,28(sp)
     228:	18800717 	ldw	r2,28(r3)
     22c:	d8800815 	stw	r2,32(sp)
     230:	18800817 	ldw	r2,32(r3)
     234:	d8800915 	stw	r2,36(sp)
     238:	18800917 	ldw	r2,36(r3)
     23c:	d8800a15 	stw	r2,40(sp)
     240:	18800a03 	ldbu	r2,40(r3)
     244:	d8800b05 	stb	r2,44(sp)
	char * command_string;//[20];
	char k1_string[] = "k1:";
     248:	00800074 	movhi	r2,1
     24c:	10bba504 	addi	r2,r2,-4460
     250:	10800017 	ldw	r2,0(r2)
     254:	d8800c15 	stw	r2,48(sp)
	char k2_string[] = "k2:";
     258:	00800074 	movhi	r2,1
     25c:	10bba604 	addi	r2,r2,-4456
     260:	10800017 	ldw	r2,0(r2)
     264:	d8800d15 	stw	r2,52(sp)
	char kmid_string[] = "km:";
     268:	00800074 	movhi	r2,1
     26c:	10bba704 	addi	r2,r2,-4452
     270:	10800017 	ldw	r2,0(r2)
     274:	d8800e15 	stw	r2,56(sp)
	char k13_string[] = "k3:";
     278:	00800074 	movhi	r2,1
     27c:	10bba804 	addi	r2,r2,-4448
     280:	10800017 	ldw	r2,0(r2)
     284:	d8800f15 	stw	r2,60(sp)
	char x1_string[] = "x1:";
     288:	00800074 	movhi	r2,1
     28c:	10bba904 	addi	r2,r2,-4444
     290:	10800017 	ldw	r2,0(r2)
     294:	d8801015 	stw	r2,64(sp)
	char v1_string[] = "v1:";
     298:	00800074 	movhi	r2,1
     29c:	10bbaa04 	addi	r2,r2,-4440
     2a0:	10800017 	ldw	r2,0(r2)
     2a4:	d8801115 	stw	r2,68(sp)
	char x2_string[] = "x2:";
     2a8:	00800074 	movhi	r2,1
     2ac:	10bbab04 	addi	r2,r2,-4436
     2b0:	10800017 	ldw	r2,0(r2)
     2b4:	d8801215 	stw	r2,72(sp)
	char v2_string[] = "v2:";
     2b8:	00800074 	movhi	r2,1
     2bc:	10bbac04 	addi	r2,r2,-4432
     2c0:	10800017 	ldw	r2,0(r2)
     2c4:	d8801315 	stw	r2,76(sp)
  	char* pEnd;

	command_string = malloc( sizeof(char)*20);
     2c8:	01000504 	movi	r4,20
     2cc:	0000b0c0 	call	b0c <malloc>
     2d0:	1023883a 	mov	r17,r2
	/* print a text string */
	for (i = 0; text_string[i] != 0; ++i)
     2d4:	d9400103 	ldbu	r5,4(sp)
     2d8:	28803fcc 	andi	r2,r5,255
     2dc:	1080201c 	xori	r2,r2,128
     2e0:	10bfe004 	addi	r2,r2,-128
     2e4:	10000d26 	beq	r2,zero,31c <main+0x154>
     2e8:	dc000144 	addi	r16,sp,5
		put_jtag (JTAG_UART_ptr, text_string[i]);
     2ec:	01040034 	movhi	r4,4096
     2f0:	21040004 	addi	r4,r4,4096
     2f4:	29403fcc 	andi	r5,r5,255
     2f8:	2940201c 	xori	r5,r5,128
     2fc:	297fe004 	addi	r5,r5,-128
     300:	00001a40 	call	1a4 <put_jtag>
	char v2_string[] = "v2:";
  	char* pEnd;

	command_string = malloc( sizeof(char)*20);
	/* print a text string */
	for (i = 0; text_string[i] != 0; ++i)
     304:	81400003 	ldbu	r5,0(r16)
     308:	84000044 	addi	r16,r16,1
     30c:	28803fcc 	andi	r2,r5,255
     310:	1080201c 	xori	r2,r2,128
     314:	10bfe004 	addi	r2,r2,-128
     318:	103ff41e 	bne	r2,zero,2ec <main+0x124>
     31c:	0029883a 	mov	r20,zero
     320:	0021883a 	mov	r16,zero
     324:	054000c4 	movi	r21,3
		put_jtag (JTAG_UART_ptr, text_string[i]);
	/* read and echo characters */
	while(1)
	{
		data = *(JTAG_UART_ptr);		 		// read the JTAG_UART data register
     328:	00840034 	movhi	r2,4096
     32c:	10840004 	addi	r2,r2,4096
     330:	11400017 	ldw	r5,0(r2)
		if (data & 0x00008000)					// check RVALID to see if there is new data
     334:	28a0000c 	andi	r2,r5,32768
     338:	103ffb26 	beq	r2,zero,328 <main+0x160>
		{
			data = data & 0x000000FF;			// the data is in the least significant byte
     33c:	2cc03fcc 	andi	r19,r5,255
			/* echo the character */

			// Add the data to the current command string if not return
			if ((data != '\n') && (data != '\r') && (command_index <19))
     340:	00800284 	movi	r2,10
     344:	98800b26 	beq	r19,r2,374 <main+0x1ac>
     348:	00800344 	movi	r2,13
     34c:	98800926 	beq	r19,r2,374 <main+0x1ac>
     350:	80c03fcc 	andi	r3,r16,255
     354:	18c0201c 	xori	r3,r3,128
     358:	18ffe004 	addi	r3,r3,-128
     35c:	00800484 	movi	r2,18
     360:	10c00416 	blt	r2,r3,374 <main+0x1ac>
			{
				command_string[command_index] = data;
     364:	88c5883a 	add	r2,r17,r3
     368:	14c00005 	stb	r19,0(r2)
				command_index++;
     36c:	84000044 	addi	r16,r16,1
     370:	0000b106 	br	638 <main+0x470>
			}
			// clear the command string if there is a return
			else
			{
				command_string[command_index] = '\0';
     374:	80803fcc 	andi	r2,r16,255
     378:	1080201c 	xori	r2,r2,128
     37c:	10bfe004 	addi	r2,r2,-128
     380:	8885883a 	add	r2,r17,r2
     384:	10000005 	stb	zero,0(r2)
				// check for a match on any of the special strings in the command string
				if (strstr(command_string,k1_string) == command_string)
     388:	8809883a 	mov	r4,r17
     38c:	d9400c04 	addi	r5,sp,48
     390:	00015c80 	call	15c8 <strstr>
     394:	88800e1e 	bne	r17,r2,3d0 <main+0x208>
				{

					printf("\nfound k1 match\n");
     398:	01000074 	movhi	r4,1
     39c:	213b7f04 	addi	r4,r4,-4612
     3a0:	000139c0 	call	139c <puts>
					tempFloat = atof(&command_string[3]); //strtod(&command_string[3],&pEnd);
     3a4:	890000c4 	addi	r4,r17,3
     3a8:	0000af00 	call	af0 <atof>
     3ac:	1009883a 	mov	r4,r2
     3b0:	180b883a 	mov	r5,r3
     3b4:	00006f00 	call	6f0 <__truncdfsf2>
     3b8:	d8800015 	stw	r2,0(sp)
					printf("completed strtod call\n");
     3bc:	01000074 	movhi	r4,1
     3c0:	213b8304 	addi	r4,r4,-4596
     3c4:	000139c0 	call	139c <puts>
     3c8:	05000044 	movi	r20,1
     3cc:	00005a06 	br	538 <main+0x370>
					//sscanf(command_string,"%f", &tempFloat);
					select_line = 0x1;

				}
				
				else if (strstr(command_string,k2_string) == command_string)
     3d0:	8809883a 	mov	r4,r17
     3d4:	d9400d04 	addi	r5,sp,52
     3d8:	00015c80 	call	15c8 <strstr>
     3dc:	8880091e 	bne	r17,r2,404 <main+0x23c>
				{
					tempFloat = strtod(command_string + 3,NULL);
     3e0:	890000c4 	addi	r4,r17,3
     3e4:	000b883a 	mov	r5,zero
     3e8:	00033600 	call	3360 <strtod>
     3ec:	1009883a 	mov	r4,r2
     3f0:	180b883a 	mov	r5,r3
     3f4:	00006f00 	call	6f0 <__truncdfsf2>
     3f8:	d8800015 	stw	r2,0(sp)
     3fc:	05000084 	movi	r20,2
     400:	00004d06 	br	538 <main+0x370>
					select_line = 0x2;
				}
				else if (strstr(command_string,k13_string) == command_string)
     404:	8809883a 	mov	r4,r17
     408:	d9400f04 	addi	r5,sp,60
     40c:	00015c80 	call	15c8 <strstr>
     410:	8880091e 	bne	r17,r2,438 <main+0x270>
				{
					tempFloat = strtod(command_string + 3,NULL);
     414:	8d49883a 	add	r4,r17,r21
     418:	000b883a 	mov	r5,zero
     41c:	00033600 	call	3360 <strtod>
     420:	1009883a 	mov	r4,r2
     424:	180b883a 	mov	r5,r3
     428:	00006f00 	call	6f0 <__truncdfsf2>
     42c:	d8800015 	stw	r2,0(sp)
     430:	a829883a 	mov	r20,r21
     434:	00004006 	br	538 <main+0x370>
					select_line = 0x3;
				}

				else if (strstr(command_string,kmid_string) == command_string)
     438:	8809883a 	mov	r4,r17
     43c:	d9400e04 	addi	r5,sp,56
     440:	00015c80 	call	15c8 <strstr>
     444:	8880091e 	bne	r17,r2,46c <main+0x2a4>
				{
					tempFloat = strtod(command_string + 3,NULL);
     448:	890000c4 	addi	r4,r17,3
     44c:	000b883a 	mov	r5,zero
     450:	00033600 	call	3360 <strtod>
     454:	1009883a 	mov	r4,r2
     458:	180b883a 	mov	r5,r3
     45c:	00006f00 	call	6f0 <__truncdfsf2>
     460:	d8800015 	stw	r2,0(sp)
     464:	05000104 	movi	r20,4
     468:	00003306 	br	538 <main+0x370>
					select_line = 0x4;

				}
				else if (strstr(command_string,x1_string) == command_string)
     46c:	8809883a 	mov	r4,r17
     470:	d9401004 	addi	r5,sp,64
     474:	00015c80 	call	15c8 <strstr>
     478:	8880091e 	bne	r17,r2,4a0 <main+0x2d8>
				{
					tempFloat = strtod(command_string + 3,NULL);
     47c:	890000c4 	addi	r4,r17,3
     480:	000b883a 	mov	r5,zero
     484:	00033600 	call	3360 <strtod>
     488:	1009883a 	mov	r4,r2
     48c:	180b883a 	mov	r5,r3
     490:	00006f00 	call	6f0 <__truncdfsf2>
     494:	d8800015 	stw	r2,0(sp)
     498:	05000144 	movi	r20,5
     49c:	00002606 	br	538 <main+0x370>
					select_line = 0x5;
				}
				else if (strstr(command_string,v1_string) == command_string)
     4a0:	8809883a 	mov	r4,r17
     4a4:	d9401104 	addi	r5,sp,68
     4a8:	00015c80 	call	15c8 <strstr>
     4ac:	8880091e 	bne	r17,r2,4d4 <main+0x30c>
				{
					tempFloat = strtod(command_string + 3,NULL);
     4b0:	890000c4 	addi	r4,r17,3
     4b4:	000b883a 	mov	r5,zero
     4b8:	00033600 	call	3360 <strtod>
     4bc:	1009883a 	mov	r4,r2
     4c0:	180b883a 	mov	r5,r3
     4c4:	00006f00 	call	6f0 <__truncdfsf2>
     4c8:	d8800015 	stw	r2,0(sp)
     4cc:	05000184 	movi	r20,6
     4d0:	00001906 	br	538 <main+0x370>
				select_line = 0x6;
				}
				else if (strstr(command_string,x2_string) == command_string)
     4d4:	8809883a 	mov	r4,r17
     4d8:	d9401204 	addi	r5,sp,72
     4dc:	00015c80 	call	15c8 <strstr>
     4e0:	8880091e 	bne	r17,r2,508 <main+0x340>
				{
					tempFloat = strtod(command_string + 3,NULL);
     4e4:	890000c4 	addi	r4,r17,3
     4e8:	000b883a 	mov	r5,zero
     4ec:	00033600 	call	3360 <strtod>
     4f0:	1009883a 	mov	r4,r2
     4f4:	180b883a 	mov	r5,r3
     4f8:	00006f00 	call	6f0 <__truncdfsf2>
     4fc:	d8800015 	stw	r2,0(sp)
     500:	050001c4 	movi	r20,7
     504:	00000c06 	br	538 <main+0x370>
					select_line = 0x7;
				}
				else if (strstr(command_string,v2_string) == command_string)
     508:	8809883a 	mov	r4,r17
     50c:	d9401304 	addi	r5,sp,76
     510:	00015c80 	call	15c8 <strstr>
     514:	8880081e 	bne	r17,r2,538 <main+0x370>
				{
					tempFloat = strtod(command_string + 3,NULL);
     518:	890000c4 	addi	r4,r17,3
     51c:	000b883a 	mov	r5,zero
     520:	00033600 	call	3360 <strtod>
     524:	1009883a 	mov	r4,r2
     528:	180b883a 	mov	r5,r3
     52c:	00006f00 	call	6f0 <__truncdfsf2>
     530:	d8800015 	stw	r2,0(sp)
     534:	05000204 	movi	r20,8
				}
				else
				{
					//select_line = 0x0;
				}
				printf("about to convert to fixed\n");
     538:	01000074 	movhi	r4,1
     53c:	213b8904 	addi	r4,r4,-4572
     540:	000139c0 	call	139c <puts>
				dataLine = FLOAT2_DDA_FIXED(tempFloat);
     544:	d8800017 	ldw	r2,0(sp)
     548:	0111e034 	movhi	r4,18304
     54c:	1109ff32 	custom	252,r4,r2,r4
     550:	000065c0 	call	65c <__fixsfsi>
     554:	00c00134 	movhi	r3,4
     558:	18ffffc4 	addi	r3,r3,-1
     55c:	10e4703a 	and	r18,r2,r3
				// after reading a value, zero the index and clear the command string
				//printf("tempFloat = %f\ndataLine = ",tempFloat);
				*(dda_ptr)= (dataLine << 4) | select_line;
     560:	9004913a 	slli	r2,r18,4
     564:	a0c03fcc 	andi	r3,r20,255
     568:	18c0201c 	xori	r3,r3,128
     56c:	18ffe004 	addi	r3,r3,-128
     570:	10c4b03a 	or	r2,r2,r3
     574:	d0e00017 	ldw	r3,-32768(gp)
     578:	18800015 	stw	r2,0(r3)
				command_index = 0;
				printf("converted to fixed and sent to ports\ndataLine = ");
     57c:	01000074 	movhi	r4,1
     580:	213b9004 	addi	r4,r4,-4544
     584:	00012600 	call	1260 <printf>
     588:	04000444 	movi	r16,17

				// print out the value sent to ports on JTAG
				for (n=17;n>=0;n--){
					if (dataLine & (1<<n))
     58c:	00800044 	movi	r2,1
     590:	1404983a 	sll	r2,r2,r16
     594:	9084703a 	and	r2,r18,r2
     598:	10000326 	beq	r2,zero,5a8 <main+0x3e0>
					{
						printf("1");
     59c:	01000c44 	movi	r4,49
     5a0:	00012d80 	call	12d8 <putchar>
     5a4:	00000206 	br	5b0 <main+0x3e8>
					}
					else
					{
						printf("0");
     5a8:	01000c04 	movi	r4,48
     5ac:	00012d80 	call	12d8 <putchar>
					}
					if (n==16) {printf("_");}
     5b0:	00800404 	movi	r2,16
     5b4:	8080031e 	bne	r16,r2,5c4 <main+0x3fc>
     5b8:	010017c4 	movi	r4,95
     5bc:	00012d80 	call	12d8 <putchar>
     5c0:	00001006 	br	604 <main+0x43c>
					if (n==12) {printf(" ");}
     5c4:	00800304 	movi	r2,12
     5c8:	8080041e 	bne	r16,r2,5dc <main+0x414>
     5cc:	01000804 	movi	r4,32
     5d0:	00012d80 	call	12d8 <putchar>
				*(dda_ptr)= (dataLine << 4) | select_line;
				command_index = 0;
				printf("converted to fixed and sent to ports\ndataLine = ");

				// print out the value sent to ports on JTAG
				for (n=17;n>=0;n--){
     5d4:	843fffc4 	addi	r16,r16,-1
     5d8:	003fec06 	br	58c <main+0x3c4>
					{
						printf("0");
					}
					if (n==16) {printf("_");}
					if (n==12) {printf(" ");}
					if (n==8) {printf(" ");}
     5dc:	00800204 	movi	r2,8
     5e0:	8080031e 	bne	r16,r2,5f0 <main+0x428>
     5e4:	01000804 	movi	r4,32
     5e8:	00012d80 	call	12d8 <putchar>
     5ec:	00001906 	br	654 <main+0x48c>
					if (n==4) {printf(" ");}
     5f0:	00800104 	movi	r2,4
     5f4:	8080031e 	bne	r16,r2,604 <main+0x43c>
     5f8:	01000804 	movi	r4,32
     5fc:	00012d80 	call	12d8 <putchar>
     600:	00001406 	br	654 <main+0x48c>
				*(dda_ptr)= (dataLine << 4) | select_line;
				command_index = 0;
				printf("converted to fixed and sent to ports\ndataLine = ");

				// print out the value sent to ports on JTAG
				for (n=17;n>=0;n--){
     604:	843fffc4 	addi	r16,r16,-1
     608:	803fe00e 	bge	r16,zero,58c <main+0x3c4>
					if (n==16) {printf("_");}
					if (n==12) {printf(" ");}
					if (n==8) {printf(" ");}
					if (n==4) {printf(" ");}
				}
				printf("\nPort output displayed above\n");
     60c:	01000074 	movhi	r4,1
     610:	213b9d04 	addi	r4,r4,-4492
     614:	000139c0 	call	139c <puts>
     618:	0007883a 	mov	r3,zero
     61c:	01400044 	movi	r5,1
     620:	01000504 	movi	r4,20
				
				// zero the command string
				for (n=0;n<20;n++){
					command_string[n] = '\0';
     624:	88c5883a 	add	r2,r17,r3
     628:	10000005 	stb	zero,0(r2)
					if (n==4) {printf(" ");}
				}
				printf("\nPort output displayed above\n");
				
				// zero the command string
				for (n=0;n<20;n++){
     62c:	1947883a 	add	r3,r3,r5
     630:	193ffc1e 	bne	r3,r4,624 <main+0x45c>
     634:	0021883a 	mov	r16,zero
					command_string[n] = '\0';
				}
			}

			put_jtag (JTAG_UART_ptr, (char) data & 0xFF );
     638:	01040034 	movhi	r4,4096
     63c:	21040004 	addi	r4,r4,4096
     640:	99403fcc 	andi	r5,r19,255
     644:	2940201c 	xori	r5,r5,128
     648:	297fe004 	addi	r5,r5,-128
     64c:	00001a40 	call	1a4 <put_jtag>
     650:	003f3506 	br	328 <main+0x160>
				*(dda_ptr)= (dataLine << 4) | select_line;
				command_index = 0;
				printf("converted to fixed and sent to ports\ndataLine = ");

				// print out the value sent to ports on JTAG
				for (n=17;n>=0;n--){
     654:	843fffc4 	addi	r16,r16,-1
     658:	003fcc06 	br	58c <main+0x3c4>

0000065c <__fixsfsi>:
     65c:	defffa04 	addi	sp,sp,-24
     660:	d9000015 	stw	r4,0(sp)
     664:	d9400104 	addi	r5,sp,4
     668:	d809883a 	mov	r4,sp
     66c:	dfc00515 	stw	ra,20(sp)
     670:	00007640 	call	764 <__unpack_f>
     674:	d8c00117 	ldw	r3,4(sp)
     678:	00800084 	movi	r2,2
     67c:	1880041e 	bne	r3,r2,690 <__fixsfsi+0x34>
     680:	0005883a 	mov	r2,zero
     684:	dfc00517 	ldw	ra,20(sp)
     688:	dec00604 	addi	sp,sp,24
     68c:	f800283a 	ret
     690:	00800044 	movi	r2,1
     694:	10fffa2e 	bgeu	r2,r3,680 <__fixsfsi+0x24>
     698:	00800104 	movi	r2,4
     69c:	18800426 	beq	r3,r2,6b0 <__fixsfsi+0x54>
     6a0:	d8800317 	ldw	r2,12(sp)
     6a4:	103ff616 	blt	r2,zero,680 <__fixsfsi+0x24>
     6a8:	00c00784 	movi	r3,30
     6ac:	1880070e 	bge	r3,r2,6cc <__fixsfsi+0x70>
     6b0:	d8800217 	ldw	r2,8(sp)
     6b4:	10000c1e 	bne	r2,zero,6e8 <__fixsfsi+0x8c>
     6b8:	00a00034 	movhi	r2,32768
     6bc:	10bfffc4 	addi	r2,r2,-1
     6c0:	dfc00517 	ldw	ra,20(sp)
     6c4:	dec00604 	addi	sp,sp,24
     6c8:	f800283a 	ret
     6cc:	1885c83a 	sub	r2,r3,r2
     6d0:	d9000217 	ldw	r4,8(sp)
     6d4:	d8c00417 	ldw	r3,16(sp)
     6d8:	1884d83a 	srl	r2,r3,r2
     6dc:	203fe926 	beq	r4,zero,684 <__fixsfsi+0x28>
     6e0:	0085c83a 	sub	r2,zero,r2
     6e4:	003fe706 	br	684 <__fixsfsi+0x28>
     6e8:	00a00034 	movhi	r2,32768
     6ec:	003fe506 	br	684 <__fixsfsi+0x28>

000006f0 <__truncdfsf2>:
     6f0:	defff804 	addi	sp,sp,-32
     6f4:	2005883a 	mov	r2,r4
     6f8:	2807883a 	mov	r3,r5
     6fc:	d809883a 	mov	r4,sp
     700:	d9400204 	addi	r5,sp,8
     704:	d8c00115 	stw	r3,4(sp)
     708:	d8800015 	stw	r2,0(sp)
     70c:	dfc00715 	stw	ra,28(sp)
     710:	00008580 	call	858 <__unpack_d>
     714:	d9c00517 	ldw	r7,20(sp)
     718:	da000617 	ldw	r8,24(sp)
     71c:	02d00034 	movhi	r11,16384
     720:	5affffc4 	addi	r11,r11,-1
     724:	3812d7ba 	srli	r9,r7,30
     728:	401a90ba 	slli	r13,r8,2
     72c:	3ac4703a 	and	r2,r7,r11
     730:	0007883a 	mov	r3,zero
     734:	6a52b03a 	or	r9,r13,r9
     738:	10c4b03a 	or	r2,r2,r3
     73c:	d9000217 	ldw	r4,8(sp)
     740:	d9400317 	ldw	r5,12(sp)
     744:	d9800417 	ldw	r6,16(sp)
     748:	480f883a 	mov	r7,r9
     74c:	10000126 	beq	r2,zero,754 <__truncdfsf2+0x64>
     750:	49c00054 	ori	r7,r9,1
     754:	000082c0 	call	82c <__make_fp>
     758:	dfc00717 	ldw	ra,28(sp)
     75c:	dec00804 	addi	sp,sp,32
     760:	f800283a 	ret

00000764 <__unpack_f>:
     764:	21800017 	ldw	r6,0(r4)
     768:	00c02034 	movhi	r3,128
     76c:	18ffffc4 	addi	r3,r3,-1
     770:	3004d5fa 	srli	r2,r6,23
     774:	3008d7fa 	srli	r4,r6,31
     778:	30ce703a 	and	r7,r6,r3
     77c:	10c03fcc 	andi	r3,r2,255
     780:	29000115 	stw	r4,4(r5)
     784:	1800131e 	bne	r3,zero,7d4 <__unpack_f+0x70>
     788:	38000f26 	beq	r7,zero,7c8 <__unpack_f+0x64>
     78c:	380691fa 	slli	r3,r7,7
     790:	01bfe084 	movi	r6,-126
     794:	008000c4 	movi	r2,3
     798:	01100034 	movhi	r4,16384
     79c:	213fffc4 	addi	r4,r4,-1
     7a0:	28800015 	stw	r2,0(r5)
     7a4:	29800215 	stw	r6,8(r5)
     7a8:	20c00536 	bltu	r4,r3,7c0 <__unpack_f+0x5c>
     7ac:	3005883a 	mov	r2,r6
     7b0:	18c7883a 	add	r3,r3,r3
     7b4:	10bfffc4 	addi	r2,r2,-1
     7b8:	20fffd2e 	bgeu	r4,r3,7b0 <__unpack_f+0x4c>
     7bc:	28800215 	stw	r2,8(r5)
     7c0:	28c00315 	stw	r3,12(r5)
     7c4:	f800283a 	ret
     7c8:	00800084 	movi	r2,2
     7cc:	28800015 	stw	r2,0(r5)
     7d0:	f800283a 	ret
     7d4:	00803fc4 	movi	r2,255
     7d8:	18800826 	beq	r3,r2,7fc <__unpack_f+0x98>
     7dc:	380491fa 	slli	r2,r7,7
     7e0:	18ffe044 	addi	r3,r3,-127
     7e4:	28c00215 	stw	r3,8(r5)
     7e8:	10900034 	orhi	r2,r2,16384
     7ec:	28800315 	stw	r2,12(r5)
     7f0:	008000c4 	movi	r2,3
     7f4:	28800015 	stw	r2,0(r5)
     7f8:	f800283a 	ret
     7fc:	3800031e 	bne	r7,zero,80c <__unpack_f+0xa8>
     800:	00800104 	movi	r2,4
     804:	28800015 	stw	r2,0(r5)
     808:	f800283a 	ret
     80c:	3080042c 	andhi	r2,r6,16
     810:	10000426 	beq	r2,zero,824 <__unpack_f+0xc0>
     814:	00800044 	movi	r2,1
     818:	28800015 	stw	r2,0(r5)
     81c:	29c00315 	stw	r7,12(r5)
     820:	f800283a 	ret
     824:	28000015 	stw	zero,0(r5)
     828:	003ffc06 	br	81c <__unpack_f+0xb8>

0000082c <__make_fp>:
     82c:	defffb04 	addi	sp,sp,-20
     830:	d9000015 	stw	r4,0(sp)
     834:	d809883a 	mov	r4,sp
     838:	dfc00415 	stw	ra,16(sp)
     83c:	d9400115 	stw	r5,4(sp)
     840:	d9800215 	stw	r6,8(sp)
     844:	d9c00315 	stw	r7,12(sp)
     848:	00009900 	call	990 <__pack_f>
     84c:	dfc00417 	ldw	ra,16(sp)
     850:	dec00504 	addi	sp,sp,20
     854:	f800283a 	ret

00000858 <__unpack_d>:
     858:	20c00117 	ldw	r3,4(r4)
     85c:	22400017 	ldw	r9,0(r4)
     860:	00800434 	movhi	r2,16
     864:	10bfffc4 	addi	r2,r2,-1
     868:	1808d53a 	srli	r4,r3,20
     86c:	180cd7fa 	srli	r6,r3,31
     870:	1894703a 	and	r10,r3,r2
     874:	2201ffcc 	andi	r8,r4,2047
     878:	281b883a 	mov	r13,r5
     87c:	4817883a 	mov	r11,r9
     880:	29800115 	stw	r6,4(r5)
     884:	5019883a 	mov	r12,r10
     888:	40001e1e 	bne	r8,zero,904 <__unpack_d+0xac>
     88c:	4a84b03a 	or	r2,r9,r10
     890:	10001926 	beq	r2,zero,8f8 <__unpack_d+0xa0>
     894:	4804d63a 	srli	r2,r9,24
     898:	500c923a 	slli	r6,r10,8
     89c:	013f0084 	movi	r4,-1022
     8a0:	00c40034 	movhi	r3,4096
     8a4:	18ffffc4 	addi	r3,r3,-1
     8a8:	118cb03a 	or	r6,r2,r6
     8ac:	008000c4 	movi	r2,3
     8b0:	480a923a 	slli	r5,r9,8
     8b4:	68800015 	stw	r2,0(r13)
     8b8:	69000215 	stw	r4,8(r13)
     8bc:	19800b36 	bltu	r3,r6,8ec <__unpack_d+0x94>
     8c0:	200f883a 	mov	r7,r4
     8c4:	1811883a 	mov	r8,r3
     8c8:	2945883a 	add	r2,r5,r5
     8cc:	1149803a 	cmpltu	r4,r2,r5
     8d0:	3187883a 	add	r3,r6,r6
     8d4:	20c9883a 	add	r4,r4,r3
     8d8:	100b883a 	mov	r5,r2
     8dc:	200d883a 	mov	r6,r4
     8e0:	39ffffc4 	addi	r7,r7,-1
     8e4:	413ff82e 	bgeu	r8,r4,8c8 <__unpack_d+0x70>
     8e8:	69c00215 	stw	r7,8(r13)
     8ec:	69800415 	stw	r6,16(r13)
     8f0:	69400315 	stw	r5,12(r13)
     8f4:	f800283a 	ret
     8f8:	00800084 	movi	r2,2
     8fc:	28800015 	stw	r2,0(r5)
     900:	f800283a 	ret
     904:	0081ffc4 	movi	r2,2047
     908:	40800f26 	beq	r8,r2,948 <__unpack_d+0xf0>
     90c:	480cd63a 	srli	r6,r9,24
     910:	5006923a 	slli	r3,r10,8
     914:	4804923a 	slli	r2,r9,8
     918:	0009883a 	mov	r4,zero
     91c:	30c6b03a 	or	r3,r6,r3
     920:	01440034 	movhi	r5,4096
     924:	110cb03a 	or	r6,r2,r4
     928:	423f0044 	addi	r8,r8,-1023
     92c:	194eb03a 	or	r7,r3,r5
     930:	008000c4 	movi	r2,3
     934:	69c00415 	stw	r7,16(r13)
     938:	6a000215 	stw	r8,8(r13)
     93c:	68800015 	stw	r2,0(r13)
     940:	69800315 	stw	r6,12(r13)
     944:	f800283a 	ret
     948:	4a84b03a 	or	r2,r9,r10
     94c:	1000031e 	bne	r2,zero,95c <__unpack_d+0x104>
     950:	00800104 	movi	r2,4
     954:	28800015 	stw	r2,0(r5)
     958:	f800283a 	ret
     95c:	0009883a 	mov	r4,zero
     960:	01400234 	movhi	r5,8
     964:	4904703a 	and	r2,r9,r4
     968:	5146703a 	and	r3,r10,r5
     96c:	10c4b03a 	or	r2,r2,r3
     970:	10000526 	beq	r2,zero,988 <__unpack_d+0x130>
     974:	00800044 	movi	r2,1
     978:	68800015 	stw	r2,0(r13)
     97c:	6b000415 	stw	r12,16(r13)
     980:	6ac00315 	stw	r11,12(r13)
     984:	f800283a 	ret
     988:	68000015 	stw	zero,0(r13)
     98c:	003ffb06 	br	97c <__unpack_d+0x124>

00000990 <__pack_f>:
     990:	20c00017 	ldw	r3,0(r4)
     994:	01c00044 	movi	r7,1
     998:	21800317 	ldw	r6,12(r4)
     99c:	21400117 	ldw	r5,4(r4)
     9a0:	38c02d2e 	bgeu	r7,r3,a58 <__pack_f+0xc8>
     9a4:	00800104 	movi	r2,4
     9a8:	18802826 	beq	r3,r2,a4c <__pack_f+0xbc>
     9ac:	00800084 	movi	r2,2
     9b0:	18800126 	beq	r3,r2,9b8 <__pack_f+0x28>
     9b4:	3000101e 	bne	r6,zero,9f8 <__pack_f+0x68>
     9b8:	000d883a 	mov	r6,zero
     9bc:	0007883a 	mov	r3,zero
     9c0:	19003fcc 	andi	r4,r3,255
     9c4:	200895fa 	slli	r4,r4,23
     9c8:	00c02034 	movhi	r3,128
     9cc:	18ffffc4 	addi	r3,r3,-1
     9d0:	30c6703a 	and	r3,r6,r3
     9d4:	10a0002c 	andhi	r2,r2,32768
     9d8:	10c4b03a 	or	r2,r2,r3
     9dc:	280a97fa 	slli	r5,r5,31
     9e0:	1104b03a 	or	r2,r2,r4
     9e4:	00e00034 	movhi	r3,32768
     9e8:	18ffffc4 	addi	r3,r3,-1
     9ec:	10c4703a 	and	r2,r2,r3
     9f0:	1144b03a 	or	r2,r2,r5
     9f4:	f800283a 	ret
     9f8:	21000217 	ldw	r4,8(r4)
     9fc:	00bfe084 	movi	r2,-126
     a00:	20801b16 	blt	r4,r2,a70 <__pack_f+0xe0>
     a04:	00801fc4 	movi	r2,127
     a08:	11001016 	blt	r2,r4,a4c <__pack_f+0xbc>
     a0c:	308e703a 	and	r7,r6,r2
     a10:	2087883a 	add	r3,r4,r2
     a14:	00801004 	movi	r2,64
     a18:	38800526 	beq	r7,r2,a30 <__pack_f+0xa0>
     a1c:	31800fc4 	addi	r6,r6,63
     a20:	30000716 	blt	r6,zero,a40 <__pack_f+0xb0>
     a24:	300490ba 	slli	r2,r6,2
     a28:	100cd27a 	srli	r6,r2,9
     a2c:	003fe406 	br	9c0 <__pack_f+0x30>
     a30:	3080200c 	andi	r2,r6,128
     a34:	103ffa26 	beq	r2,zero,a20 <__pack_f+0x90>
     a38:	31cd883a 	add	r6,r6,r7
     a3c:	003ff806 	br	a20 <__pack_f+0x90>
     a40:	300cd07a 	srli	r6,r6,1
     a44:	18c00044 	addi	r3,r3,1
     a48:	003ff606 	br	a24 <__pack_f+0x94>
     a4c:	000d883a 	mov	r6,zero
     a50:	00ffffc4 	movi	r3,-1
     a54:	003fda06 	br	9c0 <__pack_f+0x30>
     a58:	31800434 	orhi	r6,r6,16
     a5c:	00802034 	movhi	r2,128
     a60:	10bfffc4 	addi	r2,r2,-1
     a64:	308c703a 	and	r6,r6,r2
     a68:	00ffffc4 	movi	r3,-1
     a6c:	003fd406 	br	9c0 <__pack_f+0x30>
     a70:	1109c83a 	sub	r4,r2,r4
     a74:	00800644 	movi	r2,25
     a78:	11001216 	blt	r2,r4,ac4 <__pack_f+0x134>
     a7c:	3904983a 	sll	r2,r7,r4
     a80:	3106d83a 	srl	r3,r6,r4
     a84:	10bfffc4 	addi	r2,r2,-1
     a88:	3084703a 	and	r2,r6,r2
     a8c:	1004c03a 	cmpne	r2,r2,zero
     a90:	1886b03a 	or	r3,r3,r2
     a94:	19001fcc 	andi	r4,r3,127
     a98:	00801004 	movi	r2,64
     a9c:	20800c26 	beq	r4,r2,ad0 <__pack_f+0x140>
     aa0:	18c00fc4 	addi	r3,r3,63
     aa4:	00900034 	movhi	r2,16384
     aa8:	10bfffc4 	addi	r2,r2,-1
     aac:	180cd1fa 	srli	r6,r3,7
     ab0:	10c7803a 	cmpltu	r3,r2,r3
     ab4:	00802034 	movhi	r2,128
     ab8:	10bfffc4 	addi	r2,r2,-1
     abc:	308c703a 	and	r6,r6,r2
     ac0:	003fbf06 	br	9c0 <__pack_f+0x30>
     ac4:	0007883a 	mov	r3,zero
     ac8:	000d883a 	mov	r6,zero
     acc:	003ff906 	br	ab4 <__pack_f+0x124>
     ad0:	1880200c 	andi	r2,r3,128
     ad4:	10000126 	beq	r2,zero,adc <__pack_f+0x14c>
     ad8:	1907883a 	add	r3,r3,r4
     adc:	180cd1fa 	srli	r6,r3,7
     ae0:	00900034 	movhi	r2,16384
     ae4:	10bfffc4 	addi	r2,r2,-1
     ae8:	10c7803a 	cmpltu	r3,r2,r3
     aec:	003ff106 	br	ab4 <__pack_f+0x124>

00000af0 <atof>:
     af0:	000b883a 	mov	r5,zero
     af4:	00033601 	jmpi	3360 <strtod>

00000af8 <free>:
     af8:	00800074 	movhi	r2,1
     afc:	10835a04 	addi	r2,r2,3432
     b00:	200b883a 	mov	r5,r4
     b04:	11000017 	ldw	r4,0(r2)
     b08:	00072401 	jmpi	7240 <_free_r>

00000b0c <malloc>:
     b0c:	00800074 	movhi	r2,1
     b10:	10835a04 	addi	r2,r2,3432
     b14:	200b883a 	mov	r5,r4
     b18:	11000017 	ldw	r4,0(r2)
     b1c:	0000b201 	jmpi	b20 <_malloc_r>

00000b20 <_malloc_r>:
     b20:	defff604 	addi	sp,sp,-40
     b24:	28c002c4 	addi	r3,r5,11
     b28:	00800584 	movi	r2,22
     b2c:	dc800215 	stw	r18,8(sp)
     b30:	dfc00915 	stw	ra,36(sp)
     b34:	df000815 	stw	fp,32(sp)
     b38:	ddc00715 	stw	r23,28(sp)
     b3c:	dd800615 	stw	r22,24(sp)
     b40:	dd400515 	stw	r21,20(sp)
     b44:	dd000415 	stw	r20,16(sp)
     b48:	dcc00315 	stw	r19,12(sp)
     b4c:	dc400115 	stw	r17,4(sp)
     b50:	dc000015 	stw	r16,0(sp)
     b54:	2025883a 	mov	r18,r4
     b58:	10c01236 	bltu	r2,r3,ba4 <_malloc_r+0x84>
     b5c:	04400404 	movi	r17,16
     b60:	8940142e 	bgeu	r17,r5,bb4 <_malloc_r+0x94>
     b64:	00800304 	movi	r2,12
     b68:	0007883a 	mov	r3,zero
     b6c:	90800015 	stw	r2,0(r18)
     b70:	1805883a 	mov	r2,r3
     b74:	dfc00917 	ldw	ra,36(sp)
     b78:	df000817 	ldw	fp,32(sp)
     b7c:	ddc00717 	ldw	r23,28(sp)
     b80:	dd800617 	ldw	r22,24(sp)
     b84:	dd400517 	ldw	r21,20(sp)
     b88:	dd000417 	ldw	r20,16(sp)
     b8c:	dcc00317 	ldw	r19,12(sp)
     b90:	dc800217 	ldw	r18,8(sp)
     b94:	dc400117 	ldw	r17,4(sp)
     b98:	dc000017 	ldw	r16,0(sp)
     b9c:	dec00a04 	addi	sp,sp,40
     ba0:	f800283a 	ret
     ba4:	00bffe04 	movi	r2,-8
     ba8:	18a2703a 	and	r17,r3,r2
     bac:	883fed16 	blt	r17,zero,b64 <_malloc_r+0x44>
     bb0:	897fec36 	bltu	r17,r5,b64 <_malloc_r+0x44>
     bb4:	9009883a 	mov	r4,r18
     bb8:	000dad00 	call	dad0 <__malloc_lock>
     bbc:	00807dc4 	movi	r2,503
     bc0:	14402b2e 	bgeu	r2,r17,c70 <_malloc_r+0x150>
     bc4:	8806d27a 	srli	r3,r17,9
     bc8:	18003f1e 	bne	r3,zero,cc8 <_malloc_r+0x1a8>
     bcc:	880cd0fa 	srli	r6,r17,3
     bd0:	300490fa 	slli	r2,r6,3
     bd4:	02c00074 	movhi	r11,1
     bd8:	5afca504 	addi	r11,r11,-3436
     bdc:	12cb883a 	add	r5,r2,r11
     be0:	2c000317 	ldw	r16,12(r5)
     be4:	580f883a 	mov	r7,r11
     be8:	2c00041e 	bne	r5,r16,bfc <_malloc_r+0xdc>
     bec:	00000a06 	br	c18 <_malloc_r+0xf8>
     bf0:	1800860e 	bge	r3,zero,e0c <_malloc_r+0x2ec>
     bf4:	84000317 	ldw	r16,12(r16)
     bf8:	2c000726 	beq	r5,r16,c18 <_malloc_r+0xf8>
     bfc:	80800117 	ldw	r2,4(r16)
     c00:	00ffff04 	movi	r3,-4
     c04:	10c8703a 	and	r4,r2,r3
     c08:	2447c83a 	sub	r3,r4,r17
     c0c:	008003c4 	movi	r2,15
     c10:	10fff70e 	bge	r2,r3,bf0 <_malloc_r+0xd0>
     c14:	31bfffc4 	addi	r6,r6,-1
     c18:	32400044 	addi	r9,r6,1
     c1c:	02800074 	movhi	r10,1
     c20:	52bca704 	addi	r10,r10,-3428
     c24:	54000217 	ldw	r16,8(r10)
     c28:	8280a026 	beq	r16,r10,eac <_malloc_r+0x38c>
     c2c:	80800117 	ldw	r2,4(r16)
     c30:	00ffff04 	movi	r3,-4
     c34:	10ca703a 	and	r5,r2,r3
     c38:	2c4dc83a 	sub	r6,r5,r17
     c3c:	008003c4 	movi	r2,15
     c40:	11808316 	blt	r2,r6,e50 <_malloc_r+0x330>
     c44:	52800315 	stw	r10,12(r10)
     c48:	52800215 	stw	r10,8(r10)
     c4c:	30002916 	blt	r6,zero,cf4 <_malloc_r+0x1d4>
     c50:	8147883a 	add	r3,r16,r5
     c54:	18800117 	ldw	r2,4(r3)
     c58:	9009883a 	mov	r4,r18
     c5c:	10800054 	ori	r2,r2,1
     c60:	18800115 	stw	r2,4(r3)
     c64:	000dad40 	call	dad4 <__malloc_unlock>
     c68:	80c00204 	addi	r3,r16,8
     c6c:	003fc006 	br	b70 <_malloc_r+0x50>
     c70:	02c00074 	movhi	r11,1
     c74:	5afca504 	addi	r11,r11,-3436
     c78:	8ac5883a 	add	r2,r17,r11
     c7c:	14000317 	ldw	r16,12(r2)
     c80:	580f883a 	mov	r7,r11
     c84:	8806d0fa 	srli	r3,r17,3
     c88:	14006c26 	beq	r2,r16,e3c <_malloc_r+0x31c>
     c8c:	80c00117 	ldw	r3,4(r16)
     c90:	00bfff04 	movi	r2,-4
     c94:	81800317 	ldw	r6,12(r16)
     c98:	1886703a 	and	r3,r3,r2
     c9c:	80c7883a 	add	r3,r16,r3
     ca0:	18800117 	ldw	r2,4(r3)
     ca4:	81400217 	ldw	r5,8(r16)
     ca8:	9009883a 	mov	r4,r18
     cac:	10800054 	ori	r2,r2,1
     cb0:	18800115 	stw	r2,4(r3)
     cb4:	31400215 	stw	r5,8(r6)
     cb8:	29800315 	stw	r6,12(r5)
     cbc:	000dad40 	call	dad4 <__malloc_unlock>
     cc0:	80c00204 	addi	r3,r16,8
     cc4:	003faa06 	br	b70 <_malloc_r+0x50>
     cc8:	00800104 	movi	r2,4
     ccc:	10c0052e 	bgeu	r2,r3,ce4 <_malloc_r+0x1c4>
     cd0:	00800504 	movi	r2,20
     cd4:	10c07836 	bltu	r2,r3,eb8 <_malloc_r+0x398>
     cd8:	198016c4 	addi	r6,r3,91
     cdc:	300490fa 	slli	r2,r6,3
     ce0:	003fbc06 	br	bd4 <_malloc_r+0xb4>
     ce4:	8804d1ba 	srli	r2,r17,6
     ce8:	11800e04 	addi	r6,r2,56
     cec:	300490fa 	slli	r2,r6,3
     cf0:	003fb806 	br	bd4 <_malloc_r+0xb4>
     cf4:	00807fc4 	movi	r2,511
     cf8:	1140bb36 	bltu	r2,r5,fe8 <_malloc_r+0x4c8>
     cfc:	2806d0fa 	srli	r3,r5,3
     d00:	573ffe04 	addi	fp,r10,-8
     d04:	00800044 	movi	r2,1
     d08:	180890fa 	slli	r4,r3,3
     d0c:	1807d0ba 	srai	r3,r3,2
     d10:	e1c00117 	ldw	r7,4(fp)
     d14:	5909883a 	add	r4,r11,r4
     d18:	21400217 	ldw	r5,8(r4)
     d1c:	10c4983a 	sll	r2,r2,r3
     d20:	81000315 	stw	r4,12(r16)
     d24:	81400215 	stw	r5,8(r16)
     d28:	388eb03a 	or	r7,r7,r2
     d2c:	2c000315 	stw	r16,12(r5)
     d30:	24000215 	stw	r16,8(r4)
     d34:	e1c00115 	stw	r7,4(fp)
     d38:	4807883a 	mov	r3,r9
     d3c:	4800cd16 	blt	r9,zero,1074 <_malloc_r+0x554>
     d40:	1807d0ba 	srai	r3,r3,2
     d44:	00800044 	movi	r2,1
     d48:	10c8983a 	sll	r4,r2,r3
     d4c:	39004436 	bltu	r7,r4,e60 <_malloc_r+0x340>
     d50:	21c4703a 	and	r2,r4,r7
     d54:	10000a1e 	bne	r2,zero,d80 <_malloc_r+0x260>
     d58:	2109883a 	add	r4,r4,r4
     d5c:	00bfff04 	movi	r2,-4
     d60:	4884703a 	and	r2,r9,r2
     d64:	3906703a 	and	r3,r7,r4
     d68:	12400104 	addi	r9,r2,4
     d6c:	1800041e 	bne	r3,zero,d80 <_malloc_r+0x260>
     d70:	2109883a 	add	r4,r4,r4
     d74:	3904703a 	and	r2,r7,r4
     d78:	4a400104 	addi	r9,r9,4
     d7c:	103ffc26 	beq	r2,zero,d70 <_malloc_r+0x250>
     d80:	480490fa 	slli	r2,r9,3
     d84:	4819883a 	mov	r12,r9
     d88:	023fff04 	movi	r8,-4
     d8c:	589b883a 	add	r13,r11,r2
     d90:	6807883a 	mov	r3,r13
     d94:	014003c4 	movi	r5,15
     d98:	1c000317 	ldw	r16,12(r3)
     d9c:	1c00041e 	bne	r3,r16,db0 <_malloc_r+0x290>
     da0:	0000a706 	br	1040 <_malloc_r+0x520>
     da4:	3000ab0e 	bge	r6,zero,1054 <_malloc_r+0x534>
     da8:	84000317 	ldw	r16,12(r16)
     dac:	1c00a426 	beq	r3,r16,1040 <_malloc_r+0x520>
     db0:	80800117 	ldw	r2,4(r16)
     db4:	1204703a 	and	r2,r2,r8
     db8:	144dc83a 	sub	r6,r2,r17
     dbc:	29bff90e 	bge	r5,r6,da4 <_malloc_r+0x284>
     dc0:	81000317 	ldw	r4,12(r16)
     dc4:	80c00217 	ldw	r3,8(r16)
     dc8:	89400054 	ori	r5,r17,1
     dcc:	8445883a 	add	r2,r16,r17
     dd0:	20c00215 	stw	r3,8(r4)
     dd4:	19000315 	stw	r4,12(r3)
     dd8:	81400115 	stw	r5,4(r16)
     ddc:	1187883a 	add	r3,r2,r6
     de0:	31000054 	ori	r4,r6,1
     de4:	50800315 	stw	r2,12(r10)
     de8:	50800215 	stw	r2,8(r10)
     dec:	19800015 	stw	r6,0(r3)
     df0:	11000115 	stw	r4,4(r2)
     df4:	12800215 	stw	r10,8(r2)
     df8:	12800315 	stw	r10,12(r2)
     dfc:	9009883a 	mov	r4,r18
     e00:	000dad40 	call	dad4 <__malloc_unlock>
     e04:	80c00204 	addi	r3,r16,8
     e08:	003f5906 	br	b70 <_malloc_r+0x50>
     e0c:	8109883a 	add	r4,r16,r4
     e10:	20800117 	ldw	r2,4(r4)
     e14:	80c00217 	ldw	r3,8(r16)
     e18:	81400317 	ldw	r5,12(r16)
     e1c:	10800054 	ori	r2,r2,1
     e20:	20800115 	stw	r2,4(r4)
     e24:	28c00215 	stw	r3,8(r5)
     e28:	19400315 	stw	r5,12(r3)
     e2c:	9009883a 	mov	r4,r18
     e30:	000dad40 	call	dad4 <__malloc_unlock>
     e34:	80c00204 	addi	r3,r16,8
     e38:	003f4d06 	br	b70 <_malloc_r+0x50>
     e3c:	80800204 	addi	r2,r16,8
     e40:	14000317 	ldw	r16,12(r2)
     e44:	143f911e 	bne	r2,r16,c8c <_malloc_r+0x16c>
     e48:	1a400084 	addi	r9,r3,2
     e4c:	003f7306 	br	c1c <_malloc_r+0xfc>
     e50:	88c00054 	ori	r3,r17,1
     e54:	8445883a 	add	r2,r16,r17
     e58:	80c00115 	stw	r3,4(r16)
     e5c:	003fdf06 	br	ddc <_malloc_r+0x2bc>
     e60:	e4000217 	ldw	r16,8(fp)
     e64:	00bfff04 	movi	r2,-4
     e68:	80c00117 	ldw	r3,4(r16)
     e6c:	802d883a 	mov	r22,r16
     e70:	18aa703a 	and	r21,r3,r2
     e74:	ac401636 	bltu	r21,r17,ed0 <_malloc_r+0x3b0>
     e78:	ac49c83a 	sub	r4,r21,r17
     e7c:	008003c4 	movi	r2,15
     e80:	1100130e 	bge	r2,r4,ed0 <_malloc_r+0x3b0>
     e84:	88800054 	ori	r2,r17,1
     e88:	8447883a 	add	r3,r16,r17
     e8c:	80800115 	stw	r2,4(r16)
     e90:	20800054 	ori	r2,r4,1
     e94:	18800115 	stw	r2,4(r3)
     e98:	e0c00215 	stw	r3,8(fp)
     e9c:	9009883a 	mov	r4,r18
     ea0:	000dad40 	call	dad4 <__malloc_unlock>
     ea4:	80c00204 	addi	r3,r16,8
     ea8:	003f3106 	br	b70 <_malloc_r+0x50>
     eac:	39c00117 	ldw	r7,4(r7)
     eb0:	573ffe04 	addi	fp,r10,-8
     eb4:	003fa006 	br	d38 <_malloc_r+0x218>
     eb8:	00801504 	movi	r2,84
     ebc:	10c06736 	bltu	r2,r3,105c <_malloc_r+0x53c>
     ec0:	8804d33a 	srli	r2,r17,12
     ec4:	11801b84 	addi	r6,r2,110
     ec8:	300490fa 	slli	r2,r6,3
     ecc:	003f4106 	br	bd4 <_malloc_r+0xb4>
     ed0:	d0a6d417 	ldw	r2,-25776(gp)
     ed4:	d0e00217 	ldw	r3,-32760(gp)
     ed8:	053fffc4 	movi	r20,-1
     edc:	10800404 	addi	r2,r2,16
     ee0:	88a7883a 	add	r19,r17,r2
     ee4:	1d000326 	beq	r3,r20,ef4 <_malloc_r+0x3d4>
     ee8:	98c3ffc4 	addi	r3,r19,4095
     eec:	00bc0004 	movi	r2,-4096
     ef0:	18a6703a 	and	r19,r3,r2
     ef4:	9009883a 	mov	r4,r18
     ef8:	980b883a 	mov	r5,r19
     efc:	00013b00 	call	13b0 <_sbrk_r>
     f00:	1009883a 	mov	r4,r2
     f04:	15000426 	beq	r2,r20,f18 <_malloc_r+0x3f8>
     f08:	854b883a 	add	r5,r16,r21
     f0c:	1029883a 	mov	r20,r2
     f10:	11405a2e 	bgeu	r2,r5,107c <_malloc_r+0x55c>
     f14:	87000c26 	beq	r16,fp,f48 <_malloc_r+0x428>
     f18:	e4000217 	ldw	r16,8(fp)
     f1c:	80c00117 	ldw	r3,4(r16)
     f20:	00bfff04 	movi	r2,-4
     f24:	1884703a 	and	r2,r3,r2
     f28:	14400336 	bltu	r2,r17,f38 <_malloc_r+0x418>
     f2c:	1449c83a 	sub	r4,r2,r17
     f30:	008003c4 	movi	r2,15
     f34:	113fd316 	blt	r2,r4,e84 <_malloc_r+0x364>
     f38:	9009883a 	mov	r4,r18
     f3c:	000dad40 	call	dad4 <__malloc_unlock>
     f40:	0007883a 	mov	r3,zero
     f44:	003f0a06 	br	b70 <_malloc_r+0x50>
     f48:	05c00074 	movhi	r23,1
     f4c:	bdca3804 	addi	r23,r23,10464
     f50:	b8800017 	ldw	r2,0(r23)
     f54:	988d883a 	add	r6,r19,r2
     f58:	b9800015 	stw	r6,0(r23)
     f5c:	d0e00217 	ldw	r3,-32760(gp)
     f60:	00bfffc4 	movi	r2,-1
     f64:	18808e26 	beq	r3,r2,11a0 <_malloc_r+0x680>
     f68:	2145c83a 	sub	r2,r4,r5
     f6c:	3085883a 	add	r2,r6,r2
     f70:	b8800015 	stw	r2,0(r23)
     f74:	20c001cc 	andi	r3,r4,7
     f78:	18005f1e 	bne	r3,zero,10f8 <_malloc_r+0x5d8>
     f7c:	000b883a 	mov	r5,zero
     f80:	a4c5883a 	add	r2,r20,r19
     f84:	1083ffcc 	andi	r2,r2,4095
     f88:	00c40004 	movi	r3,4096
     f8c:	1887c83a 	sub	r3,r3,r2
     f90:	28e7883a 	add	r19,r5,r3
     f94:	9009883a 	mov	r4,r18
     f98:	980b883a 	mov	r5,r19
     f9c:	00013b00 	call	13b0 <_sbrk_r>
     fa0:	1007883a 	mov	r3,r2
     fa4:	00bfffc4 	movi	r2,-1
     fa8:	18807a26 	beq	r3,r2,1194 <_malloc_r+0x674>
     fac:	1d05c83a 	sub	r2,r3,r20
     fb0:	9885883a 	add	r2,r19,r2
     fb4:	10c00054 	ori	r3,r2,1
     fb8:	b8800017 	ldw	r2,0(r23)
     fbc:	a021883a 	mov	r16,r20
     fc0:	a0c00115 	stw	r3,4(r20)
     fc4:	9885883a 	add	r2,r19,r2
     fc8:	b8800015 	stw	r2,0(r23)
     fcc:	e5000215 	stw	r20,8(fp)
     fd0:	b7003626 	beq	r22,fp,10ac <_malloc_r+0x58c>
     fd4:	018003c4 	movi	r6,15
     fd8:	35404b36 	bltu	r6,r21,1108 <_malloc_r+0x5e8>
     fdc:	00800044 	movi	r2,1
     fe0:	a0800115 	stw	r2,4(r20)
     fe4:	003fcd06 	br	f1c <_malloc_r+0x3fc>
     fe8:	2808d27a 	srli	r4,r5,9
     fec:	2000371e 	bne	r4,zero,10cc <_malloc_r+0x5ac>
     ff0:	2808d0fa 	srli	r4,r5,3
     ff4:	200690fa 	slli	r3,r4,3
     ff8:	1ad1883a 	add	r8,r3,r11
     ffc:	41800217 	ldw	r6,8(r8)
    1000:	41805b26 	beq	r8,r6,1170 <_malloc_r+0x650>
    1004:	30800117 	ldw	r2,4(r6)
    1008:	00ffff04 	movi	r3,-4
    100c:	10c4703a 	and	r2,r2,r3
    1010:	2880022e 	bgeu	r5,r2,101c <_malloc_r+0x4fc>
    1014:	31800217 	ldw	r6,8(r6)
    1018:	41bffa1e 	bne	r8,r6,1004 <_malloc_r+0x4e4>
    101c:	32000317 	ldw	r8,12(r6)
    1020:	39c00117 	ldw	r7,4(r7)
    1024:	82000315 	stw	r8,12(r16)
    1028:	81800215 	stw	r6,8(r16)
    102c:	07000074 	movhi	fp,1
    1030:	e73ca504 	addi	fp,fp,-3436
    1034:	34000315 	stw	r16,12(r6)
    1038:	44000215 	stw	r16,8(r8)
    103c:	003f3e06 	br	d38 <_malloc_r+0x218>
    1040:	63000044 	addi	r12,r12,1
    1044:	608000cc 	andi	r2,r12,3
    1048:	10005d26 	beq	r2,zero,11c0 <_malloc_r+0x6a0>
    104c:	18c00204 	addi	r3,r3,8
    1050:	003f5106 	br	d98 <_malloc_r+0x278>
    1054:	8089883a 	add	r4,r16,r2
    1058:	003f6d06 	br	e10 <_malloc_r+0x2f0>
    105c:	00805504 	movi	r2,340
    1060:	10c02036 	bltu	r2,r3,10e4 <_malloc_r+0x5c4>
    1064:	8804d3fa 	srli	r2,r17,15
    1068:	11801dc4 	addi	r6,r2,119
    106c:	300490fa 	slli	r2,r6,3
    1070:	003ed806 	br	bd4 <_malloc_r+0xb4>
    1074:	48c000c4 	addi	r3,r9,3
    1078:	003f3106 	br	d40 <_malloc_r+0x220>
    107c:	05c00074 	movhi	r23,1
    1080:	bdca3804 	addi	r23,r23,10464
    1084:	b8800017 	ldw	r2,0(r23)
    1088:	988d883a 	add	r6,r19,r2
    108c:	b9800015 	stw	r6,0(r23)
    1090:	293fb21e 	bne	r5,r4,f5c <_malloc_r+0x43c>
    1094:	2083ffcc 	andi	r2,r4,4095
    1098:	103fb01e 	bne	r2,zero,f5c <_malloc_r+0x43c>
    109c:	e4000217 	ldw	r16,8(fp)
    10a0:	9d45883a 	add	r2,r19,r21
    10a4:	10800054 	ori	r2,r2,1
    10a8:	80800115 	stw	r2,4(r16)
    10ac:	b8c00017 	ldw	r3,0(r23)
    10b0:	d0a6d517 	ldw	r2,-25772(gp)
    10b4:	10c0012e 	bgeu	r2,r3,10bc <_malloc_r+0x59c>
    10b8:	d0e6d515 	stw	r3,-25772(gp)
    10bc:	d0a6d617 	ldw	r2,-25768(gp)
    10c0:	10ff962e 	bgeu	r2,r3,f1c <_malloc_r+0x3fc>
    10c4:	d0e6d615 	stw	r3,-25768(gp)
    10c8:	003f9406 	br	f1c <_malloc_r+0x3fc>
    10cc:	00800104 	movi	r2,4
    10d0:	11001e36 	bltu	r2,r4,114c <_malloc_r+0x62c>
    10d4:	2804d1ba 	srli	r2,r5,6
    10d8:	11000e04 	addi	r4,r2,56
    10dc:	200690fa 	slli	r3,r4,3
    10e0:	003fc506 	br	ff8 <_malloc_r+0x4d8>
    10e4:	00815504 	movi	r2,1364
    10e8:	10c01d2e 	bgeu	r2,r3,1160 <_malloc_r+0x640>
    10ec:	01801f84 	movi	r6,126
    10f0:	0080fc04 	movi	r2,1008
    10f4:	003eb706 	br	bd4 <_malloc_r+0xb4>
    10f8:	00800204 	movi	r2,8
    10fc:	10cbc83a 	sub	r5,r2,r3
    1100:	2169883a 	add	r20,r4,r5
    1104:	003f9e06 	br	f80 <_malloc_r+0x460>
    1108:	00bffe04 	movi	r2,-8
    110c:	a93ffd04 	addi	r4,r21,-12
    1110:	2088703a 	and	r4,r4,r2
    1114:	b10b883a 	add	r5,r22,r4
    1118:	00c00144 	movi	r3,5
    111c:	28c00215 	stw	r3,8(r5)
    1120:	28c00115 	stw	r3,4(r5)
    1124:	b0800117 	ldw	r2,4(r22)
    1128:	1080004c 	andi	r2,r2,1
    112c:	2084b03a 	or	r2,r4,r2
    1130:	b0800115 	stw	r2,4(r22)
    1134:	313fdd2e 	bgeu	r6,r4,10ac <_malloc_r+0x58c>
    1138:	b1400204 	addi	r5,r22,8
    113c:	9009883a 	mov	r4,r18
    1140:	00072400 	call	7240 <_free_r>
    1144:	e4000217 	ldw	r16,8(fp)
    1148:	003fd806 	br	10ac <_malloc_r+0x58c>
    114c:	00800504 	movi	r2,20
    1150:	11001536 	bltu	r2,r4,11a8 <_malloc_r+0x688>
    1154:	210016c4 	addi	r4,r4,91
    1158:	200690fa 	slli	r3,r4,3
    115c:	003fa606 	br	ff8 <_malloc_r+0x4d8>
    1160:	8804d4ba 	srli	r2,r17,18
    1164:	11801f04 	addi	r6,r2,124
    1168:	300490fa 	slli	r2,r6,3
    116c:	003e9906 	br	bd4 <_malloc_r+0xb4>
    1170:	2009d0ba 	srai	r4,r4,2
    1174:	01400074 	movhi	r5,1
    1178:	297ca504 	addi	r5,r5,-3436
    117c:	00c00044 	movi	r3,1
    1180:	28800117 	ldw	r2,4(r5)
    1184:	1906983a 	sll	r3,r3,r4
    1188:	10c4b03a 	or	r2,r2,r3
    118c:	28800115 	stw	r2,4(r5)
    1190:	003fa306 	br	1020 <_malloc_r+0x500>
    1194:	0027883a 	mov	r19,zero
    1198:	00c00044 	movi	r3,1
    119c:	003f8606 	br	fb8 <_malloc_r+0x498>
    11a0:	d1200215 	stw	r4,-32760(gp)
    11a4:	003f7306 	br	f74 <_malloc_r+0x454>
    11a8:	00801504 	movi	r2,84
    11ac:	11001936 	bltu	r2,r4,1214 <_malloc_r+0x6f4>
    11b0:	2804d33a 	srli	r2,r5,12
    11b4:	11001b84 	addi	r4,r2,110
    11b8:	200690fa 	slli	r3,r4,3
    11bc:	003f8e06 	br	ff8 <_malloc_r+0x4d8>
    11c0:	480b883a 	mov	r5,r9
    11c4:	6807883a 	mov	r3,r13
    11c8:	288000cc 	andi	r2,r5,3
    11cc:	18fffe04 	addi	r3,r3,-8
    11d0:	297fffc4 	addi	r5,r5,-1
    11d4:	10001526 	beq	r2,zero,122c <_malloc_r+0x70c>
    11d8:	18800217 	ldw	r2,8(r3)
    11dc:	10fffa26 	beq	r2,r3,11c8 <_malloc_r+0x6a8>
    11e0:	2109883a 	add	r4,r4,r4
    11e4:	393f1e36 	bltu	r7,r4,e60 <_malloc_r+0x340>
    11e8:	203f1d26 	beq	r4,zero,e60 <_malloc_r+0x340>
    11ec:	21c4703a 	and	r2,r4,r7
    11f0:	10000226 	beq	r2,zero,11fc <_malloc_r+0x6dc>
    11f4:	6013883a 	mov	r9,r12
    11f8:	003ee106 	br	d80 <_malloc_r+0x260>
    11fc:	2109883a 	add	r4,r4,r4
    1200:	3904703a 	and	r2,r7,r4
    1204:	63000104 	addi	r12,r12,4
    1208:	103ffc26 	beq	r2,zero,11fc <_malloc_r+0x6dc>
    120c:	6013883a 	mov	r9,r12
    1210:	003edb06 	br	d80 <_malloc_r+0x260>
    1214:	00805504 	movi	r2,340
    1218:	11000836 	bltu	r2,r4,123c <_malloc_r+0x71c>
    121c:	2804d3fa 	srli	r2,r5,15
    1220:	11001dc4 	addi	r4,r2,119
    1224:	200690fa 	slli	r3,r4,3
    1228:	003f7306 	br	ff8 <_malloc_r+0x4d8>
    122c:	0104303a 	nor	r2,zero,r4
    1230:	388e703a 	and	r7,r7,r2
    1234:	e1c00115 	stw	r7,4(fp)
    1238:	003fe906 	br	11e0 <_malloc_r+0x6c0>
    123c:	00815504 	movi	r2,1364
    1240:	1100032e 	bgeu	r2,r4,1250 <_malloc_r+0x730>
    1244:	01001f84 	movi	r4,126
    1248:	00c0fc04 	movi	r3,1008
    124c:	003f6a06 	br	ff8 <_malloc_r+0x4d8>
    1250:	2804d4ba 	srli	r2,r5,18
    1254:	11001f04 	addi	r4,r2,124
    1258:	200690fa 	slli	r3,r4,3
    125c:	003f6606 	br	ff8 <_malloc_r+0x4d8>

00001260 <printf>:
    1260:	defffb04 	addi	sp,sp,-20
    1264:	dfc00115 	stw	ra,4(sp)
    1268:	d9400215 	stw	r5,8(sp)
    126c:	d9800315 	stw	r6,12(sp)
    1270:	d9c00415 	stw	r7,16(sp)
    1274:	00800074 	movhi	r2,1
    1278:	10835a04 	addi	r2,r2,3432
    127c:	10c00017 	ldw	r3,0(r2)
    1280:	200b883a 	mov	r5,r4
    1284:	d8800204 	addi	r2,sp,8
    1288:	19000217 	ldw	r4,8(r3)
    128c:	100d883a 	mov	r6,r2
    1290:	d8800015 	stw	r2,0(sp)
    1294:	00052980 	call	5298 <__vfprintf_internal>
    1298:	dfc00117 	ldw	ra,4(sp)
    129c:	dec00504 	addi	sp,sp,20
    12a0:	f800283a 	ret

000012a4 <_printf_r>:
    12a4:	defffc04 	addi	sp,sp,-16
    12a8:	dfc00115 	stw	ra,4(sp)
    12ac:	d9800215 	stw	r6,8(sp)
    12b0:	d9c00315 	stw	r7,12(sp)
    12b4:	280d883a 	mov	r6,r5
    12b8:	21400217 	ldw	r5,8(r4)
    12bc:	d8c00204 	addi	r3,sp,8
    12c0:	180f883a 	mov	r7,r3
    12c4:	d8c00015 	stw	r3,0(sp)
    12c8:	00033d40 	call	33d4 <___vfprintf_internal_r>
    12cc:	dfc00117 	ldw	ra,4(sp)
    12d0:	dec00404 	addi	sp,sp,16
    12d4:	f800283a 	ret

000012d8 <putchar>:
    12d8:	00800074 	movhi	r2,1
    12dc:	10835a04 	addi	r2,r2,3432
    12e0:	11800017 	ldw	r6,0(r2)
    12e4:	200b883a 	mov	r5,r4
    12e8:	3009883a 	mov	r4,r6
    12ec:	31800217 	ldw	r6,8(r6)
    12f0:	0009e941 	jmpi	9e94 <_putc_r>

000012f4 <_putchar_r>:
    12f4:	21800217 	ldw	r6,8(r4)
    12f8:	0009e941 	jmpi	9e94 <_putc_r>

000012fc <_puts_r>:
    12fc:	defff604 	addi	sp,sp,-40
    1300:	dc400715 	stw	r17,28(sp)
    1304:	2023883a 	mov	r17,r4
    1308:	2809883a 	mov	r4,r5
    130c:	dfc00915 	stw	ra,36(sp)
    1310:	dcc00815 	stw	r19,32(sp)
    1314:	2827883a 	mov	r19,r5
    1318:	00014200 	call	1420 <strlen>
    131c:	89400217 	ldw	r5,8(r17)
    1320:	00c00074 	movhi	r3,1
    1324:	18fbb804 	addi	r3,r3,-4384
    1328:	01c00044 	movi	r7,1
    132c:	12000044 	addi	r8,r2,1
    1330:	d8c00515 	stw	r3,20(sp)
    1334:	d9c00615 	stw	r7,24(sp)
    1338:	d8c00304 	addi	r3,sp,12
    133c:	01c00084 	movi	r7,2
    1340:	8809883a 	mov	r4,r17
    1344:	d80d883a 	mov	r6,sp
    1348:	d8c00015 	stw	r3,0(sp)
    134c:	dcc00315 	stw	r19,12(sp)
    1350:	da000215 	stw	r8,8(sp)
    1354:	d9c00115 	stw	r7,4(sp)
    1358:	d8800415 	stw	r2,16(sp)
    135c:	00075540 	call	7554 <__sfvwrite_r>
    1360:	00ffffc4 	movi	r3,-1
    1364:	10000626 	beq	r2,zero,1380 <_puts_r+0x84>
    1368:	1805883a 	mov	r2,r3
    136c:	dfc00917 	ldw	ra,36(sp)
    1370:	dcc00817 	ldw	r19,32(sp)
    1374:	dc400717 	ldw	r17,28(sp)
    1378:	dec00a04 	addi	sp,sp,40
    137c:	f800283a 	ret
    1380:	00c00284 	movi	r3,10
    1384:	1805883a 	mov	r2,r3
    1388:	dfc00917 	ldw	ra,36(sp)
    138c:	dcc00817 	ldw	r19,32(sp)
    1390:	dc400717 	ldw	r17,28(sp)
    1394:	dec00a04 	addi	sp,sp,40
    1398:	f800283a 	ret

0000139c <puts>:
    139c:	00800074 	movhi	r2,1
    13a0:	10835a04 	addi	r2,r2,3432
    13a4:	200b883a 	mov	r5,r4
    13a8:	11000017 	ldw	r4,0(r2)
    13ac:	00012fc1 	jmpi	12fc <_puts_r>

000013b0 <_sbrk_r>:
    13b0:	defffd04 	addi	sp,sp,-12
    13b4:	dc000015 	stw	r16,0(sp)
    13b8:	04000074 	movhi	r16,1
    13bc:	840a2e04 	addi	r16,r16,10424
    13c0:	dc400115 	stw	r17,4(sp)
    13c4:	80000015 	stw	zero,0(r16)
    13c8:	2023883a 	mov	r17,r4
    13cc:	2809883a 	mov	r4,r5
    13d0:	dfc00215 	stw	ra,8(sp)
    13d4:	000dc540 	call	dc54 <sbrk>
    13d8:	1007883a 	mov	r3,r2
    13dc:	00bfffc4 	movi	r2,-1
    13e0:	18800626 	beq	r3,r2,13fc <_sbrk_r+0x4c>
    13e4:	1805883a 	mov	r2,r3
    13e8:	dfc00217 	ldw	ra,8(sp)
    13ec:	dc400117 	ldw	r17,4(sp)
    13f0:	dc000017 	ldw	r16,0(sp)
    13f4:	dec00304 	addi	sp,sp,12
    13f8:	f800283a 	ret
    13fc:	80800017 	ldw	r2,0(r16)
    1400:	103ff826 	beq	r2,zero,13e4 <_sbrk_r+0x34>
    1404:	88800015 	stw	r2,0(r17)
    1408:	1805883a 	mov	r2,r3
    140c:	dfc00217 	ldw	ra,8(sp)
    1410:	dc400117 	ldw	r17,4(sp)
    1414:	dc000017 	ldw	r16,0(sp)
    1418:	dec00304 	addi	sp,sp,12
    141c:	f800283a 	ret

00001420 <strlen>:
    1420:	208000cc 	andi	r2,r4,3
    1424:	2011883a 	mov	r8,r4
    1428:	1000161e 	bne	r2,zero,1484 <strlen+0x64>
    142c:	20c00017 	ldw	r3,0(r4)
    1430:	017fbff4 	movhi	r5,65279
    1434:	297fbfc4 	addi	r5,r5,-257
    1438:	01e02074 	movhi	r7,32897
    143c:	39e02004 	addi	r7,r7,-32640
    1440:	1945883a 	add	r2,r3,r5
    1444:	11c4703a 	and	r2,r2,r7
    1448:	00c6303a 	nor	r3,zero,r3
    144c:	1886703a 	and	r3,r3,r2
    1450:	18000c1e 	bne	r3,zero,1484 <strlen+0x64>
    1454:	280d883a 	mov	r6,r5
    1458:	380b883a 	mov	r5,r7
    145c:	21000104 	addi	r4,r4,4
    1460:	20800017 	ldw	r2,0(r4)
    1464:	1187883a 	add	r3,r2,r6
    1468:	1946703a 	and	r3,r3,r5
    146c:	0084303a 	nor	r2,zero,r2
    1470:	10c4703a 	and	r2,r2,r3
    1474:	103ff926 	beq	r2,zero,145c <strlen+0x3c>
    1478:	20800007 	ldb	r2,0(r4)
    147c:	10000326 	beq	r2,zero,148c <strlen+0x6c>
    1480:	21000044 	addi	r4,r4,1
    1484:	20800007 	ldb	r2,0(r4)
    1488:	103ffd1e 	bne	r2,zero,1480 <strlen+0x60>
    148c:	2205c83a 	sub	r2,r4,r8
    1490:	f800283a 	ret

00001494 <critical_factorization>:
    1494:	03000044 	movi	r12,1
    1498:	6013883a 	mov	r9,r12
    149c:	037fffc4 	movi	r13,-1
    14a0:	0011883a 	mov	r8,zero
    14a4:	6905883a 	add	r2,r13,r4
    14a8:	424f883a 	add	r7,r8,r9
    14ac:	1245883a 	add	r2,r2,r9
    14b0:	21c7883a 	add	r3,r4,r7
    14b4:	39400b2e 	bgeu	r7,r5,14e4 <critical_factorization+0x50>
    14b8:	18c00003 	ldbu	r3,0(r3)
    14bc:	10800003 	ldbu	r2,0(r2)
    14c0:	1880232e 	bgeu	r3,r2,1550 <critical_factorization+0xbc>
    14c4:	3b59c83a 	sub	r12,r7,r13
    14c8:	02400044 	movi	r9,1
    14cc:	3811883a 	mov	r8,r7
    14d0:	6905883a 	add	r2,r13,r4
    14d4:	424f883a 	add	r7,r8,r9
    14d8:	1245883a 	add	r2,r2,r9
    14dc:	21c7883a 	add	r3,r4,r7
    14e0:	397ff536 	bltu	r7,r5,14b8 <critical_factorization+0x24>
    14e4:	02c00044 	movi	r11,1
    14e8:	5815883a 	mov	r10,r11
    14ec:	027fffc4 	movi	r9,-1
    14f0:	0011883a 	mov	r8,zero
    14f4:	4905883a 	add	r2,r9,r4
    14f8:	428f883a 	add	r7,r8,r10
    14fc:	33000015 	stw	r12,0(r6)
    1500:	1285883a 	add	r2,r2,r10
    1504:	3907883a 	add	r3,r7,r4
    1508:	39400b2e 	bgeu	r7,r5,1538 <critical_factorization+0xa4>
    150c:	18c00003 	ldbu	r3,0(r3)
    1510:	10800003 	ldbu	r2,0(r2)
    1514:	10c01a2e 	bgeu	r2,r3,1580 <critical_factorization+0xec>
    1518:	3a57c83a 	sub	r11,r7,r9
    151c:	02800044 	movi	r10,1
    1520:	3811883a 	mov	r8,r7
    1524:	4905883a 	add	r2,r9,r4
    1528:	428f883a 	add	r7,r8,r10
    152c:	1285883a 	add	r2,r2,r10
    1530:	3907883a 	add	r3,r7,r4
    1534:	397ff536 	bltu	r7,r5,150c <critical_factorization+0x78>
    1538:	48c00044 	addi	r3,r9,1
    153c:	68800044 	addi	r2,r13,1
    1540:	18800236 	bltu	r3,r2,154c <critical_factorization+0xb8>
    1544:	32c00015 	stw	r11,0(r6)
    1548:	1805883a 	mov	r2,r3
    154c:	f800283a 	ret
    1550:	18800626 	beq	r3,r2,156c <critical_factorization+0xd8>
    1554:	03000044 	movi	r12,1
    1558:	430f883a 	add	r7,r8,r12
    155c:	401b883a 	mov	r13,r8
    1560:	6013883a 	mov	r9,r12
    1564:	3811883a 	mov	r8,r7
    1568:	003fd906 	br	14d0 <critical_factorization+0x3c>
    156c:	4b001026 	beq	r9,r12,15b0 <critical_factorization+0x11c>
    1570:	400f883a 	mov	r7,r8
    1574:	4a400044 	addi	r9,r9,1
    1578:	3811883a 	mov	r8,r7
    157c:	003fd406 	br	14d0 <critical_factorization+0x3c>
    1580:	18800626 	beq	r3,r2,159c <critical_factorization+0x108>
    1584:	02c00044 	movi	r11,1
    1588:	42cf883a 	add	r7,r8,r11
    158c:	4013883a 	mov	r9,r8
    1590:	5815883a 	mov	r10,r11
    1594:	3811883a 	mov	r8,r7
    1598:	003fe206 	br	1524 <critical_factorization+0x90>
    159c:	52c00726 	beq	r10,r11,15bc <critical_factorization+0x128>
    15a0:	400f883a 	mov	r7,r8
    15a4:	52800044 	addi	r10,r10,1
    15a8:	3811883a 	mov	r8,r7
    15ac:	003fdd06 	br	1524 <critical_factorization+0x90>
    15b0:	02400044 	movi	r9,1
    15b4:	3811883a 	mov	r8,r7
    15b8:	003fc506 	br	14d0 <critical_factorization+0x3c>
    15bc:	02800044 	movi	r10,1
    15c0:	3811883a 	mov	r8,r7
    15c4:	003fd706 	br	1524 <critical_factorization+0x90>

000015c8 <strstr>:
    15c8:	defef404 	addi	sp,sp,-1072
    15cc:	dd810815 	stw	r22,1056(sp)
    15d0:	dc410315 	stw	r17,1036(sp)
    15d4:	dfc10b15 	stw	ra,1068(sp)
    15d8:	df010a15 	stw	fp,1064(sp)
    15dc:	ddc10915 	stw	r23,1060(sp)
    15e0:	dd410715 	stw	r21,1052(sp)
    15e4:	dd010615 	stw	r20,1048(sp)
    15e8:	dcc10515 	stw	r19,1044(sp)
    15ec:	dc810415 	stw	r18,1040(sp)
    15f0:	dc010215 	stw	r16,1032(sp)
    15f4:	2023883a 	mov	r17,r4
    15f8:	21000007 	ldb	r4,0(r4)
    15fc:	282d883a 	mov	r22,r5
    1600:	2000d026 	beq	r4,zero,1944 <strstr+0x37c>
    1604:	28800007 	ldb	r2,0(r5)
    1608:	10001026 	beq	r2,zero,164c <strstr+0x84>
    160c:	2821883a 	mov	r16,r5
    1610:	8807883a 	mov	r3,r17
    1614:	01400044 	movi	r5,1
    1618:	00000206 	br	1624 <strstr+0x5c>
    161c:	80800007 	ldb	r2,0(r16)
    1620:	10000826 	beq	r2,zero,1644 <strstr+0x7c>
    1624:	18c00044 	addi	r3,r3,1
    1628:	2085003a 	cmpeq	r2,r4,r2
    162c:	19000007 	ldb	r4,0(r3)
    1630:	288a703a 	and	r5,r5,r2
    1634:	84000044 	addi	r16,r16,1
    1638:	203ff81e 	bne	r4,zero,161c <strstr+0x54>
    163c:	80800007 	ldb	r2,0(r16)
    1640:	1000611e 	bne	r2,zero,17c8 <strstr+0x200>
    1644:	2805003a 	cmpeq	r2,r5,zero
    1648:	10000e1e 	bne	r2,zero,1684 <strstr+0xbc>
    164c:	8825883a 	mov	r18,r17
    1650:	9005883a 	mov	r2,r18
    1654:	dfc10b17 	ldw	ra,1068(sp)
    1658:	df010a17 	ldw	fp,1064(sp)
    165c:	ddc10917 	ldw	r23,1060(sp)
    1660:	dd810817 	ldw	r22,1056(sp)
    1664:	dd410717 	ldw	r21,1052(sp)
    1668:	dd010617 	ldw	r20,1048(sp)
    166c:	dcc10517 	ldw	r19,1044(sp)
    1670:	dc810417 	ldw	r18,1040(sp)
    1674:	dc410317 	ldw	r17,1036(sp)
    1678:	dc010217 	ldw	r16,1032(sp)
    167c:	dec10c04 	addi	sp,sp,1072
    1680:	f800283a 	ret
    1684:	b1400007 	ldb	r5,0(r22)
    1688:	89000044 	addi	r4,r17,1
    168c:	04c00044 	movi	r19,1
    1690:	000a72c0 	call	a72c <strchr>
    1694:	1025883a 	mov	r18,r2
    1698:	103fed26 	beq	r2,zero,1650 <strstr+0x88>
    169c:	85a1c83a 	sub	r16,r16,r22
    16a0:	84ffeb26 	beq	r16,r19,1650 <strstr+0x88>
    16a4:	8c09883a 	add	r4,r17,r16
    16a8:	2080492e 	bgeu	r4,r2,17d0 <strstr+0x208>
    16ac:	9829883a 	mov	r20,r19
    16b0:	008007c4 	movi	r2,31
    16b4:	14004836 	bltu	r2,r16,17d8 <strstr+0x210>
    16b8:	b009883a 	mov	r4,r22
    16bc:	800b883a 	mov	r5,r16
    16c0:	d80d883a 	mov	r6,sp
    16c4:	00014940 	call	1494 <critical_factorization>
    16c8:	d9400017 	ldw	r5,0(sp)
    16cc:	b009883a 	mov	r4,r22
    16d0:	100d883a 	mov	r6,r2
    16d4:	b14b883a 	add	r5,r22,r5
    16d8:	1027883a 	mov	r19,r2
    16dc:	0008a780 	call	8a78 <memcmp>
    16e0:	1000b526 	beq	r2,zero,19b8 <strstr+0x3f0>
    16e4:	84efc83a 	sub	r23,r16,r19
    16e8:	9805883a 	mov	r2,r19
    16ec:	9dc0012e 	bgeu	r19,r23,16f4 <strstr+0x12c>
    16f0:	b805883a 	mov	r2,r23
    16f4:	10800044 	addi	r2,r2,1
    16f8:	002b883a 	mov	r21,zero
    16fc:	d8800015 	stw	r2,0(sp)
    1700:	ac23883a 	add	r17,r21,r16
    1704:	8d0dc83a 	sub	r6,r17,r20
    1708:	9509883a 	add	r4,r18,r20
    170c:	000b883a 	mov	r5,zero
    1710:	00089940 	call	8994 <memchr>
    1714:	10002c1e 	bne	r2,zero,17c8 <strstr+0x200>
    1718:	88002b26 	beq	r17,zero,17c8 <strstr+0x200>
    171c:	9c00122e 	bgeu	r19,r16,1768 <strstr+0x1a0>
    1720:	acc5883a 	add	r2,r21,r19
    1724:	908b883a 	add	r5,r18,r2
    1728:	b4c9883a 	add	r4,r22,r19
    172c:	20c00003 	ldbu	r3,0(r4)
    1730:	28800003 	ldbu	r2,0(r5)
    1734:	1881331e 	bne	r3,r2,1c04 <strstr+0x63c>
    1738:	200d883a 	mov	r6,r4
    173c:	29400044 	addi	r5,r5,1
    1740:	9809883a 	mov	r4,r19
    1744:	9dcf883a 	add	r7,r19,r23
    1748:	00000506 	br	1760 <strstr+0x198>
    174c:	30c00043 	ldbu	r3,1(r6)
    1750:	28800003 	ldbu	r2,0(r5)
    1754:	31800044 	addi	r6,r6,1
    1758:	29400044 	addi	r5,r5,1
    175c:	10c1161e 	bne	r2,r3,1bb8 <strstr+0x5f0>
    1760:	21000044 	addi	r4,r4,1
    1764:	21fff91e 	bne	r4,r7,174c <strstr+0x184>
    1768:	01ffffc4 	movi	r7,-1
    176c:	99cd883a 	add	r6,r19,r7
    1770:	31c12726 	beq	r6,r7,1c10 <strstr+0x648>
    1774:	ac91883a 	add	r8,r21,r18
    1778:	b187883a 	add	r3,r22,r6
    177c:	4189883a 	add	r4,r8,r6
    1780:	19400003 	ldbu	r5,0(r3)
    1784:	20800003 	ldbu	r2,0(r4)
    1788:	2881141e 	bne	r5,r2,1bdc <strstr+0x614>
    178c:	acc5883a 	add	r2,r21,r19
    1790:	9085883a 	add	r2,r18,r2
    1794:	b4c7883a 	add	r3,r22,r19
    1798:	197fff84 	addi	r5,r3,-2
    179c:	113fff84 	addi	r4,r2,-2
    17a0:	00000506 	br	17b8 <strstr+0x1f0>
    17a4:	28c00003 	ldbu	r3,0(r5)
    17a8:	20800003 	ldbu	r2,0(r4)
    17ac:	297fffc4 	addi	r5,r5,-1
    17b0:	213fffc4 	addi	r4,r4,-1
    17b4:	10c1091e 	bne	r2,r3,1bdc <strstr+0x614>
    17b8:	31bfffc4 	addi	r6,r6,-1
    17bc:	31fff91e 	bne	r6,r7,17a4 <strstr+0x1dc>
    17c0:	4025883a 	mov	r18,r8
    17c4:	003fa206 	br	1650 <strstr+0x88>
    17c8:	0025883a 	mov	r18,zero
    17cc:	003fa006 	br	1650 <strstr+0x88>
    17d0:	20a9c83a 	sub	r20,r4,r2
    17d4:	003fb606 	br	16b0 <strstr+0xe8>
    17d8:	b009883a 	mov	r4,r22
    17dc:	800b883a 	mov	r5,r16
    17e0:	d80d883a 	mov	r6,sp
    17e4:	00014940 	call	1494 <critical_factorization>
    17e8:	102b883a 	mov	r21,r2
    17ec:	d8c10104 	addi	r3,sp,1028
    17f0:	d8800104 	addi	r2,sp,4
    17f4:	14000015 	stw	r16,0(r2)
    17f8:	10800104 	addi	r2,r2,4
    17fc:	10fffd1e 	bne	r2,r3,17f4 <strstr+0x22c>
    1800:	84ffffc4 	addi	r19,r16,-1
    1804:	b009883a 	mov	r4,r22
    1808:	9807883a 	mov	r3,r19
    180c:	017fffc4 	movi	r5,-1
    1810:	20800003 	ldbu	r2,0(r4)
    1814:	21000044 	addi	r4,r4,1
    1818:	1085883a 	add	r2,r2,r2
    181c:	1085883a 	add	r2,r2,r2
    1820:	16c5883a 	add	r2,r2,sp
    1824:	10c00115 	stw	r3,4(r2)
    1828:	18ffffc4 	addi	r3,r3,-1
    182c:	197ff81e 	bne	r3,r5,1810 <strstr+0x248>
    1830:	d9400017 	ldw	r5,0(sp)
    1834:	b009883a 	mov	r4,r22
    1838:	a80d883a 	mov	r6,r21
    183c:	b14b883a 	add	r5,r22,r5
    1840:	0008a780 	call	8a78 <memcmp>
    1844:	10004226 	beq	r2,zero,1950 <strstr+0x388>
    1848:	8547c83a 	sub	r3,r16,r21
    184c:	a805883a 	mov	r2,r21
    1850:	a8c0012e 	bgeu	r21,r3,1858 <strstr+0x290>
    1854:	1805883a 	mov	r2,r3
    1858:	10800044 	addi	r2,r2,1
    185c:	002f883a 	mov	r23,zero
    1860:	b579883a 	add	fp,r22,r21
    1864:	d8800015 	stw	r2,0(sp)
    1868:	bc23883a 	add	r17,r23,r16
    186c:	8d0dc83a 	sub	r6,r17,r20
    1870:	9509883a 	add	r4,r18,r20
    1874:	000b883a 	mov	r5,zero
    1878:	00089940 	call	8994 <memchr>
    187c:	103fd21e 	bne	r2,zero,17c8 <strstr+0x200>
    1880:	883fd126 	beq	r17,zero,17c8 <strstr+0x200>
    1884:	9447883a 	add	r3,r18,r17
    1888:	18bfffc3 	ldbu	r2,-1(r3)
    188c:	1085883a 	add	r2,r2,r2
    1890:	1085883a 	add	r2,r2,r2
    1894:	16c5883a 	add	r2,r2,sp
    1898:	10800117 	ldw	r2,4(r2)
    189c:	1000b61e 	bne	r2,zero,1b78 <strstr+0x5b0>
    18a0:	acc0102e 	bgeu	r21,r19,18e4 <strstr+0x31c>
    18a4:	bd45883a 	add	r2,r23,r21
    18a8:	9089883a 	add	r4,r18,r2
    18ac:	20c00003 	ldbu	r3,0(r4)
    18b0:	e0800003 	ldbu	r2,0(fp)
    18b4:	1880af1e 	bne	r3,r2,1b74 <strstr+0x5ac>
    18b8:	21800044 	addi	r6,r4,1
    18bc:	e00b883a 	mov	r5,fp
    18c0:	a809883a 	mov	r4,r21
    18c4:	00000506 	br	18dc <strstr+0x314>
    18c8:	28c00043 	ldbu	r3,1(r5)
    18cc:	30800003 	ldbu	r2,0(r6)
    18d0:	29400044 	addi	r5,r5,1
    18d4:	31800044 	addi	r6,r6,1
    18d8:	10c0bc1e 	bne	r2,r3,1bcc <strstr+0x604>
    18dc:	21000044 	addi	r4,r4,1
    18e0:	24fff936 	bltu	r4,r19,18c8 <strstr+0x300>
    18e4:	01ffffc4 	movi	r7,-1
    18e8:	a9cd883a 	add	r6,r21,r7
    18ec:	31c0cb26 	beq	r6,r7,1c1c <strstr+0x654>
    18f0:	bc91883a 	add	r8,r23,r18
    18f4:	b187883a 	add	r3,r22,r6
    18f8:	4189883a 	add	r4,r8,r6
    18fc:	19400003 	ldbu	r5,0(r3)
    1900:	20800003 	ldbu	r2,0(r4)
    1904:	2880b91e 	bne	r5,r2,1bec <strstr+0x624>
    1908:	bd45883a 	add	r2,r23,r21
    190c:	9085883a 	add	r2,r18,r2
    1910:	b547883a 	add	r3,r22,r21
    1914:	197fff84 	addi	r5,r3,-2
    1918:	113fff84 	addi	r4,r2,-2
    191c:	00000506 	br	1934 <strstr+0x36c>
    1920:	28c00003 	ldbu	r3,0(r5)
    1924:	20800003 	ldbu	r2,0(r4)
    1928:	297fffc4 	addi	r5,r5,-1
    192c:	213fffc4 	addi	r4,r4,-1
    1930:	10c0ae1e 	bne	r2,r3,1bec <strstr+0x624>
    1934:	31bfffc4 	addi	r6,r6,-1
    1938:	31fff91e 	bne	r6,r7,1920 <strstr+0x358>
    193c:	4025883a 	mov	r18,r8
    1940:	003f4306 	br	1650 <strstr+0x88>
    1944:	2821883a 	mov	r16,r5
    1948:	01400044 	movi	r5,1
    194c:	003f3b06 	br	163c <strstr+0x74>
    1950:	a8bfffc4 	addi	r2,r21,-1
    1954:	002f883a 	mov	r23,zero
    1958:	0039883a 	mov	fp,zero
    195c:	d8810115 	stw	r2,1028(sp)
    1960:	bc23883a 	add	r17,r23,r16
    1964:	8d0dc83a 	sub	r6,r17,r20
    1968:	9509883a 	add	r4,r18,r20
    196c:	000b883a 	mov	r5,zero
    1970:	00089940 	call	8994 <memchr>
    1974:	103f941e 	bne	r2,zero,17c8 <strstr+0x200>
    1978:	883f9326 	beq	r17,zero,17c8 <strstr+0x200>
    197c:	9447883a 	add	r3,r18,r17
    1980:	18bfffc3 	ldbu	r2,-1(r3)
    1984:	1085883a 	add	r2,r2,r2
    1988:	1085883a 	add	r2,r2,r2
    198c:	16c5883a 	add	r2,r2,sp
    1990:	10800117 	ldw	r2,4(r2)
    1994:	10004526 	beq	r2,zero,1aac <strstr+0x4e4>
    1998:	e0000426 	beq	fp,zero,19ac <strstr+0x3e4>
    199c:	d8c00017 	ldw	r3,0(sp)
    19a0:	10c0022e 	bgeu	r2,r3,19ac <strstr+0x3e4>
    19a4:	80c5c83a 	sub	r2,r16,r3
    19a8:	0039883a 	mov	fp,zero
    19ac:	b8af883a 	add	r23,r23,r2
    19b0:	8829883a 	mov	r20,r17
    19b4:	003fea06 	br	1960 <strstr+0x398>
    19b8:	002f883a 	mov	r23,zero
    19bc:	0023883a 	mov	r17,zero
    19c0:	9f3fffc4 	addi	fp,r19,-1
    19c4:	bc2b883a 	add	r21,r23,r16
    19c8:	ad0dc83a 	sub	r6,r21,r20
    19cc:	9509883a 	add	r4,r18,r20
    19d0:	000b883a 	mov	r5,zero
    19d4:	00089940 	call	8994 <memchr>
    19d8:	103f7b1e 	bne	r2,zero,17c8 <strstr+0x200>
    19dc:	a83f7a26 	beq	r21,zero,17c8 <strstr+0x200>
    19e0:	880b883a 	mov	r5,r17
    19e4:	8cc0012e 	bgeu	r17,r19,19ec <strstr+0x424>
    19e8:	980b883a 	mov	r5,r19
    19ec:	2c00112e 	bgeu	r5,r16,1a34 <strstr+0x46c>
    19f0:	b945883a 	add	r2,r23,r5
    19f4:	908f883a 	add	r7,r18,r2
    19f8:	b149883a 	add	r4,r22,r5
    19fc:	20c00003 	ldbu	r3,0(r4)
    1a00:	38800003 	ldbu	r2,0(r7)
    1a04:	1880551e 	bne	r3,r2,1b5c <strstr+0x594>
    1a08:	200d883a 	mov	r6,r4
    1a0c:	39000044 	addi	r4,r7,1
    1a10:	800f883a 	mov	r7,r16
    1a14:	00000506 	br	1a2c <strstr+0x464>
    1a18:	30c00043 	ldbu	r3,1(r6)
    1a1c:	20800003 	ldbu	r2,0(r4)
    1a20:	31800044 	addi	r6,r6,1
    1a24:	21000044 	addi	r4,r4,1
    1a28:	10c04c1e 	bne	r2,r3,1b5c <strstr+0x594>
    1a2c:	29400044 	addi	r5,r5,1
    1a30:	29fff91e 	bne	r5,r7,1a18 <strstr+0x450>
    1a34:	980f883a 	mov	r7,r19
    1a38:	8cc0152e 	bgeu	r17,r19,1a90 <strstr+0x4c8>
    1a3c:	bc85883a 	add	r2,r23,r18
    1a40:	1705883a 	add	r2,r2,fp
    1a44:	b707883a 	add	r3,r22,fp
    1a48:	19400003 	ldbu	r5,0(r3)
    1a4c:	11000003 	ldbu	r4,0(r2)
    1a50:	29000f1e 	bne	r5,r4,1a90 <strstr+0x4c8>
    1a54:	bcc5883a 	add	r2,r23,r19
    1a58:	9085883a 	add	r2,r18,r2
    1a5c:	9d87883a 	add	r3,r19,r22
    1a60:	e00f883a 	mov	r7,fp
    1a64:	19bfff84 	addi	r6,r3,-2
    1a68:	117fff84 	addi	r5,r2,-2
    1a6c:	89c0082e 	bgeu	r17,r7,1a90 <strstr+0x4c8>
    1a70:	30c00003 	ldbu	r3,0(r6)
    1a74:	28800003 	ldbu	r2,0(r5)
    1a78:	31bfffc4 	addi	r6,r6,-1
    1a7c:	297fffc4 	addi	r5,r5,-1
    1a80:	393fffc4 	addi	r4,r7,-1
    1a84:	10c0021e 	bne	r2,r3,1a90 <strstr+0x4c8>
    1a88:	200f883a 	mov	r7,r4
    1a8c:	89fff836 	bltu	r17,r7,1a70 <strstr+0x4a8>
    1a90:	88800044 	addi	r2,r17,1
    1a94:	38805936 	bltu	r7,r2,1bfc <strstr+0x634>
    1a98:	d8800017 	ldw	r2,0(sp)
    1a9c:	a829883a 	mov	r20,r21
    1aa0:	b8af883a 	add	r23,r23,r2
    1aa4:	80a3c83a 	sub	r17,r16,r2
    1aa8:	003fc606 	br	19c4 <strstr+0x3fc>
    1aac:	e00d883a 	mov	r6,fp
    1ab0:	e540012e 	bgeu	fp,r21,1ab8 <strstr+0x4f0>
    1ab4:	a80d883a 	mov	r6,r21
    1ab8:	34c0102e 	bgeu	r6,r19,1afc <strstr+0x534>
    1abc:	b985883a 	add	r2,r23,r6
    1ac0:	908f883a 	add	r7,r18,r2
    1ac4:	b189883a 	add	r4,r22,r6
    1ac8:	20c00003 	ldbu	r3,0(r4)
    1acc:	38800003 	ldbu	r2,0(r7)
    1ad0:	1880331e 	bne	r3,r2,1ba0 <strstr+0x5d8>
    1ad4:	200b883a 	mov	r5,r4
    1ad8:	39000044 	addi	r4,r7,1
    1adc:	00000506 	br	1af4 <strstr+0x52c>
    1ae0:	28c00043 	ldbu	r3,1(r5)
    1ae4:	20800003 	ldbu	r2,0(r4)
    1ae8:	29400044 	addi	r5,r5,1
    1aec:	21000044 	addi	r4,r4,1
    1af0:	10c02b1e 	bne	r2,r3,1ba0 <strstr+0x5d8>
    1af4:	31800044 	addi	r6,r6,1
    1af8:	34fff936 	bltu	r6,r19,1ae0 <strstr+0x518>
    1afc:	a80f883a 	mov	r7,r21
    1b00:	e540202e 	bgeu	fp,r21,1b84 <strstr+0x5bc>
    1b04:	d8c10117 	ldw	r3,1028(sp)
    1b08:	bc85883a 	add	r2,r23,r18
    1b0c:	10c5883a 	add	r2,r2,r3
    1b10:	1d87883a 	add	r3,r3,r22
    1b14:	19400003 	ldbu	r5,0(r3)
    1b18:	11000003 	ldbu	r4,0(r2)
    1b1c:	2900191e 	bne	r5,r4,1b84 <strstr+0x5bc>
    1b20:	bd45883a 	add	r2,r23,r21
    1b24:	d9c10117 	ldw	r7,1028(sp)
    1b28:	9085883a 	add	r2,r18,r2
    1b2c:	b547883a 	add	r3,r22,r21
    1b30:	19bfff84 	addi	r6,r3,-2
    1b34:	117fff84 	addi	r5,r2,-2
    1b38:	e1c0122e 	bgeu	fp,r7,1b84 <strstr+0x5bc>
    1b3c:	30c00003 	ldbu	r3,0(r6)
    1b40:	28800003 	ldbu	r2,0(r5)
    1b44:	31bfffc4 	addi	r6,r6,-1
    1b48:	297fffc4 	addi	r5,r5,-1
    1b4c:	393fffc4 	addi	r4,r7,-1
    1b50:	10c00c1e 	bne	r2,r3,1b84 <strstr+0x5bc>
    1b54:	200f883a 	mov	r7,r4
    1b58:	003ff706 	br	1b38 <strstr+0x570>
    1b5c:	2cc5c83a 	sub	r2,r5,r19
    1b60:	10800044 	addi	r2,r2,1
    1b64:	b8af883a 	add	r23,r23,r2
    1b68:	0023883a 	mov	r17,zero
    1b6c:	a829883a 	mov	r20,r21
    1b70:	003f9406 	br	19c4 <strstr+0x3fc>
    1b74:	00800044 	movi	r2,1
    1b78:	b8af883a 	add	r23,r23,r2
    1b7c:	8829883a 	mov	r20,r17
    1b80:	003f3906 	br	1868 <strstr+0x2a0>
    1b84:	e0800044 	addi	r2,fp,1
    1b88:	38801c36 	bltu	r7,r2,1bfc <strstr+0x634>
    1b8c:	d8800017 	ldw	r2,0(sp)
    1b90:	8829883a 	mov	r20,r17
    1b94:	b8af883a 	add	r23,r23,r2
    1b98:	80b9c83a 	sub	fp,r16,r2
    1b9c:	003f7006 	br	1960 <strstr+0x398>
    1ba0:	3545c83a 	sub	r2,r6,r21
    1ba4:	10800044 	addi	r2,r2,1
    1ba8:	b8af883a 	add	r23,r23,r2
    1bac:	0039883a 	mov	fp,zero
    1bb0:	8829883a 	mov	r20,r17
    1bb4:	003f6a06 	br	1960 <strstr+0x398>
    1bb8:	24c5c83a 	sub	r2,r4,r19
    1bbc:	10800044 	addi	r2,r2,1
    1bc0:	a8ab883a 	add	r21,r21,r2
    1bc4:	8829883a 	mov	r20,r17
    1bc8:	003ecd06 	br	1700 <strstr+0x138>
    1bcc:	2545c83a 	sub	r2,r4,r21
    1bd0:	10800044 	addi	r2,r2,1
    1bd4:	b8af883a 	add	r23,r23,r2
    1bd8:	003fe806 	br	1b7c <strstr+0x5b4>
    1bdc:	d8800017 	ldw	r2,0(sp)
    1be0:	8829883a 	mov	r20,r17
    1be4:	a8ab883a 	add	r21,r21,r2
    1be8:	003ec506 	br	1700 <strstr+0x138>
    1bec:	d8800017 	ldw	r2,0(sp)
    1bf0:	8829883a 	mov	r20,r17
    1bf4:	b8af883a 	add	r23,r23,r2
    1bf8:	003f1b06 	br	1868 <strstr+0x2a0>
    1bfc:	95e5883a 	add	r18,r18,r23
    1c00:	003e9306 	br	1650 <strstr+0x88>
    1c04:	00800044 	movi	r2,1
    1c08:	a8ab883a 	add	r21,r21,r2
    1c0c:	003fed06 	br	1bc4 <strstr+0x5fc>
    1c10:	ac91883a 	add	r8,r21,r18
    1c14:	4025883a 	mov	r18,r8
    1c18:	003e8d06 	br	1650 <strstr+0x88>
    1c1c:	bc91883a 	add	r8,r23,r18
    1c20:	4025883a 	mov	r18,r8
    1c24:	003e8a06 	br	1650 <strstr+0x88>

00001c28 <match>:
    1c28:	21800017 	ldw	r6,0(r4)
    1c2c:	01c01004 	movi	r7,64
    1c30:	02001684 	movi	r8,90
    1c34:	28800007 	ldb	r2,0(r5)
    1c38:	29400044 	addi	r5,r5,1
    1c3c:	10000826 	beq	r2,zero,1c60 <match+0x38>
    1c40:	31800044 	addi	r6,r6,1
    1c44:	30c00007 	ldb	r3,0(r6)
    1c48:	38c0020e 	bge	r7,r3,1c54 <match+0x2c>
    1c4c:	40c00116 	blt	r8,r3,1c54 <match+0x2c>
    1c50:	18c00804 	addi	r3,r3,32
    1c54:	18bff726 	beq	r3,r2,1c34 <match+0xc>
    1c58:	0005883a 	mov	r2,zero
    1c5c:	f800283a 	ret
    1c60:	30800044 	addi	r2,r6,1
    1c64:	20800015 	stw	r2,0(r4)
    1c68:	00800044 	movi	r2,1
    1c6c:	f800283a 	ret

00001c70 <_strtod_r>:
    1c70:	deffd504 	addi	sp,sp,-172
    1c74:	df002915 	stw	fp,164(sp)
    1c78:	dd402615 	stw	r21,152(sp)
    1c7c:	dd002515 	stw	r20,148(sp)
    1c80:	dfc02a15 	stw	ra,168(sp)
    1c84:	ddc02815 	stw	r23,160(sp)
    1c88:	dd802715 	stw	r22,156(sp)
    1c8c:	dcc02415 	stw	r19,144(sp)
    1c90:	dc802315 	stw	r18,140(sp)
    1c94:	dc402215 	stw	r17,136(sp)
    1c98:	dc002115 	stw	r16,132(sp)
    1c9c:	2829883a 	mov	r20,r5
    1ca0:	202b883a 	mov	r21,r4
    1ca4:	d9801d15 	stw	r6,116(sp)
    1ca8:	d8000915 	stw	zero,36(sp)
    1cac:	d8000a15 	stw	zero,40(sp)
    1cb0:	d9400415 	stw	r5,16(sp)
    1cb4:	df000904 	addi	fp,sp,36
    1cb8:	dc000417 	ldw	r16,16(sp)
    1cbc:	00800b44 	movi	r2,45
    1cc0:	80c00003 	ldbu	r3,0(r16)
    1cc4:	10c03536 	bltu	r2,r3,1d9c <_strtod_r+0x12c>
    1cc8:	18c5883a 	add	r2,r3,r3
    1ccc:	1085883a 	add	r2,r2,r2
    1cd0:	00c00034 	movhi	r3,0
    1cd4:	18c73904 	addi	r3,r3,7396
    1cd8:	10c5883a 	add	r2,r2,r3
    1cdc:	11000017 	ldw	r4,0(r2)
    1ce0:	2000683a 	jmp	r4
    1ce4:	00001f1c 	xori	zero,zero,124
    1ce8:	00001d9c 	xori	zero,zero,118
    1cec:	00001d9c 	xori	zero,zero,118
    1cf0:	00001d9c 	xori	zero,zero,118
    1cf4:	00001d9c 	xori	zero,zero,118
    1cf8:	00001d9c 	xori	zero,zero,118
    1cfc:	00001d9c 	xori	zero,zero,118
    1d00:	00001d9c 	xori	zero,zero,118
    1d04:	00001d9c 	xori	zero,zero,118
    1d08:	00002264 	muli	zero,zero,137
    1d0c:	00002264 	muli	zero,zero,137
    1d10:	00002264 	muli	zero,zero,137
    1d14:	00002264 	muli	zero,zero,137
    1d18:	00002264 	muli	zero,zero,137
    1d1c:	00001d9c 	xori	zero,zero,118
    1d20:	00001d9c 	xori	zero,zero,118
    1d24:	00001d9c 	xori	zero,zero,118
    1d28:	00001d9c 	xori	zero,zero,118
    1d2c:	00001d9c 	xori	zero,zero,118
    1d30:	00001d9c 	xori	zero,zero,118
    1d34:	00001d9c 	xori	zero,zero,118
    1d38:	00001d9c 	xori	zero,zero,118
    1d3c:	00001d9c 	xori	zero,zero,118
    1d40:	00001d9c 	xori	zero,zero,118
    1d44:	00001d9c 	xori	zero,zero,118
    1d48:	00001d9c 	xori	zero,zero,118
    1d4c:	00001d9c 	xori	zero,zero,118
    1d50:	00001d9c 	xori	zero,zero,118
    1d54:	00001d9c 	xori	zero,zero,118
    1d58:	00001d9c 	xori	zero,zero,118
    1d5c:	00001d9c 	xori	zero,zero,118
    1d60:	00001d9c 	xori	zero,zero,118
    1d64:	00002264 	muli	zero,zero,137
    1d68:	00001d9c 	xori	zero,zero,118
    1d6c:	00001d9c 	xori	zero,zero,118
    1d70:	00001d9c 	xori	zero,zero,118
    1d74:	00001d9c 	xori	zero,zero,118
    1d78:	00001d9c 	xori	zero,zero,118
    1d7c:	00001d9c 	xori	zero,zero,118
    1d80:	00001d9c 	xori	zero,zero,118
    1d84:	00001d9c 	xori	zero,zero,118
    1d88:	00001d9c 	xori	zero,zero,118
    1d8c:	00001d9c 	xori	zero,zero,118
    1d90:	00002244 	movi	zero,137
    1d94:	00001d9c 	xori	zero,zero,118
    1d98:	00002270 	cmpltui	zero,zero,137
    1d9c:	d8001515 	stw	zero,84(sp)
    1da0:	80c00007 	ldb	r3,0(r16)
    1da4:	00800c04 	movi	r2,48
    1da8:	1880e926 	beq	r3,r2,2150 <_strtod_r+0x4e0>
    1dac:	d8001615 	stw	zero,88(sp)
    1db0:	dc001415 	stw	r16,80(sp)
    1db4:	84400007 	ldb	r17,0(r16)
    1db8:	00800bc4 	movi	r2,47
    1dbc:	1443760e 	bge	r2,r17,2b98 <_strtod_r+0xf28>
    1dc0:	00800e44 	movi	r2,57
    1dc4:	14437416 	blt	r2,r17,2b98 <_strtod_r+0xf28>
    1dc8:	8025883a 	mov	r18,r16
    1dcc:	0027883a 	mov	r19,zero
    1dd0:	d8001215 	stw	zero,72(sp)
    1dd4:	d8001115 	stw	zero,68(sp)
    1dd8:	00000f06 	br	1e18 <_strtod_r+0x1a8>
    1ddc:	d9001217 	ldw	r4,72(sp)
    1de0:	01400284 	movi	r5,10
    1de4:	000d0940 	call	d094 <__mulsi3>
    1de8:	1445883a 	add	r2,r2,r17
    1dec:	10bff404 	addi	r2,r2,-48
    1df0:	d8801215 	stw	r2,72(sp)
    1df4:	94000044 	addi	r16,r18,1
    1df8:	dc000415 	stw	r16,16(sp)
    1dfc:	84400007 	ldb	r17,0(r16)
    1e00:	00800bc4 	movi	r2,47
    1e04:	9cc00044 	addi	r19,r19,1
    1e08:	8025883a 	mov	r18,r16
    1e0c:	1440130e 	bge	r2,r17,1e5c <_strtod_r+0x1ec>
    1e10:	00800e44 	movi	r2,57
    1e14:	14401116 	blt	r2,r17,1e5c <_strtod_r+0x1ec>
    1e18:	00800204 	movi	r2,8
    1e1c:	14ffef0e 	bge	r2,r19,1ddc <_strtod_r+0x16c>
    1e20:	008003c4 	movi	r2,15
    1e24:	14fff316 	blt	r2,r19,1df4 <_strtod_r+0x184>
    1e28:	d9001117 	ldw	r4,68(sp)
    1e2c:	01400284 	movi	r5,10
    1e30:	94000044 	addi	r16,r18,1
    1e34:	000d0940 	call	d094 <__mulsi3>
    1e38:	1445883a 	add	r2,r2,r17
    1e3c:	10bff404 	addi	r2,r2,-48
    1e40:	d8801115 	stw	r2,68(sp)
    1e44:	dc000415 	stw	r16,16(sp)
    1e48:	84400007 	ldb	r17,0(r16)
    1e4c:	00800bc4 	movi	r2,47
    1e50:	9cc00044 	addi	r19,r19,1
    1e54:	8025883a 	mov	r18,r16
    1e58:	147fed16 	blt	r2,r17,1e10 <_strtod_r+0x1a0>
    1e5c:	00800b84 	movi	r2,46
    1e60:	8880c926 	beq	r17,r2,2188 <_strtod_r+0x518>
    1e64:	dcc01815 	stw	r19,96(sp)
    1e68:	d8001b15 	stw	zero,108(sp)
    1e6c:	d8001715 	stw	zero,92(sp)
    1e70:	000d883a 	mov	r6,zero
    1e74:	00801944 	movi	r2,101
    1e78:	88802126 	beq	r17,r2,1f00 <_strtod_r+0x290>
    1e7c:	00801144 	movi	r2,69
    1e80:	88801f26 	beq	r17,r2,1f00 <_strtod_r+0x290>
    1e84:	d9001817 	ldw	r4,96(sp)
    1e88:	2024c03a 	cmpne	r18,r4,zero
    1e8c:	0009883a 	mov	r4,zero
    1e90:	9000651e 	bne	r18,zero,2028 <_strtod_r+0x3b8>
    1e94:	3000c926 	beq	r6,zero,21bc <_strtod_r+0x54c>
    1e98:	d8801d17 	ldw	r2,116(sp)
    1e9c:	10000326 	beq	r2,zero,1eac <_strtod_r+0x23c>
    1ea0:	d8800417 	ldw	r2,16(sp)
    1ea4:	d8c01d17 	ldw	r3,116(sp)
    1ea8:	18800015 	stw	r2,0(r3)
    1eac:	d9001517 	ldw	r4,84(sp)
    1eb0:	2005003a 	cmpeq	r2,r4,zero
    1eb4:	10001c1e 	bne	r2,zero,1f28 <_strtod_r+0x2b8>
    1eb8:	e0800017 	ldw	r2,0(fp)
    1ebc:	e0c00117 	ldw	r3,4(fp)
    1ec0:	1009883a 	mov	r4,r2
    1ec4:	1960003c 	xorhi	r5,r3,32768
    1ec8:	2005883a 	mov	r2,r4
    1ecc:	2807883a 	mov	r3,r5
    1ed0:	dfc02a17 	ldw	ra,168(sp)
    1ed4:	df002917 	ldw	fp,164(sp)
    1ed8:	ddc02817 	ldw	r23,160(sp)
    1edc:	dd802717 	ldw	r22,156(sp)
    1ee0:	dd402617 	ldw	r21,152(sp)
    1ee4:	dd002517 	ldw	r20,148(sp)
    1ee8:	dcc02417 	ldw	r19,144(sp)
    1eec:	dc802317 	ldw	r18,140(sp)
    1ef0:	dc402217 	ldw	r17,136(sp)
    1ef4:	dc002117 	ldw	r16,132(sp)
    1ef8:	dec02b04 	addi	sp,sp,172
    1efc:	f800283a 	ret
    1f00:	d8801817 	ldw	r2,96(sp)
    1f04:	1024c03a 	cmpne	r18,r2,zero
    1f08:	90000a1e 	bne	r18,zero,1f34 <_strtod_r+0x2c4>
    1f0c:	3000091e 	bne	r6,zero,1f34 <_strtod_r+0x2c4>
    1f10:	d8c01617 	ldw	r3,88(sp)
    1f14:	1805003a 	cmpeq	r2,r3,zero
    1f18:	10000626 	beq	r2,zero,1f34 <_strtod_r+0x2c4>
    1f1c:	d8001515 	stw	zero,84(sp)
    1f20:	dd000415 	stw	r20,16(sp)
    1f24:	003fdc06 	br	1e98 <_strtod_r+0x228>
    1f28:	e1000017 	ldw	r4,0(fp)
    1f2c:	e1400117 	ldw	r5,4(fp)
    1f30:	003fe506 	br	1ec8 <_strtod_r+0x258>
    1f34:	dd000417 	ldw	r20,16(sp)
    1f38:	00800ac4 	movi	r2,43
    1f3c:	a4000044 	addi	r16,r20,1
    1f40:	dc000415 	stw	r16,16(sp)
    1f44:	a0c00047 	ldb	r3,1(r20)
    1f48:	8009883a 	mov	r4,r16
    1f4c:	1880cb26 	beq	r3,r2,227c <_strtod_r+0x60c>
    1f50:	00800b44 	movi	r2,45
    1f54:	18838326 	beq	r3,r2,2d64 <_strtod_r+0x10f4>
    1f58:	1823883a 	mov	r17,r3
    1f5c:	88fff404 	addi	r3,r17,-48
    1f60:	00800244 	movi	r2,9
    1f64:	d8001915 	stw	zero,100(sp)
    1f68:	10c0cb36 	bltu	r2,r3,2298 <_strtod_r+0x628>
    1f6c:	00800c04 	movi	r2,48
    1f70:	8880061e 	bne	r17,r2,1f8c <_strtod_r+0x31c>
    1f74:	dc000417 	ldw	r16,16(sp)
    1f78:	8805883a 	mov	r2,r17
    1f7c:	84000044 	addi	r16,r16,1
    1f80:	dc000415 	stw	r16,16(sp)
    1f84:	84400007 	ldb	r17,0(r16)
    1f88:	88bffc26 	beq	r17,r2,1f7c <_strtod_r+0x30c>
    1f8c:	88fff3c4 	addi	r3,r17,-49
    1f90:	00800204 	movi	r2,8
    1f94:	10ffbd36 	bltu	r2,r3,1e8c <_strtod_r+0x21c>
    1f98:	dc000417 	ldw	r16,16(sp)
    1f9c:	893ff404 	addi	r4,r17,-48
    1fa0:	00c00bc4 	movi	r3,47
    1fa4:	dc001315 	stw	r16,76(sp)
    1fa8:	84000044 	addi	r16,r16,1
    1fac:	dc000415 	stw	r16,16(sp)
    1fb0:	84400007 	ldb	r17,0(r16)
    1fb4:	1c40100e 	bge	r3,r17,1ff8 <_strtod_r+0x388>
    1fb8:	00800e44 	movi	r2,57
    1fbc:	14400e16 	blt	r2,r17,1ff8 <_strtod_r+0x388>
    1fc0:	182f883a 	mov	r23,r3
    1fc4:	102d883a 	mov	r22,r2
    1fc8:	00000106 	br	1fd0 <_strtod_r+0x360>
    1fcc:	b4400a16 	blt	r22,r17,1ff8 <_strtod_r+0x388>
    1fd0:	84000044 	addi	r16,r16,1
    1fd4:	01400284 	movi	r5,10
    1fd8:	d9802015 	stw	r6,128(sp)
    1fdc:	000d0940 	call	d094 <__mulsi3>
    1fe0:	dc000415 	stw	r16,16(sp)
    1fe4:	8885883a 	add	r2,r17,r2
    1fe8:	84400007 	ldb	r17,0(r16)
    1fec:	113ff404 	addi	r4,r2,-48
    1ff0:	d9802017 	ldw	r6,128(sp)
    1ff4:	bc7ff516 	blt	r23,r17,1fcc <_strtod_r+0x35c>
    1ff8:	d8801317 	ldw	r2,76(sp)
    1ffc:	8087c83a 	sub	r3,r16,r2
    2000:	00800204 	movi	r2,8
    2004:	10c2ff16 	blt	r2,r3,2c04 <_strtod_r+0xf94>
    2008:	009387c4 	movi	r2,19999
    200c:	1100010e 	bge	r2,r4,2014 <_strtod_r+0x3a4>
    2010:	1009883a 	mov	r4,r2
    2014:	d8c01917 	ldw	r3,100(sp)
    2018:	1805003a 	cmpeq	r2,r3,zero
    201c:	103f9c1e 	bne	r2,zero,1e90 <_strtod_r+0x220>
    2020:	0109c83a 	sub	r4,zero,r4
    2024:	903f9b26 	beq	r18,zero,1e94 <_strtod_r+0x224>
    2028:	d8801717 	ldw	r2,92(sp)
    202c:	2089c83a 	sub	r4,r4,r2
    2030:	d9000f15 	stw	r4,60(sp)
    2034:	9800811e 	bne	r19,zero,223c <_strtod_r+0x5cc>
    2038:	dd001817 	ldw	r20,96(sp)
    203c:	dc801817 	ldw	r18,96(sp)
    2040:	00800404 	movi	r2,16
    2044:	1480010e 	bge	r2,r18,204c <_strtod_r+0x3dc>
    2048:	1025883a 	mov	r18,r2
    204c:	d9001217 	ldw	r4,72(sp)
    2050:	000cdb40 	call	cdb4 <__floatunsidf>
    2054:	100f883a 	mov	r7,r2
    2058:	e0800015 	stw	r2,0(fp)
    205c:	00800244 	movi	r2,9
    2060:	e0c00115 	stw	r3,4(fp)
    2064:	1480160e 	bge	r2,r18,20c0 <_strtod_r+0x450>
    2068:	900c90fa 	slli	r6,r18,3
    206c:	01000074 	movhi	r4,1
    2070:	213c0304 	addi	r4,r4,-4084
    2074:	180b883a 	mov	r5,r3
    2078:	310d883a 	add	r6,r6,r4
    207c:	30ffef17 	ldw	r3,-68(r6)
    2080:	30bfee17 	ldw	r2,-72(r6)
    2084:	3809883a 	mov	r4,r7
    2088:	180f883a 	mov	r7,r3
    208c:	100d883a 	mov	r6,r2
    2090:	000c2980 	call	c298 <__muldf3>
    2094:	d9001117 	ldw	r4,68(sp)
    2098:	1021883a 	mov	r16,r2
    209c:	1823883a 	mov	r17,r3
    20a0:	000cdb40 	call	cdb4 <__floatunsidf>
    20a4:	880b883a 	mov	r5,r17
    20a8:	180f883a 	mov	r7,r3
    20ac:	8009883a 	mov	r4,r16
    20b0:	100d883a 	mov	r6,r2
    20b4:	000c2240 	call	c224 <__adddf3>
    20b8:	e0c00115 	stw	r3,4(fp)
    20bc:	e0800015 	stw	r2,0(fp)
    20c0:	d8c01817 	ldw	r3,96(sp)
    20c4:	010003c4 	movi	r4,15
    20c8:	20c09e16 	blt	r4,r3,2344 <_strtod_r+0x6d4>
    20cc:	d8800f17 	ldw	r2,60(sp)
    20d0:	103f7126 	beq	r2,zero,1e98 <_strtod_r+0x228>
    20d4:	0083d90e 	bge	zero,r2,303c <_strtod_r+0x13cc>
    20d8:	d8c00f17 	ldw	r3,60(sp)
    20dc:	00800584 	movi	r2,22
    20e0:	10c2ca0e 	bge	r2,r3,2c0c <_strtod_r+0xf9c>
    20e4:	d8801817 	ldw	r2,96(sp)
    20e8:	d8c00f17 	ldw	r3,60(sp)
    20ec:	20a3c83a 	sub	r17,r4,r2
    20f0:	88800584 	addi	r2,r17,22
    20f4:	10c09316 	blt	r2,r3,2344 <_strtod_r+0x6d4>
    20f8:	880890fa 	slli	r4,r17,3
    20fc:	04000074 	movhi	r16,1
    2100:	843c0304 	addi	r16,r16,-4084
    2104:	e0800017 	ldw	r2,0(fp)
    2108:	2409883a 	add	r4,r4,r16
    210c:	22000017 	ldw	r8,0(r4)
    2110:	22400117 	ldw	r9,4(r4)
    2114:	e0c00117 	ldw	r3,4(fp)
    2118:	1009883a 	mov	r4,r2
    211c:	480f883a 	mov	r7,r9
    2120:	180b883a 	mov	r5,r3
    2124:	400d883a 	mov	r6,r8
    2128:	000c2980 	call	c298 <__muldf3>
    212c:	d9000f17 	ldw	r4,60(sp)
    2130:	180b883a 	mov	r5,r3
    2134:	2455c83a 	sub	r10,r4,r17
    2138:	501490fa 	slli	r10,r10,3
    213c:	1009883a 	mov	r4,r2
    2140:	5415883a 	add	r10,r10,r16
    2144:	52000017 	ldw	r8,0(r10)
    2148:	52400117 	ldw	r9,4(r10)
    214c:	0002b906 	br	2c34 <_strtod_r+0xfc4>
    2150:	80c00047 	ldb	r3,1(r16)
    2154:	00801604 	movi	r2,88
    2158:	18805226 	beq	r3,r2,22a4 <_strtod_r+0x634>
    215c:	00801e04 	movi	r2,120
    2160:	18805026 	beq	r3,r2,22a4 <_strtod_r+0x634>
    2164:	84000044 	addi	r16,r16,1
    2168:	dc000415 	stw	r16,16(sp)
    216c:	80c00007 	ldb	r3,0(r16)
    2170:	00800c04 	movi	r2,48
    2174:	18bffb26 	beq	r3,r2,2164 <_strtod_r+0x4f4>
    2178:	183f4726 	beq	r3,zero,1e98 <_strtod_r+0x228>
    217c:	01000044 	movi	r4,1
    2180:	d9001615 	stw	r4,88(sp)
    2184:	003f0a06 	br	1db0 <_strtod_r+0x140>
    2188:	84000044 	addi	r16,r16,1
    218c:	dc000415 	stw	r16,16(sp)
    2190:	94400047 	ldb	r17,1(r18)
    2194:	9800ba26 	beq	r19,zero,2480 <_strtod_r+0x810>
    2198:	dcc01815 	stw	r19,96(sp)
    219c:	d8001715 	stw	zero,92(sp)
    21a0:	000d883a 	mov	r6,zero
    21a4:	8dbff404 	addi	r22,r17,-48
    21a8:	00800244 	movi	r2,9
    21ac:	15826e2e 	bgeu	r2,r22,2b68 <_strtod_r+0xef8>
    21b0:	01000044 	movi	r4,1
    21b4:	d9001b15 	stw	r4,108(sp)
    21b8:	003f2e06 	br	1e74 <_strtod_r+0x204>
    21bc:	d8c01617 	ldw	r3,88(sp)
    21c0:	1804c03a 	cmpne	r2,r3,zero
    21c4:	103f341e 	bne	r2,zero,1e98 <_strtod_r+0x228>
    21c8:	d9001b17 	ldw	r4,108(sp)
    21cc:	2004c03a 	cmpne	r2,r4,zero
    21d0:	103f521e 	bne	r2,zero,1f1c <_strtod_r+0x2ac>
    21d4:	00801384 	movi	r2,78
    21d8:	8883b526 	beq	r17,r2,30b0 <_strtod_r+0x1440>
    21dc:	1443b016 	blt	r2,r17,30a0 <_strtod_r+0x1430>
    21e0:	00801244 	movi	r2,73
    21e4:	88bf4d1e 	bne	r17,r2,1f1c <_strtod_r+0x2ac>
    21e8:	dc000404 	addi	r16,sp,16
    21ec:	8009883a 	mov	r4,r16
    21f0:	01400074 	movhi	r5,1
    21f4:	297bb904 	addi	r5,r5,-4380
    21f8:	0001c280 	call	1c28 <match>
    21fc:	103f4726 	beq	r2,zero,1f1c <_strtod_r+0x2ac>
    2200:	d8800417 	ldw	r2,16(sp)
    2204:	8009883a 	mov	r4,r16
    2208:	01400074 	movhi	r5,1
    220c:	297bba04 	addi	r5,r5,-4376
    2210:	143fffc4 	addi	r16,r2,-1
    2214:	dc000415 	stw	r16,16(sp)
    2218:	0001c280 	call	1c28 <match>
    221c:	1000031e 	bne	r2,zero,222c <_strtod_r+0x5bc>
    2220:	d8800417 	ldw	r2,16(sp)
    2224:	14000044 	addi	r16,r2,1
    2228:	dc000415 	stw	r16,16(sp)
    222c:	019ffc34 	movhi	r6,32752
    2230:	e1800115 	stw	r6,4(fp)
    2234:	e0000015 	stw	zero,0(fp)
    2238:	003f1706 	br	1e98 <_strtod_r+0x228>
    223c:	9829883a 	mov	r20,r19
    2240:	003f7e06 	br	203c <_strtod_r+0x3cc>
    2244:	d8001515 	stw	zero,84(sp)
    2248:	84000044 	addi	r16,r16,1
    224c:	dc000415 	stw	r16,16(sp)
    2250:	80800007 	ldb	r2,0(r16)
    2254:	103ed21e 	bne	r2,zero,1da0 <_strtod_r+0x130>
    2258:	d8001515 	stw	zero,84(sp)
    225c:	dd000415 	stw	r20,16(sp)
    2260:	003f0d06 	br	1e98 <_strtod_r+0x228>
    2264:	84000044 	addi	r16,r16,1
    2268:	dc000415 	stw	r16,16(sp)
    226c:	003e9206 	br	1cb8 <_strtod_r+0x48>
    2270:	00800044 	movi	r2,1
    2274:	d8801515 	stw	r2,84(sp)
    2278:	003ff306 	br	2248 <_strtod_r+0x5d8>
    227c:	d8001915 	stw	zero,100(sp)
    2280:	84000044 	addi	r16,r16,1
    2284:	dc000415 	stw	r16,16(sp)
    2288:	24400047 	ldb	r17,1(r4)
    228c:	00800244 	movi	r2,9
    2290:	88fff404 	addi	r3,r17,-48
    2294:	10ff352e 	bgeu	r2,r3,1f6c <_strtod_r+0x2fc>
    2298:	0009883a 	mov	r4,zero
    229c:	dd000415 	stw	r20,16(sp)
    22a0:	003efb06 	br	1e90 <_strtod_r+0x220>
    22a4:	d8c01517 	ldw	r3,84(sp)
    22a8:	04400074 	movhi	r17,1
    22ac:	8c7dac04 	addi	r17,r17,-2384
    22b0:	d8800504 	addi	r2,sp,20
    22b4:	a809883a 	mov	r4,r21
    22b8:	d9400404 	addi	r5,sp,16
    22bc:	880d883a 	mov	r6,r17
    22c0:	d9c00604 	addi	r7,sp,24
    22c4:	d8800015 	stw	r2,0(sp)
    22c8:	d8c00115 	stw	r3,4(sp)
    22cc:	0007cac0 	call	7cac <__gethex>
    22d0:	140001cc 	andi	r16,r2,7
    22d4:	1025883a 	mov	r18,r2
    22d8:	803eef26 	beq	r16,zero,1e98 <_strtod_r+0x228>
    22dc:	04c00184 	movi	r19,6
    22e0:	84ff0e26 	beq	r16,r19,1f1c <_strtod_r+0x2ac>
    22e4:	d9800517 	ldw	r6,20(sp)
    22e8:	30000626 	beq	r6,zero,2304 <_strtod_r+0x694>
    22ec:	89400017 	ldw	r5,0(r17)
    22f0:	d9000d04 	addi	r4,sp,52
    22f4:	00091a40 	call	91a4 <__copybits>
    22f8:	d9400517 	ldw	r5,20(sp)
    22fc:	a809883a 	mov	r4,r21
    2300:	0008d040 	call	8d04 <_Bfree>
    2304:	d9400617 	ldw	r5,24(sp)
    2308:	9c025436 	bltu	r19,r16,2c5c <_strtod_r+0xfec>
    230c:	8405883a 	add	r2,r16,r16
    2310:	1085883a 	add	r2,r2,r2
    2314:	00c00034 	movhi	r3,0
    2318:	18c8ca04 	addi	r3,r3,9000
    231c:	10c5883a 	add	r2,r2,r3
    2320:	11000017 	ldw	r4,0(r2)
    2324:	2000683a 	jmp	r4
    2328:	00002c9c 	xori	zero,zero,178
    232c:	00002ca8 	cmpgeui	zero,zero,178
    2330:	00002c4c 	andi	zero,zero,177
    2334:	00002c74 	movhi	zero,177
    2338:	00002c84 	movi	zero,178
    233c:	00002ca8 	cmpgeui	zero,zero,178
    2340:	00002c9c 	xori	zero,zero,178
    2344:	d9001817 	ldw	r4,96(sp)
    2348:	d8c00f17 	ldw	r3,60(sp)
    234c:	2485c83a 	sub	r2,r4,r18
    2350:	18a1883a 	add	r16,r3,r2
    2354:	0402e80e 	bge	zero,r16,2ef8 <_strtod_r+0x1288>
    2358:	814003cc 	andi	r5,r16,15
    235c:	28000f26 	beq	r5,zero,239c <_strtod_r+0x72c>
    2360:	280a90fa 	slli	r5,r5,3
    2364:	01000074 	movhi	r4,1
    2368:	213c0304 	addi	r4,r4,-4084
    236c:	e0800017 	ldw	r2,0(fp)
    2370:	290b883a 	add	r5,r5,r4
    2374:	2a000017 	ldw	r8,0(r5)
    2378:	e0c00117 	ldw	r3,4(fp)
    237c:	2a400117 	ldw	r9,4(r5)
    2380:	1009883a 	mov	r4,r2
    2384:	180b883a 	mov	r5,r3
    2388:	480f883a 	mov	r7,r9
    238c:	400d883a 	mov	r6,r8
    2390:	000c2980 	call	c298 <__muldf3>
    2394:	e0c00115 	stw	r3,4(fp)
    2398:	e0800015 	stw	r2,0(fp)
    239c:	00bffc04 	movi	r2,-16
    23a0:	808c703a 	and	r6,r16,r2
    23a4:	30006726 	beq	r6,zero,2544 <_strtod_r+0x8d4>
    23a8:	00804d04 	movi	r2,308
    23ac:	11820f16 	blt	r2,r6,2bec <_strtod_r+0xf7c>
    23b0:	3021d13a 	srai	r16,r6,4
    23b4:	00800044 	movi	r2,1
    23b8:	14037f0e 	bge	r2,r16,31b8 <_strtod_r+0x1548>
    23bc:	05800074 	movhi	r22,1
    23c0:	b5bc3504 	addi	r22,r22,-3884
    23c4:	1027883a 	mov	r19,r2
    23c8:	0025883a 	mov	r18,zero
    23cc:	b023883a 	mov	r17,r22
    23d0:	8080004c 	andi	r2,r16,1
    23d4:	1005003a 	cmpeq	r2,r2,zero
    23d8:	1000091e 	bne	r2,zero,2400 <_strtod_r+0x790>
    23dc:	e0800017 	ldw	r2,0(fp)
    23e0:	e0c00117 	ldw	r3,4(fp)
    23e4:	89800017 	ldw	r6,0(r17)
    23e8:	89c00117 	ldw	r7,4(r17)
    23ec:	180b883a 	mov	r5,r3
    23f0:	1009883a 	mov	r4,r2
    23f4:	000c2980 	call	c298 <__muldf3>
    23f8:	e0c00115 	stw	r3,4(fp)
    23fc:	e0800015 	stw	r2,0(fp)
    2400:	8021d07a 	srai	r16,r16,1
    2404:	94800044 	addi	r18,r18,1
    2408:	8c400204 	addi	r17,r17,8
    240c:	9c3ff016 	blt	r19,r16,23d0 <_strtod_r+0x760>
    2410:	900e90fa 	slli	r7,r18,3
    2414:	e2000117 	ldw	r8,4(fp)
    2418:	e1000017 	ldw	r4,0(fp)
    241c:	3d8f883a 	add	r7,r7,r22
    2420:	38800017 	ldw	r2,0(r7)
    2424:	38c00117 	ldw	r3,4(r7)
    2428:	01bf2c34 	movhi	r6,64688
    242c:	418d883a 	add	r6,r8,r6
    2430:	300b883a 	mov	r5,r6
    2434:	180f883a 	mov	r7,r3
    2438:	100d883a 	mov	r6,r2
    243c:	000c2980 	call	c298 <__muldf3>
    2440:	1009883a 	mov	r4,r2
    2444:	180b883a 	mov	r5,r3
    2448:	199ffc2c 	andhi	r6,r3,32752
    244c:	009f2834 	movhi	r2,31904
    2450:	e1000015 	stw	r4,0(fp)
    2454:	e1400115 	stw	r5,4(fp)
    2458:	1181e436 	bltu	r2,r6,2bec <_strtod_r+0xf7c>
    245c:	009f2434 	movhi	r2,31888
    2460:	11833f2e 	bgeu	r2,r6,3160 <_strtod_r+0x14f0>
    2464:	d8001c15 	stw	zero,112(sp)
    2468:	019ffc34 	movhi	r6,32752
    246c:	31bfffc4 	addi	r6,r6,-1
    2470:	01ffffc4 	movi	r7,-1
    2474:	e1800115 	stw	r6,4(fp)
    2478:	e1c00015 	stw	r7,0(fp)
    247c:	00003206 	br	2548 <_strtod_r+0x8d8>
    2480:	00800c04 	movi	r2,48
    2484:	8883221e 	bne	r17,r2,3110 <_strtod_r+0x14a0>
    2488:	8805883a 	mov	r2,r17
    248c:	000d883a 	mov	r6,zero
    2490:	84000044 	addi	r16,r16,1
    2494:	dc000415 	stw	r16,16(sp)
    2498:	84400007 	ldb	r17,0(r16)
    249c:	31800044 	addi	r6,r6,1
    24a0:	88bffb26 	beq	r17,r2,2490 <_strtod_r+0x820>
    24a4:	88fff3c4 	addi	r3,r17,-49
    24a8:	00800204 	movi	r2,8
    24ac:	10c1ca36 	bltu	r2,r3,2bd8 <_strtod_r+0xf68>
    24b0:	d8c00417 	ldw	r3,16(sp)
    24b4:	d9801715 	stw	r6,92(sp)
    24b8:	8dbff404 	addi	r22,r17,-48
    24bc:	d8c01415 	stw	r3,80(sp)
    24c0:	1821883a 	mov	r16,r3
    24c4:	d8001815 	stw	zero,96(sp)
    24c8:	01800044 	movi	r6,1
    24cc:	b0023526 	beq	r22,zero,2da4 <_strtod_r+0x1134>
    24d0:	d9001717 	ldw	r4,92(sp)
    24d4:	00800044 	movi	r2,1
    24d8:	2189883a 	add	r4,r4,r6
    24dc:	d9001715 	stw	r4,92(sp)
    24e0:	1183390e 	bge	r2,r6,31c8 <_strtod_r+0x1558>
    24e4:	dc401817 	ldw	r17,96(sp)
    24e8:	1025883a 	mov	r18,r2
    24ec:	05c00204 	movi	r23,8
    24f0:	00000806 	br	2514 <_strtod_r+0x8a4>
    24f4:	d9001217 	ldw	r4,72(sp)
    24f8:	01400284 	movi	r5,10
    24fc:	d9802015 	stw	r6,128(sp)
    2500:	000d0940 	call	d094 <__mulsi3>
    2504:	d9802017 	ldw	r6,128(sp)
    2508:	d8801215 	stw	r2,72(sp)
    250c:	94800044 	addi	r18,r18,1
    2510:	91821726 	beq	r18,r6,2d70 <_strtod_r+0x1100>
    2514:	8c400044 	addi	r17,r17,1
    2518:	88bfffc4 	addi	r2,r17,-1
    251c:	b8bff50e 	bge	r23,r2,24f4 <_strtod_r+0x884>
    2520:	00800404 	movi	r2,16
    2524:	147ff916 	blt	r2,r17,250c <_strtod_r+0x89c>
    2528:	d9001117 	ldw	r4,68(sp)
    252c:	01400284 	movi	r5,10
    2530:	d9802015 	stw	r6,128(sp)
    2534:	000d0940 	call	d094 <__mulsi3>
    2538:	d9802017 	ldw	r6,128(sp)
    253c:	d8801115 	stw	r2,68(sp)
    2540:	003ff206 	br	250c <_strtod_r+0x89c>
    2544:	d8001c15 	stw	zero,112(sp)
    2548:	d8c01217 	ldw	r3,72(sp)
    254c:	d9401417 	ldw	r5,80(sp)
    2550:	d9c01817 	ldw	r7,96(sp)
    2554:	a809883a 	mov	r4,r21
    2558:	a00d883a 	mov	r6,r20
    255c:	d8c00015 	stw	r3,0(sp)
    2560:	0009c700 	call	9c70 <__s2b>
    2564:	11000304 	addi	r4,r2,12
    2568:	d8801015 	stw	r2,64(sp)
    256c:	d8800f17 	ldw	r2,60(sp)
    2570:	d9001f15 	stw	r4,124(sp)
    2574:	1004803a 	cmplt	r2,r2,zero
    2578:	d8801e15 	stw	r2,120(sp)
    257c:	d8c01017 	ldw	r3,64(sp)
    2580:	a809883a 	mov	r4,r21
    2584:	19400117 	ldw	r5,4(r3)
    2588:	00092840 	call	9284 <_Balloc>
    258c:	d9001017 	ldw	r4,64(sp)
    2590:	d9401f17 	ldw	r5,124(sp)
    2594:	102f883a 	mov	r23,r2
    2598:	21800417 	ldw	r6,16(r4)
    259c:	11000304 	addi	r4,r2,12
    25a0:	318d883a 	add	r6,r6,r6
    25a4:	318d883a 	add	r6,r6,r6
    25a8:	31800204 	addi	r6,r6,8
    25ac:	0008aec0 	call	8aec <memcpy>
    25b0:	e2000017 	ldw	r8,0(fp)
    25b4:	e2400117 	ldw	r9,4(fp)
    25b8:	a809883a 	mov	r4,r21
    25bc:	400b883a 	mov	r5,r8
    25c0:	d9c00204 	addi	r7,sp,8
    25c4:	d8800304 	addi	r2,sp,12
    25c8:	480d883a 	mov	r6,r9
    25cc:	d8800015 	stw	r2,0(sp)
    25d0:	00093400 	call	9340 <__d2b>
    25d4:	a809883a 	mov	r4,r21
    25d8:	01400044 	movi	r5,1
    25dc:	d8800515 	stw	r2,20(sp)
    25e0:	00099e80 	call	99e8 <__i2b>
    25e4:	d8c01e17 	ldw	r3,120(sp)
    25e8:	102d883a 	mov	r22,r2
    25ec:	1801091e 	bne	r3,zero,2a14 <_strtod_r+0xda4>
    25f0:	dd000f17 	ldw	r20,60(sp)
    25f4:	000f883a 	mov	r7,zero
    25f8:	0013883a 	mov	r9,zero
    25fc:	a011883a 	mov	r8,r20
    2600:	d8800217 	ldw	r2,8(sp)
    2604:	10010116 	blt	r2,zero,2a0c <_strtod_r+0xd9c>
    2608:	388f883a 	add	r7,r7,r2
    260c:	d8c01c17 	ldw	r3,112(sp)
    2610:	d9400317 	ldw	r5,12(sp)
    2614:	10c9c83a 	sub	r4,r2,r3
    2618:	2145883a 	add	r2,r4,r5
    261c:	10bfffc4 	addi	r2,r2,-1
    2620:	00ff0084 	movi	r3,-1022
    2624:	10c09f0e 	bge	r2,r3,28a4 <_strtod_r+0xc34>
    2628:	21810cc4 	addi	r6,r4,1075
    262c:	d9001c17 	ldw	r4,112(sp)
    2630:	4185883a 	add	r2,r8,r6
    2634:	39a1883a 	add	r16,r7,r6
    2638:	20a5883a 	add	r18,r4,r2
    263c:	3807883a 	mov	r3,r7
    2640:	81c0010e 	bge	r16,r7,2648 <_strtod_r+0x9d8>
    2644:	8007883a 	mov	r3,r16
    2648:	9005883a 	mov	r2,r18
    264c:	1c80010e 	bge	r3,r18,2654 <_strtod_r+0x9e4>
    2650:	1805883a 	mov	r2,r3
    2654:	0080eb0e 	bge	zero,r2,2a04 <_strtod_r+0xd94>
    2658:	38a7c83a 	sub	r19,r7,r2
    265c:	80a1c83a 	sub	r16,r16,r2
    2660:	90a5c83a 	sub	r18,r18,r2
    2664:	02400e0e 	bge	zero,r9,26a0 <_strtod_r+0xa30>
    2668:	480d883a 	mov	r6,r9
    266c:	b00b883a 	mov	r5,r22
    2670:	a809883a 	mov	r4,r21
    2674:	0009b500 	call	9b50 <__pow5mult>
    2678:	d9800517 	ldw	r6,20(sp)
    267c:	a809883a 	mov	r4,r21
    2680:	100b883a 	mov	r5,r2
    2684:	102d883a 	mov	r22,r2
    2688:	00097940 	call	9794 <__multiply>
    268c:	d9400517 	ldw	r5,20(sp)
    2690:	1023883a 	mov	r17,r2
    2694:	a809883a 	mov	r4,r21
    2698:	0008d040 	call	8d04 <_Bfree>
    269c:	dc400515 	stw	r17,20(sp)
    26a0:	0400050e 	bge	zero,r16,26b8 <_strtod_r+0xa48>
    26a4:	d9400517 	ldw	r5,20(sp)
    26a8:	800d883a 	mov	r6,r16
    26ac:	a809883a 	mov	r4,r21
    26b0:	00096480 	call	9648 <__lshift>
    26b4:	d8800515 	stw	r2,20(sp)
    26b8:	a000741e 	bne	r20,zero,288c <_strtod_r+0xc1c>
    26bc:	0480050e 	bge	zero,r18,26d4 <_strtod_r+0xa64>
    26c0:	b80b883a 	mov	r5,r23
    26c4:	900d883a 	mov	r6,r18
    26c8:	a809883a 	mov	r4,r21
    26cc:	00096480 	call	9648 <__lshift>
    26d0:	102f883a 	mov	r23,r2
    26d4:	04c0050e 	bge	zero,r19,26ec <_strtod_r+0xa7c>
    26d8:	b00b883a 	mov	r5,r22
    26dc:	980d883a 	mov	r6,r19
    26e0:	a809883a 	mov	r4,r21
    26e4:	00096480 	call	9648 <__lshift>
    26e8:	102d883a 	mov	r22,r2
    26ec:	d9400517 	ldw	r5,20(sp)
    26f0:	a809883a 	mov	r4,r21
    26f4:	b80d883a 	mov	r6,r23
    26f8:	00094bc0 	call	94bc <__mdiff>
    26fc:	1029883a 	mov	r20,r2
    2700:	10800317 	ldw	r2,12(r2)
    2704:	a009883a 	mov	r4,r20
    2708:	a0000315 	stw	zero,12(r20)
    270c:	b00b883a 	mov	r5,r22
    2710:	d8801a15 	stw	r2,104(sp)
    2714:	0008e600 	call	8e60 <__mcmp>
    2718:	1001a616 	blt	r2,zero,2db4 <_strtod_r+0x1144>
    271c:	10016d26 	beq	r2,zero,2cd4 <_strtod_r+0x1064>
    2720:	a009883a 	mov	r4,r20
    2724:	b00b883a 	mov	r5,r22
    2728:	00090600 	call	9060 <__ratio>
    272c:	0011883a 	mov	r8,zero
    2730:	02500034 	movhi	r9,16384
    2734:	480f883a 	mov	r7,r9
    2738:	1009883a 	mov	r4,r2
    273c:	180b883a 	mov	r5,r3
    2740:	400d883a 	mov	r6,r8
    2744:	1021883a 	mov	r16,r2
    2748:	1823883a 	mov	r17,r3
    274c:	000cb5c0 	call	cb5c <__ledf2>
    2750:	00805716 	blt	zero,r2,28b0 <_strtod_r+0xc40>
    2754:	d8801a17 	ldw	r2,104(sp)
    2758:	1025003a 	cmpeq	r18,r2,zero
    275c:	90008c1e 	bne	r18,zero,2990 <_strtod_r+0xd20>
    2760:	008ffc34 	movhi	r2,16368
    2764:	0021883a 	mov	r16,zero
    2768:	1023883a 	mov	r17,r2
    276c:	d8000715 	stw	zero,28(sp)
    2770:	d8800815 	stw	r2,32(sp)
    2774:	e1c00117 	ldw	r7,4(fp)
    2778:	009ff834 	movhi	r2,32736
    277c:	3cdffc2c 	andhi	r19,r7,32752
    2780:	98805f26 	beq	r19,r2,2900 <_strtod_r+0xc90>
    2784:	d8c01c17 	ldw	r3,112(sp)
    2788:	18001b26 	beq	r3,zero,27f8 <_strtod_r+0xb88>
    278c:	0081a834 	movhi	r2,1696
    2790:	14c01936 	bltu	r2,r19,27f8 <_strtod_r+0xb88>
    2794:	00bff034 	movhi	r2,65472
    2798:	00d07834 	movhi	r3,16864
    279c:	18ffffc4 	addi	r3,r3,-1
    27a0:	180f883a 	mov	r7,r3
    27a4:	8009883a 	mov	r4,r16
    27a8:	880b883a 	mov	r5,r17
    27ac:	100d883a 	mov	r6,r2
    27b0:	000cb5c0 	call	cb5c <__ledf2>
    27b4:	00800b16 	blt	zero,r2,27e4 <_strtod_r+0xb74>
    27b8:	880b883a 	mov	r5,r17
    27bc:	8009883a 	mov	r4,r16
    27c0:	000aebc0 	call	aebc <__fixunsdfsi>
    27c4:	1000e31e 	bne	r2,zero,2b54 <_strtod_r+0xee4>
    27c8:	0021883a 	mov	r16,zero
    27cc:	044ffc34 	movhi	r17,16368
    27d0:	9000dd1e 	bne	r18,zero,2b48 <_strtod_r+0xed8>
    27d4:	8005883a 	mov	r2,r16
    27d8:	8807883a 	mov	r3,r17
    27dc:	d8c00815 	stw	r3,32(sp)
    27e0:	d8800715 	stw	r2,28(sp)
    27e4:	d8800817 	ldw	r2,32(sp)
    27e8:	00c1ac34 	movhi	r3,1712
    27ec:	14c5c83a 	sub	r2,r2,r19
    27f0:	10c5883a 	add	r2,r2,r3
    27f4:	d8800815 	stw	r2,32(sp)
    27f8:	e0800017 	ldw	r2,0(fp)
    27fc:	e0c00117 	ldw	r3,4(fp)
    2800:	1009883a 	mov	r4,r2
    2804:	180b883a 	mov	r5,r3
    2808:	0008ec00 	call	8ec0 <__ulp>
    280c:	d9800717 	ldw	r6,28(sp)
    2810:	d9c00817 	ldw	r7,32(sp)
    2814:	180b883a 	mov	r5,r3
    2818:	1009883a 	mov	r4,r2
    281c:	000c2980 	call	c298 <__muldf3>
    2820:	e2000017 	ldw	r8,0(fp)
    2824:	e2400117 	ldw	r9,4(fp)
    2828:	180b883a 	mov	r5,r3
    282c:	1009883a 	mov	r4,r2
    2830:	480f883a 	mov	r7,r9
    2834:	400d883a 	mov	r6,r8
    2838:	000c2240 	call	c224 <__adddf3>
    283c:	e0c00115 	stw	r3,4(fp)
    2840:	e0800015 	stw	r2,0(fp)
    2844:	d9001c17 	ldw	r4,112(sp)
    2848:	e4800117 	ldw	r18,4(fp)
    284c:	2000021e 	bne	r4,zero,2858 <_strtod_r+0xbe8>
    2850:	909ffc2c 	andhi	r2,r18,32752
    2854:	98807f26 	beq	r19,r2,2a54 <_strtod_r+0xde4>
    2858:	d9400517 	ldw	r5,20(sp)
    285c:	a809883a 	mov	r4,r21
    2860:	0008d040 	call	8d04 <_Bfree>
    2864:	a809883a 	mov	r4,r21
    2868:	b80b883a 	mov	r5,r23
    286c:	0008d040 	call	8d04 <_Bfree>
    2870:	a809883a 	mov	r4,r21
    2874:	b00b883a 	mov	r5,r22
    2878:	0008d040 	call	8d04 <_Bfree>
    287c:	a809883a 	mov	r4,r21
    2880:	a00b883a 	mov	r5,r20
    2884:	0008d040 	call	8d04 <_Bfree>
    2888:	003f3c06 	br	257c <_strtod_r+0x90c>
    288c:	b80b883a 	mov	r5,r23
    2890:	a00d883a 	mov	r6,r20
    2894:	a809883a 	mov	r4,r21
    2898:	0009b500 	call	9b50 <__pow5mult>
    289c:	102f883a 	mov	r23,r2
    28a0:	003f8606 	br	26bc <_strtod_r+0xa4c>
    28a4:	00800d84 	movi	r2,54
    28a8:	114dc83a 	sub	r6,r2,r5
    28ac:	003f5f06 	br	262c <_strtod_r+0x9bc>
    28b0:	0005883a 	mov	r2,zero
    28b4:	00cff834 	movhi	r3,16352
    28b8:	8009883a 	mov	r4,r16
    28bc:	880b883a 	mov	r5,r17
    28c0:	180f883a 	mov	r7,r3
    28c4:	100d883a 	mov	r6,r2
    28c8:	000c2980 	call	c298 <__muldf3>
    28cc:	1009883a 	mov	r4,r2
    28d0:	d8801a17 	ldw	r2,104(sp)
    28d4:	2021883a 	mov	r16,r4
    28d8:	1823883a 	mov	r17,r3
    28dc:	1025003a 	cmpeq	r18,r2,zero
    28e0:	9000451e 	bne	r18,zero,29f8 <_strtod_r+0xd88>
    28e4:	2005883a 	mov	r2,r4
    28e8:	d8800715 	stw	r2,28(sp)
    28ec:	d8c00815 	stw	r3,32(sp)
    28f0:	e1c00117 	ldw	r7,4(fp)
    28f4:	009ff834 	movhi	r2,32736
    28f8:	3cdffc2c 	andhi	r19,r7,32752
    28fc:	98bfa11e 	bne	r19,r2,2784 <_strtod_r+0xb14>
    2900:	e1000017 	ldw	r4,0(fp)
    2904:	01bf2c34 	movhi	r6,64688
    2908:	398d883a 	add	r6,r7,r6
    290c:	d9000b15 	stw	r4,44(sp)
    2910:	d9c00c15 	stw	r7,48(sp)
    2914:	300b883a 	mov	r5,r6
    2918:	e1800115 	stw	r6,4(fp)
    291c:	0008ec00 	call	8ec0 <__ulp>
    2920:	d9800717 	ldw	r6,28(sp)
    2924:	d9c00817 	ldw	r7,32(sp)
    2928:	180b883a 	mov	r5,r3
    292c:	1009883a 	mov	r4,r2
    2930:	000c2980 	call	c298 <__muldf3>
    2934:	e2000017 	ldw	r8,0(fp)
    2938:	e2400117 	ldw	r9,4(fp)
    293c:	180b883a 	mov	r5,r3
    2940:	1009883a 	mov	r4,r2
    2944:	480f883a 	mov	r7,r9
    2948:	400d883a 	mov	r6,r8
    294c:	000c2240 	call	c224 <__adddf3>
    2950:	1009883a 	mov	r4,r2
    2954:	180b883a 	mov	r5,r3
    2958:	009f2834 	movhi	r2,31904
    295c:	10bfffc4 	addi	r2,r2,-1
    2960:	18dffc2c 	andhi	r3,r3,32752
    2964:	e1000015 	stw	r4,0(fp)
    2968:	e1400115 	stw	r5,4(fp)
    296c:	10c0722e 	bgeu	r2,r3,2b38 <_strtod_r+0xec8>
    2970:	d8800c17 	ldw	r2,48(sp)
    2974:	011ffc34 	movhi	r4,32752
    2978:	213fffc4 	addi	r4,r4,-1
    297c:	11007d26 	beq	r2,r4,2b74 <_strtod_r+0xf04>
    2980:	01ffffc4 	movi	r7,-1
    2984:	e1000115 	stw	r4,4(fp)
    2988:	e1c00015 	stw	r7,0(fp)
    298c:	003fb206 	br	2858 <_strtod_r+0xbe8>
    2990:	e0c00017 	ldw	r3,0(fp)
    2994:	1800251e 	bne	r3,zero,2a2c <_strtod_r+0xdbc>
    2998:	e0800117 	ldw	r2,4(fp)
    299c:	00c00434 	movhi	r3,16
    29a0:	18ffffc4 	addi	r3,r3,-1
    29a4:	10c4703a 	and	r2,r2,r3
    29a8:	1000241e 	bne	r2,zero,2a3c <_strtod_r+0xdcc>
    29ac:	0005883a 	mov	r2,zero
    29b0:	00cffc34 	movhi	r3,16368
    29b4:	180f883a 	mov	r7,r3
    29b8:	8009883a 	mov	r4,r16
    29bc:	880b883a 	mov	r5,r17
    29c0:	100d883a 	mov	r6,r2
    29c4:	000cad40 	call	cad4 <__ltdf2>
    29c8:	10014616 	blt	r2,zero,2ee4 <_strtod_r+0x1274>
    29cc:	0005883a 	mov	r2,zero
    29d0:	00cff834 	movhi	r3,16352
    29d4:	880b883a 	mov	r5,r17
    29d8:	8009883a 	mov	r4,r16
    29dc:	180f883a 	mov	r7,r3
    29e0:	100d883a 	mov	r6,r2
    29e4:	000c2980 	call	c298 <__muldf3>
    29e8:	1823883a 	mov	r17,r3
    29ec:	1021883a 	mov	r16,r2
    29f0:	18e0003c 	xorhi	r3,r3,32768
    29f4:	003fbc06 	br	28e8 <_strtod_r+0xc78>
    29f8:	2005883a 	mov	r2,r4
    29fc:	18e0003c 	xorhi	r3,r3,32768
    2a00:	003fb906 	br	28e8 <_strtod_r+0xc78>
    2a04:	3827883a 	mov	r19,r7
    2a08:	003f1606 	br	2664 <_strtod_r+0x9f4>
    2a0c:	4091c83a 	sub	r8,r8,r2
    2a10:	003efe06 	br	260c <_strtod_r+0x99c>
    2a14:	d9000f17 	ldw	r4,60(sp)
    2a18:	0011883a 	mov	r8,zero
    2a1c:	0029883a 	mov	r20,zero
    2a20:	0113c83a 	sub	r9,zero,r4
    2a24:	480f883a 	mov	r7,r9
    2a28:	003ef506 	br	2600 <_strtod_r+0x990>
    2a2c:	00800044 	movi	r2,1
    2a30:	1880021e 	bne	r3,r2,2a3c <_strtod_r+0xdcc>
    2a34:	e0800117 	ldw	r2,4(fp)
    2a38:	1000c526 	beq	r2,zero,2d50 <_strtod_r+0x10e0>
    2a3c:	00affc34 	movhi	r2,49136
    2a40:	0021883a 	mov	r16,zero
    2a44:	044ffc34 	movhi	r17,16368
    2a48:	d8800815 	stw	r2,32(sp)
    2a4c:	d8000715 	stw	zero,28(sp)
    2a50:	003f4806 	br	2774 <_strtod_r+0xb04>
    2a54:	880b883a 	mov	r5,r17
    2a58:	8009883a 	mov	r4,r16
    2a5c:	000ccdc0 	call	ccdc <__fixdfsi>
    2a60:	1009883a 	mov	r4,r2
    2a64:	000cbe40 	call	cbe4 <__floatsidf>
    2a68:	880b883a 	mov	r5,r17
    2a6c:	8009883a 	mov	r4,r16
    2a70:	100d883a 	mov	r6,r2
    2a74:	180f883a 	mov	r7,r3
    2a78:	000c1a40 	call	c1a4 <__subdf3>
    2a7c:	100b883a 	mov	r5,r2
    2a80:	1021883a 	mov	r16,r2
    2a84:	d8801a17 	ldw	r2,104(sp)
    2a88:	180d883a 	mov	r6,r3
    2a8c:	1823883a 	mov	r17,r3
    2a90:	1000061e 	bne	r2,zero,2aac <_strtod_r+0xe3c>
    2a94:	e0800017 	ldw	r2,0(fp)
    2a98:	1000041e 	bne	r2,zero,2aac <_strtod_r+0xe3c>
    2a9c:	00c00434 	movhi	r3,16
    2aa0:	18ffffc4 	addi	r3,r3,-1
    2aa4:	90c4703a 	and	r2,r18,r3
    2aa8:	10004026 	beq	r2,zero,2bac <_strtod_r+0xf3c>
    2aac:	00a52834 	movhi	r2,38048
    2ab0:	108d6544 	addi	r2,r2,13717
    2ab4:	00cff834 	movhi	r3,16352
    2ab8:	18ffffc4 	addi	r3,r3,-1
    2abc:	180f883a 	mov	r7,r3
    2ac0:	8009883a 	mov	r4,r16
    2ac4:	880b883a 	mov	r5,r17
    2ac8:	100d883a 	mov	r6,r2
    2acc:	000cad40 	call	cad4 <__ltdf2>
    2ad0:	10000916 	blt	r2,zero,2af8 <_strtod_r+0xe88>
    2ad4:	008d6c34 	movhi	r2,13744
    2ad8:	10b94d44 	addi	r2,r2,-6859
    2adc:	00cff834 	movhi	r3,16352
    2ae0:	880b883a 	mov	r5,r17
    2ae4:	180f883a 	mov	r7,r3
    2ae8:	8009883a 	mov	r4,r16
    2aec:	100d883a 	mov	r6,r2
    2af0:	000c9c40 	call	c9c4 <__gtdf2>
    2af4:	00bf580e 	bge	zero,r2,2858 <_strtod_r+0xbe8>
    2af8:	d9400517 	ldw	r5,20(sp)
    2afc:	a809883a 	mov	r4,r21
    2b00:	0008d040 	call	8d04 <_Bfree>
    2b04:	a809883a 	mov	r4,r21
    2b08:	b80b883a 	mov	r5,r23
    2b0c:	0008d040 	call	8d04 <_Bfree>
    2b10:	a809883a 	mov	r4,r21
    2b14:	b00b883a 	mov	r5,r22
    2b18:	0008d040 	call	8d04 <_Bfree>
    2b1c:	d9401017 	ldw	r5,64(sp)
    2b20:	a809883a 	mov	r4,r21
    2b24:	0008d040 	call	8d04 <_Bfree>
    2b28:	a809883a 	mov	r4,r21
    2b2c:	a00b883a 	mov	r5,r20
    2b30:	0008d040 	call	8d04 <_Bfree>
    2b34:	003cd806 	br	1e98 <_strtod_r+0x228>
    2b38:	0080d434 	movhi	r2,848
    2b3c:	288d883a 	add	r6,r5,r2
    2b40:	e1800115 	stw	r6,4(fp)
    2b44:	003f3f06 	br	2844 <_strtod_r+0xbd4>
    2b48:	8005883a 	mov	r2,r16
    2b4c:	88e0003c 	xorhi	r3,r17,32768
    2b50:	003f2206 	br	27dc <_strtod_r+0xb6c>
    2b54:	1009883a 	mov	r4,r2
    2b58:	000cdb40 	call	cdb4 <__floatunsidf>
    2b5c:	1021883a 	mov	r16,r2
    2b60:	1823883a 	mov	r17,r3
    2b64:	003f1a06 	br	27d0 <_strtod_r+0xb60>
    2b68:	dc000417 	ldw	r16,16(sp)
    2b6c:	31800044 	addi	r6,r6,1
    2b70:	003e5606 	br	24cc <_strtod_r+0x85c>
    2b74:	d8c00b17 	ldw	r3,44(sp)
    2b78:	00bfffc4 	movi	r2,-1
    2b7c:	18bf801e 	bne	r3,r2,2980 <_strtod_r+0xd10>
    2b80:	00c00884 	movi	r3,34
    2b84:	a8c00015 	stw	r3,0(r21)
    2b88:	009ffc34 	movhi	r2,32752
    2b8c:	e0800115 	stw	r2,4(fp)
    2b90:	e0000015 	stw	zero,0(fp)
    2b94:	003fd806 	br	2af8 <_strtod_r+0xe88>
    2b98:	8025883a 	mov	r18,r16
    2b9c:	0027883a 	mov	r19,zero
    2ba0:	d8001215 	stw	zero,72(sp)
    2ba4:	d8001115 	stw	zero,68(sp)
    2ba8:	003cac06 	br	1e5c <_strtod_r+0x1ec>
    2bac:	00a52834 	movhi	r2,38048
    2bb0:	108d6544 	addi	r2,r2,13717
    2bb4:	00cff434 	movhi	r3,16336
    2bb8:	18ffffc4 	addi	r3,r3,-1
    2bbc:	2809883a 	mov	r4,r5
    2bc0:	180f883a 	mov	r7,r3
    2bc4:	300b883a 	mov	r5,r6
    2bc8:	100d883a 	mov	r6,r2
    2bcc:	000cad40 	call	cad4 <__ltdf2>
    2bd0:	103f210e 	bge	r2,zero,2858 <_strtod_r+0xbe8>
    2bd4:	003fc806 	br	2af8 <_strtod_r+0xe88>
    2bd8:	00800044 	movi	r2,1
    2bdc:	d8001815 	stw	zero,96(sp)
    2be0:	d8801b15 	stw	r2,108(sp)
    2be4:	d8001715 	stw	zero,92(sp)
    2be8:	003ca206 	br	1e74 <_strtod_r+0x204>
    2bec:	00800884 	movi	r2,34
    2bf0:	a8800015 	stw	r2,0(r21)
    2bf4:	019ffc34 	movhi	r6,32752
    2bf8:	e1800115 	stw	r6,4(fp)
    2bfc:	e0000015 	stw	zero,0(fp)
    2c00:	003ca506 	br	1e98 <_strtod_r+0x228>
    2c04:	011387c4 	movi	r4,19999
    2c08:	003d0206 	br	2014 <_strtod_r+0x3a4>
    2c0c:	180a90fa 	slli	r5,r3,3
    2c10:	e0800017 	ldw	r2,0(fp)
    2c14:	e0c00117 	ldw	r3,4(fp)
    2c18:	01000074 	movhi	r4,1
    2c1c:	213c0304 	addi	r4,r4,-4084
    2c20:	290b883a 	add	r5,r5,r4
    2c24:	2a000017 	ldw	r8,0(r5)
    2c28:	2a400117 	ldw	r9,4(r5)
    2c2c:	1009883a 	mov	r4,r2
    2c30:	180b883a 	mov	r5,r3
    2c34:	480f883a 	mov	r7,r9
    2c38:	400d883a 	mov	r6,r8
    2c3c:	000c2980 	call	c298 <__muldf3>
    2c40:	e0c00115 	stw	r3,4(fp)
    2c44:	e0800015 	stw	r2,0(fp)
    2c48:	003c9306 	br	1e98 <_strtod_r+0x228>
    2c4c:	d8800d17 	ldw	r2,52(sp)
    2c50:	e0800015 	stw	r2,0(fp)
    2c54:	d8c00e17 	ldw	r3,56(sp)
    2c58:	e0c00115 	stw	r3,4(fp)
    2c5c:	9080020c 	andi	r2,r18,8
    2c60:	103c8d26 	beq	r2,zero,1e98 <_strtod_r+0x228>
    2c64:	e0800117 	ldw	r2,4(fp)
    2c68:	10a00034 	orhi	r2,r2,32768
    2c6c:	e0800115 	stw	r2,4(fp)
    2c70:	003c8906 	br	1e98 <_strtod_r+0x228>
    2c74:	009ffc34 	movhi	r2,32752
    2c78:	e0800115 	stw	r2,4(fp)
    2c7c:	e0000015 	stw	zero,0(fp)
    2c80:	003ff606 	br	2c5c <_strtod_r+0xfec>
    2c84:	00a00034 	movhi	r2,32768
    2c88:	10bfffc4 	addi	r2,r2,-1
    2c8c:	00ffffc4 	movi	r3,-1
    2c90:	e0800115 	stw	r2,4(fp)
    2c94:	e0c00015 	stw	r3,0(fp)
    2c98:	003ff006 	br	2c5c <_strtod_r+0xfec>
    2c9c:	e0000115 	stw	zero,4(fp)
    2ca0:	e0000015 	stw	zero,0(fp)
    2ca4:	003fed06 	br	2c5c <_strtod_r+0xfec>
    2ca8:	d8800e17 	ldw	r2,56(sp)
    2cac:	29010cc4 	addi	r4,r5,1075
    2cb0:	00fffc34 	movhi	r3,65520
    2cb4:	18ffffc4 	addi	r3,r3,-1
    2cb8:	2008953a 	slli	r4,r4,20
    2cbc:	10c4703a 	and	r2,r2,r3
    2cc0:	d8c00d17 	ldw	r3,52(sp)
    2cc4:	1104b03a 	or	r2,r2,r4
    2cc8:	e0800115 	stw	r2,4(fp)
    2ccc:	e0c00015 	stw	r3,0(fp)
    2cd0:	003fe206 	br	2c5c <_strtod_r+0xfec>
    2cd4:	d8c01a17 	ldw	r3,104(sp)
    2cd8:	1825003a 	cmpeq	r18,r3,zero
    2cdc:	9000cf1e 	bne	r18,zero,301c <_strtod_r+0x13ac>
    2ce0:	e1400117 	ldw	r5,4(fp)
    2ce4:	01000434 	movhi	r4,16
    2ce8:	213fffc4 	addi	r4,r4,-1
    2cec:	2904703a 	and	r2,r5,r4
    2cf0:	11006826 	beq	r2,r4,2e94 <_strtod_r+0x1224>
    2cf4:	e1c00017 	ldw	r7,0(fp)
    2cf8:	3880004c 	andi	r2,r7,1
    2cfc:	1005003a 	cmpeq	r2,r2,zero
    2d00:	1000601e 	bne	r2,zero,2e84 <_strtod_r+0x1214>
    2d04:	90010426 	beq	r18,zero,3118 <_strtod_r+0x14a8>
    2d08:	e4400117 	ldw	r17,4(fp)
    2d0c:	3809883a 	mov	r4,r7
    2d10:	3821883a 	mov	r16,r7
    2d14:	880b883a 	mov	r5,r17
    2d18:	0008ec00 	call	8ec0 <__ulp>
    2d1c:	180f883a 	mov	r7,r3
    2d20:	880b883a 	mov	r5,r17
    2d24:	8009883a 	mov	r4,r16
    2d28:	100d883a 	mov	r6,r2
    2d2c:	000c1a40 	call	c1a4 <__subdf3>
    2d30:	1009883a 	mov	r4,r2
    2d34:	000d883a 	mov	r6,zero
    2d38:	000f883a 	mov	r7,zero
    2d3c:	180b883a 	mov	r5,r3
    2d40:	e0800015 	stw	r2,0(fp)
    2d44:	e0c00115 	stw	r3,4(fp)
    2d48:	000c93c0 	call	c93c <__nedf2>
    2d4c:	10004d1e 	bne	r2,zero,2e84 <_strtod_r+0x1214>
    2d50:	00800884 	movi	r2,34
    2d54:	a8800015 	stw	r2,0(r21)
    2d58:	e0000015 	stw	zero,0(fp)
    2d5c:	e0000115 	stw	zero,4(fp)
    2d60:	003f6506 	br	2af8 <_strtod_r+0xe88>
    2d64:	00800044 	movi	r2,1
    2d68:	d8801915 	stw	r2,100(sp)
    2d6c:	003d4406 	br	2280 <_strtod_r+0x610>
    2d70:	d8c01817 	ldw	r3,96(sp)
    2d74:	1985883a 	add	r2,r3,r6
    2d78:	11ffffc4 	addi	r7,r2,-1
    2d7c:	39000044 	addi	r4,r7,1
    2d80:	00800204 	movi	r2,8
    2d84:	d9001815 	stw	r4,96(sp)
    2d88:	11c0d716 	blt	r2,r7,30e8 <_strtod_r+0x1478>
    2d8c:	d9001217 	ldw	r4,72(sp)
    2d90:	01400284 	movi	r5,10
    2d94:	000d0940 	call	d094 <__mulsi3>
    2d98:	1585883a 	add	r2,r2,r22
    2d9c:	d8801215 	stw	r2,72(sp)
    2da0:	000d883a 	mov	r6,zero
    2da4:	84000044 	addi	r16,r16,1
    2da8:	dc000415 	stw	r16,16(sp)
    2dac:	84400007 	ldb	r17,0(r16)
    2db0:	003cfc06 	br	21a4 <_strtod_r+0x534>
    2db4:	d8c01a17 	ldw	r3,104(sp)
    2db8:	1800321e 	bne	r3,zero,2e84 <_strtod_r+0x1214>
    2dbc:	e0800017 	ldw	r2,0(fp)
    2dc0:	1000b31e 	bne	r2,zero,3090 <_strtod_r+0x1420>
    2dc4:	e0c00117 	ldw	r3,4(fp)
    2dc8:	01000434 	movhi	r4,16
    2dcc:	213fffc4 	addi	r4,r4,-1
    2dd0:	1904703a 	and	r2,r3,r4
    2dd4:	1000e71e 	bne	r2,zero,3174 <_strtod_r+0x1504>
    2dd8:	18dffc2c 	andhi	r3,r3,32752
    2ddc:	0081ac34 	movhi	r2,1712
    2de0:	10c0282e 	bgeu	r2,r3,2e84 <_strtod_r+0x1214>
    2de4:	a0800517 	ldw	r2,20(r20)
    2de8:	1000031e 	bne	r2,zero,2df8 <_strtod_r+0x1188>
    2dec:	a0c00417 	ldw	r3,16(r20)
    2df0:	00800044 	movi	r2,1
    2df4:	10c0a60e 	bge	r2,r3,3090 <_strtod_r+0x1420>
    2df8:	a00b883a 	mov	r5,r20
    2dfc:	a809883a 	mov	r4,r21
    2e00:	01800044 	movi	r6,1
    2e04:	00096480 	call	9648 <__lshift>
    2e08:	1009883a 	mov	r4,r2
    2e0c:	b00b883a 	mov	r5,r22
    2e10:	1029883a 	mov	r20,r2
    2e14:	0008e600 	call	8e60 <__mcmp>
    2e18:	00809d0e 	bge	zero,r2,3090 <_strtod_r+0x1420>
    2e1c:	e1800117 	ldw	r6,4(fp)
    2e20:	d9001c17 	ldw	r4,112(sp)
    2e24:	2013003a 	cmpeq	r9,r4,zero
    2e28:	4800d61e 	bne	r9,zero,3184 <_strtod_r+0x1514>
    2e2c:	30dffc2c 	andhi	r3,r6,32752
    2e30:	0081ac34 	movhi	r2,1712
    2e34:	10c0d336 	bltu	r2,r3,3184 <_strtod_r+0x1514>
    2e38:	0080dc34 	movhi	r2,880
    2e3c:	10ffc42e 	bgeu	r2,r3,2d50 <_strtod_r+0x10e0>
    2e40:	e0800017 	ldw	r2,0(fp)
    2e44:	e0c00117 	ldw	r3,4(fp)
    2e48:	020e5434 	movhi	r8,14672
    2e4c:	000d883a 	mov	r6,zero
    2e50:	400f883a 	mov	r7,r8
    2e54:	180b883a 	mov	r5,r3
    2e58:	1009883a 	mov	r4,r2
    2e5c:	da000c15 	stw	r8,48(sp)
    2e60:	d8000b15 	stw	zero,44(sp)
    2e64:	000c2980 	call	c298 <__muldf3>
    2e68:	e0800015 	stw	r2,0(fp)
    2e6c:	e0c00115 	stw	r3,4(fp)
    2e70:	183f211e 	bne	r3,zero,2af8 <_strtod_r+0xe88>
    2e74:	103f201e 	bne	r2,zero,2af8 <_strtod_r+0xe88>
    2e78:	00800884 	movi	r2,34
    2e7c:	a8800015 	stw	r2,0(r21)
    2e80:	003f1d06 	br	2af8 <_strtod_r+0xe88>
    2e84:	d9001c17 	ldw	r4,112(sp)
    2e88:	2013003a 	cmpeq	r9,r4,zero
    2e8c:	483f1a1e 	bne	r9,zero,2af8 <_strtod_r+0xe88>
    2e90:	003feb06 	br	2e40 <_strtod_r+0x11d0>
    2e94:	d8801c17 	ldw	r2,112(sp)
    2e98:	e1c00017 	ldw	r7,0(fp)
    2e9c:	1013003a 	cmpeq	r9,r2,zero
    2ea0:	4800c31e 	bne	r9,zero,31b0 <_strtod_r+0x1540>
    2ea4:	28dffc2c 	andhi	r3,r5,32752
    2ea8:	0081a834 	movhi	r2,1696
    2eac:	10c0c036 	bltu	r2,r3,31b0 <_strtod_r+0x1540>
    2eb0:	1804d53a 	srli	r2,r3,20
    2eb4:	00c01ac4 	movi	r3,107
    2eb8:	013fffc4 	movi	r4,-1
    2ebc:	1887c83a 	sub	r3,r3,r2
    2ec0:	20c4983a 	sll	r2,r4,r3
    2ec4:	11ff8c1e 	bne	r2,r7,2cf8 <_strtod_r+0x1088>
    2ec8:	28dffc2c 	andhi	r3,r5,32752
    2ecc:	00800434 	movhi	r2,16
    2ed0:	188d883a 	add	r6,r3,r2
    2ed4:	e1800115 	stw	r6,4(fp)
    2ed8:	e0000015 	stw	zero,0(fp)
    2edc:	483f061e 	bne	r9,zero,2af8 <_strtod_r+0xe88>
    2ee0:	003fd706 	br	2e40 <_strtod_r+0x11d0>
    2ee4:	0021883a 	mov	r16,zero
    2ee8:	0005883a 	mov	r2,zero
    2eec:	044ff834 	movhi	r17,16352
    2ef0:	00eff834 	movhi	r3,49120
    2ef4:	003e7c06 	br	28e8 <_strtod_r+0xc78>
    2ef8:	803d9226 	beq	r16,zero,2544 <_strtod_r+0x8d4>
    2efc:	0421c83a 	sub	r16,zero,r16
    2f00:	814003cc 	andi	r5,r16,15
    2f04:	28000f26 	beq	r5,zero,2f44 <_strtod_r+0x12d4>
    2f08:	280a90fa 	slli	r5,r5,3
    2f0c:	01000074 	movhi	r4,1
    2f10:	213c0304 	addi	r4,r4,-4084
    2f14:	e0800017 	ldw	r2,0(fp)
    2f18:	290b883a 	add	r5,r5,r4
    2f1c:	2a000017 	ldw	r8,0(r5)
    2f20:	e0c00117 	ldw	r3,4(fp)
    2f24:	2a400117 	ldw	r9,4(r5)
    2f28:	1009883a 	mov	r4,r2
    2f2c:	180b883a 	mov	r5,r3
    2f30:	480f883a 	mov	r7,r9
    2f34:	400d883a 	mov	r6,r8
    2f38:	000c65c0 	call	c65c <__divdf3>
    2f3c:	e0c00115 	stw	r3,4(fp)
    2f40:	e0800015 	stw	r2,0(fp)
    2f44:	8021d13a 	srai	r16,r16,4
    2f48:	803d7e26 	beq	r16,zero,2544 <_strtod_r+0x8d4>
    2f4c:	008007c4 	movi	r2,31
    2f50:	14002d16 	blt	r2,r16,3008 <_strtod_r+0x1398>
    2f54:	8080040c 	andi	r2,r16,16
    2f58:	10009d26 	beq	r2,zero,31d0 <_strtod_r+0x1560>
    2f5c:	01001a84 	movi	r4,106
    2f60:	d9001c15 	stw	r4,112(sp)
    2f64:	0400110e 	bge	zero,r16,2fac <_strtod_r+0x133c>
    2f68:	04400074 	movhi	r17,1
    2f6c:	8c7bbd04 	addi	r17,r17,-4364
    2f70:	8080004c 	andi	r2,r16,1
    2f74:	1005003a 	cmpeq	r2,r2,zero
    2f78:	1000091e 	bne	r2,zero,2fa0 <_strtod_r+0x1330>
    2f7c:	e0800017 	ldw	r2,0(fp)
    2f80:	e0c00117 	ldw	r3,4(fp)
    2f84:	89800017 	ldw	r6,0(r17)
    2f88:	89c00117 	ldw	r7,4(r17)
    2f8c:	180b883a 	mov	r5,r3
    2f90:	1009883a 	mov	r4,r2
    2f94:	000c2980 	call	c298 <__muldf3>
    2f98:	e0c00115 	stw	r3,4(fp)
    2f9c:	e0800015 	stw	r2,0(fp)
    2fa0:	8021d07a 	srai	r16,r16,1
    2fa4:	8c400204 	addi	r17,r17,8
    2fa8:	043ff116 	blt	zero,r16,2f70 <_strtod_r+0x1300>
    2fac:	d8801c17 	ldw	r2,112(sp)
    2fb0:	10000d26 	beq	r2,zero,2fe8 <_strtod_r+0x1378>
    2fb4:	e1000117 	ldw	r4,4(fp)
    2fb8:	00c01ac4 	movi	r3,107
    2fbc:	209ffc2c 	andhi	r2,r4,32752
    2fc0:	1004d53a 	srli	r2,r2,20
    2fc4:	1887c83a 	sub	r3,r3,r2
    2fc8:	00c0070e 	bge	zero,r3,2fe8 <_strtod_r+0x1378>
    2fcc:	008007c4 	movi	r2,31
    2fd0:	10c0940e 	bge	r2,r3,3224 <_strtod_r+0x15b4>
    2fd4:	00800d04 	movi	r2,52
    2fd8:	e0000015 	stw	zero,0(fp)
    2fdc:	10c08b0e 	bge	r2,r3,320c <_strtod_r+0x159c>
    2fe0:	0180dc34 	movhi	r6,880
    2fe4:	e1800115 	stw	r6,4(fp)
    2fe8:	e0800017 	ldw	r2,0(fp)
    2fec:	e0c00117 	ldw	r3,4(fp)
    2ff0:	000d883a 	mov	r6,zero
    2ff4:	000f883a 	mov	r7,zero
    2ff8:	180b883a 	mov	r5,r3
    2ffc:	1009883a 	mov	r4,r2
    3000:	000c93c0 	call	c93c <__nedf2>
    3004:	103d501e 	bne	r2,zero,2548 <_strtod_r+0x8d8>
    3008:	00800884 	movi	r2,34
    300c:	a8800015 	stw	r2,0(r21)
    3010:	e0000015 	stw	zero,0(fp)
    3014:	e0000115 	stw	zero,4(fp)
    3018:	003b9f06 	br	1e98 <_strtod_r+0x228>
    301c:	e1800117 	ldw	r6,4(fp)
    3020:	00c00434 	movhi	r3,16
    3024:	18ffffc4 	addi	r3,r3,-1
    3028:	30c4703a 	and	r2,r6,r3
    302c:	103f311e 	bne	r2,zero,2cf4 <_strtod_r+0x1084>
    3030:	e1c00017 	ldw	r7,0(fp)
    3034:	383f301e 	bne	r7,zero,2cf8 <_strtod_r+0x1088>
    3038:	003f7906 	br	2e20 <_strtod_r+0x11b0>
    303c:	d8c00f17 	ldw	r3,60(sp)
    3040:	00bffa84 	movi	r2,-22
    3044:	18bcbf16 	blt	r3,r2,2344 <_strtod_r+0x6d4>
    3048:	1809883a 	mov	r4,r3
    304c:	017ffe04 	movi	r5,-8
    3050:	000d0940 	call	d094 <__mulsi3>
    3054:	00c00074 	movhi	r3,1
    3058:	18fc0304 	addi	r3,r3,-4084
    305c:	10c5883a 	add	r2,r2,r3
    3060:	e2000017 	ldw	r8,0(fp)
    3064:	e2400117 	ldw	r9,4(fp)
    3068:	12800017 	ldw	r10,0(r2)
    306c:	12c00117 	ldw	r11,4(r2)
    3070:	480b883a 	mov	r5,r9
    3074:	4009883a 	mov	r4,r8
    3078:	580f883a 	mov	r7,r11
    307c:	500d883a 	mov	r6,r10
    3080:	000c65c0 	call	c65c <__divdf3>
    3084:	e0c00115 	stw	r3,4(fp)
    3088:	e0800015 	stw	r2,0(fp)
    308c:	003b8206 	br	1e98 <_strtod_r+0x228>
    3090:	d8801c17 	ldw	r2,112(sp)
    3094:	1013003a 	cmpeq	r9,r2,zero
    3098:	483e971e 	bne	r9,zero,2af8 <_strtod_r+0xe88>
    309c:	003f6806 	br	2e40 <_strtod_r+0x11d0>
    30a0:	00801a44 	movi	r2,105
    30a4:	88bc5026 	beq	r17,r2,21e8 <_strtod_r+0x578>
    30a8:	00801b84 	movi	r2,110
    30ac:	88bb9b1e 	bne	r17,r2,1f1c <_strtod_r+0x2ac>
    30b0:	dc000404 	addi	r16,sp,16
    30b4:	8009883a 	mov	r4,r16
    30b8:	01400074 	movhi	r5,1
    30bc:	297bbc04 	addi	r5,r5,-4368
    30c0:	0001c280 	call	1c28 <match>
    30c4:	103b9526 	beq	r2,zero,1f1c <_strtod_r+0x2ac>
    30c8:	d8800417 	ldw	r2,16(sp)
    30cc:	00c00a04 	movi	r3,40
    30d0:	11000007 	ldb	r4,0(r2)
    30d4:	20c04026 	beq	r4,r3,31d8 <_strtod_r+0x1568>
    30d8:	01bffe34 	movhi	r6,65528
    30dc:	e1800115 	stw	r6,4(fp)
    30e0:	e0000015 	stw	zero,0(fp)
    30e4:	003b6c06 	br	1e98 <_strtod_r+0x228>
    30e8:	d8c01817 	ldw	r3,96(sp)
    30ec:	00800404 	movi	r2,16
    30f0:	10c00516 	blt	r2,r3,3108 <_strtod_r+0x1498>
    30f4:	d9001117 	ldw	r4,68(sp)
    30f8:	01400284 	movi	r5,10
    30fc:	000d0940 	call	d094 <__mulsi3>
    3100:	1585883a 	add	r2,r2,r22
    3104:	d8801115 	stw	r2,68(sp)
    3108:	000d883a 	mov	r6,zero
    310c:	003f2506 	br	2da4 <_strtod_r+0x1134>
    3110:	000d883a 	mov	r6,zero
    3114:	003ce306 	br	24a4 <_strtod_r+0x834>
    3118:	e4400117 	ldw	r17,4(fp)
    311c:	3809883a 	mov	r4,r7
    3120:	3821883a 	mov	r16,r7
    3124:	880b883a 	mov	r5,r17
    3128:	0008ec00 	call	8ec0 <__ulp>
    312c:	180f883a 	mov	r7,r3
    3130:	880b883a 	mov	r5,r17
    3134:	8009883a 	mov	r4,r16
    3138:	100d883a 	mov	r6,r2
    313c:	000c2240 	call	c224 <__adddf3>
    3140:	180b883a 	mov	r5,r3
    3144:	d8c01c17 	ldw	r3,112(sp)
    3148:	1009883a 	mov	r4,r2
    314c:	e1400115 	stw	r5,4(fp)
    3150:	1813003a 	cmpeq	r9,r3,zero
    3154:	e1000015 	stw	r4,0(fp)
    3158:	483e671e 	bne	r9,zero,2af8 <_strtod_r+0xe88>
    315c:	003f3806 	br	2e40 <_strtod_r+0x11d0>
    3160:	0080d434 	movhi	r2,848
    3164:	188d883a 	add	r6,r3,r2
    3168:	d8001c15 	stw	zero,112(sp)
    316c:	e1800115 	stw	r6,4(fp)
    3170:	003cf506 	br	2548 <_strtod_r+0x8d8>
    3174:	d8c01c17 	ldw	r3,112(sp)
    3178:	1813003a 	cmpeq	r9,r3,zero
    317c:	483e5e1e 	bne	r9,zero,2af8 <_strtod_r+0xe88>
    3180:	003f2f06 	br	2e40 <_strtod_r+0x11d0>
    3184:	309ffc2c 	andhi	r2,r6,32752
    3188:	00fffc34 	movhi	r3,65520
    318c:	10c5883a 	add	r2,r2,r3
    3190:	00c00434 	movhi	r3,16
    3194:	18ffffc4 	addi	r3,r3,-1
    3198:	10ccb03a 	or	r6,r2,r3
    319c:	01ffffc4 	movi	r7,-1
    31a0:	e1800115 	stw	r6,4(fp)
    31a4:	e1c00015 	stw	r7,0(fp)
    31a8:	483e531e 	bne	r9,zero,2af8 <_strtod_r+0xe88>
    31ac:	003f2406 	br	2e40 <_strtod_r+0x11d0>
    31b0:	00bfffc4 	movi	r2,-1
    31b4:	003f4306 	br	2ec4 <_strtod_r+0x1254>
    31b8:	0025883a 	mov	r18,zero
    31bc:	05800074 	movhi	r22,1
    31c0:	b5bc3504 	addi	r22,r22,-3884
    31c4:	003c9206 	br	2410 <_strtod_r+0x7a0>
    31c8:	d9c01817 	ldw	r7,96(sp)
    31cc:	003eeb06 	br	2d7c <_strtod_r+0x110c>
    31d0:	d8001c15 	stw	zero,112(sp)
    31d4:	003f6306 	br	2f64 <_strtod_r+0x12f4>
    31d8:	8009883a 	mov	r4,r16
    31dc:	01400074 	movhi	r5,1
    31e0:	297da704 	addi	r5,r5,-2404
    31e4:	d9800d04 	addi	r6,sp,52
    31e8:	00084f40 	call	84f4 <__hexnan>
    31ec:	00c00144 	movi	r3,5
    31f0:	10ffb91e 	bne	r2,r3,30d8 <_strtod_r+0x1468>
    31f4:	d8800e17 	ldw	r2,56(sp)
    31f8:	d9c00d17 	ldw	r7,52(sp)
    31fc:	119ffc34 	orhi	r6,r2,32752
    3200:	e1800115 	stw	r6,4(fp)
    3204:	e1c00015 	stw	r7,0(fp)
    3208:	003b2306 	br	1e98 <_strtod_r+0x228>
    320c:	18fff804 	addi	r3,r3,-32
    3210:	00bfffc4 	movi	r2,-1
    3214:	10c4983a 	sll	r2,r2,r3
    3218:	208c703a 	and	r6,r4,r2
    321c:	e1800115 	stw	r6,4(fp)
    3220:	003f7106 	br	2fe8 <_strtod_r+0x1378>
    3224:	00bfffc4 	movi	r2,-1
    3228:	10c4983a 	sll	r2,r2,r3
    322c:	e0c00017 	ldw	r3,0(fp)
    3230:	188e703a 	and	r7,r3,r2
    3234:	e1c00015 	stw	r7,0(fp)
    3238:	003f6b06 	br	2fe8 <_strtod_r+0x1378>

0000323c <strtof>:
    323c:	defffa04 	addi	sp,sp,-24
    3240:	dd000415 	stw	r20,16(sp)
    3244:	05000074 	movhi	r20,1
    3248:	a5035a04 	addi	r20,r20,3432
    324c:	2007883a 	mov	r3,r4
    3250:	a1000017 	ldw	r4,0(r20)
    3254:	280d883a 	mov	r6,r5
    3258:	180b883a 	mov	r5,r3
    325c:	dfc00515 	stw	ra,20(sp)
    3260:	dcc00315 	stw	r19,12(sp)
    3264:	dc800215 	stw	r18,8(sp)
    3268:	dc400115 	stw	r17,4(sp)
    326c:	dc000015 	stw	r16,0(sp)
    3270:	0001c700 	call	1c70 <_strtod_r>
    3274:	180b883a 	mov	r5,r3
    3278:	1009883a 	mov	r4,r2
    327c:	1823883a 	mov	r17,r3
    3280:	1021883a 	mov	r16,r2
    3284:	00006f00 	call	6f0 <__truncdfsf2>
    3288:	1009883a 	mov	r4,r2
    328c:	000b883a 	mov	r5,zero
    3290:	1025883a 	mov	r18,r2
    3294:	1027883a 	mov	r19,r2
    3298:	000bc2c0 	call	bc2c <__nesf2>
    329c:	000d883a 	mov	r6,zero
    32a0:	000f883a 	mov	r7,zero
    32a4:	8009883a 	mov	r4,r16
    32a8:	880b883a 	mov	r5,r17
    32ac:	10000e1e 	bne	r2,zero,32e8 <strtof+0xac>
    32b0:	000c93c0 	call	c93c <__nedf2>
    32b4:	10000c26 	beq	r2,zero,32e8 <strtof+0xac>
    32b8:	a0c00017 	ldw	r3,0(r20)
    32bc:	00800884 	movi	r2,34
    32c0:	18800015 	stw	r2,0(r3)
    32c4:	9805883a 	mov	r2,r19
    32c8:	dfc00517 	ldw	ra,20(sp)
    32cc:	dd000417 	ldw	r20,16(sp)
    32d0:	dcc00317 	ldw	r19,12(sp)
    32d4:	dc800217 	ldw	r18,8(sp)
    32d8:	dc400117 	ldw	r17,4(sp)
    32dc:	dc000017 	ldw	r16,0(sp)
    32e0:	dec00604 	addi	sp,sp,24
    32e4:	f800283a 	ret
    32e8:	9009883a 	mov	r4,r18
    32ec:	015fe034 	movhi	r5,32640
    32f0:	297fffc4 	addi	r5,r5,-1
    32f4:	000bca40 	call	bca4 <__gtsf2>
    32f8:	00ffffc4 	movi	r3,-1
    32fc:	011ffc34 	movhi	r4,32752
    3300:	213fffc4 	addi	r4,r4,-1
    3304:	200f883a 	mov	r7,r4
    3308:	180d883a 	mov	r6,r3
    330c:	8009883a 	mov	r4,r16
    3310:	880b883a 	mov	r5,r17
    3314:	00800f16 	blt	zero,r2,3354 <strtof+0x118>
    3318:	9009883a 	mov	r4,r18
    331c:	017fe034 	movhi	r5,65408
    3320:	297fffc4 	addi	r5,r5,-1
    3324:	000bd1c0 	call	bd1c <__ltsf2>
    3328:	023fffc4 	movi	r8,-1
    332c:	027ffc34 	movhi	r9,65520
    3330:	4a7fffc4 	addi	r9,r9,-1
    3334:	880b883a 	mov	r5,r17
    3338:	480f883a 	mov	r7,r9
    333c:	8009883a 	mov	r4,r16
    3340:	400d883a 	mov	r6,r8
    3344:	103fdf0e 	bge	r2,zero,32c4 <strtof+0x88>
    3348:	000cad40 	call	cad4 <__ltdf2>
    334c:	103fda0e 	bge	r2,zero,32b8 <strtof+0x7c>
    3350:	003fdc06 	br	32c4 <strtof+0x88>
    3354:	000c9c40 	call	c9c4 <__gtdf2>
    3358:	00bfd70e 	bge	zero,r2,32b8 <strtof+0x7c>
    335c:	003fee06 	br	3318 <strtof+0xdc>

00003360 <strtod>:
    3360:	01800074 	movhi	r6,1
    3364:	31835a04 	addi	r6,r6,3432
    3368:	2007883a 	mov	r3,r4
    336c:	31000017 	ldw	r4,0(r6)
    3370:	280d883a 	mov	r6,r5
    3374:	180b883a 	mov	r5,r3
    3378:	0001c701 	jmpi	1c70 <_strtod_r>

0000337c <__sprint_r>:
    337c:	30800217 	ldw	r2,8(r6)
    3380:	defffe04 	addi	sp,sp,-8
    3384:	dc000015 	stw	r16,0(sp)
    3388:	dfc00115 	stw	ra,4(sp)
    338c:	3021883a 	mov	r16,r6
    3390:	0007883a 	mov	r3,zero
    3394:	1000061e 	bne	r2,zero,33b0 <__sprint_r+0x34>
    3398:	1805883a 	mov	r2,r3
    339c:	30000115 	stw	zero,4(r6)
    33a0:	dfc00117 	ldw	ra,4(sp)
    33a4:	dc000017 	ldw	r16,0(sp)
    33a8:	dec00204 	addi	sp,sp,8
    33ac:	f800283a 	ret
    33b0:	00075540 	call	7554 <__sfvwrite_r>
    33b4:	1007883a 	mov	r3,r2
    33b8:	1805883a 	mov	r2,r3
    33bc:	80000115 	stw	zero,4(r16)
    33c0:	80000215 	stw	zero,8(r16)
    33c4:	dfc00117 	ldw	ra,4(sp)
    33c8:	dc000017 	ldw	r16,0(sp)
    33cc:	dec00204 	addi	sp,sp,8
    33d0:	f800283a 	ret

000033d4 <___vfprintf_internal_r>:
    33d4:	defea304 	addi	sp,sp,-1396
    33d8:	dd815915 	stw	r22,1380(sp)
    33dc:	dc015315 	stw	r16,1356(sp)
    33e0:	d9c15215 	stw	r7,1352(sp)
    33e4:	dfc15c15 	stw	ra,1392(sp)
    33e8:	df015b15 	stw	fp,1388(sp)
    33ec:	ddc15a15 	stw	r23,1384(sp)
    33f0:	dd415815 	stw	r21,1376(sp)
    33f4:	dd015715 	stw	r20,1372(sp)
    33f8:	dcc15615 	stw	r19,1368(sp)
    33fc:	dc815515 	stw	r18,1364(sp)
    3400:	dc415415 	stw	r17,1360(sp)
    3404:	282d883a 	mov	r22,r5
    3408:	3021883a 	mov	r16,r6
    340c:	d9015015 	stw	r4,1344(sp)
    3410:	00087440 	call	8744 <_localeconv_r>
    3414:	10800017 	ldw	r2,0(r2)
    3418:	d9c15217 	ldw	r7,1352(sp)
    341c:	d8814a15 	stw	r2,1320(sp)
    3420:	d8815017 	ldw	r2,1344(sp)
    3424:	10000226 	beq	r2,zero,3430 <___vfprintf_internal_r+0x5c>
    3428:	10800e17 	ldw	r2,56(r2)
    342c:	10020d26 	beq	r2,zero,3c64 <___vfprintf_internal_r+0x890>
    3430:	b080030b 	ldhu	r2,12(r22)
    3434:	1080020c 	andi	r2,r2,8
    3438:	10020e26 	beq	r2,zero,3c74 <___vfprintf_internal_r+0x8a0>
    343c:	b0800417 	ldw	r2,16(r22)
    3440:	10020c26 	beq	r2,zero,3c74 <___vfprintf_internal_r+0x8a0>
    3444:	b200030b 	ldhu	r8,12(r22)
    3448:	00800284 	movi	r2,10
    344c:	40c0068c 	andi	r3,r8,26
    3450:	18802f1e 	bne	r3,r2,3510 <___vfprintf_internal_r+0x13c>
    3454:	b080038f 	ldh	r2,14(r22)
    3458:	10002d16 	blt	r2,zero,3510 <___vfprintf_internal_r+0x13c>
    345c:	b240038b 	ldhu	r9,14(r22)
    3460:	b2800717 	ldw	r10,28(r22)
    3464:	b2c00917 	ldw	r11,36(r22)
    3468:	d9015017 	ldw	r4,1344(sp)
    346c:	dc402a04 	addi	r17,sp,168
    3470:	d8804104 	addi	r2,sp,260
    3474:	00c10004 	movi	r3,1024
    3478:	423fff4c 	andi	r8,r8,65533
    347c:	800d883a 	mov	r6,r16
    3480:	880b883a 	mov	r5,r17
    3484:	da002d0d 	sth	r8,180(sp)
    3488:	da402d8d 	sth	r9,182(sp)
    348c:	da803115 	stw	r10,196(sp)
    3490:	dac03315 	stw	r11,204(sp)
    3494:	d8802e15 	stw	r2,184(sp)
    3498:	d8c02f15 	stw	r3,188(sp)
    349c:	d8802a15 	stw	r2,168(sp)
    34a0:	d8c02c15 	stw	r3,176(sp)
    34a4:	d8003015 	stw	zero,192(sp)
    34a8:	00033d40 	call	33d4 <___vfprintf_internal_r>
    34ac:	d8814c15 	stw	r2,1328(sp)
    34b0:	10000416 	blt	r2,zero,34c4 <___vfprintf_internal_r+0xf0>
    34b4:	d9015017 	ldw	r4,1344(sp)
    34b8:	880b883a 	mov	r5,r17
    34bc:	0006bf00 	call	6bf0 <_fflush_r>
    34c0:	1002321e 	bne	r2,zero,3d8c <___vfprintf_internal_r+0x9b8>
    34c4:	d8802d0b 	ldhu	r2,180(sp)
    34c8:	1080100c 	andi	r2,r2,64
    34cc:	10000326 	beq	r2,zero,34dc <___vfprintf_internal_r+0x108>
    34d0:	b080030b 	ldhu	r2,12(r22)
    34d4:	10801014 	ori	r2,r2,64
    34d8:	b080030d 	sth	r2,12(r22)
    34dc:	d8814c17 	ldw	r2,1328(sp)
    34e0:	dfc15c17 	ldw	ra,1392(sp)
    34e4:	df015b17 	ldw	fp,1388(sp)
    34e8:	ddc15a17 	ldw	r23,1384(sp)
    34ec:	dd815917 	ldw	r22,1380(sp)
    34f0:	dd415817 	ldw	r21,1376(sp)
    34f4:	dd015717 	ldw	r20,1372(sp)
    34f8:	dcc15617 	ldw	r19,1368(sp)
    34fc:	dc815517 	ldw	r18,1364(sp)
    3500:	dc415417 	ldw	r17,1360(sp)
    3504:	dc015317 	ldw	r16,1356(sp)
    3508:	dec15d04 	addi	sp,sp,1396
    350c:	f800283a 	ret
    3510:	0005883a 	mov	r2,zero
    3514:	0007883a 	mov	r3,zero
    3518:	dd401a04 	addi	r21,sp,104
    351c:	d8814315 	stw	r2,1292(sp)
    3520:	802f883a 	mov	r23,r16
    3524:	d8c14415 	stw	r3,1296(sp)
    3528:	d8014c15 	stw	zero,1328(sp)
    352c:	d8014915 	stw	zero,1316(sp)
    3530:	d8014515 	stw	zero,1300(sp)
    3534:	d8014815 	stw	zero,1312(sp)
    3538:	dd400d15 	stw	r21,52(sp)
    353c:	d8000f15 	stw	zero,60(sp)
    3540:	d8000e15 	stw	zero,56(sp)
    3544:	b8800007 	ldb	r2,0(r23)
    3548:	10001926 	beq	r2,zero,35b0 <___vfprintf_internal_r+0x1dc>
    354c:	00c00944 	movi	r3,37
    3550:	10c01726 	beq	r2,r3,35b0 <___vfprintf_internal_r+0x1dc>
    3554:	b821883a 	mov	r16,r23
    3558:	00000106 	br	3560 <___vfprintf_internal_r+0x18c>
    355c:	10c00326 	beq	r2,r3,356c <___vfprintf_internal_r+0x198>
    3560:	84000044 	addi	r16,r16,1
    3564:	80800007 	ldb	r2,0(r16)
    3568:	103ffc1e 	bne	r2,zero,355c <___vfprintf_internal_r+0x188>
    356c:	85e7c83a 	sub	r19,r16,r23
    3570:	98000e26 	beq	r19,zero,35ac <___vfprintf_internal_r+0x1d8>
    3574:	dc800f17 	ldw	r18,60(sp)
    3578:	dc400e17 	ldw	r17,56(sp)
    357c:	008001c4 	movi	r2,7
    3580:	94e5883a 	add	r18,r18,r19
    3584:	8c400044 	addi	r17,r17,1
    3588:	adc00015 	stw	r23,0(r21)
    358c:	dc800f15 	stw	r18,60(sp)
    3590:	acc00115 	stw	r19,4(r21)
    3594:	dc400e15 	stw	r17,56(sp)
    3598:	14428b16 	blt	r2,r17,3fc8 <___vfprintf_internal_r+0xbf4>
    359c:	ad400204 	addi	r21,r21,8
    35a0:	d9014c17 	ldw	r4,1328(sp)
    35a4:	24c9883a 	add	r4,r4,r19
    35a8:	d9014c15 	stw	r4,1328(sp)
    35ac:	802f883a 	mov	r23,r16
    35b0:	b8800007 	ldb	r2,0(r23)
    35b4:	10013c26 	beq	r2,zero,3aa8 <___vfprintf_internal_r+0x6d4>
    35b8:	bdc00044 	addi	r23,r23,1
    35bc:	d8000405 	stb	zero,16(sp)
    35c0:	b8c00007 	ldb	r3,0(r23)
    35c4:	04ffffc4 	movi	r19,-1
    35c8:	d8014d15 	stw	zero,1332(sp)
    35cc:	d8014b15 	stw	zero,1324(sp)
    35d0:	d8c14e15 	stw	r3,1336(sp)
    35d4:	bdc00044 	addi	r23,r23,1
    35d8:	d9414e17 	ldw	r5,1336(sp)
    35dc:	00801604 	movi	r2,88
    35e0:	28fff804 	addi	r3,r5,-32
    35e4:	10c06036 	bltu	r2,r3,3768 <___vfprintf_internal_r+0x394>
    35e8:	18c5883a 	add	r2,r3,r3
    35ec:	1085883a 	add	r2,r2,r2
    35f0:	00c00034 	movhi	r3,0
    35f4:	18cd8104 	addi	r3,r3,13828
    35f8:	10c5883a 	add	r2,r2,r3
    35fc:	11000017 	ldw	r4,0(r2)
    3600:	2000683a 	jmp	r4
    3604:	00004578 	rdprs	zero,zero,277
    3608:	00003768 	cmpgeui	zero,zero,221
    360c:	00003768 	cmpgeui	zero,zero,221
    3610:	00004564 	muli	zero,zero,277
    3614:	00003768 	cmpgeui	zero,zero,221
    3618:	00003768 	cmpgeui	zero,zero,221
    361c:	00003768 	cmpgeui	zero,zero,221
    3620:	00003768 	cmpgeui	zero,zero,221
    3624:	00003768 	cmpgeui	zero,zero,221
    3628:	00003768 	cmpgeui	zero,zero,221
    362c:	00004344 	movi	zero,269
    3630:	00004554 	movui	zero,277
    3634:	00003768 	cmpgeui	zero,zero,221
    3638:	0000435c 	xori	zero,zero,269
    363c:	000045fc 	xorhi	zero,zero,279
    3640:	00003768 	cmpgeui	zero,zero,221
    3644:	000045e8 	cmpgeui	zero,zero,279
    3648:	000045a4 	muli	zero,zero,278
    364c:	000045a4 	muli	zero,zero,278
    3650:	000045a4 	muli	zero,zero,278
    3654:	000045a4 	muli	zero,zero,278
    3658:	000045a4 	muli	zero,zero,278
    365c:	000045a4 	muli	zero,zero,278
    3660:	000045a4 	muli	zero,zero,278
    3664:	000045a4 	muli	zero,zero,278
    3668:	000045a4 	muli	zero,zero,278
    366c:	00003768 	cmpgeui	zero,zero,221
    3670:	00003768 	cmpgeui	zero,zero,221
    3674:	00003768 	cmpgeui	zero,zero,221
    3678:	00003768 	cmpgeui	zero,zero,221
    367c:	00003768 	cmpgeui	zero,zero,221
    3680:	00003768 	cmpgeui	zero,zero,221
    3684:	00003768 	cmpgeui	zero,zero,221
    3688:	00003768 	cmpgeui	zero,zero,221
    368c:	00003768 	cmpgeui	zero,zero,221
    3690:	00003768 	cmpgeui	zero,zero,221
    3694:	00003dc0 	call	3dc <main+0x214>
    3698:	0000442c 	andhi	zero,zero,272
    369c:	00003768 	cmpgeui	zero,zero,221
    36a0:	0000442c 	andhi	zero,zero,272
    36a4:	00003768 	cmpgeui	zero,zero,221
    36a8:	00003768 	cmpgeui	zero,zero,221
    36ac:	00003768 	cmpgeui	zero,zero,221
    36b0:	00003768 	cmpgeui	zero,zero,221
    36b4:	00004590 	cmplti	zero,zero,278
    36b8:	00003768 	cmpgeui	zero,zero,221
    36bc:	00003768 	cmpgeui	zero,zero,221
    36c0:	00003e74 	movhi	zero,249
    36c4:	00003768 	cmpgeui	zero,zero,221
    36c8:	00003768 	cmpgeui	zero,zero,221
    36cc:	00003768 	cmpgeui	zero,zero,221
    36d0:	00003768 	cmpgeui	zero,zero,221
    36d4:	00003768 	cmpgeui	zero,zero,221
    36d8:	00003ec0 	call	3ec <main+0x224>
    36dc:	00003768 	cmpgeui	zero,zero,221
    36e0:	00003768 	cmpgeui	zero,zero,221
    36e4:	000044e0 	cmpeqi	zero,zero,275
    36e8:	00003768 	cmpgeui	zero,zero,221
    36ec:	00003768 	cmpgeui	zero,zero,221
    36f0:	00003768 	cmpgeui	zero,zero,221
    36f4:	00003768 	cmpgeui	zero,zero,221
    36f8:	00003768 	cmpgeui	zero,zero,221
    36fc:	00003768 	cmpgeui	zero,zero,221
    3700:	00003768 	cmpgeui	zero,zero,221
    3704:	00003768 	cmpgeui	zero,zero,221
    3708:	00003768 	cmpgeui	zero,zero,221
    370c:	00003768 	cmpgeui	zero,zero,221
    3710:	000044b4 	movhi	zero,274
    3714:	00003dcc 	andi	zero,zero,247
    3718:	0000442c 	andhi	zero,zero,272
    371c:	0000442c 	andhi	zero,zero,272
    3720:	0000442c 	andhi	zero,zero,272
    3724:	00004418 	cmpnei	zero,zero,272
    3728:	00003dcc 	andi	zero,zero,247
    372c:	00003768 	cmpgeui	zero,zero,221
    3730:	00003768 	cmpgeui	zero,zero,221
    3734:	000043a0 	cmpeqi	zero,zero,270
    3738:	00003768 	cmpgeui	zero,zero,221
    373c:	00004370 	cmpltui	zero,zero,269
    3740:	00003e80 	call	3e8 <main+0x220>
    3744:	000043d0 	cmplti	zero,zero,271
    3748:	000043bc 	xorhi	zero,zero,270
    374c:	00003768 	cmpgeui	zero,zero,221
    3750:	00004664 	muli	zero,zero,281
    3754:	00003768 	cmpgeui	zero,zero,221
    3758:	00003ecc 	andi	zero,zero,251
    375c:	00003768 	cmpgeui	zero,zero,221
    3760:	00003768 	cmpgeui	zero,zero,221
    3764:	00004544 	movi	zero,277
    3768:	d9014e17 	ldw	r4,1336(sp)
    376c:	2000ce26 	beq	r4,zero,3aa8 <___vfprintf_internal_r+0x6d4>
    3770:	01400044 	movi	r5,1
    3774:	d9801004 	addi	r6,sp,64
    3778:	d9c14115 	stw	r7,1284(sp)
    377c:	d9414615 	stw	r5,1304(sp)
    3780:	d9814215 	stw	r6,1288(sp)
    3784:	280f883a 	mov	r7,r5
    3788:	d9001005 	stb	r4,64(sp)
    378c:	d8000405 	stb	zero,16(sp)
    3790:	d8014715 	stw	zero,1308(sp)
    3794:	d8c14d17 	ldw	r3,1332(sp)
    3798:	1880008c 	andi	r2,r3,2
    379c:	1005003a 	cmpeq	r2,r2,zero
    37a0:	d8815115 	stw	r2,1348(sp)
    37a4:	1000031e 	bne	r2,zero,37b4 <___vfprintf_internal_r+0x3e0>
    37a8:	d9014617 	ldw	r4,1304(sp)
    37ac:	21000084 	addi	r4,r4,2
    37b0:	d9014615 	stw	r4,1304(sp)
    37b4:	d9414d17 	ldw	r5,1332(sp)
    37b8:	2940210c 	andi	r5,r5,132
    37bc:	d9414f15 	stw	r5,1340(sp)
    37c0:	28002d1e 	bne	r5,zero,3878 <___vfprintf_internal_r+0x4a4>
    37c4:	d9814b17 	ldw	r6,1324(sp)
    37c8:	d8814617 	ldw	r2,1304(sp)
    37cc:	30a1c83a 	sub	r16,r6,r2
    37d0:	0400290e 	bge	zero,r16,3878 <___vfprintf_internal_r+0x4a4>
    37d4:	00800404 	movi	r2,16
    37d8:	14045e0e 	bge	r2,r16,4954 <___vfprintf_internal_r+0x1580>
    37dc:	dc800f17 	ldw	r18,60(sp)
    37e0:	dc400e17 	ldw	r17,56(sp)
    37e4:	1027883a 	mov	r19,r2
    37e8:	07000074 	movhi	fp,1
    37ec:	e73be304 	addi	fp,fp,-4212
    37f0:	050001c4 	movi	r20,7
    37f4:	00000306 	br	3804 <___vfprintf_internal_r+0x430>
    37f8:	843ffc04 	addi	r16,r16,-16
    37fc:	ad400204 	addi	r21,r21,8
    3800:	9c00130e 	bge	r19,r16,3850 <___vfprintf_internal_r+0x47c>
    3804:	94800404 	addi	r18,r18,16
    3808:	8c400044 	addi	r17,r17,1
    380c:	af000015 	stw	fp,0(r21)
    3810:	acc00115 	stw	r19,4(r21)
    3814:	dc800f15 	stw	r18,60(sp)
    3818:	dc400e15 	stw	r17,56(sp)
    381c:	a47ff60e 	bge	r20,r17,37f8 <___vfprintf_internal_r+0x424>
    3820:	d9015017 	ldw	r4,1344(sp)
    3824:	b00b883a 	mov	r5,r22
    3828:	d9800d04 	addi	r6,sp,52
    382c:	d9c15215 	stw	r7,1352(sp)
    3830:	000337c0 	call	337c <__sprint_r>
    3834:	d9c15217 	ldw	r7,1352(sp)
    3838:	10009e1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    383c:	843ffc04 	addi	r16,r16,-16
    3840:	dc800f17 	ldw	r18,60(sp)
    3844:	dc400e17 	ldw	r17,56(sp)
    3848:	dd401a04 	addi	r21,sp,104
    384c:	9c3fed16 	blt	r19,r16,3804 <___vfprintf_internal_r+0x430>
    3850:	9425883a 	add	r18,r18,r16
    3854:	8c400044 	addi	r17,r17,1
    3858:	008001c4 	movi	r2,7
    385c:	af000015 	stw	fp,0(r21)
    3860:	ac000115 	stw	r16,4(r21)
    3864:	dc800f15 	stw	r18,60(sp)
    3868:	dc400e15 	stw	r17,56(sp)
    386c:	1441f516 	blt	r2,r17,4044 <___vfprintf_internal_r+0xc70>
    3870:	ad400204 	addi	r21,r21,8
    3874:	00000206 	br	3880 <___vfprintf_internal_r+0x4ac>
    3878:	dc800f17 	ldw	r18,60(sp)
    387c:	dc400e17 	ldw	r17,56(sp)
    3880:	d8800407 	ldb	r2,16(sp)
    3884:	10000b26 	beq	r2,zero,38b4 <___vfprintf_internal_r+0x4e0>
    3888:	00800044 	movi	r2,1
    388c:	94800044 	addi	r18,r18,1
    3890:	8c400044 	addi	r17,r17,1
    3894:	a8800115 	stw	r2,4(r21)
    3898:	d8c00404 	addi	r3,sp,16
    389c:	008001c4 	movi	r2,7
    38a0:	a8c00015 	stw	r3,0(r21)
    38a4:	dc800f15 	stw	r18,60(sp)
    38a8:	dc400e15 	stw	r17,56(sp)
    38ac:	1441da16 	blt	r2,r17,4018 <___vfprintf_internal_r+0xc44>
    38b0:	ad400204 	addi	r21,r21,8
    38b4:	d9015117 	ldw	r4,1348(sp)
    38b8:	20000b1e 	bne	r4,zero,38e8 <___vfprintf_internal_r+0x514>
    38bc:	d8800504 	addi	r2,sp,20
    38c0:	94800084 	addi	r18,r18,2
    38c4:	8c400044 	addi	r17,r17,1
    38c8:	a8800015 	stw	r2,0(r21)
    38cc:	00c00084 	movi	r3,2
    38d0:	008001c4 	movi	r2,7
    38d4:	a8c00115 	stw	r3,4(r21)
    38d8:	dc800f15 	stw	r18,60(sp)
    38dc:	dc400e15 	stw	r17,56(sp)
    38e0:	1441c216 	blt	r2,r17,3fec <___vfprintf_internal_r+0xc18>
    38e4:	ad400204 	addi	r21,r21,8
    38e8:	d9414f17 	ldw	r5,1340(sp)
    38ec:	00802004 	movi	r2,128
    38f0:	2880b126 	beq	r5,r2,3bb8 <___vfprintf_internal_r+0x7e4>
    38f4:	d8c14717 	ldw	r3,1308(sp)
    38f8:	19e1c83a 	sub	r16,r3,r7
    38fc:	0400260e 	bge	zero,r16,3998 <___vfprintf_internal_r+0x5c4>
    3900:	00800404 	movi	r2,16
    3904:	1403cf0e 	bge	r2,r16,4844 <___vfprintf_internal_r+0x1470>
    3908:	1027883a 	mov	r19,r2
    390c:	07000074 	movhi	fp,1
    3910:	e73bdf04 	addi	fp,fp,-4228
    3914:	050001c4 	movi	r20,7
    3918:	00000306 	br	3928 <___vfprintf_internal_r+0x554>
    391c:	843ffc04 	addi	r16,r16,-16
    3920:	ad400204 	addi	r21,r21,8
    3924:	9c00130e 	bge	r19,r16,3974 <___vfprintf_internal_r+0x5a0>
    3928:	94800404 	addi	r18,r18,16
    392c:	8c400044 	addi	r17,r17,1
    3930:	af000015 	stw	fp,0(r21)
    3934:	acc00115 	stw	r19,4(r21)
    3938:	dc800f15 	stw	r18,60(sp)
    393c:	dc400e15 	stw	r17,56(sp)
    3940:	a47ff60e 	bge	r20,r17,391c <___vfprintf_internal_r+0x548>
    3944:	d9015017 	ldw	r4,1344(sp)
    3948:	b00b883a 	mov	r5,r22
    394c:	d9800d04 	addi	r6,sp,52
    3950:	d9c15215 	stw	r7,1352(sp)
    3954:	000337c0 	call	337c <__sprint_r>
    3958:	d9c15217 	ldw	r7,1352(sp)
    395c:	1000551e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    3960:	843ffc04 	addi	r16,r16,-16
    3964:	dc800f17 	ldw	r18,60(sp)
    3968:	dc400e17 	ldw	r17,56(sp)
    396c:	dd401a04 	addi	r21,sp,104
    3970:	9c3fed16 	blt	r19,r16,3928 <___vfprintf_internal_r+0x554>
    3974:	9425883a 	add	r18,r18,r16
    3978:	8c400044 	addi	r17,r17,1
    397c:	008001c4 	movi	r2,7
    3980:	af000015 	stw	fp,0(r21)
    3984:	ac000115 	stw	r16,4(r21)
    3988:	dc800f15 	stw	r18,60(sp)
    398c:	dc400e15 	stw	r17,56(sp)
    3990:	14418216 	blt	r2,r17,3f9c <___vfprintf_internal_r+0xbc8>
    3994:	ad400204 	addi	r21,r21,8
    3998:	d9014d17 	ldw	r4,1332(sp)
    399c:	2080400c 	andi	r2,r4,256
    39a0:	10004a1e 	bne	r2,zero,3acc <___vfprintf_internal_r+0x6f8>
    39a4:	d9414217 	ldw	r5,1288(sp)
    39a8:	91e5883a 	add	r18,r18,r7
    39ac:	8c400044 	addi	r17,r17,1
    39b0:	008001c4 	movi	r2,7
    39b4:	a9400015 	stw	r5,0(r21)
    39b8:	a9c00115 	stw	r7,4(r21)
    39bc:	dc800f15 	stw	r18,60(sp)
    39c0:	dc400e15 	stw	r17,56(sp)
    39c4:	14416716 	blt	r2,r17,3f64 <___vfprintf_internal_r+0xb90>
    39c8:	a8c00204 	addi	r3,r21,8
    39cc:	d9814d17 	ldw	r6,1332(sp)
    39d0:	3080010c 	andi	r2,r6,4
    39d4:	10002826 	beq	r2,zero,3a78 <___vfprintf_internal_r+0x6a4>
    39d8:	d8814b17 	ldw	r2,1324(sp)
    39dc:	d9014617 	ldw	r4,1304(sp)
    39e0:	1121c83a 	sub	r16,r2,r4
    39e4:	0400240e 	bge	zero,r16,3a78 <___vfprintf_internal_r+0x6a4>
    39e8:	00800404 	movi	r2,16
    39ec:	1404550e 	bge	r2,r16,4b44 <___vfprintf_internal_r+0x1770>
    39f0:	dc400e17 	ldw	r17,56(sp)
    39f4:	1027883a 	mov	r19,r2
    39f8:	07000074 	movhi	fp,1
    39fc:	e73be304 	addi	fp,fp,-4212
    3a00:	050001c4 	movi	r20,7
    3a04:	00000306 	br	3a14 <___vfprintf_internal_r+0x640>
    3a08:	843ffc04 	addi	r16,r16,-16
    3a0c:	18c00204 	addi	r3,r3,8
    3a10:	9c00110e 	bge	r19,r16,3a58 <___vfprintf_internal_r+0x684>
    3a14:	94800404 	addi	r18,r18,16
    3a18:	8c400044 	addi	r17,r17,1
    3a1c:	1f000015 	stw	fp,0(r3)
    3a20:	1cc00115 	stw	r19,4(r3)
    3a24:	dc800f15 	stw	r18,60(sp)
    3a28:	dc400e15 	stw	r17,56(sp)
    3a2c:	a47ff60e 	bge	r20,r17,3a08 <___vfprintf_internal_r+0x634>
    3a30:	d9015017 	ldw	r4,1344(sp)
    3a34:	b00b883a 	mov	r5,r22
    3a38:	d9800d04 	addi	r6,sp,52
    3a3c:	000337c0 	call	337c <__sprint_r>
    3a40:	10001c1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    3a44:	843ffc04 	addi	r16,r16,-16
    3a48:	dc800f17 	ldw	r18,60(sp)
    3a4c:	dc400e17 	ldw	r17,56(sp)
    3a50:	d8c01a04 	addi	r3,sp,104
    3a54:	9c3fef16 	blt	r19,r16,3a14 <___vfprintf_internal_r+0x640>
    3a58:	9425883a 	add	r18,r18,r16
    3a5c:	8c400044 	addi	r17,r17,1
    3a60:	008001c4 	movi	r2,7
    3a64:	1f000015 	stw	fp,0(r3)
    3a68:	1c000115 	stw	r16,4(r3)
    3a6c:	dc800f15 	stw	r18,60(sp)
    3a70:	dc400e15 	stw	r17,56(sp)
    3a74:	1440cb16 	blt	r2,r17,3da4 <___vfprintf_internal_r+0x9d0>
    3a78:	d8814b17 	ldw	r2,1324(sp)
    3a7c:	d9414617 	ldw	r5,1304(sp)
    3a80:	1140010e 	bge	r2,r5,3a88 <___vfprintf_internal_r+0x6b4>
    3a84:	2805883a 	mov	r2,r5
    3a88:	d9814c17 	ldw	r6,1328(sp)
    3a8c:	308d883a 	add	r6,r6,r2
    3a90:	d9814c15 	stw	r6,1328(sp)
    3a94:	90013b1e 	bne	r18,zero,3f84 <___vfprintf_internal_r+0xbb0>
    3a98:	d9c14117 	ldw	r7,1284(sp)
    3a9c:	dd401a04 	addi	r21,sp,104
    3aa0:	d8000e15 	stw	zero,56(sp)
    3aa4:	003ea706 	br	3544 <___vfprintf_internal_r+0x170>
    3aa8:	d8800f17 	ldw	r2,60(sp)
    3aac:	1005451e 	bne	r2,zero,4fc4 <___vfprintf_internal_r+0x1bf0>
    3ab0:	d8000e15 	stw	zero,56(sp)
    3ab4:	b080030b 	ldhu	r2,12(r22)
    3ab8:	1080100c 	andi	r2,r2,64
    3abc:	103e8726 	beq	r2,zero,34dc <___vfprintf_internal_r+0x108>
    3ac0:	00bfffc4 	movi	r2,-1
    3ac4:	d8814c15 	stw	r2,1328(sp)
    3ac8:	003e8406 	br	34dc <___vfprintf_internal_r+0x108>
    3acc:	d9814e17 	ldw	r6,1336(sp)
    3ad0:	00801944 	movi	r2,101
    3ad4:	11806e16 	blt	r2,r6,3c90 <___vfprintf_internal_r+0x8bc>
    3ad8:	d9414817 	ldw	r5,1312(sp)
    3adc:	00c00044 	movi	r3,1
    3ae0:	1943490e 	bge	r3,r5,4808 <___vfprintf_internal_r+0x1434>
    3ae4:	d8814217 	ldw	r2,1288(sp)
    3ae8:	94800044 	addi	r18,r18,1
    3aec:	8c400044 	addi	r17,r17,1
    3af0:	a8800015 	stw	r2,0(r21)
    3af4:	008001c4 	movi	r2,7
    3af8:	a8c00115 	stw	r3,4(r21)
    3afc:	dc800f15 	stw	r18,60(sp)
    3b00:	dc400e15 	stw	r17,56(sp)
    3b04:	1441ca16 	blt	r2,r17,4230 <___vfprintf_internal_r+0xe5c>
    3b08:	a8c00204 	addi	r3,r21,8
    3b0c:	d9014a17 	ldw	r4,1320(sp)
    3b10:	00800044 	movi	r2,1
    3b14:	94800044 	addi	r18,r18,1
    3b18:	8c400044 	addi	r17,r17,1
    3b1c:	18800115 	stw	r2,4(r3)
    3b20:	008001c4 	movi	r2,7
    3b24:	19000015 	stw	r4,0(r3)
    3b28:	dc800f15 	stw	r18,60(sp)
    3b2c:	dc400e15 	stw	r17,56(sp)
    3b30:	1441b616 	blt	r2,r17,420c <___vfprintf_internal_r+0xe38>
    3b34:	1cc00204 	addi	r19,r3,8
    3b38:	d9014317 	ldw	r4,1292(sp)
    3b3c:	d9414417 	ldw	r5,1296(sp)
    3b40:	000d883a 	mov	r6,zero
    3b44:	000f883a 	mov	r7,zero
    3b48:	000c93c0 	call	c93c <__nedf2>
    3b4c:	10017426 	beq	r2,zero,4120 <___vfprintf_internal_r+0xd4c>
    3b50:	d9414817 	ldw	r5,1312(sp)
    3b54:	d9814217 	ldw	r6,1288(sp)
    3b58:	8c400044 	addi	r17,r17,1
    3b5c:	2c85883a 	add	r2,r5,r18
    3b60:	14bfffc4 	addi	r18,r2,-1
    3b64:	28bfffc4 	addi	r2,r5,-1
    3b68:	30c00044 	addi	r3,r6,1
    3b6c:	98800115 	stw	r2,4(r19)
    3b70:	008001c4 	movi	r2,7
    3b74:	98c00015 	stw	r3,0(r19)
    3b78:	dc800f15 	stw	r18,60(sp)
    3b7c:	dc400e15 	stw	r17,56(sp)
    3b80:	14418e16 	blt	r2,r17,41bc <___vfprintf_internal_r+0xde8>
    3b84:	9cc00204 	addi	r19,r19,8
    3b88:	d9414917 	ldw	r5,1316(sp)
    3b8c:	d8800904 	addi	r2,sp,36
    3b90:	8c400044 	addi	r17,r17,1
    3b94:	9165883a 	add	r18,r18,r5
    3b98:	98800015 	stw	r2,0(r19)
    3b9c:	008001c4 	movi	r2,7
    3ba0:	99400115 	stw	r5,4(r19)
    3ba4:	dc800f15 	stw	r18,60(sp)
    3ba8:	dc400e15 	stw	r17,56(sp)
    3bac:	1440ed16 	blt	r2,r17,3f64 <___vfprintf_internal_r+0xb90>
    3bb0:	98c00204 	addi	r3,r19,8
    3bb4:	003f8506 	br	39cc <___vfprintf_internal_r+0x5f8>
    3bb8:	d9814b17 	ldw	r6,1324(sp)
    3bbc:	d8814617 	ldw	r2,1304(sp)
    3bc0:	30a1c83a 	sub	r16,r6,r2
    3bc4:	043f4b0e 	bge	zero,r16,38f4 <___vfprintf_internal_r+0x520>
    3bc8:	00800404 	movi	r2,16
    3bcc:	14043a0e 	bge	r2,r16,4cb8 <___vfprintf_internal_r+0x18e4>
    3bd0:	1027883a 	mov	r19,r2
    3bd4:	07000074 	movhi	fp,1
    3bd8:	e73bdf04 	addi	fp,fp,-4228
    3bdc:	050001c4 	movi	r20,7
    3be0:	00000306 	br	3bf0 <___vfprintf_internal_r+0x81c>
    3be4:	843ffc04 	addi	r16,r16,-16
    3be8:	ad400204 	addi	r21,r21,8
    3bec:	9c00130e 	bge	r19,r16,3c3c <___vfprintf_internal_r+0x868>
    3bf0:	94800404 	addi	r18,r18,16
    3bf4:	8c400044 	addi	r17,r17,1
    3bf8:	af000015 	stw	fp,0(r21)
    3bfc:	acc00115 	stw	r19,4(r21)
    3c00:	dc800f15 	stw	r18,60(sp)
    3c04:	dc400e15 	stw	r17,56(sp)
    3c08:	a47ff60e 	bge	r20,r17,3be4 <___vfprintf_internal_r+0x810>
    3c0c:	d9015017 	ldw	r4,1344(sp)
    3c10:	b00b883a 	mov	r5,r22
    3c14:	d9800d04 	addi	r6,sp,52
    3c18:	d9c15215 	stw	r7,1352(sp)
    3c1c:	000337c0 	call	337c <__sprint_r>
    3c20:	d9c15217 	ldw	r7,1352(sp)
    3c24:	103fa31e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    3c28:	843ffc04 	addi	r16,r16,-16
    3c2c:	dc800f17 	ldw	r18,60(sp)
    3c30:	dc400e17 	ldw	r17,56(sp)
    3c34:	dd401a04 	addi	r21,sp,104
    3c38:	9c3fed16 	blt	r19,r16,3bf0 <___vfprintf_internal_r+0x81c>
    3c3c:	9425883a 	add	r18,r18,r16
    3c40:	8c400044 	addi	r17,r17,1
    3c44:	008001c4 	movi	r2,7
    3c48:	af000015 	stw	fp,0(r21)
    3c4c:	ac000115 	stw	r16,4(r21)
    3c50:	dc800f15 	stw	r18,60(sp)
    3c54:	dc400e15 	stw	r17,56(sp)
    3c58:	14416116 	blt	r2,r17,41e0 <___vfprintf_internal_r+0xe0c>
    3c5c:	ad400204 	addi	r21,r21,8
    3c60:	003f2406 	br	38f4 <___vfprintf_internal_r+0x520>
    3c64:	d9015017 	ldw	r4,1344(sp)
    3c68:	0006e880 	call	6e88 <__sinit>
    3c6c:	d9c15217 	ldw	r7,1352(sp)
    3c70:	003def06 	br	3430 <___vfprintf_internal_r+0x5c>
    3c74:	d9015017 	ldw	r4,1344(sp)
    3c78:	b00b883a 	mov	r5,r22
    3c7c:	d9c15215 	stw	r7,1352(sp)
    3c80:	00052bc0 	call	52bc <__swsetup_r>
    3c84:	d9c15217 	ldw	r7,1352(sp)
    3c88:	103dee26 	beq	r2,zero,3444 <___vfprintf_internal_r+0x70>
    3c8c:	003f8c06 	br	3ac0 <___vfprintf_internal_r+0x6ec>
    3c90:	d9014317 	ldw	r4,1292(sp)
    3c94:	d9414417 	ldw	r5,1296(sp)
    3c98:	000d883a 	mov	r6,zero
    3c9c:	000f883a 	mov	r7,zero
    3ca0:	000c8b40 	call	c8b4 <__eqdf2>
    3ca4:	1000f21e 	bne	r2,zero,4070 <___vfprintf_internal_r+0xc9c>
    3ca8:	00800074 	movhi	r2,1
    3cac:	10bbde04 	addi	r2,r2,-4232
    3cb0:	94800044 	addi	r18,r18,1
    3cb4:	8c400044 	addi	r17,r17,1
    3cb8:	a8800015 	stw	r2,0(r21)
    3cbc:	00c00044 	movi	r3,1
    3cc0:	008001c4 	movi	r2,7
    3cc4:	a8c00115 	stw	r3,4(r21)
    3cc8:	dc800f15 	stw	r18,60(sp)
    3ccc:	dc400e15 	stw	r17,56(sp)
    3cd0:	14430016 	blt	r2,r17,48d4 <___vfprintf_internal_r+0x1500>
    3cd4:	a8c00204 	addi	r3,r21,8
    3cd8:	d8800617 	ldw	r2,24(sp)
    3cdc:	d9014817 	ldw	r4,1312(sp)
    3ce0:	11015c0e 	bge	r2,r4,4254 <___vfprintf_internal_r+0xe80>
    3ce4:	dc400e17 	ldw	r17,56(sp)
    3ce8:	d9814a17 	ldw	r6,1320(sp)
    3cec:	00800044 	movi	r2,1
    3cf0:	94800044 	addi	r18,r18,1
    3cf4:	8c400044 	addi	r17,r17,1
    3cf8:	18800115 	stw	r2,4(r3)
    3cfc:	008001c4 	movi	r2,7
    3d00:	19800015 	stw	r6,0(r3)
    3d04:	dc800f15 	stw	r18,60(sp)
    3d08:	dc400e15 	stw	r17,56(sp)
    3d0c:	14431616 	blt	r2,r17,4968 <___vfprintf_internal_r+0x1594>
    3d10:	18c00204 	addi	r3,r3,8
    3d14:	d8814817 	ldw	r2,1312(sp)
    3d18:	143fffc4 	addi	r16,r2,-1
    3d1c:	043f2b0e 	bge	zero,r16,39cc <___vfprintf_internal_r+0x5f8>
    3d20:	00800404 	movi	r2,16
    3d24:	1402a80e 	bge	r2,r16,47c8 <___vfprintf_internal_r+0x13f4>
    3d28:	dc400e17 	ldw	r17,56(sp)
    3d2c:	1027883a 	mov	r19,r2
    3d30:	07000074 	movhi	fp,1
    3d34:	e73bdf04 	addi	fp,fp,-4228
    3d38:	050001c4 	movi	r20,7
    3d3c:	00000306 	br	3d4c <___vfprintf_internal_r+0x978>
    3d40:	18c00204 	addi	r3,r3,8
    3d44:	843ffc04 	addi	r16,r16,-16
    3d48:	9c02a20e 	bge	r19,r16,47d4 <___vfprintf_internal_r+0x1400>
    3d4c:	94800404 	addi	r18,r18,16
    3d50:	8c400044 	addi	r17,r17,1
    3d54:	1f000015 	stw	fp,0(r3)
    3d58:	1cc00115 	stw	r19,4(r3)
    3d5c:	dc800f15 	stw	r18,60(sp)
    3d60:	dc400e15 	stw	r17,56(sp)
    3d64:	a47ff60e 	bge	r20,r17,3d40 <___vfprintf_internal_r+0x96c>
    3d68:	d9015017 	ldw	r4,1344(sp)
    3d6c:	b00b883a 	mov	r5,r22
    3d70:	d9800d04 	addi	r6,sp,52
    3d74:	000337c0 	call	337c <__sprint_r>
    3d78:	103f4e1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    3d7c:	dc800f17 	ldw	r18,60(sp)
    3d80:	dc400e17 	ldw	r17,56(sp)
    3d84:	d8c01a04 	addi	r3,sp,104
    3d88:	003fee06 	br	3d44 <___vfprintf_internal_r+0x970>
    3d8c:	d8802d0b 	ldhu	r2,180(sp)
    3d90:	00ffffc4 	movi	r3,-1
    3d94:	d8c14c15 	stw	r3,1328(sp)
    3d98:	1080100c 	andi	r2,r2,64
    3d9c:	103dcc1e 	bne	r2,zero,34d0 <___vfprintf_internal_r+0xfc>
    3da0:	003dce06 	br	34dc <___vfprintf_internal_r+0x108>
    3da4:	d9015017 	ldw	r4,1344(sp)
    3da8:	b00b883a 	mov	r5,r22
    3dac:	d9800d04 	addi	r6,sp,52
    3db0:	000337c0 	call	337c <__sprint_r>
    3db4:	103f3f1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    3db8:	dc800f17 	ldw	r18,60(sp)
    3dbc:	003f2e06 	br	3a78 <___vfprintf_internal_r+0x6a4>
    3dc0:	d9414d17 	ldw	r5,1332(sp)
    3dc4:	29400414 	ori	r5,r5,16
    3dc8:	d9414d15 	stw	r5,1332(sp)
    3dcc:	d9814d17 	ldw	r6,1332(sp)
    3dd0:	3080080c 	andi	r2,r6,32
    3dd4:	10014f1e 	bne	r2,zero,4314 <___vfprintf_internal_r+0xf40>
    3dd8:	d8c14d17 	ldw	r3,1332(sp)
    3ddc:	1880040c 	andi	r2,r3,16
    3de0:	1002f01e 	bne	r2,zero,49a4 <___vfprintf_internal_r+0x15d0>
    3de4:	d9014d17 	ldw	r4,1332(sp)
    3de8:	2080100c 	andi	r2,r4,64
    3dec:	1002ed26 	beq	r2,zero,49a4 <___vfprintf_internal_r+0x15d0>
    3df0:	3880000f 	ldh	r2,0(r7)
    3df4:	39c00104 	addi	r7,r7,4
    3df8:	d9c14115 	stw	r7,1284(sp)
    3dfc:	1023d7fa 	srai	r17,r2,31
    3e00:	1021883a 	mov	r16,r2
    3e04:	88037816 	blt	r17,zero,4be8 <___vfprintf_internal_r+0x1814>
    3e08:	01000044 	movi	r4,1
    3e0c:	98000416 	blt	r19,zero,3e20 <___vfprintf_internal_r+0xa4c>
    3e10:	d8c14d17 	ldw	r3,1332(sp)
    3e14:	00bfdfc4 	movi	r2,-129
    3e18:	1886703a 	and	r3,r3,r2
    3e1c:	d8c14d15 	stw	r3,1332(sp)
    3e20:	8444b03a 	or	r2,r16,r17
    3e24:	10022c1e 	bne	r2,zero,46d8 <___vfprintf_internal_r+0x1304>
    3e28:	98022b1e 	bne	r19,zero,46d8 <___vfprintf_internal_r+0x1304>
    3e2c:	20803fcc 	andi	r2,r4,255
    3e30:	1002a126 	beq	r2,zero,48b8 <___vfprintf_internal_r+0x14e4>
    3e34:	d8c01a04 	addi	r3,sp,104
    3e38:	dd001004 	addi	r20,sp,64
    3e3c:	d8c14215 	stw	r3,1288(sp)
    3e40:	d8c14217 	ldw	r3,1288(sp)
    3e44:	dcc14615 	stw	r19,1304(sp)
    3e48:	a0c5c83a 	sub	r2,r20,r3
    3e4c:	11c00a04 	addi	r7,r2,40
    3e50:	99c0010e 	bge	r19,r7,3e58 <___vfprintf_internal_r+0xa84>
    3e54:	d9c14615 	stw	r7,1304(sp)
    3e58:	dcc14715 	stw	r19,1308(sp)
    3e5c:	d8800407 	ldb	r2,16(sp)
    3e60:	103e4c26 	beq	r2,zero,3794 <___vfprintf_internal_r+0x3c0>
    3e64:	d8814617 	ldw	r2,1304(sp)
    3e68:	10800044 	addi	r2,r2,1
    3e6c:	d8814615 	stw	r2,1304(sp)
    3e70:	003e4806 	br	3794 <___vfprintf_internal_r+0x3c0>
    3e74:	d9814d17 	ldw	r6,1332(sp)
    3e78:	31800414 	ori	r6,r6,16
    3e7c:	d9814d15 	stw	r6,1332(sp)
    3e80:	d8c14d17 	ldw	r3,1332(sp)
    3e84:	1880080c 	andi	r2,r3,32
    3e88:	1001271e 	bne	r2,zero,4328 <___vfprintf_internal_r+0xf54>
    3e8c:	d9414d17 	ldw	r5,1332(sp)
    3e90:	2880040c 	andi	r2,r5,16
    3e94:	1002bc1e 	bne	r2,zero,4988 <___vfprintf_internal_r+0x15b4>
    3e98:	d9814d17 	ldw	r6,1332(sp)
    3e9c:	3080100c 	andi	r2,r6,64
    3ea0:	1002b926 	beq	r2,zero,4988 <___vfprintf_internal_r+0x15b4>
    3ea4:	3c00000b 	ldhu	r16,0(r7)
    3ea8:	0009883a 	mov	r4,zero
    3eac:	39c00104 	addi	r7,r7,4
    3eb0:	0023883a 	mov	r17,zero
    3eb4:	d9c14115 	stw	r7,1284(sp)
    3eb8:	d8000405 	stb	zero,16(sp)
    3ebc:	003fd306 	br	3e0c <___vfprintf_internal_r+0xa38>
    3ec0:	d9014d17 	ldw	r4,1332(sp)
    3ec4:	21000414 	ori	r4,r4,16
    3ec8:	d9014d15 	stw	r4,1332(sp)
    3ecc:	d9414d17 	ldw	r5,1332(sp)
    3ed0:	2880080c 	andi	r2,r5,32
    3ed4:	1001081e 	bne	r2,zero,42f8 <___vfprintf_internal_r+0xf24>
    3ed8:	d8c14d17 	ldw	r3,1332(sp)
    3edc:	1880040c 	andi	r2,r3,16
    3ee0:	1002b61e 	bne	r2,zero,49bc <___vfprintf_internal_r+0x15e8>
    3ee4:	d9014d17 	ldw	r4,1332(sp)
    3ee8:	2080100c 	andi	r2,r4,64
    3eec:	1002b326 	beq	r2,zero,49bc <___vfprintf_internal_r+0x15e8>
    3ef0:	3c00000b 	ldhu	r16,0(r7)
    3ef4:	01000044 	movi	r4,1
    3ef8:	39c00104 	addi	r7,r7,4
    3efc:	0023883a 	mov	r17,zero
    3f00:	d9c14115 	stw	r7,1284(sp)
    3f04:	d8000405 	stb	zero,16(sp)
    3f08:	003fc006 	br	3e0c <___vfprintf_internal_r+0xa38>
    3f0c:	d9015017 	ldw	r4,1344(sp)
    3f10:	b00b883a 	mov	r5,r22
    3f14:	d9800d04 	addi	r6,sp,52
    3f18:	000337c0 	call	337c <__sprint_r>
    3f1c:	103ee51e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    3f20:	dc800f17 	ldw	r18,60(sp)
    3f24:	d8c01a04 	addi	r3,sp,104
    3f28:	d9814d17 	ldw	r6,1332(sp)
    3f2c:	3080004c 	andi	r2,r6,1
    3f30:	1005003a 	cmpeq	r2,r2,zero
    3f34:	103ea51e 	bne	r2,zero,39cc <___vfprintf_internal_r+0x5f8>
    3f38:	00800044 	movi	r2,1
    3f3c:	dc400e17 	ldw	r17,56(sp)
    3f40:	18800115 	stw	r2,4(r3)
    3f44:	d8814a17 	ldw	r2,1320(sp)
    3f48:	94800044 	addi	r18,r18,1
    3f4c:	8c400044 	addi	r17,r17,1
    3f50:	18800015 	stw	r2,0(r3)
    3f54:	008001c4 	movi	r2,7
    3f58:	dc800f15 	stw	r18,60(sp)
    3f5c:	dc400e15 	stw	r17,56(sp)
    3f60:	1442240e 	bge	r2,r17,47f4 <___vfprintf_internal_r+0x1420>
    3f64:	d9015017 	ldw	r4,1344(sp)
    3f68:	b00b883a 	mov	r5,r22
    3f6c:	d9800d04 	addi	r6,sp,52
    3f70:	000337c0 	call	337c <__sprint_r>
    3f74:	103ecf1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    3f78:	dc800f17 	ldw	r18,60(sp)
    3f7c:	d8c01a04 	addi	r3,sp,104
    3f80:	003e9206 	br	39cc <___vfprintf_internal_r+0x5f8>
    3f84:	d9015017 	ldw	r4,1344(sp)
    3f88:	b00b883a 	mov	r5,r22
    3f8c:	d9800d04 	addi	r6,sp,52
    3f90:	000337c0 	call	337c <__sprint_r>
    3f94:	103ec026 	beq	r2,zero,3a98 <___vfprintf_internal_r+0x6c4>
    3f98:	003ec606 	br	3ab4 <___vfprintf_internal_r+0x6e0>
    3f9c:	d9015017 	ldw	r4,1344(sp)
    3fa0:	b00b883a 	mov	r5,r22
    3fa4:	d9800d04 	addi	r6,sp,52
    3fa8:	d9c15215 	stw	r7,1352(sp)
    3fac:	000337c0 	call	337c <__sprint_r>
    3fb0:	d9c15217 	ldw	r7,1352(sp)
    3fb4:	103ebf1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    3fb8:	dc800f17 	ldw	r18,60(sp)
    3fbc:	dc400e17 	ldw	r17,56(sp)
    3fc0:	dd401a04 	addi	r21,sp,104
    3fc4:	003e7406 	br	3998 <___vfprintf_internal_r+0x5c4>
    3fc8:	d9015017 	ldw	r4,1344(sp)
    3fcc:	b00b883a 	mov	r5,r22
    3fd0:	d9800d04 	addi	r6,sp,52
    3fd4:	d9c15215 	stw	r7,1352(sp)
    3fd8:	000337c0 	call	337c <__sprint_r>
    3fdc:	d9c15217 	ldw	r7,1352(sp)
    3fe0:	103eb41e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    3fe4:	dd401a04 	addi	r21,sp,104
    3fe8:	003d6d06 	br	35a0 <___vfprintf_internal_r+0x1cc>
    3fec:	d9015017 	ldw	r4,1344(sp)
    3ff0:	b00b883a 	mov	r5,r22
    3ff4:	d9800d04 	addi	r6,sp,52
    3ff8:	d9c15215 	stw	r7,1352(sp)
    3ffc:	000337c0 	call	337c <__sprint_r>
    4000:	d9c15217 	ldw	r7,1352(sp)
    4004:	103eab1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4008:	dc800f17 	ldw	r18,60(sp)
    400c:	dc400e17 	ldw	r17,56(sp)
    4010:	dd401a04 	addi	r21,sp,104
    4014:	003e3406 	br	38e8 <___vfprintf_internal_r+0x514>
    4018:	d9015017 	ldw	r4,1344(sp)
    401c:	b00b883a 	mov	r5,r22
    4020:	d9800d04 	addi	r6,sp,52
    4024:	d9c15215 	stw	r7,1352(sp)
    4028:	000337c0 	call	337c <__sprint_r>
    402c:	d9c15217 	ldw	r7,1352(sp)
    4030:	103ea01e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4034:	dc800f17 	ldw	r18,60(sp)
    4038:	dc400e17 	ldw	r17,56(sp)
    403c:	dd401a04 	addi	r21,sp,104
    4040:	003e1c06 	br	38b4 <___vfprintf_internal_r+0x4e0>
    4044:	d9015017 	ldw	r4,1344(sp)
    4048:	b00b883a 	mov	r5,r22
    404c:	d9800d04 	addi	r6,sp,52
    4050:	d9c15215 	stw	r7,1352(sp)
    4054:	000337c0 	call	337c <__sprint_r>
    4058:	d9c15217 	ldw	r7,1352(sp)
    405c:	103e951e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4060:	dc800f17 	ldw	r18,60(sp)
    4064:	dc400e17 	ldw	r17,56(sp)
    4068:	dd401a04 	addi	r21,sp,104
    406c:	003e0406 	br	3880 <___vfprintf_internal_r+0x4ac>
    4070:	d9000617 	ldw	r4,24(sp)
    4074:	0102580e 	bge	zero,r4,49d8 <___vfprintf_internal_r+0x1604>
    4078:	d9814817 	ldw	r6,1312(sp)
    407c:	21807a16 	blt	r4,r6,4268 <___vfprintf_internal_r+0xe94>
    4080:	d8814217 	ldw	r2,1288(sp)
    4084:	91a5883a 	add	r18,r18,r6
    4088:	8c400044 	addi	r17,r17,1
    408c:	a8800015 	stw	r2,0(r21)
    4090:	008001c4 	movi	r2,7
    4094:	a9800115 	stw	r6,4(r21)
    4098:	dc800f15 	stw	r18,60(sp)
    409c:	dc400e15 	stw	r17,56(sp)
    40a0:	1442fc16 	blt	r2,r17,4c94 <___vfprintf_internal_r+0x18c0>
    40a4:	a8c00204 	addi	r3,r21,8
    40a8:	d9414817 	ldw	r5,1312(sp)
    40ac:	2161c83a 	sub	r16,r4,r5
    40b0:	043f9d0e 	bge	zero,r16,3f28 <___vfprintf_internal_r+0xb54>
    40b4:	00800404 	movi	r2,16
    40b8:	1402190e 	bge	r2,r16,4920 <___vfprintf_internal_r+0x154c>
    40bc:	dc400e17 	ldw	r17,56(sp)
    40c0:	1027883a 	mov	r19,r2
    40c4:	07000074 	movhi	fp,1
    40c8:	e73bdf04 	addi	fp,fp,-4228
    40cc:	050001c4 	movi	r20,7
    40d0:	00000306 	br	40e0 <___vfprintf_internal_r+0xd0c>
    40d4:	18c00204 	addi	r3,r3,8
    40d8:	843ffc04 	addi	r16,r16,-16
    40dc:	9c02130e 	bge	r19,r16,492c <___vfprintf_internal_r+0x1558>
    40e0:	94800404 	addi	r18,r18,16
    40e4:	8c400044 	addi	r17,r17,1
    40e8:	1f000015 	stw	fp,0(r3)
    40ec:	1cc00115 	stw	r19,4(r3)
    40f0:	dc800f15 	stw	r18,60(sp)
    40f4:	dc400e15 	stw	r17,56(sp)
    40f8:	a47ff60e 	bge	r20,r17,40d4 <___vfprintf_internal_r+0xd00>
    40fc:	d9015017 	ldw	r4,1344(sp)
    4100:	b00b883a 	mov	r5,r22
    4104:	d9800d04 	addi	r6,sp,52
    4108:	000337c0 	call	337c <__sprint_r>
    410c:	103e691e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4110:	dc800f17 	ldw	r18,60(sp)
    4114:	dc400e17 	ldw	r17,56(sp)
    4118:	d8c01a04 	addi	r3,sp,104
    411c:	003fee06 	br	40d8 <___vfprintf_internal_r+0xd04>
    4120:	d8814817 	ldw	r2,1312(sp)
    4124:	143fffc4 	addi	r16,r2,-1
    4128:	043e970e 	bge	zero,r16,3b88 <___vfprintf_internal_r+0x7b4>
    412c:	00800404 	movi	r2,16
    4130:	1400180e 	bge	r2,r16,4194 <___vfprintf_internal_r+0xdc0>
    4134:	1029883a 	mov	r20,r2
    4138:	07000074 	movhi	fp,1
    413c:	e73bdf04 	addi	fp,fp,-4228
    4140:	054001c4 	movi	r21,7
    4144:	00000306 	br	4154 <___vfprintf_internal_r+0xd80>
    4148:	9cc00204 	addi	r19,r19,8
    414c:	843ffc04 	addi	r16,r16,-16
    4150:	a400120e 	bge	r20,r16,419c <___vfprintf_internal_r+0xdc8>
    4154:	94800404 	addi	r18,r18,16
    4158:	8c400044 	addi	r17,r17,1
    415c:	9f000015 	stw	fp,0(r19)
    4160:	9d000115 	stw	r20,4(r19)
    4164:	dc800f15 	stw	r18,60(sp)
    4168:	dc400e15 	stw	r17,56(sp)
    416c:	ac7ff60e 	bge	r21,r17,4148 <___vfprintf_internal_r+0xd74>
    4170:	d9015017 	ldw	r4,1344(sp)
    4174:	b00b883a 	mov	r5,r22
    4178:	d9800d04 	addi	r6,sp,52
    417c:	000337c0 	call	337c <__sprint_r>
    4180:	103e4c1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4184:	dc800f17 	ldw	r18,60(sp)
    4188:	dc400e17 	ldw	r17,56(sp)
    418c:	dcc01a04 	addi	r19,sp,104
    4190:	003fee06 	br	414c <___vfprintf_internal_r+0xd78>
    4194:	07000074 	movhi	fp,1
    4198:	e73bdf04 	addi	fp,fp,-4228
    419c:	9425883a 	add	r18,r18,r16
    41a0:	8c400044 	addi	r17,r17,1
    41a4:	008001c4 	movi	r2,7
    41a8:	9f000015 	stw	fp,0(r19)
    41ac:	9c000115 	stw	r16,4(r19)
    41b0:	dc800f15 	stw	r18,60(sp)
    41b4:	dc400e15 	stw	r17,56(sp)
    41b8:	147e720e 	bge	r2,r17,3b84 <___vfprintf_internal_r+0x7b0>
    41bc:	d9015017 	ldw	r4,1344(sp)
    41c0:	b00b883a 	mov	r5,r22
    41c4:	d9800d04 	addi	r6,sp,52
    41c8:	000337c0 	call	337c <__sprint_r>
    41cc:	103e391e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    41d0:	dc800f17 	ldw	r18,60(sp)
    41d4:	dc400e17 	ldw	r17,56(sp)
    41d8:	dcc01a04 	addi	r19,sp,104
    41dc:	003e6a06 	br	3b88 <___vfprintf_internal_r+0x7b4>
    41e0:	d9015017 	ldw	r4,1344(sp)
    41e4:	b00b883a 	mov	r5,r22
    41e8:	d9800d04 	addi	r6,sp,52
    41ec:	d9c15215 	stw	r7,1352(sp)
    41f0:	000337c0 	call	337c <__sprint_r>
    41f4:	d9c15217 	ldw	r7,1352(sp)
    41f8:	103e2e1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    41fc:	dc800f17 	ldw	r18,60(sp)
    4200:	dc400e17 	ldw	r17,56(sp)
    4204:	dd401a04 	addi	r21,sp,104
    4208:	003dba06 	br	38f4 <___vfprintf_internal_r+0x520>
    420c:	d9015017 	ldw	r4,1344(sp)
    4210:	b00b883a 	mov	r5,r22
    4214:	d9800d04 	addi	r6,sp,52
    4218:	000337c0 	call	337c <__sprint_r>
    421c:	103e251e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4220:	dc800f17 	ldw	r18,60(sp)
    4224:	dc400e17 	ldw	r17,56(sp)
    4228:	dcc01a04 	addi	r19,sp,104
    422c:	003e4206 	br	3b38 <___vfprintf_internal_r+0x764>
    4230:	d9015017 	ldw	r4,1344(sp)
    4234:	b00b883a 	mov	r5,r22
    4238:	d9800d04 	addi	r6,sp,52
    423c:	000337c0 	call	337c <__sprint_r>
    4240:	103e1c1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4244:	dc800f17 	ldw	r18,60(sp)
    4248:	dc400e17 	ldw	r17,56(sp)
    424c:	d8c01a04 	addi	r3,sp,104
    4250:	003e2e06 	br	3b0c <___vfprintf_internal_r+0x738>
    4254:	d9414d17 	ldw	r5,1332(sp)
    4258:	2880004c 	andi	r2,r5,1
    425c:	1005003a 	cmpeq	r2,r2,zero
    4260:	103dda1e 	bne	r2,zero,39cc <___vfprintf_internal_r+0x5f8>
    4264:	003e9f06 	br	3ce4 <___vfprintf_internal_r+0x910>
    4268:	d8c14217 	ldw	r3,1288(sp)
    426c:	9125883a 	add	r18,r18,r4
    4270:	8c400044 	addi	r17,r17,1
    4274:	008001c4 	movi	r2,7
    4278:	a8c00015 	stw	r3,0(r21)
    427c:	a9000115 	stw	r4,4(r21)
    4280:	dc800f15 	stw	r18,60(sp)
    4284:	dc400e15 	stw	r17,56(sp)
    4288:	14426c16 	blt	r2,r17,4c3c <___vfprintf_internal_r+0x1868>
    428c:	a8c00204 	addi	r3,r21,8
    4290:	d9414a17 	ldw	r5,1320(sp)
    4294:	00800044 	movi	r2,1
    4298:	94800044 	addi	r18,r18,1
    429c:	8c400044 	addi	r17,r17,1
    42a0:	18800115 	stw	r2,4(r3)
    42a4:	008001c4 	movi	r2,7
    42a8:	19400015 	stw	r5,0(r3)
    42ac:	dc800f15 	stw	r18,60(sp)
    42b0:	dc400e15 	stw	r17,56(sp)
    42b4:	2021883a 	mov	r16,r4
    42b8:	14425616 	blt	r2,r17,4c14 <___vfprintf_internal_r+0x1840>
    42bc:	19400204 	addi	r5,r3,8
    42c0:	d9814817 	ldw	r6,1312(sp)
    42c4:	8c400044 	addi	r17,r17,1
    42c8:	dc400e15 	stw	r17,56(sp)
    42cc:	3107c83a 	sub	r3,r6,r4
    42d0:	d9014217 	ldw	r4,1288(sp)
    42d4:	90e5883a 	add	r18,r18,r3
    42d8:	28c00115 	stw	r3,4(r5)
    42dc:	8105883a 	add	r2,r16,r4
    42e0:	28800015 	stw	r2,0(r5)
    42e4:	008001c4 	movi	r2,7
    42e8:	dc800f15 	stw	r18,60(sp)
    42ec:	147f1d16 	blt	r2,r17,3f64 <___vfprintf_internal_r+0xb90>
    42f0:	28c00204 	addi	r3,r5,8
    42f4:	003db506 	br	39cc <___vfprintf_internal_r+0x5f8>
    42f8:	3c000017 	ldw	r16,0(r7)
    42fc:	3c400117 	ldw	r17,4(r7)
    4300:	39800204 	addi	r6,r7,8
    4304:	01000044 	movi	r4,1
    4308:	d9814115 	stw	r6,1284(sp)
    430c:	d8000405 	stb	zero,16(sp)
    4310:	003ebe06 	br	3e0c <___vfprintf_internal_r+0xa38>
    4314:	3c000017 	ldw	r16,0(r7)
    4318:	3c400117 	ldw	r17,4(r7)
    431c:	38800204 	addi	r2,r7,8
    4320:	d8814115 	stw	r2,1284(sp)
    4324:	003eb706 	br	3e04 <___vfprintf_internal_r+0xa30>
    4328:	3c000017 	ldw	r16,0(r7)
    432c:	3c400117 	ldw	r17,4(r7)
    4330:	39000204 	addi	r4,r7,8
    4334:	d9014115 	stw	r4,1284(sp)
    4338:	0009883a 	mov	r4,zero
    433c:	d8000405 	stb	zero,16(sp)
    4340:	003eb206 	br	3e0c <___vfprintf_internal_r+0xa38>
    4344:	38c00017 	ldw	r3,0(r7)
    4348:	39c00104 	addi	r7,r7,4
    434c:	d8c14b15 	stw	r3,1324(sp)
    4350:	1800d70e 	bge	r3,zero,46b0 <___vfprintf_internal_r+0x12dc>
    4354:	00c7c83a 	sub	r3,zero,r3
    4358:	d8c14b15 	stw	r3,1324(sp)
    435c:	d9014d17 	ldw	r4,1332(sp)
    4360:	b8c00007 	ldb	r3,0(r23)
    4364:	21000114 	ori	r4,r4,4
    4368:	d9014d15 	stw	r4,1332(sp)
    436c:	003c9806 	br	35d0 <___vfprintf_internal_r+0x1fc>
    4370:	d9814d17 	ldw	r6,1332(sp)
    4374:	3080080c 	andi	r2,r6,32
    4378:	1001f626 	beq	r2,zero,4b54 <___vfprintf_internal_r+0x1780>
    437c:	d9014c17 	ldw	r4,1328(sp)
    4380:	38800017 	ldw	r2,0(r7)
    4384:	39c00104 	addi	r7,r7,4
    4388:	d9c14115 	stw	r7,1284(sp)
    438c:	2007d7fa 	srai	r3,r4,31
    4390:	d9c14117 	ldw	r7,1284(sp)
    4394:	11000015 	stw	r4,0(r2)
    4398:	10c00115 	stw	r3,4(r2)
    439c:	003c6906 	br	3544 <___vfprintf_internal_r+0x170>
    43a0:	b8c00007 	ldb	r3,0(r23)
    43a4:	00801b04 	movi	r2,108
    43a8:	18825526 	beq	r3,r2,4d00 <___vfprintf_internal_r+0x192c>
    43ac:	d9414d17 	ldw	r5,1332(sp)
    43b0:	29400414 	ori	r5,r5,16
    43b4:	d9414d15 	stw	r5,1332(sp)
    43b8:	003c8506 	br	35d0 <___vfprintf_internal_r+0x1fc>
    43bc:	d9814d17 	ldw	r6,1332(sp)
    43c0:	b8c00007 	ldb	r3,0(r23)
    43c4:	31800814 	ori	r6,r6,32
    43c8:	d9814d15 	stw	r6,1332(sp)
    43cc:	003c8006 	br	35d0 <___vfprintf_internal_r+0x1fc>
    43d0:	d8814d17 	ldw	r2,1332(sp)
    43d4:	3c000017 	ldw	r16,0(r7)
    43d8:	00c01e04 	movi	r3,120
    43dc:	10800094 	ori	r2,r2,2
    43e0:	d8814d15 	stw	r2,1332(sp)
    43e4:	39c00104 	addi	r7,r7,4
    43e8:	01400074 	movhi	r5,1
    43ec:	297bc704 	addi	r5,r5,-4324
    43f0:	00800c04 	movi	r2,48
    43f4:	0023883a 	mov	r17,zero
    43f8:	01000084 	movi	r4,2
    43fc:	d9c14115 	stw	r7,1284(sp)
    4400:	d8c14e15 	stw	r3,1336(sp)
    4404:	d9414515 	stw	r5,1300(sp)
    4408:	d8800505 	stb	r2,20(sp)
    440c:	d8c00545 	stb	r3,21(sp)
    4410:	d8000405 	stb	zero,16(sp)
    4414:	003e7d06 	br	3e0c <___vfprintf_internal_r+0xa38>
    4418:	d8814d17 	ldw	r2,1332(sp)
    441c:	b8c00007 	ldb	r3,0(r23)
    4420:	10801014 	ori	r2,r2,64
    4424:	d8814d15 	stw	r2,1332(sp)
    4428:	003c6906 	br	35d0 <___vfprintf_internal_r+0x1fc>
    442c:	d9414d17 	ldw	r5,1332(sp)
    4430:	2880020c 	andi	r2,r5,8
    4434:	1001e526 	beq	r2,zero,4bcc <___vfprintf_internal_r+0x17f8>
    4438:	39800017 	ldw	r6,0(r7)
    443c:	38800204 	addi	r2,r7,8
    4440:	d8814115 	stw	r2,1284(sp)
    4444:	d9814315 	stw	r6,1292(sp)
    4448:	39c00117 	ldw	r7,4(r7)
    444c:	d9c14415 	stw	r7,1296(sp)
    4450:	d9014317 	ldw	r4,1292(sp)
    4454:	d9414417 	ldw	r5,1296(sp)
    4458:	000a5700 	call	a570 <__isinfd>
    445c:	10021d26 	beq	r2,zero,4cd4 <___vfprintf_internal_r+0x1900>
    4460:	d9014317 	ldw	r4,1292(sp)
    4464:	d9414417 	ldw	r5,1296(sp)
    4468:	000d883a 	mov	r6,zero
    446c:	000f883a 	mov	r7,zero
    4470:	000cad40 	call	cad4 <__ltdf2>
    4474:	1002d016 	blt	r2,zero,4fb8 <___vfprintf_internal_r+0x1be4>
    4478:	d9414e17 	ldw	r5,1336(sp)
    447c:	008011c4 	movi	r2,71
    4480:	11421016 	blt	r2,r5,4cc4 <___vfprintf_internal_r+0x18f0>
    4484:	01800074 	movhi	r6,1
    4488:	31bbcc04 	addi	r6,r6,-4304
    448c:	d9814215 	stw	r6,1288(sp)
    4490:	d9014d17 	ldw	r4,1332(sp)
    4494:	00c000c4 	movi	r3,3
    4498:	00bfdfc4 	movi	r2,-129
    449c:	2088703a 	and	r4,r4,r2
    44a0:	180f883a 	mov	r7,r3
    44a4:	d8c14615 	stw	r3,1304(sp)
    44a8:	d9014d15 	stw	r4,1332(sp)
    44ac:	d8014715 	stw	zero,1308(sp)
    44b0:	003e6a06 	br	3e5c <___vfprintf_internal_r+0xa88>
    44b4:	38800017 	ldw	r2,0(r7)
    44b8:	00c00044 	movi	r3,1
    44bc:	39c00104 	addi	r7,r7,4
    44c0:	d9c14115 	stw	r7,1284(sp)
    44c4:	d9001004 	addi	r4,sp,64
    44c8:	180f883a 	mov	r7,r3
    44cc:	d8c14615 	stw	r3,1304(sp)
    44d0:	d9014215 	stw	r4,1288(sp)
    44d4:	d8801005 	stb	r2,64(sp)
    44d8:	d8000405 	stb	zero,16(sp)
    44dc:	003cac06 	br	3790 <___vfprintf_internal_r+0x3bc>
    44e0:	01400074 	movhi	r5,1
    44e4:	297bd204 	addi	r5,r5,-4280
    44e8:	d9414515 	stw	r5,1300(sp)
    44ec:	d9814d17 	ldw	r6,1332(sp)
    44f0:	3080080c 	andi	r2,r6,32
    44f4:	1000ff26 	beq	r2,zero,48f4 <___vfprintf_internal_r+0x1520>
    44f8:	3c000017 	ldw	r16,0(r7)
    44fc:	3c400117 	ldw	r17,4(r7)
    4500:	38800204 	addi	r2,r7,8
    4504:	d8814115 	stw	r2,1284(sp)
    4508:	d9414d17 	ldw	r5,1332(sp)
    450c:	2880004c 	andi	r2,r5,1
    4510:	1005003a 	cmpeq	r2,r2,zero
    4514:	1000b91e 	bne	r2,zero,47fc <___vfprintf_internal_r+0x1428>
    4518:	8444b03a 	or	r2,r16,r17
    451c:	1000b726 	beq	r2,zero,47fc <___vfprintf_internal_r+0x1428>
    4520:	d9814e17 	ldw	r6,1336(sp)
    4524:	29400094 	ori	r5,r5,2
    4528:	00800c04 	movi	r2,48
    452c:	01000084 	movi	r4,2
    4530:	d9414d15 	stw	r5,1332(sp)
    4534:	d8800505 	stb	r2,20(sp)
    4538:	d9800545 	stb	r6,21(sp)
    453c:	d8000405 	stb	zero,16(sp)
    4540:	003e3206 	br	3e0c <___vfprintf_internal_r+0xa38>
    4544:	01800074 	movhi	r6,1
    4548:	31bbc704 	addi	r6,r6,-4324
    454c:	d9814515 	stw	r6,1300(sp)
    4550:	003fe606 	br	44ec <___vfprintf_internal_r+0x1118>
    4554:	00800ac4 	movi	r2,43
    4558:	d8800405 	stb	r2,16(sp)
    455c:	b8c00007 	ldb	r3,0(r23)
    4560:	003c1b06 	br	35d0 <___vfprintf_internal_r+0x1fc>
    4564:	d8814d17 	ldw	r2,1332(sp)
    4568:	b8c00007 	ldb	r3,0(r23)
    456c:	10800054 	ori	r2,r2,1
    4570:	d8814d15 	stw	r2,1332(sp)
    4574:	003c1606 	br	35d0 <___vfprintf_internal_r+0x1fc>
    4578:	d8800407 	ldb	r2,16(sp)
    457c:	10004c1e 	bne	r2,zero,46b0 <___vfprintf_internal_r+0x12dc>
    4580:	00800804 	movi	r2,32
    4584:	d8800405 	stb	r2,16(sp)
    4588:	b8c00007 	ldb	r3,0(r23)
    458c:	003c1006 	br	35d0 <___vfprintf_internal_r+0x1fc>
    4590:	d9814d17 	ldw	r6,1332(sp)
    4594:	b8c00007 	ldb	r3,0(r23)
    4598:	31800214 	ori	r6,r6,8
    459c:	d9814d15 	stw	r6,1332(sp)
    45a0:	003c0b06 	br	35d0 <___vfprintf_internal_r+0x1fc>
    45a4:	0009883a 	mov	r4,zero
    45a8:	04000244 	movi	r16,9
    45ac:	01400284 	movi	r5,10
    45b0:	d9c15215 	stw	r7,1352(sp)
    45b4:	000d0940 	call	d094 <__mulsi3>
    45b8:	b9000007 	ldb	r4,0(r23)
    45bc:	d8c14e17 	ldw	r3,1336(sp)
    45c0:	bdc00044 	addi	r23,r23,1
    45c4:	d9014e15 	stw	r4,1336(sp)
    45c8:	d9414e17 	ldw	r5,1336(sp)
    45cc:	1885883a 	add	r2,r3,r2
    45d0:	113ff404 	addi	r4,r2,-48
    45d4:	28bff404 	addi	r2,r5,-48
    45d8:	d9c15217 	ldw	r7,1352(sp)
    45dc:	80bff32e 	bgeu	r16,r2,45ac <___vfprintf_internal_r+0x11d8>
    45e0:	d9014b15 	stw	r4,1324(sp)
    45e4:	003bfc06 	br	35d8 <___vfprintf_internal_r+0x204>
    45e8:	d8814d17 	ldw	r2,1332(sp)
    45ec:	b8c00007 	ldb	r3,0(r23)
    45f0:	10802014 	ori	r2,r2,128
    45f4:	d8814d15 	stw	r2,1332(sp)
    45f8:	003bf506 	br	35d0 <___vfprintf_internal_r+0x1fc>
    45fc:	b8c00007 	ldb	r3,0(r23)
    4600:	00800a84 	movi	r2,42
    4604:	bdc00044 	addi	r23,r23,1
    4608:	18831826 	beq	r3,r2,526c <___vfprintf_internal_r+0x1e98>
    460c:	d8c14e15 	stw	r3,1336(sp)
    4610:	18bff404 	addi	r2,r3,-48
    4614:	00c00244 	movi	r3,9
    4618:	18827b36 	bltu	r3,r2,5008 <___vfprintf_internal_r+0x1c34>
    461c:	1821883a 	mov	r16,r3
    4620:	0009883a 	mov	r4,zero
    4624:	01400284 	movi	r5,10
    4628:	d9c15215 	stw	r7,1352(sp)
    462c:	000d0940 	call	d094 <__mulsi3>
    4630:	d9414e17 	ldw	r5,1336(sp)
    4634:	b9800007 	ldb	r6,0(r23)
    4638:	d9c15217 	ldw	r7,1352(sp)
    463c:	1145883a 	add	r2,r2,r5
    4640:	113ff404 	addi	r4,r2,-48
    4644:	30bff404 	addi	r2,r6,-48
    4648:	d9814e15 	stw	r6,1336(sp)
    464c:	bdc00044 	addi	r23,r23,1
    4650:	80bff42e 	bgeu	r16,r2,4624 <___vfprintf_internal_r+0x1250>
    4654:	2027883a 	mov	r19,r4
    4658:	203bdf0e 	bge	r4,zero,35d8 <___vfprintf_internal_r+0x204>
    465c:	04ffffc4 	movi	r19,-1
    4660:	003bdd06 	br	35d8 <___vfprintf_internal_r+0x204>
    4664:	d8000405 	stb	zero,16(sp)
    4668:	39800017 	ldw	r6,0(r7)
    466c:	39c00104 	addi	r7,r7,4
    4670:	d9c14115 	stw	r7,1284(sp)
    4674:	d9814215 	stw	r6,1288(sp)
    4678:	3001c926 	beq	r6,zero,4da0 <___vfprintf_internal_r+0x19cc>
    467c:	98000e16 	blt	r19,zero,46b8 <___vfprintf_internal_r+0x12e4>
    4680:	d9014217 	ldw	r4,1288(sp)
    4684:	000b883a 	mov	r5,zero
    4688:	980d883a 	mov	r6,r19
    468c:	00089940 	call	8994 <memchr>
    4690:	10025926 	beq	r2,zero,4ff8 <___vfprintf_internal_r+0x1c24>
    4694:	d8c14217 	ldw	r3,1288(sp)
    4698:	10cfc83a 	sub	r7,r2,r3
    469c:	99c19e16 	blt	r19,r7,4d18 <___vfprintf_internal_r+0x1944>
    46a0:	d9c14615 	stw	r7,1304(sp)
    46a4:	38000916 	blt	r7,zero,46cc <___vfprintf_internal_r+0x12f8>
    46a8:	d8014715 	stw	zero,1308(sp)
    46ac:	003deb06 	br	3e5c <___vfprintf_internal_r+0xa88>
    46b0:	b8c00007 	ldb	r3,0(r23)
    46b4:	003bc606 	br	35d0 <___vfprintf_internal_r+0x1fc>
    46b8:	d9014217 	ldw	r4,1288(sp)
    46bc:	00014200 	call	1420 <strlen>
    46c0:	d8814615 	stw	r2,1304(sp)
    46c4:	100f883a 	mov	r7,r2
    46c8:	103ff70e 	bge	r2,zero,46a8 <___vfprintf_internal_r+0x12d4>
    46cc:	d8014615 	stw	zero,1304(sp)
    46d0:	d8014715 	stw	zero,1308(sp)
    46d4:	003de106 	br	3e5c <___vfprintf_internal_r+0xa88>
    46d8:	20c03fcc 	andi	r3,r4,255
    46dc:	00800044 	movi	r2,1
    46e0:	18802d26 	beq	r3,r2,4798 <___vfprintf_internal_r+0x13c4>
    46e4:	18800e36 	bltu	r3,r2,4720 <___vfprintf_internal_r+0x134c>
    46e8:	00800084 	movi	r2,2
    46ec:	1880fa26 	beq	r3,r2,4ad8 <___vfprintf_internal_r+0x1704>
    46f0:	01000074 	movhi	r4,1
    46f4:	213bd704 	addi	r4,r4,-4260
    46f8:	00014200 	call	1420 <strlen>
    46fc:	100f883a 	mov	r7,r2
    4700:	dcc14615 	stw	r19,1304(sp)
    4704:	9880010e 	bge	r19,r2,470c <___vfprintf_internal_r+0x1338>
    4708:	d8814615 	stw	r2,1304(sp)
    470c:	00800074 	movhi	r2,1
    4710:	10bbd704 	addi	r2,r2,-4260
    4714:	dcc14715 	stw	r19,1308(sp)
    4718:	d8814215 	stw	r2,1288(sp)
    471c:	003dcf06 	br	3e5c <___vfprintf_internal_r+0xa88>
    4720:	d9401a04 	addi	r5,sp,104
    4724:	dd001004 	addi	r20,sp,64
    4728:	d9414215 	stw	r5,1288(sp)
    472c:	880a977a 	slli	r5,r17,29
    4730:	d9814217 	ldw	r6,1288(sp)
    4734:	8004d0fa 	srli	r2,r16,3
    4738:	8806d0fa 	srli	r3,r17,3
    473c:	810001cc 	andi	r4,r16,7
    4740:	2884b03a 	or	r2,r5,r2
    4744:	31bfffc4 	addi	r6,r6,-1
    4748:	21000c04 	addi	r4,r4,48
    474c:	d9814215 	stw	r6,1288(sp)
    4750:	10cab03a 	or	r5,r2,r3
    4754:	31000005 	stb	r4,0(r6)
    4758:	1021883a 	mov	r16,r2
    475c:	1823883a 	mov	r17,r3
    4760:	283ff21e 	bne	r5,zero,472c <___vfprintf_internal_r+0x1358>
    4764:	d8c14d17 	ldw	r3,1332(sp)
    4768:	1880004c 	andi	r2,r3,1
    476c:	1005003a 	cmpeq	r2,r2,zero
    4770:	103db31e 	bne	r2,zero,3e40 <___vfprintf_internal_r+0xa6c>
    4774:	20803fcc 	andi	r2,r4,255
    4778:	1080201c 	xori	r2,r2,128
    477c:	10bfe004 	addi	r2,r2,-128
    4780:	00c00c04 	movi	r3,48
    4784:	10fdae26 	beq	r2,r3,3e40 <___vfprintf_internal_r+0xa6c>
    4788:	31bfffc4 	addi	r6,r6,-1
    478c:	d9814215 	stw	r6,1288(sp)
    4790:	30c00005 	stb	r3,0(r6)
    4794:	003daa06 	br	3e40 <___vfprintf_internal_r+0xa6c>
    4798:	88800068 	cmpgeui	r2,r17,1
    479c:	10002c1e 	bne	r2,zero,4850 <___vfprintf_internal_r+0x147c>
    47a0:	8800021e 	bne	r17,zero,47ac <___vfprintf_internal_r+0x13d8>
    47a4:	00800244 	movi	r2,9
    47a8:	14002936 	bltu	r2,r16,4850 <___vfprintf_internal_r+0x147c>
    47ac:	d90019c4 	addi	r4,sp,103
    47b0:	dd001004 	addi	r20,sp,64
    47b4:	d9014215 	stw	r4,1288(sp)
    47b8:	d9014217 	ldw	r4,1288(sp)
    47bc:	80800c04 	addi	r2,r16,48
    47c0:	20800005 	stb	r2,0(r4)
    47c4:	003d9e06 	br	3e40 <___vfprintf_internal_r+0xa6c>
    47c8:	dc400e17 	ldw	r17,56(sp)
    47cc:	07000074 	movhi	fp,1
    47d0:	e73bdf04 	addi	fp,fp,-4228
    47d4:	9425883a 	add	r18,r18,r16
    47d8:	8c400044 	addi	r17,r17,1
    47dc:	008001c4 	movi	r2,7
    47e0:	1f000015 	stw	fp,0(r3)
    47e4:	1c000115 	stw	r16,4(r3)
    47e8:	dc800f15 	stw	r18,60(sp)
    47ec:	dc400e15 	stw	r17,56(sp)
    47f0:	147ddc16 	blt	r2,r17,3f64 <___vfprintf_internal_r+0xb90>
    47f4:	18c00204 	addi	r3,r3,8
    47f8:	003c7406 	br	39cc <___vfprintf_internal_r+0x5f8>
    47fc:	01000084 	movi	r4,2
    4800:	d8000405 	stb	zero,16(sp)
    4804:	003d8106 	br	3e0c <___vfprintf_internal_r+0xa38>
    4808:	d9814d17 	ldw	r6,1332(sp)
    480c:	30c4703a 	and	r2,r6,r3
    4810:	1005003a 	cmpeq	r2,r2,zero
    4814:	103cb326 	beq	r2,zero,3ae4 <___vfprintf_internal_r+0x710>
    4818:	d9014217 	ldw	r4,1288(sp)
    481c:	94800044 	addi	r18,r18,1
    4820:	8c400044 	addi	r17,r17,1
    4824:	008001c4 	movi	r2,7
    4828:	a9000015 	stw	r4,0(r21)
    482c:	a8c00115 	stw	r3,4(r21)
    4830:	dc800f15 	stw	r18,60(sp)
    4834:	dc400e15 	stw	r17,56(sp)
    4838:	147e6016 	blt	r2,r17,41bc <___vfprintf_internal_r+0xde8>
    483c:	acc00204 	addi	r19,r21,8
    4840:	003cd106 	br	3b88 <___vfprintf_internal_r+0x7b4>
    4844:	07000074 	movhi	fp,1
    4848:	e73bdf04 	addi	fp,fp,-4228
    484c:	003c4906 	br	3974 <___vfprintf_internal_r+0x5a0>
    4850:	dd001004 	addi	r20,sp,64
    4854:	dc801a04 	addi	r18,sp,104
    4858:	8009883a 	mov	r4,r16
    485c:	880b883a 	mov	r5,r17
    4860:	01800284 	movi	r6,10
    4864:	000f883a 	mov	r7,zero
    4868:	000b5cc0 	call	b5cc <__umoddi3>
    486c:	12000c04 	addi	r8,r2,48
    4870:	94bfffc4 	addi	r18,r18,-1
    4874:	8009883a 	mov	r4,r16
    4878:	880b883a 	mov	r5,r17
    487c:	01800284 	movi	r6,10
    4880:	000f883a 	mov	r7,zero
    4884:	92000005 	stb	r8,0(r18)
    4888:	000af600 	call	af60 <__udivdi3>
    488c:	1009883a 	mov	r4,r2
    4890:	1021883a 	mov	r16,r2
    4894:	18800068 	cmpgeui	r2,r3,1
    4898:	1823883a 	mov	r17,r3
    489c:	103fee1e 	bne	r2,zero,4858 <___vfprintf_internal_r+0x1484>
    48a0:	1800021e 	bne	r3,zero,48ac <___vfprintf_internal_r+0x14d8>
    48a4:	00800244 	movi	r2,9
    48a8:	113feb36 	bltu	r2,r4,4858 <___vfprintf_internal_r+0x1484>
    48ac:	94bfffc4 	addi	r18,r18,-1
    48b0:	dc814215 	stw	r18,1288(sp)
    48b4:	003fc006 	br	47b8 <___vfprintf_internal_r+0x13e4>
    48b8:	d9014d17 	ldw	r4,1332(sp)
    48bc:	2080004c 	andi	r2,r4,1
    48c0:	10009a1e 	bne	r2,zero,4b2c <___vfprintf_internal_r+0x1758>
    48c4:	d9401a04 	addi	r5,sp,104
    48c8:	dd001004 	addi	r20,sp,64
    48cc:	d9414215 	stw	r5,1288(sp)
    48d0:	003d5b06 	br	3e40 <___vfprintf_internal_r+0xa6c>
    48d4:	d9015017 	ldw	r4,1344(sp)
    48d8:	b00b883a 	mov	r5,r22
    48dc:	d9800d04 	addi	r6,sp,52
    48e0:	000337c0 	call	337c <__sprint_r>
    48e4:	103c731e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    48e8:	dc800f17 	ldw	r18,60(sp)
    48ec:	d8c01a04 	addi	r3,sp,104
    48f0:	003cf906 	br	3cd8 <___vfprintf_internal_r+0x904>
    48f4:	d8c14d17 	ldw	r3,1332(sp)
    48f8:	1880040c 	andi	r2,r3,16
    48fc:	1000711e 	bne	r2,zero,4ac4 <___vfprintf_internal_r+0x16f0>
    4900:	d9014d17 	ldw	r4,1332(sp)
    4904:	2080100c 	andi	r2,r4,64
    4908:	10006e26 	beq	r2,zero,4ac4 <___vfprintf_internal_r+0x16f0>
    490c:	3c00000b 	ldhu	r16,0(r7)
    4910:	0023883a 	mov	r17,zero
    4914:	39c00104 	addi	r7,r7,4
    4918:	d9c14115 	stw	r7,1284(sp)
    491c:	003efa06 	br	4508 <___vfprintf_internal_r+0x1134>
    4920:	dc400e17 	ldw	r17,56(sp)
    4924:	07000074 	movhi	fp,1
    4928:	e73bdf04 	addi	fp,fp,-4228
    492c:	9425883a 	add	r18,r18,r16
    4930:	8c400044 	addi	r17,r17,1
    4934:	008001c4 	movi	r2,7
    4938:	1f000015 	stw	fp,0(r3)
    493c:	1c000115 	stw	r16,4(r3)
    4940:	dc800f15 	stw	r18,60(sp)
    4944:	dc400e15 	stw	r17,56(sp)
    4948:	147d7016 	blt	r2,r17,3f0c <___vfprintf_internal_r+0xb38>
    494c:	18c00204 	addi	r3,r3,8
    4950:	003d7506 	br	3f28 <___vfprintf_internal_r+0xb54>
    4954:	dc800f17 	ldw	r18,60(sp)
    4958:	dc400e17 	ldw	r17,56(sp)
    495c:	07000074 	movhi	fp,1
    4960:	e73be304 	addi	fp,fp,-4212
    4964:	003bba06 	br	3850 <___vfprintf_internal_r+0x47c>
    4968:	d9015017 	ldw	r4,1344(sp)
    496c:	b00b883a 	mov	r5,r22
    4970:	d9800d04 	addi	r6,sp,52
    4974:	000337c0 	call	337c <__sprint_r>
    4978:	103c4e1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    497c:	dc800f17 	ldw	r18,60(sp)
    4980:	d8c01a04 	addi	r3,sp,104
    4984:	003ce306 	br	3d14 <___vfprintf_internal_r+0x940>
    4988:	3c000017 	ldw	r16,0(r7)
    498c:	0009883a 	mov	r4,zero
    4990:	39c00104 	addi	r7,r7,4
    4994:	0023883a 	mov	r17,zero
    4998:	d9c14115 	stw	r7,1284(sp)
    499c:	d8000405 	stb	zero,16(sp)
    49a0:	003d1a06 	br	3e0c <___vfprintf_internal_r+0xa38>
    49a4:	38800017 	ldw	r2,0(r7)
    49a8:	39c00104 	addi	r7,r7,4
    49ac:	d9c14115 	stw	r7,1284(sp)
    49b0:	1023d7fa 	srai	r17,r2,31
    49b4:	1021883a 	mov	r16,r2
    49b8:	003d1206 	br	3e04 <___vfprintf_internal_r+0xa30>
    49bc:	3c000017 	ldw	r16,0(r7)
    49c0:	01000044 	movi	r4,1
    49c4:	39c00104 	addi	r7,r7,4
    49c8:	0023883a 	mov	r17,zero
    49cc:	d9c14115 	stw	r7,1284(sp)
    49d0:	d8000405 	stb	zero,16(sp)
    49d4:	003d0d06 	br	3e0c <___vfprintf_internal_r+0xa38>
    49d8:	00800074 	movhi	r2,1
    49dc:	10bbde04 	addi	r2,r2,-4232
    49e0:	94800044 	addi	r18,r18,1
    49e4:	8c400044 	addi	r17,r17,1
    49e8:	a8800015 	stw	r2,0(r21)
    49ec:	00c00044 	movi	r3,1
    49f0:	008001c4 	movi	r2,7
    49f4:	a8c00115 	stw	r3,4(r21)
    49f8:	dc800f15 	stw	r18,60(sp)
    49fc:	dc400e15 	stw	r17,56(sp)
    4a00:	1440ca16 	blt	r2,r17,4d2c <___vfprintf_internal_r+0x1958>
    4a04:	a8c00204 	addi	r3,r21,8
    4a08:	2000061e 	bne	r4,zero,4a24 <___vfprintf_internal_r+0x1650>
    4a0c:	d9414817 	ldw	r5,1312(sp)
    4a10:	2800041e 	bne	r5,zero,4a24 <___vfprintf_internal_r+0x1650>
    4a14:	d9814d17 	ldw	r6,1332(sp)
    4a18:	3080004c 	andi	r2,r6,1
    4a1c:	1005003a 	cmpeq	r2,r2,zero
    4a20:	103bea1e 	bne	r2,zero,39cc <___vfprintf_internal_r+0x5f8>
    4a24:	00800044 	movi	r2,1
    4a28:	dc400e17 	ldw	r17,56(sp)
    4a2c:	18800115 	stw	r2,4(r3)
    4a30:	d8814a17 	ldw	r2,1320(sp)
    4a34:	94800044 	addi	r18,r18,1
    4a38:	8c400044 	addi	r17,r17,1
    4a3c:	18800015 	stw	r2,0(r3)
    4a40:	008001c4 	movi	r2,7
    4a44:	dc800f15 	stw	r18,60(sp)
    4a48:	dc400e15 	stw	r17,56(sp)
    4a4c:	1440ca16 	blt	r2,r17,4d78 <___vfprintf_internal_r+0x19a4>
    4a50:	18c00204 	addi	r3,r3,8
    4a54:	0121c83a 	sub	r16,zero,r4
    4a58:	0400500e 	bge	zero,r16,4b9c <___vfprintf_internal_r+0x17c8>
    4a5c:	00800404 	movi	r2,16
    4a60:	1400800e 	bge	r2,r16,4c64 <___vfprintf_internal_r+0x1890>
    4a64:	1027883a 	mov	r19,r2
    4a68:	07000074 	movhi	fp,1
    4a6c:	e73bdf04 	addi	fp,fp,-4228
    4a70:	050001c4 	movi	r20,7
    4a74:	00000306 	br	4a84 <___vfprintf_internal_r+0x16b0>
    4a78:	18c00204 	addi	r3,r3,8
    4a7c:	843ffc04 	addi	r16,r16,-16
    4a80:	9c007a0e 	bge	r19,r16,4c6c <___vfprintf_internal_r+0x1898>
    4a84:	94800404 	addi	r18,r18,16
    4a88:	8c400044 	addi	r17,r17,1
    4a8c:	1f000015 	stw	fp,0(r3)
    4a90:	1cc00115 	stw	r19,4(r3)
    4a94:	dc800f15 	stw	r18,60(sp)
    4a98:	dc400e15 	stw	r17,56(sp)
    4a9c:	a47ff60e 	bge	r20,r17,4a78 <___vfprintf_internal_r+0x16a4>
    4aa0:	d9015017 	ldw	r4,1344(sp)
    4aa4:	b00b883a 	mov	r5,r22
    4aa8:	d9800d04 	addi	r6,sp,52
    4aac:	000337c0 	call	337c <__sprint_r>
    4ab0:	103c001e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4ab4:	dc800f17 	ldw	r18,60(sp)
    4ab8:	dc400e17 	ldw	r17,56(sp)
    4abc:	d8c01a04 	addi	r3,sp,104
    4ac0:	003fee06 	br	4a7c <___vfprintf_internal_r+0x16a8>
    4ac4:	3c000017 	ldw	r16,0(r7)
    4ac8:	0023883a 	mov	r17,zero
    4acc:	39c00104 	addi	r7,r7,4
    4ad0:	d9c14115 	stw	r7,1284(sp)
    4ad4:	003e8c06 	br	4508 <___vfprintf_internal_r+0x1134>
    4ad8:	d9401a04 	addi	r5,sp,104
    4adc:	dd001004 	addi	r20,sp,64
    4ae0:	d9414215 	stw	r5,1288(sp)
    4ae4:	d9814517 	ldw	r6,1300(sp)
    4ae8:	880a973a 	slli	r5,r17,28
    4aec:	8004d13a 	srli	r2,r16,4
    4af0:	810003cc 	andi	r4,r16,15
    4af4:	3109883a 	add	r4,r6,r4
    4af8:	2884b03a 	or	r2,r5,r2
    4afc:	21400003 	ldbu	r5,0(r4)
    4b00:	d9014217 	ldw	r4,1288(sp)
    4b04:	8806d13a 	srli	r3,r17,4
    4b08:	1021883a 	mov	r16,r2
    4b0c:	213fffc4 	addi	r4,r4,-1
    4b10:	d9014215 	stw	r4,1288(sp)
    4b14:	d9814217 	ldw	r6,1288(sp)
    4b18:	10c8b03a 	or	r4,r2,r3
    4b1c:	1823883a 	mov	r17,r3
    4b20:	31400005 	stb	r5,0(r6)
    4b24:	203fef1e 	bne	r4,zero,4ae4 <___vfprintf_internal_r+0x1710>
    4b28:	003cc506 	br	3e40 <___vfprintf_internal_r+0xa6c>
    4b2c:	00800c04 	movi	r2,48
    4b30:	d98019c4 	addi	r6,sp,103
    4b34:	dd001004 	addi	r20,sp,64
    4b38:	d88019c5 	stb	r2,103(sp)
    4b3c:	d9814215 	stw	r6,1288(sp)
    4b40:	003cbf06 	br	3e40 <___vfprintf_internal_r+0xa6c>
    4b44:	dc400e17 	ldw	r17,56(sp)
    4b48:	07000074 	movhi	fp,1
    4b4c:	e73be304 	addi	fp,fp,-4212
    4b50:	003bc106 	br	3a58 <___vfprintf_internal_r+0x684>
    4b54:	d9414d17 	ldw	r5,1332(sp)
    4b58:	2880040c 	andi	r2,r5,16
    4b5c:	10007c26 	beq	r2,zero,4d50 <___vfprintf_internal_r+0x197c>
    4b60:	38800017 	ldw	r2,0(r7)
    4b64:	39c00104 	addi	r7,r7,4
    4b68:	d9c14115 	stw	r7,1284(sp)
    4b6c:	d9814c17 	ldw	r6,1328(sp)
    4b70:	d9c14117 	ldw	r7,1284(sp)
    4b74:	11800015 	stw	r6,0(r2)
    4b78:	003a7206 	br	3544 <___vfprintf_internal_r+0x170>
    4b7c:	d9015017 	ldw	r4,1344(sp)
    4b80:	b00b883a 	mov	r5,r22
    4b84:	d9800d04 	addi	r6,sp,52
    4b88:	000337c0 	call	337c <__sprint_r>
    4b8c:	103bc91e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4b90:	dc800f17 	ldw	r18,60(sp)
    4b94:	dc400e17 	ldw	r17,56(sp)
    4b98:	d8c01a04 	addi	r3,sp,104
    4b9c:	d9014817 	ldw	r4,1312(sp)
    4ba0:	d9414217 	ldw	r5,1288(sp)
    4ba4:	8c400044 	addi	r17,r17,1
    4ba8:	9125883a 	add	r18,r18,r4
    4bac:	008001c4 	movi	r2,7
    4bb0:	19400015 	stw	r5,0(r3)
    4bb4:	19000115 	stw	r4,4(r3)
    4bb8:	dc800f15 	stw	r18,60(sp)
    4bbc:	dc400e15 	stw	r17,56(sp)
    4bc0:	147ce816 	blt	r2,r17,3f64 <___vfprintf_internal_r+0xb90>
    4bc4:	18c00204 	addi	r3,r3,8
    4bc8:	003b8006 	br	39cc <___vfprintf_internal_r+0x5f8>
    4bcc:	38c00017 	ldw	r3,0(r7)
    4bd0:	39000204 	addi	r4,r7,8
    4bd4:	d9014115 	stw	r4,1284(sp)
    4bd8:	d8c14315 	stw	r3,1292(sp)
    4bdc:	39c00117 	ldw	r7,4(r7)
    4be0:	d9c14415 	stw	r7,1296(sp)
    4be4:	003e1a06 	br	4450 <___vfprintf_internal_r+0x107c>
    4be8:	0005883a 	mov	r2,zero
    4bec:	1409c83a 	sub	r4,r2,r16
    4bf0:	1105803a 	cmpltu	r2,r2,r4
    4bf4:	044bc83a 	sub	r5,zero,r17
    4bf8:	2885c83a 	sub	r2,r5,r2
    4bfc:	2021883a 	mov	r16,r4
    4c00:	1023883a 	mov	r17,r2
    4c04:	01000044 	movi	r4,1
    4c08:	00800b44 	movi	r2,45
    4c0c:	d8800405 	stb	r2,16(sp)
    4c10:	003c7e06 	br	3e0c <___vfprintf_internal_r+0xa38>
    4c14:	d9015017 	ldw	r4,1344(sp)
    4c18:	b00b883a 	mov	r5,r22
    4c1c:	d9800d04 	addi	r6,sp,52
    4c20:	000337c0 	call	337c <__sprint_r>
    4c24:	103ba31e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4c28:	dc800f17 	ldw	r18,60(sp)
    4c2c:	dc400e17 	ldw	r17,56(sp)
    4c30:	d9000617 	ldw	r4,24(sp)
    4c34:	d9401a04 	addi	r5,sp,104
    4c38:	003da106 	br	42c0 <___vfprintf_internal_r+0xeec>
    4c3c:	d9015017 	ldw	r4,1344(sp)
    4c40:	b00b883a 	mov	r5,r22
    4c44:	d9800d04 	addi	r6,sp,52
    4c48:	000337c0 	call	337c <__sprint_r>
    4c4c:	103b991e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4c50:	dc800f17 	ldw	r18,60(sp)
    4c54:	dc400e17 	ldw	r17,56(sp)
    4c58:	d9000617 	ldw	r4,24(sp)
    4c5c:	d8c01a04 	addi	r3,sp,104
    4c60:	003d8b06 	br	4290 <___vfprintf_internal_r+0xebc>
    4c64:	07000074 	movhi	fp,1
    4c68:	e73bdf04 	addi	fp,fp,-4228
    4c6c:	9425883a 	add	r18,r18,r16
    4c70:	8c400044 	addi	r17,r17,1
    4c74:	008001c4 	movi	r2,7
    4c78:	1f000015 	stw	fp,0(r3)
    4c7c:	1c000115 	stw	r16,4(r3)
    4c80:	dc800f15 	stw	r18,60(sp)
    4c84:	dc400e15 	stw	r17,56(sp)
    4c88:	147fbc16 	blt	r2,r17,4b7c <___vfprintf_internal_r+0x17a8>
    4c8c:	18c00204 	addi	r3,r3,8
    4c90:	003fc206 	br	4b9c <___vfprintf_internal_r+0x17c8>
    4c94:	d9015017 	ldw	r4,1344(sp)
    4c98:	b00b883a 	mov	r5,r22
    4c9c:	d9800d04 	addi	r6,sp,52
    4ca0:	000337c0 	call	337c <__sprint_r>
    4ca4:	103b831e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4ca8:	dc800f17 	ldw	r18,60(sp)
    4cac:	d9000617 	ldw	r4,24(sp)
    4cb0:	d8c01a04 	addi	r3,sp,104
    4cb4:	003cfc06 	br	40a8 <___vfprintf_internal_r+0xcd4>
    4cb8:	07000074 	movhi	fp,1
    4cbc:	e73bdf04 	addi	fp,fp,-4228
    4cc0:	003bde06 	br	3c3c <___vfprintf_internal_r+0x868>
    4cc4:	00800074 	movhi	r2,1
    4cc8:	10bbcd04 	addi	r2,r2,-4300
    4ccc:	d8814215 	stw	r2,1288(sp)
    4cd0:	003def06 	br	4490 <___vfprintf_internal_r+0x10bc>
    4cd4:	d9014317 	ldw	r4,1292(sp)
    4cd8:	d9414417 	ldw	r5,1296(sp)
    4cdc:	000a5b00 	call	a5b0 <__isnand>
    4ce0:	10003926 	beq	r2,zero,4dc8 <___vfprintf_internal_r+0x19f4>
    4ce4:	d9414e17 	ldw	r5,1336(sp)
    4ce8:	008011c4 	movi	r2,71
    4cec:	1140ce16 	blt	r2,r5,5028 <___vfprintf_internal_r+0x1c54>
    4cf0:	01800074 	movhi	r6,1
    4cf4:	31bbce04 	addi	r6,r6,-4296
    4cf8:	d9814215 	stw	r6,1288(sp)
    4cfc:	003de406 	br	4490 <___vfprintf_internal_r+0x10bc>
    4d00:	d9014d17 	ldw	r4,1332(sp)
    4d04:	bdc00044 	addi	r23,r23,1
    4d08:	b8c00007 	ldb	r3,0(r23)
    4d0c:	21000814 	ori	r4,r4,32
    4d10:	d9014d15 	stw	r4,1332(sp)
    4d14:	003a2e06 	br	35d0 <___vfprintf_internal_r+0x1fc>
    4d18:	dcc14615 	stw	r19,1304(sp)
    4d1c:	98011016 	blt	r19,zero,5160 <___vfprintf_internal_r+0x1d8c>
    4d20:	980f883a 	mov	r7,r19
    4d24:	d8014715 	stw	zero,1308(sp)
    4d28:	003c4c06 	br	3e5c <___vfprintf_internal_r+0xa88>
    4d2c:	d9015017 	ldw	r4,1344(sp)
    4d30:	b00b883a 	mov	r5,r22
    4d34:	d9800d04 	addi	r6,sp,52
    4d38:	000337c0 	call	337c <__sprint_r>
    4d3c:	103b5d1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4d40:	dc800f17 	ldw	r18,60(sp)
    4d44:	d9000617 	ldw	r4,24(sp)
    4d48:	d8c01a04 	addi	r3,sp,104
    4d4c:	003f2e06 	br	4a08 <___vfprintf_internal_r+0x1634>
    4d50:	d8c14d17 	ldw	r3,1332(sp)
    4d54:	1880100c 	andi	r2,r3,64
    4d58:	1000a026 	beq	r2,zero,4fdc <___vfprintf_internal_r+0x1c08>
    4d5c:	38800017 	ldw	r2,0(r7)
    4d60:	39c00104 	addi	r7,r7,4
    4d64:	d9c14115 	stw	r7,1284(sp)
    4d68:	d9014c17 	ldw	r4,1328(sp)
    4d6c:	d9c14117 	ldw	r7,1284(sp)
    4d70:	1100000d 	sth	r4,0(r2)
    4d74:	0039f306 	br	3544 <___vfprintf_internal_r+0x170>
    4d78:	d9015017 	ldw	r4,1344(sp)
    4d7c:	b00b883a 	mov	r5,r22
    4d80:	d9800d04 	addi	r6,sp,52
    4d84:	000337c0 	call	337c <__sprint_r>
    4d88:	103b4a1e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4d8c:	dc800f17 	ldw	r18,60(sp)
    4d90:	dc400e17 	ldw	r17,56(sp)
    4d94:	d9000617 	ldw	r4,24(sp)
    4d98:	d8c01a04 	addi	r3,sp,104
    4d9c:	003f2d06 	br	4a54 <___vfprintf_internal_r+0x1680>
    4da0:	00800184 	movi	r2,6
    4da4:	14c09a36 	bltu	r2,r19,5010 <___vfprintf_internal_r+0x1c3c>
    4da8:	dcc14615 	stw	r19,1304(sp)
    4dac:	9800010e 	bge	r19,zero,4db4 <___vfprintf_internal_r+0x19e0>
    4db0:	d8014615 	stw	zero,1304(sp)
    4db4:	00800074 	movhi	r2,1
    4db8:	10bbd004 	addi	r2,r2,-4288
    4dbc:	980f883a 	mov	r7,r19
    4dc0:	d8814215 	stw	r2,1288(sp)
    4dc4:	003a7206 	br	3790 <___vfprintf_internal_r+0x3bc>
    4dc8:	00bfffc4 	movi	r2,-1
    4dcc:	9880e226 	beq	r19,r2,5158 <___vfprintf_internal_r+0x1d84>
    4dd0:	d9414e17 	ldw	r5,1336(sp)
    4dd4:	008019c4 	movi	r2,103
    4dd8:	2880dc26 	beq	r5,r2,514c <___vfprintf_internal_r+0x1d78>
    4ddc:	008011c4 	movi	r2,71
    4de0:	2880da26 	beq	r5,r2,514c <___vfprintf_internal_r+0x1d78>
    4de4:	d9414d17 	ldw	r5,1332(sp)
    4de8:	d9014417 	ldw	r4,1296(sp)
    4dec:	d9814317 	ldw	r6,1292(sp)
    4df0:	29404014 	ori	r5,r5,256
    4df4:	d9414d15 	stw	r5,1332(sp)
    4df8:	2000cc16 	blt	r4,zero,512c <___vfprintf_internal_r+0x1d58>
    4dfc:	3021883a 	mov	r16,r6
    4e00:	2023883a 	mov	r17,r4
    4e04:	0039883a 	mov	fp,zero
    4e08:	d9414e17 	ldw	r5,1336(sp)
    4e0c:	00801984 	movi	r2,102
    4e10:	2880b726 	beq	r5,r2,50f0 <___vfprintf_internal_r+0x1d1c>
    4e14:	00801184 	movi	r2,70
    4e18:	2880b526 	beq	r5,r2,50f0 <___vfprintf_internal_r+0x1d1c>
    4e1c:	00801944 	movi	r2,101
    4e20:	2880c826 	beq	r5,r2,5144 <___vfprintf_internal_r+0x1d70>
    4e24:	00801144 	movi	r2,69
    4e28:	2880c626 	beq	r5,r2,5144 <___vfprintf_internal_r+0x1d70>
    4e2c:	9829883a 	mov	r20,r19
    4e30:	d9015017 	ldw	r4,1344(sp)
    4e34:	d8800604 	addi	r2,sp,24
    4e38:	880d883a 	mov	r6,r17
    4e3c:	d8800115 	stw	r2,4(sp)
    4e40:	d8c00704 	addi	r3,sp,28
    4e44:	d8800804 	addi	r2,sp,32
    4e48:	800b883a 	mov	r5,r16
    4e4c:	01c00084 	movi	r7,2
    4e50:	d8c00215 	stw	r3,8(sp)
    4e54:	d8800315 	stw	r2,12(sp)
    4e58:	dd000015 	stw	r20,0(sp)
    4e5c:	000563c0 	call	563c <_dtoa_r>
    4e60:	d9814e17 	ldw	r6,1336(sp)
    4e64:	d8814215 	stw	r2,1288(sp)
    4e68:	008019c4 	movi	r2,103
    4e6c:	30809526 	beq	r6,r2,50c4 <___vfprintf_internal_r+0x1cf0>
    4e70:	d8c14e17 	ldw	r3,1336(sp)
    4e74:	008011c4 	movi	r2,71
    4e78:	18809226 	beq	r3,r2,50c4 <___vfprintf_internal_r+0x1cf0>
    4e7c:	d9414217 	ldw	r5,1288(sp)
    4e80:	d9814e17 	ldw	r6,1336(sp)
    4e84:	00801984 	movi	r2,102
    4e88:	2d25883a 	add	r18,r5,r20
    4e8c:	30808626 	beq	r6,r2,50a8 <___vfprintf_internal_r+0x1cd4>
    4e90:	00801184 	movi	r2,70
    4e94:	30808426 	beq	r6,r2,50a8 <___vfprintf_internal_r+0x1cd4>
    4e98:	000d883a 	mov	r6,zero
    4e9c:	000f883a 	mov	r7,zero
    4ea0:	880b883a 	mov	r5,r17
    4ea4:	8009883a 	mov	r4,r16
    4ea8:	000c8b40 	call	c8b4 <__eqdf2>
    4eac:	1000751e 	bne	r2,zero,5084 <___vfprintf_internal_r+0x1cb0>
    4eb0:	9005883a 	mov	r2,r18
    4eb4:	dc800815 	stw	r18,32(sp)
    4eb8:	d9014217 	ldw	r4,1288(sp)
    4ebc:	d9414e17 	ldw	r5,1336(sp)
    4ec0:	00c019c4 	movi	r3,103
    4ec4:	1125c83a 	sub	r18,r2,r4
    4ec8:	28c06826 	beq	r5,r3,506c <___vfprintf_internal_r+0x1c98>
    4ecc:	008011c4 	movi	r2,71
    4ed0:	28806626 	beq	r5,r2,506c <___vfprintf_internal_r+0x1c98>
    4ed4:	d9000617 	ldw	r4,24(sp)
    4ed8:	d8c14e17 	ldw	r3,1336(sp)
    4edc:	00801944 	movi	r2,101
    4ee0:	10c05516 	blt	r2,r3,5038 <___vfprintf_internal_r+0x1c64>
    4ee4:	213fffc4 	addi	r4,r4,-1
    4ee8:	d9000615 	stw	r4,24(sp)
    4eec:	d8c00905 	stb	r3,36(sp)
    4ef0:	2021883a 	mov	r16,r4
    4ef4:	2000c116 	blt	r4,zero,51fc <___vfprintf_internal_r+0x1e28>
    4ef8:	00800ac4 	movi	r2,43
    4efc:	d8800945 	stb	r2,37(sp)
    4f00:	00800244 	movi	r2,9
    4f04:	1400af0e 	bge	r2,r16,51c4 <___vfprintf_internal_r+0x1df0>
    4f08:	1027883a 	mov	r19,r2
    4f0c:	dc400cc4 	addi	r17,sp,51
    4f10:	8009883a 	mov	r4,r16
    4f14:	01400284 	movi	r5,10
    4f18:	000d0240 	call	d024 <__modsi3>
    4f1c:	10800c04 	addi	r2,r2,48
    4f20:	8c7fffc4 	addi	r17,r17,-1
    4f24:	8009883a 	mov	r4,r16
    4f28:	01400284 	movi	r5,10
    4f2c:	88800005 	stb	r2,0(r17)
    4f30:	000cfc40 	call	cfc4 <__divsi3>
    4f34:	1021883a 	mov	r16,r2
    4f38:	98bff516 	blt	r19,r2,4f10 <___vfprintf_internal_r+0x1b3c>
    4f3c:	10c00c04 	addi	r3,r2,48
    4f40:	d8800b04 	addi	r2,sp,44
    4f44:	108001c4 	addi	r2,r2,7
    4f48:	897fffc4 	addi	r5,r17,-1
    4f4c:	88ffffc5 	stb	r3,-1(r17)
    4f50:	2880a72e 	bgeu	r5,r2,51f0 <___vfprintf_internal_r+0x1e1c>
    4f54:	1009883a 	mov	r4,r2
    4f58:	d9800904 	addi	r6,sp,36
    4f5c:	d8c00984 	addi	r3,sp,38
    4f60:	28800003 	ldbu	r2,0(r5)
    4f64:	29400044 	addi	r5,r5,1
    4f68:	18800005 	stb	r2,0(r3)
    4f6c:	18c00044 	addi	r3,r3,1
    4f70:	293ffb36 	bltu	r5,r4,4f60 <___vfprintf_internal_r+0x1b8c>
    4f74:	1987c83a 	sub	r3,r3,r6
    4f78:	00800044 	movi	r2,1
    4f7c:	d8c14915 	stw	r3,1316(sp)
    4f80:	90cf883a 	add	r7,r18,r3
    4f84:	1480960e 	bge	r2,r18,51e0 <___vfprintf_internal_r+0x1e0c>
    4f88:	39c00044 	addi	r7,r7,1
    4f8c:	d9c14615 	stw	r7,1304(sp)
    4f90:	38003416 	blt	r7,zero,5064 <___vfprintf_internal_r+0x1c90>
    4f94:	e0803fcc 	andi	r2,fp,255
    4f98:	1080201c 	xori	r2,r2,128
    4f9c:	10bfe004 	addi	r2,r2,-128
    4fa0:	10004e26 	beq	r2,zero,50dc <___vfprintf_internal_r+0x1d08>
    4fa4:	00800b44 	movi	r2,45
    4fa8:	dc814815 	stw	r18,1312(sp)
    4fac:	d8014715 	stw	zero,1308(sp)
    4fb0:	d8800405 	stb	r2,16(sp)
    4fb4:	003bab06 	br	3e64 <___vfprintf_internal_r+0xa90>
    4fb8:	00800b44 	movi	r2,45
    4fbc:	d8800405 	stb	r2,16(sp)
    4fc0:	003d2d06 	br	4478 <___vfprintf_internal_r+0x10a4>
    4fc4:	d9015017 	ldw	r4,1344(sp)
    4fc8:	b00b883a 	mov	r5,r22
    4fcc:	d9800d04 	addi	r6,sp,52
    4fd0:	000337c0 	call	337c <__sprint_r>
    4fd4:	103ab71e 	bne	r2,zero,3ab4 <___vfprintf_internal_r+0x6e0>
    4fd8:	003ab506 	br	3ab0 <___vfprintf_internal_r+0x6dc>
    4fdc:	38800017 	ldw	r2,0(r7)
    4fe0:	39c00104 	addi	r7,r7,4
    4fe4:	d9c14115 	stw	r7,1284(sp)
    4fe8:	d9414c17 	ldw	r5,1328(sp)
    4fec:	d9c14117 	ldw	r7,1284(sp)
    4ff0:	11400015 	stw	r5,0(r2)
    4ff4:	00395306 	br	3544 <___vfprintf_internal_r+0x170>
    4ff8:	980f883a 	mov	r7,r19
    4ffc:	dcc14615 	stw	r19,1304(sp)
    5000:	d8014715 	stw	zero,1308(sp)
    5004:	003b9506 	br	3e5c <___vfprintf_internal_r+0xa88>
    5008:	0027883a 	mov	r19,zero
    500c:	00397206 	br	35d8 <___vfprintf_internal_r+0x204>
    5010:	00c00074 	movhi	r3,1
    5014:	18fbd004 	addi	r3,r3,-4288
    5018:	100f883a 	mov	r7,r2
    501c:	d8814615 	stw	r2,1304(sp)
    5020:	d8c14215 	stw	r3,1288(sp)
    5024:	0039da06 	br	3790 <___vfprintf_internal_r+0x3bc>
    5028:	00800074 	movhi	r2,1
    502c:	10bbcf04 	addi	r2,r2,-4292
    5030:	d8814215 	stw	r2,1288(sp)
    5034:	003d1606 	br	4490 <___vfprintf_internal_r+0x10bc>
    5038:	d9414e17 	ldw	r5,1336(sp)
    503c:	00801984 	movi	r2,102
    5040:	28804926 	beq	r5,r2,5168 <___vfprintf_internal_r+0x1d94>
    5044:	200f883a 	mov	r7,r4
    5048:	24805716 	blt	r4,r18,51a8 <___vfprintf_internal_r+0x1dd4>
    504c:	d9414d17 	ldw	r5,1332(sp)
    5050:	2880004c 	andi	r2,r5,1
    5054:	10000126 	beq	r2,zero,505c <___vfprintf_internal_r+0x1c88>
    5058:	21c00044 	addi	r7,r4,1
    505c:	d9c14615 	stw	r7,1304(sp)
    5060:	383fcc0e 	bge	r7,zero,4f94 <___vfprintf_internal_r+0x1bc0>
    5064:	d8014615 	stw	zero,1304(sp)
    5068:	003fca06 	br	4f94 <___vfprintf_internal_r+0x1bc0>
    506c:	d9000617 	ldw	r4,24(sp)
    5070:	00bfff04 	movi	r2,-4
    5074:	1100480e 	bge	r2,r4,5198 <___vfprintf_internal_r+0x1dc4>
    5078:	99004716 	blt	r19,r4,5198 <___vfprintf_internal_r+0x1dc4>
    507c:	d8c14e15 	stw	r3,1336(sp)
    5080:	003ff006 	br	5044 <___vfprintf_internal_r+0x1c70>
    5084:	d8800817 	ldw	r2,32(sp)
    5088:	14bf8b2e 	bgeu	r2,r18,4eb8 <___vfprintf_internal_r+0x1ae4>
    508c:	9007883a 	mov	r3,r18
    5090:	01000c04 	movi	r4,48
    5094:	11000005 	stb	r4,0(r2)
    5098:	10800044 	addi	r2,r2,1
    509c:	d8800815 	stw	r2,32(sp)
    50a0:	18bffc1e 	bne	r3,r2,5094 <___vfprintf_internal_r+0x1cc0>
    50a4:	003f8406 	br	4eb8 <___vfprintf_internal_r+0x1ae4>
    50a8:	d8814217 	ldw	r2,1288(sp)
    50ac:	10c00007 	ldb	r3,0(r2)
    50b0:	00800c04 	movi	r2,48
    50b4:	18805b26 	beq	r3,r2,5224 <___vfprintf_internal_r+0x1e50>
    50b8:	d9000617 	ldw	r4,24(sp)
    50bc:	9125883a 	add	r18,r18,r4
    50c0:	003f7506 	br	4e98 <___vfprintf_internal_r+0x1ac4>
    50c4:	d9014d17 	ldw	r4,1332(sp)
    50c8:	2080004c 	andi	r2,r4,1
    50cc:	1005003a 	cmpeq	r2,r2,zero
    50d0:	103f6a26 	beq	r2,zero,4e7c <___vfprintf_internal_r+0x1aa8>
    50d4:	d8800817 	ldw	r2,32(sp)
    50d8:	003f7706 	br	4eb8 <___vfprintf_internal_r+0x1ae4>
    50dc:	d9c14615 	stw	r7,1304(sp)
    50e0:	38004d16 	blt	r7,zero,5218 <___vfprintf_internal_r+0x1e44>
    50e4:	dc814815 	stw	r18,1312(sp)
    50e8:	d8014715 	stw	zero,1308(sp)
    50ec:	003b5b06 	br	3e5c <___vfprintf_internal_r+0xa88>
    50f0:	d9015017 	ldw	r4,1344(sp)
    50f4:	d8800604 	addi	r2,sp,24
    50f8:	d8800115 	stw	r2,4(sp)
    50fc:	d8c00704 	addi	r3,sp,28
    5100:	d8800804 	addi	r2,sp,32
    5104:	800b883a 	mov	r5,r16
    5108:	880d883a 	mov	r6,r17
    510c:	01c000c4 	movi	r7,3
    5110:	d8c00215 	stw	r3,8(sp)
    5114:	d8800315 	stw	r2,12(sp)
    5118:	dcc00015 	stw	r19,0(sp)
    511c:	9829883a 	mov	r20,r19
    5120:	000563c0 	call	563c <_dtoa_r>
    5124:	d8814215 	stw	r2,1288(sp)
    5128:	003f5106 	br	4e70 <___vfprintf_internal_r+0x1a9c>
    512c:	d8c14317 	ldw	r3,1292(sp)
    5130:	d9014417 	ldw	r4,1296(sp)
    5134:	07000b44 	movi	fp,45
    5138:	1821883a 	mov	r16,r3
    513c:	2460003c 	xorhi	r17,r4,32768
    5140:	003f3106 	br	4e08 <___vfprintf_internal_r+0x1a34>
    5144:	9d000044 	addi	r20,r19,1
    5148:	003f3906 	br	4e30 <___vfprintf_internal_r+0x1a5c>
    514c:	983f251e 	bne	r19,zero,4de4 <___vfprintf_internal_r+0x1a10>
    5150:	04c00044 	movi	r19,1
    5154:	003f2306 	br	4de4 <___vfprintf_internal_r+0x1a10>
    5158:	04c00184 	movi	r19,6
    515c:	003f2106 	br	4de4 <___vfprintf_internal_r+0x1a10>
    5160:	d8014615 	stw	zero,1304(sp)
    5164:	003eee06 	br	4d20 <___vfprintf_internal_r+0x194c>
    5168:	200f883a 	mov	r7,r4
    516c:	0100370e 	bge	zero,r4,524c <___vfprintf_internal_r+0x1e78>
    5170:	9800031e 	bne	r19,zero,5180 <___vfprintf_internal_r+0x1dac>
    5174:	d9814d17 	ldw	r6,1332(sp)
    5178:	3080004c 	andi	r2,r6,1
    517c:	103fb726 	beq	r2,zero,505c <___vfprintf_internal_r+0x1c88>
    5180:	20800044 	addi	r2,r4,1
    5184:	98a7883a 	add	r19,r19,r2
    5188:	dcc14615 	stw	r19,1304(sp)
    518c:	980f883a 	mov	r7,r19
    5190:	983f800e 	bge	r19,zero,4f94 <___vfprintf_internal_r+0x1bc0>
    5194:	003fb306 	br	5064 <___vfprintf_internal_r+0x1c90>
    5198:	d9814e17 	ldw	r6,1336(sp)
    519c:	31bfff84 	addi	r6,r6,-2
    51a0:	d9814e15 	stw	r6,1336(sp)
    51a4:	003f4c06 	br	4ed8 <___vfprintf_internal_r+0x1b04>
    51a8:	0100180e 	bge	zero,r4,520c <___vfprintf_internal_r+0x1e38>
    51ac:	00800044 	movi	r2,1
    51b0:	1485883a 	add	r2,r2,r18
    51b4:	d8814615 	stw	r2,1304(sp)
    51b8:	100f883a 	mov	r7,r2
    51bc:	103f750e 	bge	r2,zero,4f94 <___vfprintf_internal_r+0x1bc0>
    51c0:	003fa806 	br	5064 <___vfprintf_internal_r+0x1c90>
    51c4:	80c00c04 	addi	r3,r16,48
    51c8:	00800c04 	movi	r2,48
    51cc:	d8c009c5 	stb	r3,39(sp)
    51d0:	d9800904 	addi	r6,sp,36
    51d4:	d8c00a04 	addi	r3,sp,40
    51d8:	d8800985 	stb	r2,38(sp)
    51dc:	003f6506 	br	4f74 <___vfprintf_internal_r+0x1ba0>
    51e0:	d9014d17 	ldw	r4,1332(sp)
    51e4:	2084703a 	and	r2,r4,r2
    51e8:	103f9c26 	beq	r2,zero,505c <___vfprintf_internal_r+0x1c88>
    51ec:	003f6606 	br	4f88 <___vfprintf_internal_r+0x1bb4>
    51f0:	d9800904 	addi	r6,sp,36
    51f4:	d8c00984 	addi	r3,sp,38
    51f8:	003f5e06 	br	4f74 <___vfprintf_internal_r+0x1ba0>
    51fc:	00800b44 	movi	r2,45
    5200:	0121c83a 	sub	r16,zero,r4
    5204:	d8800945 	stb	r2,37(sp)
    5208:	003f3d06 	br	4f00 <___vfprintf_internal_r+0x1b2c>
    520c:	00800084 	movi	r2,2
    5210:	1105c83a 	sub	r2,r2,r4
    5214:	003fe606 	br	51b0 <___vfprintf_internal_r+0x1ddc>
    5218:	d8014615 	stw	zero,1304(sp)
    521c:	dc814815 	stw	r18,1312(sp)
    5220:	003fb106 	br	50e8 <___vfprintf_internal_r+0x1d14>
    5224:	000d883a 	mov	r6,zero
    5228:	000f883a 	mov	r7,zero
    522c:	8009883a 	mov	r4,r16
    5230:	880b883a 	mov	r5,r17
    5234:	000c93c0 	call	c93c <__nedf2>
    5238:	103f9f26 	beq	r2,zero,50b8 <___vfprintf_internal_r+0x1ce4>
    523c:	00800044 	movi	r2,1
    5240:	1509c83a 	sub	r4,r2,r20
    5244:	d9000615 	stw	r4,24(sp)
    5248:	003f9b06 	br	50b8 <___vfprintf_internal_r+0x1ce4>
    524c:	98000d1e 	bne	r19,zero,5284 <___vfprintf_internal_r+0x1eb0>
    5250:	d8c14d17 	ldw	r3,1332(sp)
    5254:	1880004c 	andi	r2,r3,1
    5258:	10000a1e 	bne	r2,zero,5284 <___vfprintf_internal_r+0x1eb0>
    525c:	01000044 	movi	r4,1
    5260:	200f883a 	mov	r7,r4
    5264:	d9014615 	stw	r4,1304(sp)
    5268:	003f4a06 	br	4f94 <___vfprintf_internal_r+0x1bc0>
    526c:	3cc00017 	ldw	r19,0(r7)
    5270:	39c00104 	addi	r7,r7,4
    5274:	983d0e0e 	bge	r19,zero,46b0 <___vfprintf_internal_r+0x12dc>
    5278:	b8c00007 	ldb	r3,0(r23)
    527c:	04ffffc4 	movi	r19,-1
    5280:	0038d306 	br	35d0 <___vfprintf_internal_r+0x1fc>
    5284:	9cc00084 	addi	r19,r19,2
    5288:	dcc14615 	stw	r19,1304(sp)
    528c:	980f883a 	mov	r7,r19
    5290:	983f400e 	bge	r19,zero,4f94 <___vfprintf_internal_r+0x1bc0>
    5294:	003f7306 	br	5064 <___vfprintf_internal_r+0x1c90>

00005298 <__vfprintf_internal>:
    5298:	00800074 	movhi	r2,1
    529c:	10835a04 	addi	r2,r2,3432
    52a0:	2013883a 	mov	r9,r4
    52a4:	11000017 	ldw	r4,0(r2)
    52a8:	2805883a 	mov	r2,r5
    52ac:	300f883a 	mov	r7,r6
    52b0:	480b883a 	mov	r5,r9
    52b4:	100d883a 	mov	r6,r2
    52b8:	00033d41 	jmpi	33d4 <___vfprintf_internal_r>

000052bc <__swsetup_r>:
    52bc:	00800074 	movhi	r2,1
    52c0:	10835a04 	addi	r2,r2,3432
    52c4:	10c00017 	ldw	r3,0(r2)
    52c8:	defffd04 	addi	sp,sp,-12
    52cc:	dc400115 	stw	r17,4(sp)
    52d0:	dc000015 	stw	r16,0(sp)
    52d4:	dfc00215 	stw	ra,8(sp)
    52d8:	2023883a 	mov	r17,r4
    52dc:	2821883a 	mov	r16,r5
    52e0:	18000226 	beq	r3,zero,52ec <__swsetup_r+0x30>
    52e4:	18800e17 	ldw	r2,56(r3)
    52e8:	10001f26 	beq	r2,zero,5368 <__swsetup_r+0xac>
    52ec:	8100030b 	ldhu	r4,12(r16)
    52f0:	2080020c 	andi	r2,r4,8
    52f4:	10002826 	beq	r2,zero,5398 <__swsetup_r+0xdc>
    52f8:	81400417 	ldw	r5,16(r16)
    52fc:	28001d26 	beq	r5,zero,5374 <__swsetup_r+0xb8>
    5300:	2080004c 	andi	r2,r4,1
    5304:	1005003a 	cmpeq	r2,r2,zero
    5308:	10000b26 	beq	r2,zero,5338 <__swsetup_r+0x7c>
    530c:	2080008c 	andi	r2,r4,2
    5310:	10001226 	beq	r2,zero,535c <__swsetup_r+0xa0>
    5314:	0005883a 	mov	r2,zero
    5318:	80800215 	stw	r2,8(r16)
    531c:	28000b26 	beq	r5,zero,534c <__swsetup_r+0x90>
    5320:	0005883a 	mov	r2,zero
    5324:	dfc00217 	ldw	ra,8(sp)
    5328:	dc400117 	ldw	r17,4(sp)
    532c:	dc000017 	ldw	r16,0(sp)
    5330:	dec00304 	addi	sp,sp,12
    5334:	f800283a 	ret
    5338:	80800517 	ldw	r2,20(r16)
    533c:	80000215 	stw	zero,8(r16)
    5340:	0085c83a 	sub	r2,zero,r2
    5344:	80800615 	stw	r2,24(r16)
    5348:	283ff51e 	bne	r5,zero,5320 <__swsetup_r+0x64>
    534c:	2080200c 	andi	r2,r4,128
    5350:	103ff326 	beq	r2,zero,5320 <__swsetup_r+0x64>
    5354:	00bfffc4 	movi	r2,-1
    5358:	003ff206 	br	5324 <__swsetup_r+0x68>
    535c:	80800517 	ldw	r2,20(r16)
    5360:	80800215 	stw	r2,8(r16)
    5364:	003fed06 	br	531c <__swsetup_r+0x60>
    5368:	1809883a 	mov	r4,r3
    536c:	0006e880 	call	6e88 <__sinit>
    5370:	003fde06 	br	52ec <__swsetup_r+0x30>
    5374:	20c0a00c 	andi	r3,r4,640
    5378:	00808004 	movi	r2,512
    537c:	18bfe026 	beq	r3,r2,5300 <__swsetup_r+0x44>
    5380:	8809883a 	mov	r4,r17
    5384:	800b883a 	mov	r5,r16
    5388:	00088000 	call	8800 <__smakebuf_r>
    538c:	8100030b 	ldhu	r4,12(r16)
    5390:	81400417 	ldw	r5,16(r16)
    5394:	003fda06 	br	5300 <__swsetup_r+0x44>
    5398:	2080040c 	andi	r2,r4,16
    539c:	103fed26 	beq	r2,zero,5354 <__swsetup_r+0x98>
    53a0:	2080010c 	andi	r2,r4,4
    53a4:	10001226 	beq	r2,zero,53f0 <__swsetup_r+0x134>
    53a8:	81400c17 	ldw	r5,48(r16)
    53ac:	28000526 	beq	r5,zero,53c4 <__swsetup_r+0x108>
    53b0:	80801004 	addi	r2,r16,64
    53b4:	28800226 	beq	r5,r2,53c0 <__swsetup_r+0x104>
    53b8:	8809883a 	mov	r4,r17
    53bc:	00072400 	call	7240 <_free_r>
    53c0:	80000c15 	stw	zero,48(r16)
    53c4:	8080030b 	ldhu	r2,12(r16)
    53c8:	81400417 	ldw	r5,16(r16)
    53cc:	80000115 	stw	zero,4(r16)
    53d0:	10bff6cc 	andi	r2,r2,65499
    53d4:	8080030d 	sth	r2,12(r16)
    53d8:	81400015 	stw	r5,0(r16)
    53dc:	8080030b 	ldhu	r2,12(r16)
    53e0:	10800214 	ori	r2,r2,8
    53e4:	113fffcc 	andi	r4,r2,65535
    53e8:	8080030d 	sth	r2,12(r16)
    53ec:	003fc306 	br	52fc <__swsetup_r+0x40>
    53f0:	81400417 	ldw	r5,16(r16)
    53f4:	003ff906 	br	53dc <__swsetup_r+0x120>

000053f8 <quorem>:
    53f8:	28c00417 	ldw	r3,16(r5)
    53fc:	20800417 	ldw	r2,16(r4)
    5400:	defff104 	addi	sp,sp,-60
    5404:	dfc00e15 	stw	ra,56(sp)
    5408:	df000d15 	stw	fp,52(sp)
    540c:	ddc00c15 	stw	r23,48(sp)
    5410:	dd800b15 	stw	r22,44(sp)
    5414:	dd400a15 	stw	r21,40(sp)
    5418:	dd000915 	stw	r20,36(sp)
    541c:	dcc00815 	stw	r19,32(sp)
    5420:	dc800715 	stw	r18,28(sp)
    5424:	dc400615 	stw	r17,24(sp)
    5428:	dc000515 	stw	r16,20(sp)
    542c:	d9000315 	stw	r4,12(sp)
    5430:	d9400415 	stw	r5,16(sp)
    5434:	10c07f16 	blt	r2,r3,5634 <quorem+0x23c>
    5438:	1d3fffc4 	addi	r20,r3,-1
    543c:	d8c00417 	ldw	r3,16(sp)
    5440:	d9000317 	ldw	r4,12(sp)
    5444:	a505883a 	add	r2,r20,r20
    5448:	1085883a 	add	r2,r2,r2
    544c:	1cc00504 	addi	r19,r3,20
    5450:	25c00504 	addi	r23,r4,20
    5454:	98ad883a 	add	r22,r19,r2
    5458:	15c7883a 	add	r3,r2,r23
    545c:	b1400017 	ldw	r5,0(r22)
    5460:	19000017 	ldw	r4,0(r3)
    5464:	d8c00015 	stw	r3,0(sp)
    5468:	29400044 	addi	r5,r5,1
    546c:	d9000215 	stw	r4,8(sp)
    5470:	000d0840 	call	d084 <__udivsi3>
    5474:	1039883a 	mov	fp,r2
    5478:	10003d1e 	bne	r2,zero,5570 <quorem+0x178>
    547c:	d9400417 	ldw	r5,16(sp)
    5480:	d9000317 	ldw	r4,12(sp)
    5484:	0008e600 	call	8e60 <__mcmp>
    5488:	10002c16 	blt	r2,zero,553c <quorem+0x144>
    548c:	e7000044 	addi	fp,fp,1
    5490:	b80f883a 	mov	r7,r23
    5494:	0011883a 	mov	r8,zero
    5498:	0009883a 	mov	r4,zero
    549c:	99400017 	ldw	r5,0(r19)
    54a0:	38c00017 	ldw	r3,0(r7)
    54a4:	9cc00104 	addi	r19,r19,4
    54a8:	28bfffcc 	andi	r2,r5,65535
    54ac:	2085883a 	add	r2,r4,r2
    54b0:	11bfffcc 	andi	r6,r2,65535
    54b4:	193fffcc 	andi	r4,r3,65535
    54b8:	1004d43a 	srli	r2,r2,16
    54bc:	280ad43a 	srli	r5,r5,16
    54c0:	2189c83a 	sub	r4,r4,r6
    54c4:	2209883a 	add	r4,r4,r8
    54c8:	1806d43a 	srli	r3,r3,16
    54cc:	288b883a 	add	r5,r5,r2
    54d0:	200dd43a 	srai	r6,r4,16
    54d4:	28bfffcc 	andi	r2,r5,65535
    54d8:	1887c83a 	sub	r3,r3,r2
    54dc:	1987883a 	add	r3,r3,r6
    54e0:	3900000d 	sth	r4,0(r7)
    54e4:	38c0008d 	sth	r3,2(r7)
    54e8:	2808d43a 	srli	r4,r5,16
    54ec:	39c00104 	addi	r7,r7,4
    54f0:	1811d43a 	srai	r8,r3,16
    54f4:	b4ffe92e 	bgeu	r22,r19,549c <quorem+0xa4>
    54f8:	a505883a 	add	r2,r20,r20
    54fc:	1085883a 	add	r2,r2,r2
    5500:	b885883a 	add	r2,r23,r2
    5504:	10c00017 	ldw	r3,0(r2)
    5508:	18000c1e 	bne	r3,zero,553c <quorem+0x144>
    550c:	113fff04 	addi	r4,r2,-4
    5510:	b900082e 	bgeu	r23,r4,5534 <quorem+0x13c>
    5514:	10bfff17 	ldw	r2,-4(r2)
    5518:	10000326 	beq	r2,zero,5528 <quorem+0x130>
    551c:	00000506 	br	5534 <quorem+0x13c>
    5520:	20800017 	ldw	r2,0(r4)
    5524:	1000031e 	bne	r2,zero,5534 <quorem+0x13c>
    5528:	213fff04 	addi	r4,r4,-4
    552c:	a53fffc4 	addi	r20,r20,-1
    5530:	b93ffb36 	bltu	r23,r4,5520 <quorem+0x128>
    5534:	d9000317 	ldw	r4,12(sp)
    5538:	25000415 	stw	r20,16(r4)
    553c:	e005883a 	mov	r2,fp
    5540:	dfc00e17 	ldw	ra,56(sp)
    5544:	df000d17 	ldw	fp,52(sp)
    5548:	ddc00c17 	ldw	r23,48(sp)
    554c:	dd800b17 	ldw	r22,44(sp)
    5550:	dd400a17 	ldw	r21,40(sp)
    5554:	dd000917 	ldw	r20,36(sp)
    5558:	dcc00817 	ldw	r19,32(sp)
    555c:	dc800717 	ldw	r18,28(sp)
    5560:	dc400617 	ldw	r17,24(sp)
    5564:	dc000517 	ldw	r16,20(sp)
    5568:	dec00f04 	addi	sp,sp,60
    556c:	f800283a 	ret
    5570:	b823883a 	mov	r17,r23
    5574:	9825883a 	mov	r18,r19
    5578:	d8000115 	stw	zero,4(sp)
    557c:	002b883a 	mov	r21,zero
    5580:	94000017 	ldw	r16,0(r18)
    5584:	e009883a 	mov	r4,fp
    5588:	94800104 	addi	r18,r18,4
    558c:	817fffcc 	andi	r5,r16,65535
    5590:	000d0940 	call	d094 <__mulsi3>
    5594:	800ad43a 	srli	r5,r16,16
    5598:	e009883a 	mov	r4,fp
    559c:	a8a1883a 	add	r16,r21,r2
    55a0:	000d0940 	call	d094 <__mulsi3>
    55a4:	89000017 	ldw	r4,0(r17)
    55a8:	80ffffcc 	andi	r3,r16,65535
    55ac:	8020d43a 	srli	r16,r16,16
    55b0:	217fffcc 	andi	r5,r4,65535
    55b4:	28cbc83a 	sub	r5,r5,r3
    55b8:	d8c00117 	ldw	r3,4(sp)
    55bc:	2008d43a 	srli	r4,r4,16
    55c0:	1405883a 	add	r2,r2,r16
    55c4:	28cb883a 	add	r5,r5,r3
    55c8:	280dd43a 	srai	r6,r5,16
    55cc:	10ffffcc 	andi	r3,r2,65535
    55d0:	20c9c83a 	sub	r4,r4,r3
    55d4:	2189883a 	add	r4,r4,r6
    55d8:	8900008d 	sth	r4,2(r17)
    55dc:	2009d43a 	srai	r4,r4,16
    55e0:	8940000d 	sth	r5,0(r17)
    55e4:	102ad43a 	srli	r21,r2,16
    55e8:	8c400104 	addi	r17,r17,4
    55ec:	d9000115 	stw	r4,4(sp)
    55f0:	b4bfe32e 	bgeu	r22,r18,5580 <quorem+0x188>
    55f4:	d9000217 	ldw	r4,8(sp)
    55f8:	203fa01e 	bne	r4,zero,547c <quorem+0x84>
    55fc:	d8800017 	ldw	r2,0(sp)
    5600:	10ffff04 	addi	r3,r2,-4
    5604:	b8c0082e 	bgeu	r23,r3,5628 <quorem+0x230>
    5608:	10bfff17 	ldw	r2,-4(r2)
    560c:	10000326 	beq	r2,zero,561c <quorem+0x224>
    5610:	00000506 	br	5628 <quorem+0x230>
    5614:	18800017 	ldw	r2,0(r3)
    5618:	1000031e 	bne	r2,zero,5628 <quorem+0x230>
    561c:	18ffff04 	addi	r3,r3,-4
    5620:	a53fffc4 	addi	r20,r20,-1
    5624:	b8fffb36 	bltu	r23,r3,5614 <quorem+0x21c>
    5628:	d8c00317 	ldw	r3,12(sp)
    562c:	1d000415 	stw	r20,16(r3)
    5630:	003f9206 	br	547c <quorem+0x84>
    5634:	0005883a 	mov	r2,zero
    5638:	003fc106 	br	5540 <quorem+0x148>

0000563c <_dtoa_r>:
    563c:	22001017 	ldw	r8,64(r4)
    5640:	deffda04 	addi	sp,sp,-152
    5644:	dd402115 	stw	r21,132(sp)
    5648:	dd002015 	stw	r20,128(sp)
    564c:	dc801e15 	stw	r18,120(sp)
    5650:	dc401d15 	stw	r17,116(sp)
    5654:	dfc02515 	stw	ra,148(sp)
    5658:	df002415 	stw	fp,144(sp)
    565c:	ddc02315 	stw	r23,140(sp)
    5660:	dd802215 	stw	r22,136(sp)
    5664:	dcc01f15 	stw	r19,124(sp)
    5668:	dc001c15 	stw	r16,112(sp)
    566c:	d9001615 	stw	r4,88(sp)
    5670:	3023883a 	mov	r17,r6
    5674:	2829883a 	mov	r20,r5
    5678:	d9c01715 	stw	r7,92(sp)
    567c:	dc802817 	ldw	r18,160(sp)
    5680:	302b883a 	mov	r21,r6
    5684:	40000a26 	beq	r8,zero,56b0 <_dtoa_r+0x74>
    5688:	20801117 	ldw	r2,68(r4)
    568c:	400b883a 	mov	r5,r8
    5690:	40800115 	stw	r2,4(r8)
    5694:	20c01117 	ldw	r3,68(r4)
    5698:	00800044 	movi	r2,1
    569c:	10c4983a 	sll	r2,r2,r3
    56a0:	40800215 	stw	r2,8(r8)
    56a4:	0008d040 	call	8d04 <_Bfree>
    56a8:	d8c01617 	ldw	r3,88(sp)
    56ac:	18001015 	stw	zero,64(r3)
    56b0:	8800a316 	blt	r17,zero,5940 <_dtoa_r+0x304>
    56b4:	90000015 	stw	zero,0(r18)
    56b8:	a8dffc2c 	andhi	r3,r21,32752
    56bc:	009ffc34 	movhi	r2,32752
    56c0:	18809126 	beq	r3,r2,5908 <_dtoa_r+0x2cc>
    56c4:	000d883a 	mov	r6,zero
    56c8:	000f883a 	mov	r7,zero
    56cc:	a009883a 	mov	r4,r20
    56d0:	a80b883a 	mov	r5,r21
    56d4:	dd001215 	stw	r20,72(sp)
    56d8:	dd401315 	stw	r21,76(sp)
    56dc:	000c93c0 	call	c93c <__nedf2>
    56e0:	1000171e 	bne	r2,zero,5740 <_dtoa_r+0x104>
    56e4:	d9802717 	ldw	r6,156(sp)
    56e8:	00800044 	movi	r2,1
    56ec:	30800015 	stw	r2,0(r6)
    56f0:	d8802917 	ldw	r2,164(sp)
    56f4:	10029b26 	beq	r2,zero,6164 <_dtoa_r+0xb28>
    56f8:	d9002917 	ldw	r4,164(sp)
    56fc:	00800074 	movhi	r2,1
    5700:	10bbde44 	addi	r2,r2,-4231
    5704:	10ffffc4 	addi	r3,r2,-1
    5708:	20800015 	stw	r2,0(r4)
    570c:	1805883a 	mov	r2,r3
    5710:	dfc02517 	ldw	ra,148(sp)
    5714:	df002417 	ldw	fp,144(sp)
    5718:	ddc02317 	ldw	r23,140(sp)
    571c:	dd802217 	ldw	r22,136(sp)
    5720:	dd402117 	ldw	r21,132(sp)
    5724:	dd002017 	ldw	r20,128(sp)
    5728:	dcc01f17 	ldw	r19,124(sp)
    572c:	dc801e17 	ldw	r18,120(sp)
    5730:	dc401d17 	ldw	r17,116(sp)
    5734:	dc001c17 	ldw	r16,112(sp)
    5738:	dec02604 	addi	sp,sp,152
    573c:	f800283a 	ret
    5740:	d9001617 	ldw	r4,88(sp)
    5744:	d9401217 	ldw	r5,72(sp)
    5748:	d8800104 	addi	r2,sp,4
    574c:	a80d883a 	mov	r6,r21
    5750:	d9c00204 	addi	r7,sp,8
    5754:	d8800015 	stw	r2,0(sp)
    5758:	00093400 	call	9340 <__d2b>
    575c:	d8800715 	stw	r2,28(sp)
    5760:	a804d53a 	srli	r2,r21,20
    5764:	1101ffcc 	andi	r4,r2,2047
    5768:	20008626 	beq	r4,zero,5984 <_dtoa_r+0x348>
    576c:	d8c01217 	ldw	r3,72(sp)
    5770:	00800434 	movhi	r2,16
    5774:	10bfffc4 	addi	r2,r2,-1
    5778:	ddc00117 	ldw	r23,4(sp)
    577c:	a884703a 	and	r2,r21,r2
    5780:	1811883a 	mov	r8,r3
    5784:	124ffc34 	orhi	r9,r2,16368
    5788:	25bf0044 	addi	r22,r4,-1023
    578c:	d8000815 	stw	zero,32(sp)
    5790:	0005883a 	mov	r2,zero
    5794:	00cffe34 	movhi	r3,16376
    5798:	480b883a 	mov	r5,r9
    579c:	4009883a 	mov	r4,r8
    57a0:	180f883a 	mov	r7,r3
    57a4:	100d883a 	mov	r6,r2
    57a8:	000c1a40 	call	c1a4 <__subdf3>
    57ac:	0218dbf4 	movhi	r8,25455
    57b0:	4210d844 	addi	r8,r8,17249
    57b4:	024ff4f4 	movhi	r9,16339
    57b8:	4a61e9c4 	addi	r9,r9,-30809
    57bc:	480f883a 	mov	r7,r9
    57c0:	400d883a 	mov	r6,r8
    57c4:	180b883a 	mov	r5,r3
    57c8:	1009883a 	mov	r4,r2
    57cc:	000c2980 	call	c298 <__muldf3>
    57d0:	0222d874 	movhi	r8,35681
    57d4:	42322cc4 	addi	r8,r8,-14157
    57d8:	024ff1f4 	movhi	r9,16327
    57dc:	4a628a04 	addi	r9,r9,-30168
    57e0:	480f883a 	mov	r7,r9
    57e4:	400d883a 	mov	r6,r8
    57e8:	180b883a 	mov	r5,r3
    57ec:	1009883a 	mov	r4,r2
    57f0:	000c2240 	call	c224 <__adddf3>
    57f4:	b009883a 	mov	r4,r22
    57f8:	1021883a 	mov	r16,r2
    57fc:	1823883a 	mov	r17,r3
    5800:	000cbe40 	call	cbe4 <__floatsidf>
    5804:	021427f4 	movhi	r8,20639
    5808:	421e7ec4 	addi	r8,r8,31227
    580c:	024ff4f4 	movhi	r9,16339
    5810:	4a5104c4 	addi	r9,r9,17427
    5814:	480f883a 	mov	r7,r9
    5818:	400d883a 	mov	r6,r8
    581c:	180b883a 	mov	r5,r3
    5820:	1009883a 	mov	r4,r2
    5824:	000c2980 	call	c298 <__muldf3>
    5828:	180f883a 	mov	r7,r3
    582c:	880b883a 	mov	r5,r17
    5830:	100d883a 	mov	r6,r2
    5834:	8009883a 	mov	r4,r16
    5838:	000c2240 	call	c224 <__adddf3>
    583c:	1009883a 	mov	r4,r2
    5840:	180b883a 	mov	r5,r3
    5844:	1021883a 	mov	r16,r2
    5848:	1823883a 	mov	r17,r3
    584c:	000ccdc0 	call	ccdc <__fixdfsi>
    5850:	000d883a 	mov	r6,zero
    5854:	000f883a 	mov	r7,zero
    5858:	8009883a 	mov	r4,r16
    585c:	880b883a 	mov	r5,r17
    5860:	d8800d15 	stw	r2,52(sp)
    5864:	000cad40 	call	cad4 <__ltdf2>
    5868:	10031716 	blt	r2,zero,64c8 <_dtoa_r+0xe8c>
    586c:	d8c00d17 	ldw	r3,52(sp)
    5870:	00800584 	movi	r2,22
    5874:	10c1482e 	bgeu	r2,r3,5d98 <_dtoa_r+0x75c>
    5878:	01000044 	movi	r4,1
    587c:	d9000c15 	stw	r4,48(sp)
    5880:	bd85c83a 	sub	r2,r23,r22
    5884:	11bfffc4 	addi	r6,r2,-1
    5888:	30030b16 	blt	r6,zero,64b8 <_dtoa_r+0xe7c>
    588c:	d9800a15 	stw	r6,40(sp)
    5890:	d8001115 	stw	zero,68(sp)
    5894:	d8c00d17 	ldw	r3,52(sp)
    5898:	1802ff16 	blt	r3,zero,6498 <_dtoa_r+0xe5c>
    589c:	d9000a17 	ldw	r4,40(sp)
    58a0:	d8c00915 	stw	r3,36(sp)
    58a4:	d8001015 	stw	zero,64(sp)
    58a8:	20c9883a 	add	r4,r4,r3
    58ac:	d9000a15 	stw	r4,40(sp)
    58b0:	d9001717 	ldw	r4,92(sp)
    58b4:	00800244 	movi	r2,9
    58b8:	11004636 	bltu	r2,r4,59d4 <_dtoa_r+0x398>
    58bc:	00800144 	movi	r2,5
    58c0:	11020416 	blt	r2,r4,60d4 <_dtoa_r+0xa98>
    58c4:	04400044 	movi	r17,1
    58c8:	d8c01717 	ldw	r3,92(sp)
    58cc:	00800144 	movi	r2,5
    58d0:	10c1ed36 	bltu	r2,r3,6088 <_dtoa_r+0xa4c>
    58d4:	18c5883a 	add	r2,r3,r3
    58d8:	1085883a 	add	r2,r2,r2
    58dc:	00c00034 	movhi	r3,0
    58e0:	18d63c04 	addi	r3,r3,22768
    58e4:	10c5883a 	add	r2,r2,r3
    58e8:	11000017 	ldw	r4,0(r2)
    58ec:	2000683a 	jmp	r4
    58f0:	000059dc 	xori	zero,zero,359
    58f4:	000059dc 	xori	zero,zero,359
    58f8:	000063dc 	xori	zero,zero,399
    58fc:	000063b4 	movhi	zero,398
    5900:	000063f8 	rdprs	zero,zero,399
    5904:	00006404 	movi	zero,400
    5908:	d9002717 	ldw	r4,156(sp)
    590c:	0089c3c4 	movi	r2,9999
    5910:	20800015 	stw	r2,0(r4)
    5914:	a0001026 	beq	r20,zero,5958 <_dtoa_r+0x31c>
    5918:	00c00074 	movhi	r3,1
    591c:	18fbea04 	addi	r3,r3,-4184
    5920:	d9802917 	ldw	r6,164(sp)
    5924:	303f7926 	beq	r6,zero,570c <_dtoa_r+0xd0>
    5928:	188000c7 	ldb	r2,3(r3)
    592c:	190000c4 	addi	r4,r3,3
    5930:	1000101e 	bne	r2,zero,5974 <_dtoa_r+0x338>
    5934:	d8802917 	ldw	r2,164(sp)
    5938:	11000015 	stw	r4,0(r2)
    593c:	003f7306 	br	570c <_dtoa_r+0xd0>
    5940:	00a00034 	movhi	r2,32768
    5944:	10bfffc4 	addi	r2,r2,-1
    5948:	00c00044 	movi	r3,1
    594c:	88aa703a 	and	r21,r17,r2
    5950:	90c00015 	stw	r3,0(r18)
    5954:	003f5806 	br	56b8 <_dtoa_r+0x7c>
    5958:	00800434 	movhi	r2,16
    595c:	10bfffc4 	addi	r2,r2,-1
    5960:	a884703a 	and	r2,r21,r2
    5964:	103fec1e 	bne	r2,zero,5918 <_dtoa_r+0x2dc>
    5968:	00c00074 	movhi	r3,1
    596c:	18fbe704 	addi	r3,r3,-4196
    5970:	003feb06 	br	5920 <_dtoa_r+0x2e4>
    5974:	d8802917 	ldw	r2,164(sp)
    5978:	19000204 	addi	r4,r3,8
    597c:	11000015 	stw	r4,0(r2)
    5980:	003f6206 	br	570c <_dtoa_r+0xd0>
    5984:	ddc00117 	ldw	r23,4(sp)
    5988:	d8800217 	ldw	r2,8(sp)
    598c:	01000804 	movi	r4,32
    5990:	b8c10c84 	addi	r3,r23,1074
    5994:	18a3883a 	add	r17,r3,r2
    5998:	2441b80e 	bge	r4,r17,607c <_dtoa_r+0xa40>
    599c:	00c01004 	movi	r3,64
    59a0:	1c47c83a 	sub	r3,r3,r17
    59a4:	88bff804 	addi	r2,r17,-32
    59a8:	a8c6983a 	sll	r3,r21,r3
    59ac:	a084d83a 	srl	r2,r20,r2
    59b0:	1888b03a 	or	r4,r3,r2
    59b4:	000cdb40 	call	cdb4 <__floatunsidf>
    59b8:	1011883a 	mov	r8,r2
    59bc:	00bf8434 	movhi	r2,65040
    59c0:	01000044 	movi	r4,1
    59c4:	10d3883a 	add	r9,r2,r3
    59c8:	8dbef344 	addi	r22,r17,-1075
    59cc:	d9000815 	stw	r4,32(sp)
    59d0:	003f6f06 	br	5790 <_dtoa_r+0x154>
    59d4:	d8001715 	stw	zero,92(sp)
    59d8:	04400044 	movi	r17,1
    59dc:	00bfffc4 	movi	r2,-1
    59e0:	00c00044 	movi	r3,1
    59e4:	d8800e15 	stw	r2,56(sp)
    59e8:	d8002615 	stw	zero,152(sp)
    59ec:	d8800f15 	stw	r2,60(sp)
    59f0:	d8c00b15 	stw	r3,44(sp)
    59f4:	1021883a 	mov	r16,r2
    59f8:	d8801617 	ldw	r2,88(sp)
    59fc:	10001115 	stw	zero,68(r2)
    5a00:	d8801617 	ldw	r2,88(sp)
    5a04:	11401117 	ldw	r5,68(r2)
    5a08:	1009883a 	mov	r4,r2
    5a0c:	00092840 	call	9284 <_Balloc>
    5a10:	d8c01617 	ldw	r3,88(sp)
    5a14:	d8800515 	stw	r2,20(sp)
    5a18:	18801015 	stw	r2,64(r3)
    5a1c:	00800384 	movi	r2,14
    5a20:	14006836 	bltu	r2,r16,5bc4 <_dtoa_r+0x588>
    5a24:	8805003a 	cmpeq	r2,r17,zero
    5a28:	1000661e 	bne	r2,zero,5bc4 <_dtoa_r+0x588>
    5a2c:	d9000d17 	ldw	r4,52(sp)
    5a30:	0102300e 	bge	zero,r4,62f4 <_dtoa_r+0xcb8>
    5a34:	208003cc 	andi	r2,r4,15
    5a38:	100490fa 	slli	r2,r2,3
    5a3c:	2025d13a 	srai	r18,r4,4
    5a40:	00c00074 	movhi	r3,1
    5a44:	18fc0304 	addi	r3,r3,-4084
    5a48:	10c5883a 	add	r2,r2,r3
    5a4c:	90c0040c 	andi	r3,r18,16
    5a50:	14000017 	ldw	r16,0(r2)
    5a54:	14400117 	ldw	r17,4(r2)
    5a58:	18036a1e 	bne	r3,zero,6804 <_dtoa_r+0x11c8>
    5a5c:	05800084 	movi	r22,2
    5a60:	90001026 	beq	r18,zero,5aa4 <_dtoa_r+0x468>
    5a64:	04c00074 	movhi	r19,1
    5a68:	9cfc3504 	addi	r19,r19,-3884
    5a6c:	9080004c 	andi	r2,r18,1
    5a70:	1005003a 	cmpeq	r2,r2,zero
    5a74:	1000081e 	bne	r2,zero,5a98 <_dtoa_r+0x45c>
    5a78:	99800017 	ldw	r6,0(r19)
    5a7c:	99c00117 	ldw	r7,4(r19)
    5a80:	880b883a 	mov	r5,r17
    5a84:	8009883a 	mov	r4,r16
    5a88:	000c2980 	call	c298 <__muldf3>
    5a8c:	1021883a 	mov	r16,r2
    5a90:	b5800044 	addi	r22,r22,1
    5a94:	1823883a 	mov	r17,r3
    5a98:	9025d07a 	srai	r18,r18,1
    5a9c:	9cc00204 	addi	r19,r19,8
    5aa0:	903ff21e 	bne	r18,zero,5a6c <_dtoa_r+0x430>
    5aa4:	a80b883a 	mov	r5,r21
    5aa8:	a009883a 	mov	r4,r20
    5aac:	880f883a 	mov	r7,r17
    5ab0:	800d883a 	mov	r6,r16
    5ab4:	000c65c0 	call	c65c <__divdf3>
    5ab8:	1029883a 	mov	r20,r2
    5abc:	182b883a 	mov	r21,r3
    5ac0:	d8c00c17 	ldw	r3,48(sp)
    5ac4:	1805003a 	cmpeq	r2,r3,zero
    5ac8:	1000081e 	bne	r2,zero,5aec <_dtoa_r+0x4b0>
    5acc:	0005883a 	mov	r2,zero
    5ad0:	00cffc34 	movhi	r3,16368
    5ad4:	180f883a 	mov	r7,r3
    5ad8:	a009883a 	mov	r4,r20
    5adc:	a80b883a 	mov	r5,r21
    5ae0:	100d883a 	mov	r6,r2
    5ae4:	000cad40 	call	cad4 <__ltdf2>
    5ae8:	1003fe16 	blt	r2,zero,6ae4 <_dtoa_r+0x14a8>
    5aec:	b009883a 	mov	r4,r22
    5af0:	000cbe40 	call	cbe4 <__floatsidf>
    5af4:	180b883a 	mov	r5,r3
    5af8:	1009883a 	mov	r4,r2
    5afc:	a00d883a 	mov	r6,r20
    5b00:	a80f883a 	mov	r7,r21
    5b04:	000c2980 	call	c298 <__muldf3>
    5b08:	0011883a 	mov	r8,zero
    5b0c:	02500734 	movhi	r9,16412
    5b10:	1009883a 	mov	r4,r2
    5b14:	180b883a 	mov	r5,r3
    5b18:	480f883a 	mov	r7,r9
    5b1c:	400d883a 	mov	r6,r8
    5b20:	000c2240 	call	c224 <__adddf3>
    5b24:	d9000f17 	ldw	r4,60(sp)
    5b28:	102d883a 	mov	r22,r2
    5b2c:	00bf3034 	movhi	r2,64704
    5b30:	18b9883a 	add	fp,r3,r2
    5b34:	e02f883a 	mov	r23,fp
    5b38:	20028f1e 	bne	r4,zero,6578 <_dtoa_r+0xf3c>
    5b3c:	0005883a 	mov	r2,zero
    5b40:	00d00534 	movhi	r3,16404
    5b44:	a009883a 	mov	r4,r20
    5b48:	a80b883a 	mov	r5,r21
    5b4c:	180f883a 	mov	r7,r3
    5b50:	100d883a 	mov	r6,r2
    5b54:	000c1a40 	call	c1a4 <__subdf3>
    5b58:	1009883a 	mov	r4,r2
    5b5c:	e00f883a 	mov	r7,fp
    5b60:	180b883a 	mov	r5,r3
    5b64:	b00d883a 	mov	r6,r22
    5b68:	1025883a 	mov	r18,r2
    5b6c:	1827883a 	mov	r19,r3
    5b70:	000c9c40 	call	c9c4 <__gtdf2>
    5b74:	00834f16 	blt	zero,r2,68b4 <_dtoa_r+0x1278>
    5b78:	e0e0003c 	xorhi	r3,fp,32768
    5b7c:	9009883a 	mov	r4,r18
    5b80:	980b883a 	mov	r5,r19
    5b84:	180f883a 	mov	r7,r3
    5b88:	b00d883a 	mov	r6,r22
    5b8c:	000cad40 	call	cad4 <__ltdf2>
    5b90:	1000080e 	bge	r2,zero,5bb4 <_dtoa_r+0x578>
    5b94:	0027883a 	mov	r19,zero
    5b98:	0025883a 	mov	r18,zero
    5b9c:	d8802617 	ldw	r2,152(sp)
    5ba0:	df000517 	ldw	fp,20(sp)
    5ba4:	d8000615 	stw	zero,24(sp)
    5ba8:	0084303a 	nor	r2,zero,r2
    5bac:	d8800d15 	stw	r2,52(sp)
    5bb0:	00019b06 	br	6220 <_dtoa_r+0xbe4>
    5bb4:	d9801217 	ldw	r6,72(sp)
    5bb8:	d8801317 	ldw	r2,76(sp)
    5bbc:	3029883a 	mov	r20,r6
    5bc0:	102b883a 	mov	r21,r2
    5bc4:	d8c00217 	ldw	r3,8(sp)
    5bc8:	18008516 	blt	r3,zero,5de0 <_dtoa_r+0x7a4>
    5bcc:	d9000d17 	ldw	r4,52(sp)
    5bd0:	00800384 	movi	r2,14
    5bd4:	11008216 	blt	r2,r4,5de0 <_dtoa_r+0x7a4>
    5bd8:	200490fa 	slli	r2,r4,3
    5bdc:	d9802617 	ldw	r6,152(sp)
    5be0:	00c00074 	movhi	r3,1
    5be4:	18fc0304 	addi	r3,r3,-4084
    5be8:	10c5883a 	add	r2,r2,r3
    5bec:	14800017 	ldw	r18,0(r2)
    5bf0:	14c00117 	ldw	r19,4(r2)
    5bf4:	30031e16 	blt	r6,zero,6870 <_dtoa_r+0x1234>
    5bf8:	d9000517 	ldw	r4,20(sp)
    5bfc:	d8c00f17 	ldw	r3,60(sp)
    5c00:	a823883a 	mov	r17,r21
    5c04:	a021883a 	mov	r16,r20
    5c08:	192b883a 	add	r21,r3,r4
    5c0c:	2039883a 	mov	fp,r4
    5c10:	00000f06 	br	5c50 <_dtoa_r+0x614>
    5c14:	0005883a 	mov	r2,zero
    5c18:	00d00934 	movhi	r3,16420
    5c1c:	5009883a 	mov	r4,r10
    5c20:	580b883a 	mov	r5,r11
    5c24:	180f883a 	mov	r7,r3
    5c28:	100d883a 	mov	r6,r2
    5c2c:	000c2980 	call	c298 <__muldf3>
    5c30:	180b883a 	mov	r5,r3
    5c34:	000d883a 	mov	r6,zero
    5c38:	000f883a 	mov	r7,zero
    5c3c:	1009883a 	mov	r4,r2
    5c40:	1021883a 	mov	r16,r2
    5c44:	1823883a 	mov	r17,r3
    5c48:	000c93c0 	call	c93c <__nedf2>
    5c4c:	10004526 	beq	r2,zero,5d64 <_dtoa_r+0x728>
    5c50:	900d883a 	mov	r6,r18
    5c54:	980f883a 	mov	r7,r19
    5c58:	8009883a 	mov	r4,r16
    5c5c:	880b883a 	mov	r5,r17
    5c60:	000c65c0 	call	c65c <__divdf3>
    5c64:	180b883a 	mov	r5,r3
    5c68:	1009883a 	mov	r4,r2
    5c6c:	000ccdc0 	call	ccdc <__fixdfsi>
    5c70:	1009883a 	mov	r4,r2
    5c74:	1029883a 	mov	r20,r2
    5c78:	000cbe40 	call	cbe4 <__floatsidf>
    5c7c:	180f883a 	mov	r7,r3
    5c80:	9009883a 	mov	r4,r18
    5c84:	980b883a 	mov	r5,r19
    5c88:	100d883a 	mov	r6,r2
    5c8c:	000c2980 	call	c298 <__muldf3>
    5c90:	180f883a 	mov	r7,r3
    5c94:	880b883a 	mov	r5,r17
    5c98:	8009883a 	mov	r4,r16
    5c9c:	100d883a 	mov	r6,r2
    5ca0:	000c1a40 	call	c1a4 <__subdf3>
    5ca4:	1015883a 	mov	r10,r2
    5ca8:	a0800c04 	addi	r2,r20,48
    5cac:	e0800005 	stb	r2,0(fp)
    5cb0:	e7000044 	addi	fp,fp,1
    5cb4:	1817883a 	mov	r11,r3
    5cb8:	e57fd61e 	bne	fp,r21,5c14 <_dtoa_r+0x5d8>
    5cbc:	500d883a 	mov	r6,r10
    5cc0:	180f883a 	mov	r7,r3
    5cc4:	5009883a 	mov	r4,r10
    5cc8:	180b883a 	mov	r5,r3
    5ccc:	000c2240 	call	c224 <__adddf3>
    5cd0:	100d883a 	mov	r6,r2
    5cd4:	9009883a 	mov	r4,r18
    5cd8:	980b883a 	mov	r5,r19
    5cdc:	180f883a 	mov	r7,r3
    5ce0:	1021883a 	mov	r16,r2
    5ce4:	1823883a 	mov	r17,r3
    5ce8:	000cad40 	call	cad4 <__ltdf2>
    5cec:	10000816 	blt	r2,zero,5d10 <_dtoa_r+0x6d4>
    5cf0:	980b883a 	mov	r5,r19
    5cf4:	800d883a 	mov	r6,r16
    5cf8:	880f883a 	mov	r7,r17
    5cfc:	9009883a 	mov	r4,r18
    5d00:	000c8b40 	call	c8b4 <__eqdf2>
    5d04:	1000171e 	bne	r2,zero,5d64 <_dtoa_r+0x728>
    5d08:	a080004c 	andi	r2,r20,1
    5d0c:	10001526 	beq	r2,zero,5d64 <_dtoa_r+0x728>
    5d10:	d8800d17 	ldw	r2,52(sp)
    5d14:	d8800415 	stw	r2,16(sp)
    5d18:	e009883a 	mov	r4,fp
    5d1c:	213fffc4 	addi	r4,r4,-1
    5d20:	20c00007 	ldb	r3,0(r4)
    5d24:	00800e44 	movi	r2,57
    5d28:	1880081e 	bne	r3,r2,5d4c <_dtoa_r+0x710>
    5d2c:	d8800517 	ldw	r2,20(sp)
    5d30:	113ffa1e 	bne	r2,r4,5d1c <_dtoa_r+0x6e0>
    5d34:	d8c00417 	ldw	r3,16(sp)
    5d38:	d9800517 	ldw	r6,20(sp)
    5d3c:	00800c04 	movi	r2,48
    5d40:	18c00044 	addi	r3,r3,1
    5d44:	d8c00415 	stw	r3,16(sp)
    5d48:	30800005 	stb	r2,0(r6)
    5d4c:	20800003 	ldbu	r2,0(r4)
    5d50:	d8c00417 	ldw	r3,16(sp)
    5d54:	27000044 	addi	fp,r4,1
    5d58:	10800044 	addi	r2,r2,1
    5d5c:	d8c00d15 	stw	r3,52(sp)
    5d60:	20800005 	stb	r2,0(r4)
    5d64:	d9001617 	ldw	r4,88(sp)
    5d68:	d9400717 	ldw	r5,28(sp)
    5d6c:	0008d040 	call	8d04 <_Bfree>
    5d70:	e0000005 	stb	zero,0(fp)
    5d74:	d9800d17 	ldw	r6,52(sp)
    5d78:	d8c02717 	ldw	r3,156(sp)
    5d7c:	d9002917 	ldw	r4,164(sp)
    5d80:	30800044 	addi	r2,r6,1
    5d84:	18800015 	stw	r2,0(r3)
    5d88:	20029c26 	beq	r4,zero,67fc <_dtoa_r+0x11c0>
    5d8c:	d8c00517 	ldw	r3,20(sp)
    5d90:	27000015 	stw	fp,0(r4)
    5d94:	003e5d06 	br	570c <_dtoa_r+0xd0>
    5d98:	d9800d17 	ldw	r6,52(sp)
    5d9c:	00c00074 	movhi	r3,1
    5da0:	18fc0304 	addi	r3,r3,-4084
    5da4:	d9001217 	ldw	r4,72(sp)
    5da8:	300490fa 	slli	r2,r6,3
    5dac:	d9401317 	ldw	r5,76(sp)
    5db0:	10c5883a 	add	r2,r2,r3
    5db4:	12000017 	ldw	r8,0(r2)
    5db8:	12400117 	ldw	r9,4(r2)
    5dbc:	400d883a 	mov	r6,r8
    5dc0:	480f883a 	mov	r7,r9
    5dc4:	000cad40 	call	cad4 <__ltdf2>
    5dc8:	1000030e 	bge	r2,zero,5dd8 <_dtoa_r+0x79c>
    5dcc:	d8800d17 	ldw	r2,52(sp)
    5dd0:	10bfffc4 	addi	r2,r2,-1
    5dd4:	d8800d15 	stw	r2,52(sp)
    5dd8:	d8000c15 	stw	zero,48(sp)
    5ddc:	003ea806 	br	5880 <_dtoa_r+0x244>
    5de0:	d9000b17 	ldw	r4,44(sp)
    5de4:	202cc03a 	cmpne	r22,r4,zero
    5de8:	b000c71e 	bne	r22,zero,6108 <_dtoa_r+0xacc>
    5dec:	dc001117 	ldw	r16,68(sp)
    5df0:	dc801017 	ldw	r18,64(sp)
    5df4:	0027883a 	mov	r19,zero
    5df8:	04000b0e 	bge	zero,r16,5e28 <_dtoa_r+0x7ec>
    5dfc:	d8c00a17 	ldw	r3,40(sp)
    5e00:	00c0090e 	bge	zero,r3,5e28 <_dtoa_r+0x7ec>
    5e04:	8005883a 	mov	r2,r16
    5e08:	1c011316 	blt	r3,r16,6258 <_dtoa_r+0xc1c>
    5e0c:	d9000a17 	ldw	r4,40(sp)
    5e10:	d9801117 	ldw	r6,68(sp)
    5e14:	80a1c83a 	sub	r16,r16,r2
    5e18:	2089c83a 	sub	r4,r4,r2
    5e1c:	308dc83a 	sub	r6,r6,r2
    5e20:	d9000a15 	stw	r4,40(sp)
    5e24:	d9801115 	stw	r6,68(sp)
    5e28:	d8801017 	ldw	r2,64(sp)
    5e2c:	0080150e 	bge	zero,r2,5e84 <_dtoa_r+0x848>
    5e30:	d8c00b17 	ldw	r3,44(sp)
    5e34:	1805003a 	cmpeq	r2,r3,zero
    5e38:	1001c91e 	bne	r2,zero,6560 <_dtoa_r+0xf24>
    5e3c:	04800e0e 	bge	zero,r18,5e78 <_dtoa_r+0x83c>
    5e40:	d9001617 	ldw	r4,88(sp)
    5e44:	980b883a 	mov	r5,r19
    5e48:	900d883a 	mov	r6,r18
    5e4c:	0009b500 	call	9b50 <__pow5mult>
    5e50:	d9001617 	ldw	r4,88(sp)
    5e54:	d9800717 	ldw	r6,28(sp)
    5e58:	100b883a 	mov	r5,r2
    5e5c:	1027883a 	mov	r19,r2
    5e60:	00097940 	call	9794 <__multiply>
    5e64:	d9001617 	ldw	r4,88(sp)
    5e68:	d9400717 	ldw	r5,28(sp)
    5e6c:	1023883a 	mov	r17,r2
    5e70:	0008d040 	call	8d04 <_Bfree>
    5e74:	dc400715 	stw	r17,28(sp)
    5e78:	d9001017 	ldw	r4,64(sp)
    5e7c:	248dc83a 	sub	r6,r4,r18
    5e80:	30010e1e 	bne	r6,zero,62bc <_dtoa_r+0xc80>
    5e84:	d9001617 	ldw	r4,88(sp)
    5e88:	04400044 	movi	r17,1
    5e8c:	880b883a 	mov	r5,r17
    5e90:	00099e80 	call	99e8 <__i2b>
    5e94:	d9800917 	ldw	r6,36(sp)
    5e98:	1025883a 	mov	r18,r2
    5e9c:	0180040e 	bge	zero,r6,5eb0 <_dtoa_r+0x874>
    5ea0:	d9001617 	ldw	r4,88(sp)
    5ea4:	100b883a 	mov	r5,r2
    5ea8:	0009b500 	call	9b50 <__pow5mult>
    5eac:	1025883a 	mov	r18,r2
    5eb0:	d8801717 	ldw	r2,92(sp)
    5eb4:	8880f30e 	bge	r17,r2,6284 <_dtoa_r+0xc48>
    5eb8:	0023883a 	mov	r17,zero
    5ebc:	d9800917 	ldw	r6,36(sp)
    5ec0:	30019e1e 	bne	r6,zero,653c <_dtoa_r+0xf00>
    5ec4:	00c00044 	movi	r3,1
    5ec8:	d9000a17 	ldw	r4,40(sp)
    5ecc:	20c5883a 	add	r2,r4,r3
    5ed0:	10c007cc 	andi	r3,r2,31
    5ed4:	1800841e 	bne	r3,zero,60e8 <_dtoa_r+0xaac>
    5ed8:	00800704 	movi	r2,28
    5edc:	d9000a17 	ldw	r4,40(sp)
    5ee0:	d9801117 	ldw	r6,68(sp)
    5ee4:	80a1883a 	add	r16,r16,r2
    5ee8:	2089883a 	add	r4,r4,r2
    5eec:	308d883a 	add	r6,r6,r2
    5ef0:	d9000a15 	stw	r4,40(sp)
    5ef4:	d9801115 	stw	r6,68(sp)
    5ef8:	d8801117 	ldw	r2,68(sp)
    5efc:	0080050e 	bge	zero,r2,5f14 <_dtoa_r+0x8d8>
    5f00:	d9400717 	ldw	r5,28(sp)
    5f04:	d9001617 	ldw	r4,88(sp)
    5f08:	100d883a 	mov	r6,r2
    5f0c:	00096480 	call	9648 <__lshift>
    5f10:	d8800715 	stw	r2,28(sp)
    5f14:	d8c00a17 	ldw	r3,40(sp)
    5f18:	00c0050e 	bge	zero,r3,5f30 <_dtoa_r+0x8f4>
    5f1c:	d9001617 	ldw	r4,88(sp)
    5f20:	900b883a 	mov	r5,r18
    5f24:	180d883a 	mov	r6,r3
    5f28:	00096480 	call	9648 <__lshift>
    5f2c:	1025883a 	mov	r18,r2
    5f30:	d9000c17 	ldw	r4,48(sp)
    5f34:	2005003a 	cmpeq	r2,r4,zero
    5f38:	10016f26 	beq	r2,zero,64f8 <_dtoa_r+0xebc>
    5f3c:	d9000f17 	ldw	r4,60(sp)
    5f40:	0102170e 	bge	zero,r4,67a0 <_dtoa_r+0x1164>
    5f44:	d9800b17 	ldw	r6,44(sp)
    5f48:	3005003a 	cmpeq	r2,r6,zero
    5f4c:	1000881e 	bne	r2,zero,6170 <_dtoa_r+0xb34>
    5f50:	0400050e 	bge	zero,r16,5f68 <_dtoa_r+0x92c>
    5f54:	d9001617 	ldw	r4,88(sp)
    5f58:	980b883a 	mov	r5,r19
    5f5c:	800d883a 	mov	r6,r16
    5f60:	00096480 	call	9648 <__lshift>
    5f64:	1027883a 	mov	r19,r2
    5f68:	8804c03a 	cmpne	r2,r17,zero
    5f6c:	1002541e 	bne	r2,zero,68c0 <_dtoa_r+0x1284>
    5f70:	980b883a 	mov	r5,r19
    5f74:	dd800517 	ldw	r22,20(sp)
    5f78:	dcc00615 	stw	r19,24(sp)
    5f7c:	a700004c 	andi	fp,r20,1
    5f80:	2827883a 	mov	r19,r5
    5f84:	d9000717 	ldw	r4,28(sp)
    5f88:	900b883a 	mov	r5,r18
    5f8c:	00053f80 	call	53f8 <quorem>
    5f90:	d9000717 	ldw	r4,28(sp)
    5f94:	d9400617 	ldw	r5,24(sp)
    5f98:	1023883a 	mov	r17,r2
    5f9c:	8dc00c04 	addi	r23,r17,48
    5fa0:	0008e600 	call	8e60 <__mcmp>
    5fa4:	d9001617 	ldw	r4,88(sp)
    5fa8:	900b883a 	mov	r5,r18
    5fac:	980d883a 	mov	r6,r19
    5fb0:	1029883a 	mov	r20,r2
    5fb4:	00094bc0 	call	94bc <__mdiff>
    5fb8:	102b883a 	mov	r21,r2
    5fbc:	10800317 	ldw	r2,12(r2)
    5fc0:	1001281e 	bne	r2,zero,6464 <_dtoa_r+0xe28>
    5fc4:	d9000717 	ldw	r4,28(sp)
    5fc8:	a80b883a 	mov	r5,r21
    5fcc:	0008e600 	call	8e60 <__mcmp>
    5fd0:	d9001617 	ldw	r4,88(sp)
    5fd4:	1021883a 	mov	r16,r2
    5fd8:	a80b883a 	mov	r5,r21
    5fdc:	0008d040 	call	8d04 <_Bfree>
    5fe0:	8000041e 	bne	r16,zero,5ff4 <_dtoa_r+0x9b8>
    5fe4:	d8801717 	ldw	r2,92(sp)
    5fe8:	1000021e 	bne	r2,zero,5ff4 <_dtoa_r+0x9b8>
    5fec:	e004c03a 	cmpne	r2,fp,zero
    5ff0:	10011726 	beq	r2,zero,6450 <_dtoa_r+0xe14>
    5ff4:	a0010616 	blt	r20,zero,6410 <_dtoa_r+0xdd4>
    5ff8:	a000041e 	bne	r20,zero,600c <_dtoa_r+0x9d0>
    5ffc:	d8c01717 	ldw	r3,92(sp)
    6000:	1800021e 	bne	r3,zero,600c <_dtoa_r+0x9d0>
    6004:	e004c03a 	cmpne	r2,fp,zero
    6008:	10010126 	beq	r2,zero,6410 <_dtoa_r+0xdd4>
    600c:	04023d16 	blt	zero,r16,6904 <_dtoa_r+0x12c8>
    6010:	b5c00005 	stb	r23,0(r22)
    6014:	d9800517 	ldw	r6,20(sp)
    6018:	d9000f17 	ldw	r4,60(sp)
    601c:	b5800044 	addi	r22,r22,1
    6020:	3105883a 	add	r2,r6,r4
    6024:	b0806526 	beq	r22,r2,61bc <_dtoa_r+0xb80>
    6028:	d9400717 	ldw	r5,28(sp)
    602c:	d9001617 	ldw	r4,88(sp)
    6030:	01800284 	movi	r6,10
    6034:	000f883a 	mov	r7,zero
    6038:	0009a240 	call	9a24 <__multadd>
    603c:	d8800715 	stw	r2,28(sp)
    6040:	d8800617 	ldw	r2,24(sp)
    6044:	14c10c26 	beq	r2,r19,6478 <_dtoa_r+0xe3c>
    6048:	d9400617 	ldw	r5,24(sp)
    604c:	d9001617 	ldw	r4,88(sp)
    6050:	01800284 	movi	r6,10
    6054:	000f883a 	mov	r7,zero
    6058:	0009a240 	call	9a24 <__multadd>
    605c:	d9001617 	ldw	r4,88(sp)
    6060:	980b883a 	mov	r5,r19
    6064:	01800284 	movi	r6,10
    6068:	000f883a 	mov	r7,zero
    606c:	d8800615 	stw	r2,24(sp)
    6070:	0009a240 	call	9a24 <__multadd>
    6074:	1027883a 	mov	r19,r2
    6078:	003fc206 	br	5f84 <_dtoa_r+0x948>
    607c:	2445c83a 	sub	r2,r4,r17
    6080:	a088983a 	sll	r4,r20,r2
    6084:	003e4b06 	br	59b4 <_dtoa_r+0x378>
    6088:	01bfffc4 	movi	r6,-1
    608c:	00800044 	movi	r2,1
    6090:	d9800e15 	stw	r6,56(sp)
    6094:	d9800f15 	stw	r6,60(sp)
    6098:	d8800b15 	stw	r2,44(sp)
    609c:	d8c01617 	ldw	r3,88(sp)
    60a0:	008005c4 	movi	r2,23
    60a4:	18001115 	stw	zero,68(r3)
    60a8:	1580082e 	bgeu	r2,r22,60cc <_dtoa_r+0xa90>
    60ac:	00c00104 	movi	r3,4
    60b0:	0009883a 	mov	r4,zero
    60b4:	18c7883a 	add	r3,r3,r3
    60b8:	18800504 	addi	r2,r3,20
    60bc:	21000044 	addi	r4,r4,1
    60c0:	b0bffc2e 	bgeu	r22,r2,60b4 <_dtoa_r+0xa78>
    60c4:	d9801617 	ldw	r6,88(sp)
    60c8:	31001115 	stw	r4,68(r6)
    60cc:	dc000f17 	ldw	r16,60(sp)
    60d0:	003e4b06 	br	5a00 <_dtoa_r+0x3c4>
    60d4:	d9801717 	ldw	r6,92(sp)
    60d8:	0023883a 	mov	r17,zero
    60dc:	31bfff04 	addi	r6,r6,-4
    60e0:	d9801715 	stw	r6,92(sp)
    60e4:	003df806 	br	58c8 <_dtoa_r+0x28c>
    60e8:	00800804 	movi	r2,32
    60ec:	10c9c83a 	sub	r4,r2,r3
    60f0:	00c00104 	movi	r3,4
    60f4:	19005a16 	blt	r3,r4,6260 <_dtoa_r+0xc24>
    60f8:	008000c4 	movi	r2,3
    60fc:	113f7e16 	blt	r2,r4,5ef8 <_dtoa_r+0x8bc>
    6100:	20800704 	addi	r2,r4,28
    6104:	003f7506 	br	5edc <_dtoa_r+0x8a0>
    6108:	d9801717 	ldw	r6,92(sp)
    610c:	00800044 	movi	r2,1
    6110:	1180a10e 	bge	r2,r6,6398 <_dtoa_r+0xd5c>
    6114:	d9800f17 	ldw	r6,60(sp)
    6118:	d8c01017 	ldw	r3,64(sp)
    611c:	30bfffc4 	addi	r2,r6,-1
    6120:	1881c616 	blt	r3,r2,683c <_dtoa_r+0x1200>
    6124:	18a5c83a 	sub	r18,r3,r2
    6128:	d8800f17 	ldw	r2,60(sp)
    612c:	10026216 	blt	r2,zero,6ab8 <_dtoa_r+0x147c>
    6130:	dc001117 	ldw	r16,68(sp)
    6134:	1007883a 	mov	r3,r2
    6138:	d9800a17 	ldw	r6,40(sp)
    613c:	d8801117 	ldw	r2,68(sp)
    6140:	d9001617 	ldw	r4,88(sp)
    6144:	30cd883a 	add	r6,r6,r3
    6148:	10c5883a 	add	r2,r2,r3
    614c:	01400044 	movi	r5,1
    6150:	d9800a15 	stw	r6,40(sp)
    6154:	d8801115 	stw	r2,68(sp)
    6158:	00099e80 	call	99e8 <__i2b>
    615c:	1027883a 	mov	r19,r2
    6160:	003f2506 	br	5df8 <_dtoa_r+0x7bc>
    6164:	00c00074 	movhi	r3,1
    6168:	18fbde04 	addi	r3,r3,-4232
    616c:	003d6706 	br	570c <_dtoa_r+0xd0>
    6170:	dd800517 	ldw	r22,20(sp)
    6174:	04000044 	movi	r16,1
    6178:	00000706 	br	6198 <_dtoa_r+0xb5c>
    617c:	d9400717 	ldw	r5,28(sp)
    6180:	d9001617 	ldw	r4,88(sp)
    6184:	01800284 	movi	r6,10
    6188:	000f883a 	mov	r7,zero
    618c:	0009a240 	call	9a24 <__multadd>
    6190:	d8800715 	stw	r2,28(sp)
    6194:	84000044 	addi	r16,r16,1
    6198:	d9000717 	ldw	r4,28(sp)
    619c:	900b883a 	mov	r5,r18
    61a0:	00053f80 	call	53f8 <quorem>
    61a4:	15c00c04 	addi	r23,r2,48
    61a8:	b5c00005 	stb	r23,0(r22)
    61ac:	d8c00f17 	ldw	r3,60(sp)
    61b0:	b5800044 	addi	r22,r22,1
    61b4:	80fff116 	blt	r16,r3,617c <_dtoa_r+0xb40>
    61b8:	d8000615 	stw	zero,24(sp)
    61bc:	d9400717 	ldw	r5,28(sp)
    61c0:	d9001617 	ldw	r4,88(sp)
    61c4:	01800044 	movi	r6,1
    61c8:	00096480 	call	9648 <__lshift>
    61cc:	1009883a 	mov	r4,r2
    61d0:	900b883a 	mov	r5,r18
    61d4:	d8800715 	stw	r2,28(sp)
    61d8:	0008e600 	call	8e60 <__mcmp>
    61dc:	00803c0e 	bge	zero,r2,62d0 <_dtoa_r+0xc94>
    61e0:	b009883a 	mov	r4,r22
    61e4:	213fffc4 	addi	r4,r4,-1
    61e8:	21400003 	ldbu	r5,0(r4)
    61ec:	00800e44 	movi	r2,57
    61f0:	28c03fcc 	andi	r3,r5,255
    61f4:	18c0201c 	xori	r3,r3,128
    61f8:	18ffe004 	addi	r3,r3,-128
    61fc:	1881981e 	bne	r3,r2,6860 <_dtoa_r+0x1224>
    6200:	d9800517 	ldw	r6,20(sp)
    6204:	21bff71e 	bne	r4,r6,61e4 <_dtoa_r+0xba8>
    6208:	d8800d17 	ldw	r2,52(sp)
    620c:	37000044 	addi	fp,r6,1
    6210:	10800044 	addi	r2,r2,1
    6214:	d8800d15 	stw	r2,52(sp)
    6218:	00800c44 	movi	r2,49
    621c:	30800005 	stb	r2,0(r6)
    6220:	d9001617 	ldw	r4,88(sp)
    6224:	900b883a 	mov	r5,r18
    6228:	0008d040 	call	8d04 <_Bfree>
    622c:	983ecd26 	beq	r19,zero,5d64 <_dtoa_r+0x728>
    6230:	d8c00617 	ldw	r3,24(sp)
    6234:	18000426 	beq	r3,zero,6248 <_dtoa_r+0xc0c>
    6238:	1cc00326 	beq	r3,r19,6248 <_dtoa_r+0xc0c>
    623c:	d9001617 	ldw	r4,88(sp)
    6240:	180b883a 	mov	r5,r3
    6244:	0008d040 	call	8d04 <_Bfree>
    6248:	d9001617 	ldw	r4,88(sp)
    624c:	980b883a 	mov	r5,r19
    6250:	0008d040 	call	8d04 <_Bfree>
    6254:	003ec306 	br	5d64 <_dtoa_r+0x728>
    6258:	1805883a 	mov	r2,r3
    625c:	003eeb06 	br	5e0c <_dtoa_r+0x7d0>
    6260:	d9800a17 	ldw	r6,40(sp)
    6264:	d8c01117 	ldw	r3,68(sp)
    6268:	20bfff04 	addi	r2,r4,-4
    626c:	308d883a 	add	r6,r6,r2
    6270:	1887883a 	add	r3,r3,r2
    6274:	80a1883a 	add	r16,r16,r2
    6278:	d9800a15 	stw	r6,40(sp)
    627c:	d8c01115 	stw	r3,68(sp)
    6280:	003f1d06 	br	5ef8 <_dtoa_r+0x8bc>
    6284:	a03f0c1e 	bne	r20,zero,5eb8 <_dtoa_r+0x87c>
    6288:	00800434 	movhi	r2,16
    628c:	10bfffc4 	addi	r2,r2,-1
    6290:	a884703a 	and	r2,r21,r2
    6294:	103f081e 	bne	r2,zero,5eb8 <_dtoa_r+0x87c>
    6298:	a89ffc2c 	andhi	r2,r21,32752
    629c:	103f0626 	beq	r2,zero,5eb8 <_dtoa_r+0x87c>
    62a0:	d8c01117 	ldw	r3,68(sp)
    62a4:	d9000a17 	ldw	r4,40(sp)
    62a8:	18c00044 	addi	r3,r3,1
    62ac:	21000044 	addi	r4,r4,1
    62b0:	d8c01115 	stw	r3,68(sp)
    62b4:	d9000a15 	stw	r4,40(sp)
    62b8:	003f0006 	br	5ebc <_dtoa_r+0x880>
    62bc:	d9400717 	ldw	r5,28(sp)
    62c0:	d9001617 	ldw	r4,88(sp)
    62c4:	0009b500 	call	9b50 <__pow5mult>
    62c8:	d8800715 	stw	r2,28(sp)
    62cc:	003eed06 	br	5e84 <_dtoa_r+0x848>
    62d0:	1000021e 	bne	r2,zero,62dc <_dtoa_r+0xca0>
    62d4:	b880004c 	andi	r2,r23,1
    62d8:	103fc11e 	bne	r2,zero,61e0 <_dtoa_r+0xba4>
    62dc:	b5bfffc4 	addi	r22,r22,-1
    62e0:	b0c00007 	ldb	r3,0(r22)
    62e4:	00800c04 	movi	r2,48
    62e8:	18bffc26 	beq	r3,r2,62dc <_dtoa_r+0xca0>
    62ec:	b7000044 	addi	fp,r22,1
    62f0:	003fcb06 	br	6220 <_dtoa_r+0xbe4>
    62f4:	d9800d17 	ldw	r6,52(sp)
    62f8:	018fc83a 	sub	r7,zero,r6
    62fc:	3801f726 	beq	r7,zero,6adc <_dtoa_r+0x14a0>
    6300:	398003cc 	andi	r6,r7,15
    6304:	300c90fa 	slli	r6,r6,3
    6308:	01400074 	movhi	r5,1
    630c:	297c0304 	addi	r5,r5,-4084
    6310:	d9001217 	ldw	r4,72(sp)
    6314:	314d883a 	add	r6,r6,r5
    6318:	30c00117 	ldw	r3,4(r6)
    631c:	30800017 	ldw	r2,0(r6)
    6320:	d9401317 	ldw	r5,76(sp)
    6324:	3821d13a 	srai	r16,r7,4
    6328:	100d883a 	mov	r6,r2
    632c:	180f883a 	mov	r7,r3
    6330:	000c2980 	call	c298 <__muldf3>
    6334:	1011883a 	mov	r8,r2
    6338:	1813883a 	mov	r9,r3
    633c:	1029883a 	mov	r20,r2
    6340:	182b883a 	mov	r21,r3
    6344:	8001e526 	beq	r16,zero,6adc <_dtoa_r+0x14a0>
    6348:	05800084 	movi	r22,2
    634c:	04400074 	movhi	r17,1
    6350:	8c7c3504 	addi	r17,r17,-3884
    6354:	8080004c 	andi	r2,r16,1
    6358:	1005003a 	cmpeq	r2,r2,zero
    635c:	1000081e 	bne	r2,zero,6380 <_dtoa_r+0xd44>
    6360:	89800017 	ldw	r6,0(r17)
    6364:	89c00117 	ldw	r7,4(r17)
    6368:	480b883a 	mov	r5,r9
    636c:	4009883a 	mov	r4,r8
    6370:	000c2980 	call	c298 <__muldf3>
    6374:	1011883a 	mov	r8,r2
    6378:	b5800044 	addi	r22,r22,1
    637c:	1813883a 	mov	r9,r3
    6380:	8021d07a 	srai	r16,r16,1
    6384:	8c400204 	addi	r17,r17,8
    6388:	803ff21e 	bne	r16,zero,6354 <_dtoa_r+0xd18>
    638c:	4029883a 	mov	r20,r8
    6390:	482b883a 	mov	r21,r9
    6394:	003dca06 	br	5ac0 <_dtoa_r+0x484>
    6398:	d9000817 	ldw	r4,32(sp)
    639c:	2005003a 	cmpeq	r2,r4,zero
    63a0:	1001f61e 	bne	r2,zero,6b7c <_dtoa_r+0x1540>
    63a4:	dc001117 	ldw	r16,68(sp)
    63a8:	dc801017 	ldw	r18,64(sp)
    63ac:	18c10cc4 	addi	r3,r3,1075
    63b0:	003f6106 	br	6138 <_dtoa_r+0xafc>
    63b4:	d8000b15 	stw	zero,44(sp)
    63b8:	d9802617 	ldw	r6,152(sp)
    63bc:	d8c00d17 	ldw	r3,52(sp)
    63c0:	30800044 	addi	r2,r6,1
    63c4:	18ad883a 	add	r22,r3,r2
    63c8:	b13fffc4 	addi	r4,r22,-1
    63cc:	d9000e15 	stw	r4,56(sp)
    63d0:	0581f60e 	bge	zero,r22,6bac <_dtoa_r+0x1570>
    63d4:	dd800f15 	stw	r22,60(sp)
    63d8:	003f3006 	br	609c <_dtoa_r+0xa60>
    63dc:	d8000b15 	stw	zero,44(sp)
    63e0:	d9002617 	ldw	r4,152(sp)
    63e4:	0101eb0e 	bge	zero,r4,6b94 <_dtoa_r+0x1558>
    63e8:	202d883a 	mov	r22,r4
    63ec:	d9000e15 	stw	r4,56(sp)
    63f0:	d9000f15 	stw	r4,60(sp)
    63f4:	003f2906 	br	609c <_dtoa_r+0xa60>
    63f8:	01800044 	movi	r6,1
    63fc:	d9800b15 	stw	r6,44(sp)
    6400:	003ff706 	br	63e0 <_dtoa_r+0xda4>
    6404:	01000044 	movi	r4,1
    6408:	d9000b15 	stw	r4,44(sp)
    640c:	003fea06 	br	63b8 <_dtoa_r+0xd7c>
    6410:	04000c0e 	bge	zero,r16,6444 <_dtoa_r+0xe08>
    6414:	d9400717 	ldw	r5,28(sp)
    6418:	d9001617 	ldw	r4,88(sp)
    641c:	01800044 	movi	r6,1
    6420:	00096480 	call	9648 <__lshift>
    6424:	1009883a 	mov	r4,r2
    6428:	900b883a 	mov	r5,r18
    642c:	d8800715 	stw	r2,28(sp)
    6430:	0008e600 	call	8e60 <__mcmp>
    6434:	0081e00e 	bge	zero,r2,6bb8 <_dtoa_r+0x157c>
    6438:	bdc00044 	addi	r23,r23,1
    643c:	00800e84 	movi	r2,58
    6440:	b881a226 	beq	r23,r2,6acc <_dtoa_r+0x1490>
    6444:	b7000044 	addi	fp,r22,1
    6448:	b5c00005 	stb	r23,0(r22)
    644c:	003f7406 	br	6220 <_dtoa_r+0xbe4>
    6450:	00800e44 	movi	r2,57
    6454:	b8819d26 	beq	r23,r2,6acc <_dtoa_r+0x1490>
    6458:	053ffa0e 	bge	zero,r20,6444 <_dtoa_r+0xe08>
    645c:	8dc00c44 	addi	r23,r17,49
    6460:	003ff806 	br	6444 <_dtoa_r+0xe08>
    6464:	d9001617 	ldw	r4,88(sp)
    6468:	a80b883a 	mov	r5,r21
    646c:	04000044 	movi	r16,1
    6470:	0008d040 	call	8d04 <_Bfree>
    6474:	003edf06 	br	5ff4 <_dtoa_r+0x9b8>
    6478:	d9001617 	ldw	r4,88(sp)
    647c:	980b883a 	mov	r5,r19
    6480:	01800284 	movi	r6,10
    6484:	000f883a 	mov	r7,zero
    6488:	0009a240 	call	9a24 <__multadd>
    648c:	1027883a 	mov	r19,r2
    6490:	d8800615 	stw	r2,24(sp)
    6494:	003ebb06 	br	5f84 <_dtoa_r+0x948>
    6498:	d9801117 	ldw	r6,68(sp)
    649c:	d8800d17 	ldw	r2,52(sp)
    64a0:	d8000915 	stw	zero,36(sp)
    64a4:	308dc83a 	sub	r6,r6,r2
    64a8:	0087c83a 	sub	r3,zero,r2
    64ac:	d9801115 	stw	r6,68(sp)
    64b0:	d8c01015 	stw	r3,64(sp)
    64b4:	003cfe06 	br	58b0 <_dtoa_r+0x274>
    64b8:	018dc83a 	sub	r6,zero,r6
    64bc:	d9801115 	stw	r6,68(sp)
    64c0:	d8000a15 	stw	zero,40(sp)
    64c4:	003cf306 	br	5894 <_dtoa_r+0x258>
    64c8:	d9000d17 	ldw	r4,52(sp)
    64cc:	000cbe40 	call	cbe4 <__floatsidf>
    64d0:	880b883a 	mov	r5,r17
    64d4:	8009883a 	mov	r4,r16
    64d8:	180f883a 	mov	r7,r3
    64dc:	100d883a 	mov	r6,r2
    64e0:	000c93c0 	call	c93c <__nedf2>
    64e4:	103ce126 	beq	r2,zero,586c <_dtoa_r+0x230>
    64e8:	d9800d17 	ldw	r6,52(sp)
    64ec:	31bfffc4 	addi	r6,r6,-1
    64f0:	d9800d15 	stw	r6,52(sp)
    64f4:	003cdd06 	br	586c <_dtoa_r+0x230>
    64f8:	d9000717 	ldw	r4,28(sp)
    64fc:	900b883a 	mov	r5,r18
    6500:	0008e600 	call	8e60 <__mcmp>
    6504:	103e8d0e 	bge	r2,zero,5f3c <_dtoa_r+0x900>
    6508:	d9400717 	ldw	r5,28(sp)
    650c:	d9001617 	ldw	r4,88(sp)
    6510:	01800284 	movi	r6,10
    6514:	000f883a 	mov	r7,zero
    6518:	0009a240 	call	9a24 <__multadd>
    651c:	d9800d17 	ldw	r6,52(sp)
    6520:	d8800715 	stw	r2,28(sp)
    6524:	31bfffc4 	addi	r6,r6,-1
    6528:	d9800d15 	stw	r6,52(sp)
    652c:	b001a71e 	bne	r22,zero,6bcc <_dtoa_r+0x1590>
    6530:	d8800e17 	ldw	r2,56(sp)
    6534:	d8800f15 	stw	r2,60(sp)
    6538:	003e8006 	br	5f3c <_dtoa_r+0x900>
    653c:	90800417 	ldw	r2,16(r18)
    6540:	1085883a 	add	r2,r2,r2
    6544:	1085883a 	add	r2,r2,r2
    6548:	1485883a 	add	r2,r2,r18
    654c:	11000417 	ldw	r4,16(r2)
    6550:	0008d2c0 	call	8d2c <__hi0bits>
    6554:	00c00804 	movi	r3,32
    6558:	1887c83a 	sub	r3,r3,r2
    655c:	003e5a06 	br	5ec8 <_dtoa_r+0x88c>
    6560:	d9400717 	ldw	r5,28(sp)
    6564:	d9801017 	ldw	r6,64(sp)
    6568:	d9001617 	ldw	r4,88(sp)
    656c:	0009b500 	call	9b50 <__pow5mult>
    6570:	d8800715 	stw	r2,28(sp)
    6574:	003e4306 	br	5e84 <_dtoa_r+0x848>
    6578:	d9800f17 	ldw	r6,60(sp)
    657c:	d8800d17 	ldw	r2,52(sp)
    6580:	d9800315 	stw	r6,12(sp)
    6584:	d8800415 	stw	r2,16(sp)
    6588:	d8c00b17 	ldw	r3,44(sp)
    658c:	1805003a 	cmpeq	r2,r3,zero
    6590:	1000e21e 	bne	r2,zero,691c <_dtoa_r+0x12e0>
    6594:	d9000317 	ldw	r4,12(sp)
    6598:	0005883a 	mov	r2,zero
    659c:	00cff834 	movhi	r3,16352
    65a0:	200c90fa 	slli	r6,r4,3
    65a4:	01000074 	movhi	r4,1
    65a8:	213c0304 	addi	r4,r4,-4084
    65ac:	180b883a 	mov	r5,r3
    65b0:	310d883a 	add	r6,r6,r4
    65b4:	327fff17 	ldw	r9,-4(r6)
    65b8:	323ffe17 	ldw	r8,-8(r6)
    65bc:	1009883a 	mov	r4,r2
    65c0:	480f883a 	mov	r7,r9
    65c4:	400d883a 	mov	r6,r8
    65c8:	000c65c0 	call	c65c <__divdf3>
    65cc:	180b883a 	mov	r5,r3
    65d0:	b00d883a 	mov	r6,r22
    65d4:	b80f883a 	mov	r7,r23
    65d8:	1009883a 	mov	r4,r2
    65dc:	000c1a40 	call	c1a4 <__subdf3>
    65e0:	a80b883a 	mov	r5,r21
    65e4:	a009883a 	mov	r4,r20
    65e8:	d8c01915 	stw	r3,100(sp)
    65ec:	d8801815 	stw	r2,96(sp)
    65f0:	000ccdc0 	call	ccdc <__fixdfsi>
    65f4:	1009883a 	mov	r4,r2
    65f8:	1027883a 	mov	r19,r2
    65fc:	000cbe40 	call	cbe4 <__floatsidf>
    6600:	a80b883a 	mov	r5,r21
    6604:	a009883a 	mov	r4,r20
    6608:	180f883a 	mov	r7,r3
    660c:	100d883a 	mov	r6,r2
    6610:	000c1a40 	call	c1a4 <__subdf3>
    6614:	d9801817 	ldw	r6,96(sp)
    6618:	1823883a 	mov	r17,r3
    661c:	d8801415 	stw	r2,80(sp)
    6620:	302d883a 	mov	r22,r6
    6624:	d9800517 	ldw	r6,20(sp)
    6628:	9cc00c04 	addi	r19,r19,48
    662c:	dc401515 	stw	r17,84(sp)
    6630:	d8c01917 	ldw	r3,100(sp)
    6634:	34c00005 	stb	r19,0(r6)
    6638:	d8800517 	ldw	r2,20(sp)
    663c:	d9401917 	ldw	r5,100(sp)
    6640:	d9801417 	ldw	r6,80(sp)
    6644:	b009883a 	mov	r4,r22
    6648:	880f883a 	mov	r7,r17
    664c:	182f883a 	mov	r23,r3
    6650:	17000044 	addi	fp,r2,1
    6654:	000c9c40 	call	c9c4 <__gtdf2>
    6658:	00804e16 	blt	zero,r2,6794 <_dtoa_r+0x1158>
    665c:	d9801417 	ldw	r6,80(sp)
    6660:	0005883a 	mov	r2,zero
    6664:	00cffc34 	movhi	r3,16368
    6668:	180b883a 	mov	r5,r3
    666c:	880f883a 	mov	r7,r17
    6670:	1009883a 	mov	r4,r2
    6674:	000c1a40 	call	c1a4 <__subdf3>
    6678:	d9401917 	ldw	r5,100(sp)
    667c:	180f883a 	mov	r7,r3
    6680:	b009883a 	mov	r4,r22
    6684:	100d883a 	mov	r6,r2
    6688:	000c9c40 	call	c9c4 <__gtdf2>
    668c:	00bda216 	blt	zero,r2,5d18 <_dtoa_r+0x6dc>
    6690:	d8c00317 	ldw	r3,12(sp)
    6694:	00800044 	movi	r2,1
    6698:	10c01216 	blt	r2,r3,66e4 <_dtoa_r+0x10a8>
    669c:	003d4506 	br	5bb4 <_dtoa_r+0x578>
    66a0:	d9801417 	ldw	r6,80(sp)
    66a4:	0005883a 	mov	r2,zero
    66a8:	00cffc34 	movhi	r3,16368
    66ac:	180b883a 	mov	r5,r3
    66b0:	880f883a 	mov	r7,r17
    66b4:	1009883a 	mov	r4,r2
    66b8:	000c1a40 	call	c1a4 <__subdf3>
    66bc:	d9c01b17 	ldw	r7,108(sp)
    66c0:	180b883a 	mov	r5,r3
    66c4:	1009883a 	mov	r4,r2
    66c8:	b00d883a 	mov	r6,r22
    66cc:	000cad40 	call	cad4 <__ltdf2>
    66d0:	103d9116 	blt	r2,zero,5d18 <_dtoa_r+0x6dc>
    66d4:	d9800517 	ldw	r6,20(sp)
    66d8:	d9000317 	ldw	r4,12(sp)
    66dc:	3105883a 	add	r2,r6,r4
    66e0:	e0bd3426 	beq	fp,r2,5bb4 <_dtoa_r+0x578>
    66e4:	04500934 	movhi	r17,16420
    66e8:	0021883a 	mov	r16,zero
    66ec:	b80b883a 	mov	r5,r23
    66f0:	b009883a 	mov	r4,r22
    66f4:	800d883a 	mov	r6,r16
    66f8:	880f883a 	mov	r7,r17
    66fc:	000c2980 	call	c298 <__muldf3>
    6700:	d9401517 	ldw	r5,84(sp)
    6704:	d9001417 	ldw	r4,80(sp)
    6708:	880f883a 	mov	r7,r17
    670c:	000d883a 	mov	r6,zero
    6710:	d8801a15 	stw	r2,104(sp)
    6714:	d8c01b15 	stw	r3,108(sp)
    6718:	000c2980 	call	c298 <__muldf3>
    671c:	180b883a 	mov	r5,r3
    6720:	1009883a 	mov	r4,r2
    6724:	1823883a 	mov	r17,r3
    6728:	1021883a 	mov	r16,r2
    672c:	000ccdc0 	call	ccdc <__fixdfsi>
    6730:	1009883a 	mov	r4,r2
    6734:	102b883a 	mov	r21,r2
    6738:	000cbe40 	call	cbe4 <__floatsidf>
    673c:	880b883a 	mov	r5,r17
    6740:	8009883a 	mov	r4,r16
    6744:	180f883a 	mov	r7,r3
    6748:	100d883a 	mov	r6,r2
    674c:	000c1a40 	call	c1a4 <__subdf3>
    6750:	1021883a 	mov	r16,r2
    6754:	d9001b17 	ldw	r4,108(sp)
    6758:	1823883a 	mov	r17,r3
    675c:	dc001415 	stw	r16,80(sp)
    6760:	ad400c04 	addi	r21,r21,48
    6764:	dc401515 	stw	r17,84(sp)
    6768:	d8801a17 	ldw	r2,104(sp)
    676c:	e5400005 	stb	r21,0(fp)
    6770:	202f883a 	mov	r23,r4
    6774:	d9c01b17 	ldw	r7,108(sp)
    6778:	d9001417 	ldw	r4,80(sp)
    677c:	880b883a 	mov	r5,r17
    6780:	100d883a 	mov	r6,r2
    6784:	102d883a 	mov	r22,r2
    6788:	e7000044 	addi	fp,fp,1
    678c:	000cad40 	call	cad4 <__ltdf2>
    6790:	103fc30e 	bge	r2,zero,66a0 <_dtoa_r+0x1064>
    6794:	d9000417 	ldw	r4,16(sp)
    6798:	d9000d15 	stw	r4,52(sp)
    679c:	003d7106 	br	5d64 <_dtoa_r+0x728>
    67a0:	d9801717 	ldw	r6,92(sp)
    67a4:	00800084 	movi	r2,2
    67a8:	11bde60e 	bge	r2,r6,5f44 <_dtoa_r+0x908>
    67ac:	203cfb1e 	bne	r4,zero,5b9c <_dtoa_r+0x560>
    67b0:	d9001617 	ldw	r4,88(sp)
    67b4:	900b883a 	mov	r5,r18
    67b8:	01800144 	movi	r6,5
    67bc:	000f883a 	mov	r7,zero
    67c0:	0009a240 	call	9a24 <__multadd>
    67c4:	d9000717 	ldw	r4,28(sp)
    67c8:	100b883a 	mov	r5,r2
    67cc:	1025883a 	mov	r18,r2
    67d0:	0008e600 	call	8e60 <__mcmp>
    67d4:	00bcf10e 	bge	zero,r2,5b9c <_dtoa_r+0x560>
    67d8:	d8c00d17 	ldw	r3,52(sp)
    67dc:	d9000517 	ldw	r4,20(sp)
    67e0:	d8000615 	stw	zero,24(sp)
    67e4:	18c00044 	addi	r3,r3,1
    67e8:	d8c00d15 	stw	r3,52(sp)
    67ec:	00800c44 	movi	r2,49
    67f0:	27000044 	addi	fp,r4,1
    67f4:	20800005 	stb	r2,0(r4)
    67f8:	003e8906 	br	6220 <_dtoa_r+0xbe4>
    67fc:	d8c00517 	ldw	r3,20(sp)
    6800:	003bc206 	br	570c <_dtoa_r+0xd0>
    6804:	01800074 	movhi	r6,1
    6808:	31bc3504 	addi	r6,r6,-3884
    680c:	30c00917 	ldw	r3,36(r6)
    6810:	30800817 	ldw	r2,32(r6)
    6814:	d9001217 	ldw	r4,72(sp)
    6818:	d9401317 	ldw	r5,76(sp)
    681c:	180f883a 	mov	r7,r3
    6820:	100d883a 	mov	r6,r2
    6824:	000c65c0 	call	c65c <__divdf3>
    6828:	948003cc 	andi	r18,r18,15
    682c:	058000c4 	movi	r22,3
    6830:	1029883a 	mov	r20,r2
    6834:	182b883a 	mov	r21,r3
    6838:	003c8906 	br	5a60 <_dtoa_r+0x424>
    683c:	d9001017 	ldw	r4,64(sp)
    6840:	d9800917 	ldw	r6,36(sp)
    6844:	0025883a 	mov	r18,zero
    6848:	1105c83a 	sub	r2,r2,r4
    684c:	2089883a 	add	r4,r4,r2
    6850:	308d883a 	add	r6,r6,r2
    6854:	d9001015 	stw	r4,64(sp)
    6858:	d9800915 	stw	r6,36(sp)
    685c:	003e3206 	br	6128 <_dtoa_r+0xaec>
    6860:	28800044 	addi	r2,r5,1
    6864:	27000044 	addi	fp,r4,1
    6868:	20800005 	stb	r2,0(r4)
    686c:	003e6c06 	br	6220 <_dtoa_r+0xbe4>
    6870:	d8800f17 	ldw	r2,60(sp)
    6874:	00bce016 	blt	zero,r2,5bf8 <_dtoa_r+0x5bc>
    6878:	d9800f17 	ldw	r6,60(sp)
    687c:	303cc51e 	bne	r6,zero,5b94 <_dtoa_r+0x558>
    6880:	0005883a 	mov	r2,zero
    6884:	00d00534 	movhi	r3,16404
    6888:	980b883a 	mov	r5,r19
    688c:	180f883a 	mov	r7,r3
    6890:	9009883a 	mov	r4,r18
    6894:	100d883a 	mov	r6,r2
    6898:	000c2980 	call	c298 <__muldf3>
    689c:	180b883a 	mov	r5,r3
    68a0:	a80f883a 	mov	r7,r21
    68a4:	1009883a 	mov	r4,r2
    68a8:	a00d883a 	mov	r6,r20
    68ac:	000ca4c0 	call	ca4c <__gedf2>
    68b0:	103cb80e 	bge	r2,zero,5b94 <_dtoa_r+0x558>
    68b4:	0027883a 	mov	r19,zero
    68b8:	0025883a 	mov	r18,zero
    68bc:	003fc606 	br	67d8 <_dtoa_r+0x119c>
    68c0:	99400117 	ldw	r5,4(r19)
    68c4:	d9001617 	ldw	r4,88(sp)
    68c8:	00092840 	call	9284 <_Balloc>
    68cc:	99800417 	ldw	r6,16(r19)
    68d0:	11000304 	addi	r4,r2,12
    68d4:	99400304 	addi	r5,r19,12
    68d8:	318d883a 	add	r6,r6,r6
    68dc:	318d883a 	add	r6,r6,r6
    68e0:	31800204 	addi	r6,r6,8
    68e4:	1023883a 	mov	r17,r2
    68e8:	0008aec0 	call	8aec <memcpy>
    68ec:	d9001617 	ldw	r4,88(sp)
    68f0:	880b883a 	mov	r5,r17
    68f4:	01800044 	movi	r6,1
    68f8:	00096480 	call	9648 <__lshift>
    68fc:	100b883a 	mov	r5,r2
    6900:	003d9c06 	br	5f74 <_dtoa_r+0x938>
    6904:	00800e44 	movi	r2,57
    6908:	b8807026 	beq	r23,r2,6acc <_dtoa_r+0x1490>
    690c:	b8800044 	addi	r2,r23,1
    6910:	b7000044 	addi	fp,r22,1
    6914:	b0800005 	stb	r2,0(r22)
    6918:	003e4106 	br	6220 <_dtoa_r+0xbe4>
    691c:	d8800317 	ldw	r2,12(sp)
    6920:	01800074 	movhi	r6,1
    6924:	31bc0304 	addi	r6,r6,-4084
    6928:	b009883a 	mov	r4,r22
    692c:	100e90fa 	slli	r7,r2,3
    6930:	b80b883a 	mov	r5,r23
    6934:	398f883a 	add	r7,r7,r6
    6938:	38bffe17 	ldw	r2,-8(r7)
    693c:	d9800517 	ldw	r6,20(sp)
    6940:	38ffff17 	ldw	r3,-4(r7)
    6944:	37000044 	addi	fp,r6,1
    6948:	180f883a 	mov	r7,r3
    694c:	100d883a 	mov	r6,r2
    6950:	000c2980 	call	c298 <__muldf3>
    6954:	a80b883a 	mov	r5,r21
    6958:	a009883a 	mov	r4,r20
    695c:	182f883a 	mov	r23,r3
    6960:	102d883a 	mov	r22,r2
    6964:	000ccdc0 	call	ccdc <__fixdfsi>
    6968:	1009883a 	mov	r4,r2
    696c:	1027883a 	mov	r19,r2
    6970:	000cbe40 	call	cbe4 <__floatsidf>
    6974:	a80b883a 	mov	r5,r21
    6978:	a009883a 	mov	r4,r20
    697c:	180f883a 	mov	r7,r3
    6980:	100d883a 	mov	r6,r2
    6984:	000c1a40 	call	c1a4 <__subdf3>
    6988:	180b883a 	mov	r5,r3
    698c:	d8c00517 	ldw	r3,20(sp)
    6990:	9cc00c04 	addi	r19,r19,48
    6994:	1009883a 	mov	r4,r2
    6998:	1cc00005 	stb	r19,0(r3)
    699c:	2021883a 	mov	r16,r4
    69a0:	d9000317 	ldw	r4,12(sp)
    69a4:	00800044 	movi	r2,1
    69a8:	2823883a 	mov	r17,r5
    69ac:	20802226 	beq	r4,r2,6a38 <_dtoa_r+0x13fc>
    69b0:	1029883a 	mov	r20,r2
    69b4:	0005883a 	mov	r2,zero
    69b8:	00d00934 	movhi	r3,16420
    69bc:	180f883a 	mov	r7,r3
    69c0:	100d883a 	mov	r6,r2
    69c4:	880b883a 	mov	r5,r17
    69c8:	8009883a 	mov	r4,r16
    69cc:	000c2980 	call	c298 <__muldf3>
    69d0:	180b883a 	mov	r5,r3
    69d4:	1009883a 	mov	r4,r2
    69d8:	1823883a 	mov	r17,r3
    69dc:	1021883a 	mov	r16,r2
    69e0:	000ccdc0 	call	ccdc <__fixdfsi>
    69e4:	1009883a 	mov	r4,r2
    69e8:	102b883a 	mov	r21,r2
    69ec:	000cbe40 	call	cbe4 <__floatsidf>
    69f0:	880b883a 	mov	r5,r17
    69f4:	8009883a 	mov	r4,r16
    69f8:	180f883a 	mov	r7,r3
    69fc:	100d883a 	mov	r6,r2
    6a00:	000c1a40 	call	c1a4 <__subdf3>
    6a04:	180b883a 	mov	r5,r3
    6a08:	d8c00517 	ldw	r3,20(sp)
    6a0c:	1009883a 	mov	r4,r2
    6a10:	ad400c04 	addi	r21,r21,48
    6a14:	1d05883a 	add	r2,r3,r20
    6a18:	15400005 	stb	r21,0(r2)
    6a1c:	2021883a 	mov	r16,r4
    6a20:	d9000317 	ldw	r4,12(sp)
    6a24:	a5000044 	addi	r20,r20,1
    6a28:	2823883a 	mov	r17,r5
    6a2c:	a13fe11e 	bne	r20,r4,69b4 <_dtoa_r+0x1378>
    6a30:	e505883a 	add	r2,fp,r20
    6a34:	173fffc4 	addi	fp,r2,-1
    6a38:	0025883a 	mov	r18,zero
    6a3c:	04cff834 	movhi	r19,16352
    6a40:	b009883a 	mov	r4,r22
    6a44:	b80b883a 	mov	r5,r23
    6a48:	900d883a 	mov	r6,r18
    6a4c:	980f883a 	mov	r7,r19
    6a50:	000c2240 	call	c224 <__adddf3>
    6a54:	180b883a 	mov	r5,r3
    6a58:	1009883a 	mov	r4,r2
    6a5c:	800d883a 	mov	r6,r16
    6a60:	880f883a 	mov	r7,r17
    6a64:	000cad40 	call	cad4 <__ltdf2>
    6a68:	103cab16 	blt	r2,zero,5d18 <_dtoa_r+0x6dc>
    6a6c:	0009883a 	mov	r4,zero
    6a70:	980b883a 	mov	r5,r19
    6a74:	b80f883a 	mov	r7,r23
    6a78:	b00d883a 	mov	r6,r22
    6a7c:	000c1a40 	call	c1a4 <__subdf3>
    6a80:	180b883a 	mov	r5,r3
    6a84:	880f883a 	mov	r7,r17
    6a88:	1009883a 	mov	r4,r2
    6a8c:	800d883a 	mov	r6,r16
    6a90:	000c9c40 	call	c9c4 <__gtdf2>
    6a94:	00bc470e 	bge	zero,r2,5bb4 <_dtoa_r+0x578>
    6a98:	00c00c04 	movi	r3,48
    6a9c:	e73fffc4 	addi	fp,fp,-1
    6aa0:	e0800007 	ldb	r2,0(fp)
    6aa4:	10fffd26 	beq	r2,r3,6a9c <_dtoa_r+0x1460>
    6aa8:	d9800417 	ldw	r6,16(sp)
    6aac:	e7000044 	addi	fp,fp,1
    6ab0:	d9800d15 	stw	r6,52(sp)
    6ab4:	003cab06 	br	5d64 <_dtoa_r+0x728>
    6ab8:	d8c00f17 	ldw	r3,60(sp)
    6abc:	d9001117 	ldw	r4,68(sp)
    6ac0:	20e1c83a 	sub	r16,r4,r3
    6ac4:	0007883a 	mov	r3,zero
    6ac8:	003d9b06 	br	6138 <_dtoa_r+0xafc>
    6acc:	00800e44 	movi	r2,57
    6ad0:	b0800005 	stb	r2,0(r22)
    6ad4:	b5800044 	addi	r22,r22,1
    6ad8:	003dc106 	br	61e0 <_dtoa_r+0xba4>
    6adc:	05800084 	movi	r22,2
    6ae0:	003bf706 	br	5ac0 <_dtoa_r+0x484>
    6ae4:	d9000f17 	ldw	r4,60(sp)
    6ae8:	013c000e 	bge	zero,r4,5aec <_dtoa_r+0x4b0>
    6aec:	d9800e17 	ldw	r6,56(sp)
    6af0:	01bc300e 	bge	zero,r6,5bb4 <_dtoa_r+0x578>
    6af4:	0005883a 	mov	r2,zero
    6af8:	00d00934 	movhi	r3,16420
    6afc:	a80b883a 	mov	r5,r21
    6b00:	180f883a 	mov	r7,r3
    6b04:	a009883a 	mov	r4,r20
    6b08:	100d883a 	mov	r6,r2
    6b0c:	000c2980 	call	c298 <__muldf3>
    6b10:	b1000044 	addi	r4,r22,1
    6b14:	1021883a 	mov	r16,r2
    6b18:	1823883a 	mov	r17,r3
    6b1c:	000cbe40 	call	cbe4 <__floatsidf>
    6b20:	880b883a 	mov	r5,r17
    6b24:	8009883a 	mov	r4,r16
    6b28:	180f883a 	mov	r7,r3
    6b2c:	100d883a 	mov	r6,r2
    6b30:	000c2980 	call	c298 <__muldf3>
    6b34:	0011883a 	mov	r8,zero
    6b38:	02500734 	movhi	r9,16412
    6b3c:	180b883a 	mov	r5,r3
    6b40:	480f883a 	mov	r7,r9
    6b44:	1009883a 	mov	r4,r2
    6b48:	400d883a 	mov	r6,r8
    6b4c:	000c2240 	call	c224 <__adddf3>
    6b50:	102d883a 	mov	r22,r2
    6b54:	00bf3034 	movhi	r2,64704
    6b58:	10ef883a 	add	r23,r2,r3
    6b5c:	d8800d17 	ldw	r2,52(sp)
    6b60:	d8c00e17 	ldw	r3,56(sp)
    6b64:	8029883a 	mov	r20,r16
    6b68:	10bfffc4 	addi	r2,r2,-1
    6b6c:	882b883a 	mov	r21,r17
    6b70:	d8800415 	stw	r2,16(sp)
    6b74:	d8c00315 	stw	r3,12(sp)
    6b78:	003e8306 	br	6588 <_dtoa_r+0xf4c>
    6b7c:	d8800117 	ldw	r2,4(sp)
    6b80:	dc001117 	ldw	r16,68(sp)
    6b84:	dc801017 	ldw	r18,64(sp)
    6b88:	00c00d84 	movi	r3,54
    6b8c:	1887c83a 	sub	r3,r3,r2
    6b90:	003d6906 	br	6138 <_dtoa_r+0xafc>
    6b94:	01800044 	movi	r6,1
    6b98:	3021883a 	mov	r16,r6
    6b9c:	d9800f15 	stw	r6,60(sp)
    6ba0:	d9802615 	stw	r6,152(sp)
    6ba4:	d9800e15 	stw	r6,56(sp)
    6ba8:	003b9306 	br	59f8 <_dtoa_r+0x3bc>
    6bac:	b021883a 	mov	r16,r22
    6bb0:	dd800f15 	stw	r22,60(sp)
    6bb4:	003b9006 	br	59f8 <_dtoa_r+0x3bc>
    6bb8:	103e221e 	bne	r2,zero,6444 <_dtoa_r+0xe08>
    6bbc:	b880004c 	andi	r2,r23,1
    6bc0:	1005003a 	cmpeq	r2,r2,zero
    6bc4:	103e1f1e 	bne	r2,zero,6444 <_dtoa_r+0xe08>
    6bc8:	003e1b06 	br	6438 <_dtoa_r+0xdfc>
    6bcc:	d9001617 	ldw	r4,88(sp)
    6bd0:	980b883a 	mov	r5,r19
    6bd4:	01800284 	movi	r6,10
    6bd8:	000f883a 	mov	r7,zero
    6bdc:	0009a240 	call	9a24 <__multadd>
    6be0:	d8c00e17 	ldw	r3,56(sp)
    6be4:	1027883a 	mov	r19,r2
    6be8:	d8c00f15 	stw	r3,60(sp)
    6bec:	003cd306 	br	5f3c <_dtoa_r+0x900>

00006bf0 <_fflush_r>:
    6bf0:	defffb04 	addi	sp,sp,-20
    6bf4:	dcc00315 	stw	r19,12(sp)
    6bf8:	dc800215 	stw	r18,8(sp)
    6bfc:	dfc00415 	stw	ra,16(sp)
    6c00:	dc400115 	stw	r17,4(sp)
    6c04:	dc000015 	stw	r16,0(sp)
    6c08:	2027883a 	mov	r19,r4
    6c0c:	2825883a 	mov	r18,r5
    6c10:	20000226 	beq	r4,zero,6c1c <_fflush_r+0x2c>
    6c14:	20800e17 	ldw	r2,56(r4)
    6c18:	10005626 	beq	r2,zero,6d74 <_fflush_r+0x184>
    6c1c:	9100030b 	ldhu	r4,12(r18)
    6c20:	20ffffcc 	andi	r3,r4,65535
    6c24:	18e0001c 	xori	r3,r3,32768
    6c28:	18e00004 	addi	r3,r3,-32768
    6c2c:	1880020c 	andi	r2,r3,8
    6c30:	1000261e 	bne	r2,zero,6ccc <_fflush_r+0xdc>
    6c34:	90c00117 	ldw	r3,4(r18)
    6c38:	20820014 	ori	r2,r4,2048
    6c3c:	9080030d 	sth	r2,12(r18)
    6c40:	1009883a 	mov	r4,r2
    6c44:	00c0400e 	bge	zero,r3,6d48 <_fflush_r+0x158>
    6c48:	92000a17 	ldw	r8,40(r18)
    6c4c:	40004026 	beq	r8,zero,6d50 <_fflush_r+0x160>
    6c50:	2084000c 	andi	r2,r4,4096
    6c54:	10005326 	beq	r2,zero,6da4 <_fflush_r+0x1b4>
    6c58:	94001417 	ldw	r16,80(r18)
    6c5c:	9080030b 	ldhu	r2,12(r18)
    6c60:	1080010c 	andi	r2,r2,4
    6c64:	1000481e 	bne	r2,zero,6d88 <_fflush_r+0x198>
    6c68:	91400717 	ldw	r5,28(r18)
    6c6c:	9809883a 	mov	r4,r19
    6c70:	800d883a 	mov	r6,r16
    6c74:	000f883a 	mov	r7,zero
    6c78:	403ee83a 	callr	r8
    6c7c:	8080261e 	bne	r16,r2,6d18 <_fflush_r+0x128>
    6c80:	9080030b 	ldhu	r2,12(r18)
    6c84:	91000417 	ldw	r4,16(r18)
    6c88:	90000115 	stw	zero,4(r18)
    6c8c:	10bdffcc 	andi	r2,r2,63487
    6c90:	10ffffcc 	andi	r3,r2,65535
    6c94:	18c4000c 	andi	r3,r3,4096
    6c98:	9080030d 	sth	r2,12(r18)
    6c9c:	91000015 	stw	r4,0(r18)
    6ca0:	18002b26 	beq	r3,zero,6d50 <_fflush_r+0x160>
    6ca4:	0007883a 	mov	r3,zero
    6ca8:	1805883a 	mov	r2,r3
    6cac:	94001415 	stw	r16,80(r18)
    6cb0:	dfc00417 	ldw	ra,16(sp)
    6cb4:	dcc00317 	ldw	r19,12(sp)
    6cb8:	dc800217 	ldw	r18,8(sp)
    6cbc:	dc400117 	ldw	r17,4(sp)
    6cc0:	dc000017 	ldw	r16,0(sp)
    6cc4:	dec00504 	addi	sp,sp,20
    6cc8:	f800283a 	ret
    6ccc:	94400417 	ldw	r17,16(r18)
    6cd0:	88001f26 	beq	r17,zero,6d50 <_fflush_r+0x160>
    6cd4:	90800017 	ldw	r2,0(r18)
    6cd8:	18c000cc 	andi	r3,r3,3
    6cdc:	94400015 	stw	r17,0(r18)
    6ce0:	1461c83a 	sub	r16,r2,r17
    6ce4:	18002526 	beq	r3,zero,6d7c <_fflush_r+0x18c>
    6ce8:	0005883a 	mov	r2,zero
    6cec:	90800215 	stw	r2,8(r18)
    6cf0:	0400170e 	bge	zero,r16,6d50 <_fflush_r+0x160>
    6cf4:	90c00917 	ldw	r3,36(r18)
    6cf8:	91400717 	ldw	r5,28(r18)
    6cfc:	880d883a 	mov	r6,r17
    6d00:	800f883a 	mov	r7,r16
    6d04:	9809883a 	mov	r4,r19
    6d08:	183ee83a 	callr	r3
    6d0c:	88a3883a 	add	r17,r17,r2
    6d10:	80a1c83a 	sub	r16,r16,r2
    6d14:	00bff616 	blt	zero,r2,6cf0 <_fflush_r+0x100>
    6d18:	9080030b 	ldhu	r2,12(r18)
    6d1c:	00ffffc4 	movi	r3,-1
    6d20:	10801014 	ori	r2,r2,64
    6d24:	9080030d 	sth	r2,12(r18)
    6d28:	1805883a 	mov	r2,r3
    6d2c:	dfc00417 	ldw	ra,16(sp)
    6d30:	dcc00317 	ldw	r19,12(sp)
    6d34:	dc800217 	ldw	r18,8(sp)
    6d38:	dc400117 	ldw	r17,4(sp)
    6d3c:	dc000017 	ldw	r16,0(sp)
    6d40:	dec00504 	addi	sp,sp,20
    6d44:	f800283a 	ret
    6d48:	90800f17 	ldw	r2,60(r18)
    6d4c:	00bfbe16 	blt	zero,r2,6c48 <_fflush_r+0x58>
    6d50:	0007883a 	mov	r3,zero
    6d54:	1805883a 	mov	r2,r3
    6d58:	dfc00417 	ldw	ra,16(sp)
    6d5c:	dcc00317 	ldw	r19,12(sp)
    6d60:	dc800217 	ldw	r18,8(sp)
    6d64:	dc400117 	ldw	r17,4(sp)
    6d68:	dc000017 	ldw	r16,0(sp)
    6d6c:	dec00504 	addi	sp,sp,20
    6d70:	f800283a 	ret
    6d74:	0006e880 	call	6e88 <__sinit>
    6d78:	003fa806 	br	6c1c <_fflush_r+0x2c>
    6d7c:	90800517 	ldw	r2,20(r18)
    6d80:	90800215 	stw	r2,8(r18)
    6d84:	003fda06 	br	6cf0 <_fflush_r+0x100>
    6d88:	90800117 	ldw	r2,4(r18)
    6d8c:	90c00c17 	ldw	r3,48(r18)
    6d90:	80a1c83a 	sub	r16,r16,r2
    6d94:	183fb426 	beq	r3,zero,6c68 <_fflush_r+0x78>
    6d98:	90800f17 	ldw	r2,60(r18)
    6d9c:	80a1c83a 	sub	r16,r16,r2
    6da0:	003fb106 	br	6c68 <_fflush_r+0x78>
    6da4:	91400717 	ldw	r5,28(r18)
    6da8:	9809883a 	mov	r4,r19
    6dac:	000d883a 	mov	r6,zero
    6db0:	01c00044 	movi	r7,1
    6db4:	403ee83a 	callr	r8
    6db8:	1021883a 	mov	r16,r2
    6dbc:	00bfffc4 	movi	r2,-1
    6dc0:	80800226 	beq	r16,r2,6dcc <_fflush_r+0x1dc>
    6dc4:	92000a17 	ldw	r8,40(r18)
    6dc8:	003fa406 	br	6c5c <_fflush_r+0x6c>
    6dcc:	98c00017 	ldw	r3,0(r19)
    6dd0:	00800744 	movi	r2,29
    6dd4:	18bfde26 	beq	r3,r2,6d50 <_fflush_r+0x160>
    6dd8:	9080030b 	ldhu	r2,12(r18)
    6ddc:	8007883a 	mov	r3,r16
    6de0:	10801014 	ori	r2,r2,64
    6de4:	9080030d 	sth	r2,12(r18)
    6de8:	003fcf06 	br	6d28 <_fflush_r+0x138>

00006dec <fflush>:
    6dec:	01400034 	movhi	r5,0
    6df0:	295afc04 	addi	r5,r5,27632
    6df4:	2007883a 	mov	r3,r4
    6df8:	20000526 	beq	r4,zero,6e10 <fflush+0x24>
    6dfc:	00800074 	movhi	r2,1
    6e00:	10835a04 	addi	r2,r2,3432
    6e04:	11000017 	ldw	r4,0(r2)
    6e08:	180b883a 	mov	r5,r3
    6e0c:	0006bf01 	jmpi	6bf0 <_fflush_r>
    6e10:	00800074 	movhi	r2,1
    6e14:	10835b04 	addi	r2,r2,3436
    6e18:	11000017 	ldw	r4,0(r2)
    6e1c:	00079f01 	jmpi	79f0 <_fwalk_reent>

00006e20 <std>:
    6e20:	00800074 	movhi	r2,1
    6e24:	10a97804 	addi	r2,r2,-23072
    6e28:	20800b15 	stw	r2,44(r4)
    6e2c:	00800074 	movhi	r2,1
    6e30:	10a9b304 	addi	r2,r2,-22836
    6e34:	20800815 	stw	r2,32(r4)
    6e38:	00c00074 	movhi	r3,1
    6e3c:	18e99404 	addi	r3,r3,-22960
    6e40:	00800074 	movhi	r2,1
    6e44:	10a97a04 	addi	r2,r2,-23064
    6e48:	2140030d 	sth	r5,12(r4)
    6e4c:	2180038d 	sth	r6,14(r4)
    6e50:	20c00915 	stw	r3,36(r4)
    6e54:	20800a15 	stw	r2,40(r4)
    6e58:	20000015 	stw	zero,0(r4)
    6e5c:	20000115 	stw	zero,4(r4)
    6e60:	20000215 	stw	zero,8(r4)
    6e64:	20000415 	stw	zero,16(r4)
    6e68:	20000515 	stw	zero,20(r4)
    6e6c:	20000615 	stw	zero,24(r4)
    6e70:	21000715 	stw	r4,28(r4)
    6e74:	f800283a 	ret

00006e78 <__sfp_lock_acquire>:
    6e78:	f800283a 	ret

00006e7c <__sfp_lock_release>:
    6e7c:	f800283a 	ret

00006e80 <__sinit_lock_acquire>:
    6e80:	f800283a 	ret

00006e84 <__sinit_lock_release>:
    6e84:	f800283a 	ret

00006e88 <__sinit>:
    6e88:	20800e17 	ldw	r2,56(r4)
    6e8c:	defffd04 	addi	sp,sp,-12
    6e90:	dc400115 	stw	r17,4(sp)
    6e94:	dc000015 	stw	r16,0(sp)
    6e98:	dfc00215 	stw	ra,8(sp)
    6e9c:	04400044 	movi	r17,1
    6ea0:	01400104 	movi	r5,4
    6ea4:	000d883a 	mov	r6,zero
    6ea8:	2021883a 	mov	r16,r4
    6eac:	2200bb04 	addi	r8,r4,748
    6eb0:	200f883a 	mov	r7,r4
    6eb4:	10000526 	beq	r2,zero,6ecc <__sinit+0x44>
    6eb8:	dfc00217 	ldw	ra,8(sp)
    6ebc:	dc400117 	ldw	r17,4(sp)
    6ec0:	dc000017 	ldw	r16,0(sp)
    6ec4:	dec00304 	addi	sp,sp,12
    6ec8:	f800283a 	ret
    6ecc:	21000117 	ldw	r4,4(r4)
    6ed0:	00800034 	movhi	r2,0
    6ed4:	109bdb04 	addi	r2,r2,28524
    6ed8:	00c000c4 	movi	r3,3
    6edc:	80800f15 	stw	r2,60(r16)
    6ee0:	80c0b915 	stw	r3,740(r16)
    6ee4:	8200ba15 	stw	r8,744(r16)
    6ee8:	84400e15 	stw	r17,56(r16)
    6eec:	8000b815 	stw	zero,736(r16)
    6ef0:	0006e200 	call	6e20 <std>
    6ef4:	81000217 	ldw	r4,8(r16)
    6ef8:	880d883a 	mov	r6,r17
    6efc:	800f883a 	mov	r7,r16
    6f00:	01400284 	movi	r5,10
    6f04:	0006e200 	call	6e20 <std>
    6f08:	81000317 	ldw	r4,12(r16)
    6f0c:	800f883a 	mov	r7,r16
    6f10:	01400484 	movi	r5,18
    6f14:	01800084 	movi	r6,2
    6f18:	dfc00217 	ldw	ra,8(sp)
    6f1c:	dc400117 	ldw	r17,4(sp)
    6f20:	dc000017 	ldw	r16,0(sp)
    6f24:	dec00304 	addi	sp,sp,12
    6f28:	0006e201 	jmpi	6e20 <std>

00006f2c <__fp_lock>:
    6f2c:	0005883a 	mov	r2,zero
    6f30:	f800283a 	ret

00006f34 <__fp_unlock>:
    6f34:	0005883a 	mov	r2,zero
    6f38:	f800283a 	ret

00006f3c <__fp_unlock_all>:
    6f3c:	00800074 	movhi	r2,1
    6f40:	10835a04 	addi	r2,r2,3432
    6f44:	11000017 	ldw	r4,0(r2)
    6f48:	01400034 	movhi	r5,0
    6f4c:	295bcd04 	addi	r5,r5,28468
    6f50:	0007ab81 	jmpi	7ab8 <_fwalk>

00006f54 <__fp_lock_all>:
    6f54:	00800074 	movhi	r2,1
    6f58:	10835a04 	addi	r2,r2,3432
    6f5c:	11000017 	ldw	r4,0(r2)
    6f60:	01400034 	movhi	r5,0
    6f64:	295bcb04 	addi	r5,r5,28460
    6f68:	0007ab81 	jmpi	7ab8 <_fwalk>

00006f6c <_cleanup_r>:
    6f6c:	01400074 	movhi	r5,1
    6f70:	296b3504 	addi	r5,r5,-21292
    6f74:	0007ab81 	jmpi	7ab8 <_fwalk>

00006f78 <_cleanup>:
    6f78:	00800074 	movhi	r2,1
    6f7c:	10835b04 	addi	r2,r2,3436
    6f80:	11000017 	ldw	r4,0(r2)
    6f84:	0006f6c1 	jmpi	6f6c <_cleanup_r>

00006f88 <__sfmoreglue>:
    6f88:	defffc04 	addi	sp,sp,-16
    6f8c:	dc000015 	stw	r16,0(sp)
    6f90:	2821883a 	mov	r16,r5
    6f94:	dc400115 	stw	r17,4(sp)
    6f98:	01401704 	movi	r5,92
    6f9c:	2023883a 	mov	r17,r4
    6fa0:	8009883a 	mov	r4,r16
    6fa4:	dfc00315 	stw	ra,12(sp)
    6fa8:	dcc00215 	stw	r19,8(sp)
    6fac:	000d0940 	call	d094 <__mulsi3>
    6fb0:	11400304 	addi	r5,r2,12
    6fb4:	8809883a 	mov	r4,r17
    6fb8:	1027883a 	mov	r19,r2
    6fbc:	0000b200 	call	b20 <_malloc_r>
    6fc0:	10c00304 	addi	r3,r2,12
    6fc4:	1023883a 	mov	r17,r2
    6fc8:	1809883a 	mov	r4,r3
    6fcc:	980d883a 	mov	r6,r19
    6fd0:	000b883a 	mov	r5,zero
    6fd4:	10000b26 	beq	r2,zero,7004 <__sfmoreglue+0x7c>
    6fd8:	14000115 	stw	r16,4(r2)
    6fdc:	10c00215 	stw	r3,8(r2)
    6fe0:	10000015 	stw	zero,0(r2)
    6fe4:	0008c6c0 	call	8c6c <memset>
    6fe8:	8805883a 	mov	r2,r17
    6fec:	dfc00317 	ldw	ra,12(sp)
    6ff0:	dcc00217 	ldw	r19,8(sp)
    6ff4:	dc400117 	ldw	r17,4(sp)
    6ff8:	dc000017 	ldw	r16,0(sp)
    6ffc:	dec00404 	addi	sp,sp,16
    7000:	f800283a 	ret
    7004:	0023883a 	mov	r17,zero
    7008:	8805883a 	mov	r2,r17
    700c:	dfc00317 	ldw	ra,12(sp)
    7010:	dcc00217 	ldw	r19,8(sp)
    7014:	dc400117 	ldw	r17,4(sp)
    7018:	dc000017 	ldw	r16,0(sp)
    701c:	dec00404 	addi	sp,sp,16
    7020:	f800283a 	ret

00007024 <__sfp>:
    7024:	defffd04 	addi	sp,sp,-12
    7028:	00800074 	movhi	r2,1
    702c:	10835b04 	addi	r2,r2,3436
    7030:	dc000015 	stw	r16,0(sp)
    7034:	14000017 	ldw	r16,0(r2)
    7038:	dc400115 	stw	r17,4(sp)
    703c:	dfc00215 	stw	ra,8(sp)
    7040:	80800e17 	ldw	r2,56(r16)
    7044:	2023883a 	mov	r17,r4
    7048:	10002626 	beq	r2,zero,70e4 <__sfp+0xc0>
    704c:	8400b804 	addi	r16,r16,736
    7050:	80800117 	ldw	r2,4(r16)
    7054:	81000217 	ldw	r4,8(r16)
    7058:	10ffffc4 	addi	r3,r2,-1
    705c:	18000916 	blt	r3,zero,7084 <__sfp+0x60>
    7060:	2080030f 	ldh	r2,12(r4)
    7064:	10000b26 	beq	r2,zero,7094 <__sfp+0x70>
    7068:	017fffc4 	movi	r5,-1
    706c:	00000206 	br	7078 <__sfp+0x54>
    7070:	2080030f 	ldh	r2,12(r4)
    7074:	10000726 	beq	r2,zero,7094 <__sfp+0x70>
    7078:	18ffffc4 	addi	r3,r3,-1
    707c:	21001704 	addi	r4,r4,92
    7080:	197ffb1e 	bne	r3,r5,7070 <__sfp+0x4c>
    7084:	80800017 	ldw	r2,0(r16)
    7088:	10001926 	beq	r2,zero,70f0 <__sfp+0xcc>
    708c:	1021883a 	mov	r16,r2
    7090:	003fef06 	br	7050 <__sfp+0x2c>
    7094:	00bfffc4 	movi	r2,-1
    7098:	00c00044 	movi	r3,1
    709c:	2080038d 	sth	r2,14(r4)
    70a0:	20c0030d 	sth	r3,12(r4)
    70a4:	20000015 	stw	zero,0(r4)
    70a8:	20000215 	stw	zero,8(r4)
    70ac:	20000115 	stw	zero,4(r4)
    70b0:	20000415 	stw	zero,16(r4)
    70b4:	20000515 	stw	zero,20(r4)
    70b8:	20000615 	stw	zero,24(r4)
    70bc:	20000c15 	stw	zero,48(r4)
    70c0:	20000d15 	stw	zero,52(r4)
    70c4:	20001115 	stw	zero,68(r4)
    70c8:	20001215 	stw	zero,72(r4)
    70cc:	2005883a 	mov	r2,r4
    70d0:	dfc00217 	ldw	ra,8(sp)
    70d4:	dc400117 	ldw	r17,4(sp)
    70d8:	dc000017 	ldw	r16,0(sp)
    70dc:	dec00304 	addi	sp,sp,12
    70e0:	f800283a 	ret
    70e4:	8009883a 	mov	r4,r16
    70e8:	0006e880 	call	6e88 <__sinit>
    70ec:	003fd706 	br	704c <__sfp+0x28>
    70f0:	8809883a 	mov	r4,r17
    70f4:	01400104 	movi	r5,4
    70f8:	0006f880 	call	6f88 <__sfmoreglue>
    70fc:	80800015 	stw	r2,0(r16)
    7100:	103fe21e 	bne	r2,zero,708c <__sfp+0x68>
    7104:	00800304 	movi	r2,12
    7108:	0009883a 	mov	r4,zero
    710c:	88800015 	stw	r2,0(r17)
    7110:	003fee06 	br	70cc <__sfp+0xa8>

00007114 <_malloc_trim_r>:
    7114:	defffb04 	addi	sp,sp,-20
    7118:	dcc00315 	stw	r19,12(sp)
    711c:	04c00074 	movhi	r19,1
    7120:	9cfca504 	addi	r19,r19,-3436
    7124:	dc800215 	stw	r18,8(sp)
    7128:	dc400115 	stw	r17,4(sp)
    712c:	dc000015 	stw	r16,0(sp)
    7130:	2823883a 	mov	r17,r5
    7134:	2025883a 	mov	r18,r4
    7138:	dfc00415 	stw	ra,16(sp)
    713c:	000dad00 	call	dad0 <__malloc_lock>
    7140:	98800217 	ldw	r2,8(r19)
    7144:	9009883a 	mov	r4,r18
    7148:	000b883a 	mov	r5,zero
    714c:	10c00117 	ldw	r3,4(r2)
    7150:	00bfff04 	movi	r2,-4
    7154:	18a0703a 	and	r16,r3,r2
    7158:	8463c83a 	sub	r17,r16,r17
    715c:	8c43fbc4 	addi	r17,r17,4079
    7160:	8822d33a 	srli	r17,r17,12
    7164:	0083ffc4 	movi	r2,4095
    7168:	8c7fffc4 	addi	r17,r17,-1
    716c:	8822933a 	slli	r17,r17,12
    7170:	1440060e 	bge	r2,r17,718c <_malloc_trim_r+0x78>
    7174:	00013b00 	call	13b0 <_sbrk_r>
    7178:	98c00217 	ldw	r3,8(r19)
    717c:	9009883a 	mov	r4,r18
    7180:	044bc83a 	sub	r5,zero,r17
    7184:	80c7883a 	add	r3,r16,r3
    7188:	10c00926 	beq	r2,r3,71b0 <_malloc_trim_r+0x9c>
    718c:	000dad40 	call	dad4 <__malloc_unlock>
    7190:	0005883a 	mov	r2,zero
    7194:	dfc00417 	ldw	ra,16(sp)
    7198:	dcc00317 	ldw	r19,12(sp)
    719c:	dc800217 	ldw	r18,8(sp)
    71a0:	dc400117 	ldw	r17,4(sp)
    71a4:	dc000017 	ldw	r16,0(sp)
    71a8:	dec00504 	addi	sp,sp,20
    71ac:	f800283a 	ret
    71b0:	9009883a 	mov	r4,r18
    71b4:	00013b00 	call	13b0 <_sbrk_r>
    71b8:	844dc83a 	sub	r6,r16,r17
    71bc:	00ffffc4 	movi	r3,-1
    71c0:	9009883a 	mov	r4,r18
    71c4:	000b883a 	mov	r5,zero
    71c8:	01c00074 	movhi	r7,1
    71cc:	39ca3804 	addi	r7,r7,10464
    71d0:	31800054 	ori	r6,r6,1
    71d4:	10c00926 	beq	r2,r3,71fc <_malloc_trim_r+0xe8>
    71d8:	38800017 	ldw	r2,0(r7)
    71dc:	98c00217 	ldw	r3,8(r19)
    71e0:	9009883a 	mov	r4,r18
    71e4:	1445c83a 	sub	r2,r2,r17
    71e8:	38800015 	stw	r2,0(r7)
    71ec:	19800115 	stw	r6,4(r3)
    71f0:	000dad40 	call	dad4 <__malloc_unlock>
    71f4:	00800044 	movi	r2,1
    71f8:	003fe606 	br	7194 <_malloc_trim_r+0x80>
    71fc:	00013b00 	call	13b0 <_sbrk_r>
    7200:	99800217 	ldw	r6,8(r19)
    7204:	100f883a 	mov	r7,r2
    7208:	9009883a 	mov	r4,r18
    720c:	1187c83a 	sub	r3,r2,r6
    7210:	008003c4 	movi	r2,15
    7214:	19400054 	ori	r5,r3,1
    7218:	10ffdc0e 	bge	r2,r3,718c <_malloc_trim_r+0x78>
    721c:	00800074 	movhi	r2,1
    7220:	10835904 	addi	r2,r2,3428
    7224:	10c00017 	ldw	r3,0(r2)
    7228:	00800074 	movhi	r2,1
    722c:	108a3804 	addi	r2,r2,10464
    7230:	31400115 	stw	r5,4(r6)
    7234:	38c7c83a 	sub	r3,r7,r3
    7238:	10c00015 	stw	r3,0(r2)
    723c:	003fd306 	br	718c <_malloc_trim_r+0x78>

00007240 <_free_r>:
    7240:	defffd04 	addi	sp,sp,-12
    7244:	dc400115 	stw	r17,4(sp)
    7248:	dc000015 	stw	r16,0(sp)
    724c:	dfc00215 	stw	ra,8(sp)
    7250:	2821883a 	mov	r16,r5
    7254:	2023883a 	mov	r17,r4
    7258:	28005a26 	beq	r5,zero,73c4 <_free_r+0x184>
    725c:	000dad00 	call	dad0 <__malloc_lock>
    7260:	823ffe04 	addi	r8,r16,-8
    7264:	41400117 	ldw	r5,4(r8)
    7268:	00bfff84 	movi	r2,-2
    726c:	02800074 	movhi	r10,1
    7270:	52bca504 	addi	r10,r10,-3436
    7274:	288e703a 	and	r7,r5,r2
    7278:	41cd883a 	add	r6,r8,r7
    727c:	30c00117 	ldw	r3,4(r6)
    7280:	51000217 	ldw	r4,8(r10)
    7284:	00bfff04 	movi	r2,-4
    7288:	1892703a 	and	r9,r3,r2
    728c:	5017883a 	mov	r11,r10
    7290:	31006726 	beq	r6,r4,7430 <_free_r+0x1f0>
    7294:	2880004c 	andi	r2,r5,1
    7298:	1005003a 	cmpeq	r2,r2,zero
    729c:	32400115 	stw	r9,4(r6)
    72a0:	10001a1e 	bne	r2,zero,730c <_free_r+0xcc>
    72a4:	000b883a 	mov	r5,zero
    72a8:	3247883a 	add	r3,r6,r9
    72ac:	18800117 	ldw	r2,4(r3)
    72b0:	1080004c 	andi	r2,r2,1
    72b4:	1000231e 	bne	r2,zero,7344 <_free_r+0x104>
    72b8:	280ac03a 	cmpne	r5,r5,zero
    72bc:	3a4f883a 	add	r7,r7,r9
    72c0:	2800451e 	bne	r5,zero,73d8 <_free_r+0x198>
    72c4:	31000217 	ldw	r4,8(r6)
    72c8:	00800074 	movhi	r2,1
    72cc:	10bca704 	addi	r2,r2,-3428
    72d0:	20807b26 	beq	r4,r2,74c0 <_free_r+0x280>
    72d4:	30800317 	ldw	r2,12(r6)
    72d8:	3a07883a 	add	r3,r7,r8
    72dc:	19c00015 	stw	r7,0(r3)
    72e0:	11000215 	stw	r4,8(r2)
    72e4:	20800315 	stw	r2,12(r4)
    72e8:	38800054 	ori	r2,r7,1
    72ec:	40800115 	stw	r2,4(r8)
    72f0:	28001a26 	beq	r5,zero,735c <_free_r+0x11c>
    72f4:	8809883a 	mov	r4,r17
    72f8:	dfc00217 	ldw	ra,8(sp)
    72fc:	dc400117 	ldw	r17,4(sp)
    7300:	dc000017 	ldw	r16,0(sp)
    7304:	dec00304 	addi	sp,sp,12
    7308:	000dad41 	jmpi	dad4 <__malloc_unlock>
    730c:	80bffe17 	ldw	r2,-8(r16)
    7310:	50c00204 	addi	r3,r10,8
    7314:	4091c83a 	sub	r8,r8,r2
    7318:	41000217 	ldw	r4,8(r8)
    731c:	388f883a 	add	r7,r7,r2
    7320:	20c06126 	beq	r4,r3,74a8 <_free_r+0x268>
    7324:	40800317 	ldw	r2,12(r8)
    7328:	3247883a 	add	r3,r6,r9
    732c:	000b883a 	mov	r5,zero
    7330:	11000215 	stw	r4,8(r2)
    7334:	20800315 	stw	r2,12(r4)
    7338:	18800117 	ldw	r2,4(r3)
    733c:	1080004c 	andi	r2,r2,1
    7340:	103fdd26 	beq	r2,zero,72b8 <_free_r+0x78>
    7344:	38800054 	ori	r2,r7,1
    7348:	3a07883a 	add	r3,r7,r8
    734c:	280ac03a 	cmpne	r5,r5,zero
    7350:	40800115 	stw	r2,4(r8)
    7354:	19c00015 	stw	r7,0(r3)
    7358:	283fe61e 	bne	r5,zero,72f4 <_free_r+0xb4>
    735c:	00807fc4 	movi	r2,511
    7360:	11c01f2e 	bgeu	r2,r7,73e0 <_free_r+0x1a0>
    7364:	3806d27a 	srli	r3,r7,9
    7368:	1800481e 	bne	r3,zero,748c <_free_r+0x24c>
    736c:	3804d0fa 	srli	r2,r7,3
    7370:	100690fa 	slli	r3,r2,3
    7374:	1acd883a 	add	r6,r3,r11
    7378:	31400217 	ldw	r5,8(r6)
    737c:	31405926 	beq	r6,r5,74e4 <_free_r+0x2a4>
    7380:	28800117 	ldw	r2,4(r5)
    7384:	00ffff04 	movi	r3,-4
    7388:	10c4703a 	and	r2,r2,r3
    738c:	3880022e 	bgeu	r7,r2,7398 <_free_r+0x158>
    7390:	29400217 	ldw	r5,8(r5)
    7394:	317ffa1e 	bne	r6,r5,7380 <_free_r+0x140>
    7398:	29800317 	ldw	r6,12(r5)
    739c:	41800315 	stw	r6,12(r8)
    73a0:	41400215 	stw	r5,8(r8)
    73a4:	8809883a 	mov	r4,r17
    73a8:	2a000315 	stw	r8,12(r5)
    73ac:	32000215 	stw	r8,8(r6)
    73b0:	dfc00217 	ldw	ra,8(sp)
    73b4:	dc400117 	ldw	r17,4(sp)
    73b8:	dc000017 	ldw	r16,0(sp)
    73bc:	dec00304 	addi	sp,sp,12
    73c0:	000dad41 	jmpi	dad4 <__malloc_unlock>
    73c4:	dfc00217 	ldw	ra,8(sp)
    73c8:	dc400117 	ldw	r17,4(sp)
    73cc:	dc000017 	ldw	r16,0(sp)
    73d0:	dec00304 	addi	sp,sp,12
    73d4:	f800283a 	ret
    73d8:	31000217 	ldw	r4,8(r6)
    73dc:	003fbd06 	br	72d4 <_free_r+0x94>
    73e0:	3806d0fa 	srli	r3,r7,3
    73e4:	00800044 	movi	r2,1
    73e8:	51400117 	ldw	r5,4(r10)
    73ec:	180890fa 	slli	r4,r3,3
    73f0:	1807d0ba 	srai	r3,r3,2
    73f4:	22c9883a 	add	r4,r4,r11
    73f8:	21800217 	ldw	r6,8(r4)
    73fc:	10c4983a 	sll	r2,r2,r3
    7400:	41000315 	stw	r4,12(r8)
    7404:	41800215 	stw	r6,8(r8)
    7408:	288ab03a 	or	r5,r5,r2
    740c:	22000215 	stw	r8,8(r4)
    7410:	8809883a 	mov	r4,r17
    7414:	51400115 	stw	r5,4(r10)
    7418:	32000315 	stw	r8,12(r6)
    741c:	dfc00217 	ldw	ra,8(sp)
    7420:	dc400117 	ldw	r17,4(sp)
    7424:	dc000017 	ldw	r16,0(sp)
    7428:	dec00304 	addi	sp,sp,12
    742c:	000dad41 	jmpi	dad4 <__malloc_unlock>
    7430:	2880004c 	andi	r2,r5,1
    7434:	3a4d883a 	add	r6,r7,r9
    7438:	1000071e 	bne	r2,zero,7458 <_free_r+0x218>
    743c:	80bffe17 	ldw	r2,-8(r16)
    7440:	4091c83a 	sub	r8,r8,r2
    7444:	41000317 	ldw	r4,12(r8)
    7448:	40c00217 	ldw	r3,8(r8)
    744c:	308d883a 	add	r6,r6,r2
    7450:	20c00215 	stw	r3,8(r4)
    7454:	19000315 	stw	r4,12(r3)
    7458:	00800074 	movhi	r2,1
    745c:	10835804 	addi	r2,r2,3424
    7460:	11000017 	ldw	r4,0(r2)
    7464:	30c00054 	ori	r3,r6,1
    7468:	52000215 	stw	r8,8(r10)
    746c:	40c00115 	stw	r3,4(r8)
    7470:	313fa036 	bltu	r6,r4,72f4 <_free_r+0xb4>
    7474:	00800074 	movhi	r2,1
    7478:	108a2b04 	addi	r2,r2,10412
    747c:	11400017 	ldw	r5,0(r2)
    7480:	8809883a 	mov	r4,r17
    7484:	00071140 	call	7114 <_malloc_trim_r>
    7488:	003f9a06 	br	72f4 <_free_r+0xb4>
    748c:	00800104 	movi	r2,4
    7490:	10c0072e 	bgeu	r2,r3,74b0 <_free_r+0x270>
    7494:	00800504 	movi	r2,20
    7498:	10c01936 	bltu	r2,r3,7500 <_free_r+0x2c0>
    749c:	188016c4 	addi	r2,r3,91
    74a0:	100690fa 	slli	r3,r2,3
    74a4:	003fb306 	br	7374 <_free_r+0x134>
    74a8:	01400044 	movi	r5,1
    74ac:	003f7e06 	br	72a8 <_free_r+0x68>
    74b0:	3804d1ba 	srli	r2,r7,6
    74b4:	10800e04 	addi	r2,r2,56
    74b8:	100690fa 	slli	r3,r2,3
    74bc:	003fad06 	br	7374 <_free_r+0x134>
    74c0:	22000315 	stw	r8,12(r4)
    74c4:	22000215 	stw	r8,8(r4)
    74c8:	3a05883a 	add	r2,r7,r8
    74cc:	38c00054 	ori	r3,r7,1
    74d0:	11c00015 	stw	r7,0(r2)
    74d4:	41000215 	stw	r4,8(r8)
    74d8:	40c00115 	stw	r3,4(r8)
    74dc:	41000315 	stw	r4,12(r8)
    74e0:	003f8406 	br	72f4 <_free_r+0xb4>
    74e4:	1005d0ba 	srai	r2,r2,2
    74e8:	00c00044 	movi	r3,1
    74ec:	51000117 	ldw	r4,4(r10)
    74f0:	1886983a 	sll	r3,r3,r2
    74f4:	20c8b03a 	or	r4,r4,r3
    74f8:	51000115 	stw	r4,4(r10)
    74fc:	003fa706 	br	739c <_free_r+0x15c>
    7500:	00801504 	movi	r2,84
    7504:	10c00436 	bltu	r2,r3,7518 <_free_r+0x2d8>
    7508:	3804d33a 	srli	r2,r7,12
    750c:	10801b84 	addi	r2,r2,110
    7510:	100690fa 	slli	r3,r2,3
    7514:	003f9706 	br	7374 <_free_r+0x134>
    7518:	00805504 	movi	r2,340
    751c:	10c00436 	bltu	r2,r3,7530 <_free_r+0x2f0>
    7520:	3804d3fa 	srli	r2,r7,15
    7524:	10801dc4 	addi	r2,r2,119
    7528:	100690fa 	slli	r3,r2,3
    752c:	003f9106 	br	7374 <_free_r+0x134>
    7530:	00815504 	movi	r2,1364
    7534:	10c0032e 	bgeu	r2,r3,7544 <_free_r+0x304>
    7538:	00801f84 	movi	r2,126
    753c:	00c0fc04 	movi	r3,1008
    7540:	003f8c06 	br	7374 <_free_r+0x134>
    7544:	3804d4ba 	srli	r2,r7,18
    7548:	10801f04 	addi	r2,r2,124
    754c:	100690fa 	slli	r3,r2,3
    7550:	003f8806 	br	7374 <_free_r+0x134>

00007554 <__sfvwrite_r>:
    7554:	30800217 	ldw	r2,8(r6)
    7558:	defff504 	addi	sp,sp,-44
    755c:	df000915 	stw	fp,36(sp)
    7560:	dd800715 	stw	r22,28(sp)
    7564:	dc800315 	stw	r18,12(sp)
    7568:	dfc00a15 	stw	ra,40(sp)
    756c:	ddc00815 	stw	r23,32(sp)
    7570:	dd400615 	stw	r21,24(sp)
    7574:	dd000515 	stw	r20,20(sp)
    7578:	dcc00415 	stw	r19,16(sp)
    757c:	dc400215 	stw	r17,8(sp)
    7580:	dc000115 	stw	r16,4(sp)
    7584:	302d883a 	mov	r22,r6
    7588:	2039883a 	mov	fp,r4
    758c:	2825883a 	mov	r18,r5
    7590:	10001c26 	beq	r2,zero,7604 <__sfvwrite_r+0xb0>
    7594:	29c0030b 	ldhu	r7,12(r5)
    7598:	3880020c 	andi	r2,r7,8
    759c:	10002726 	beq	r2,zero,763c <__sfvwrite_r+0xe8>
    75a0:	28800417 	ldw	r2,16(r5)
    75a4:	10002526 	beq	r2,zero,763c <__sfvwrite_r+0xe8>
    75a8:	3880008c 	andi	r2,r7,2
    75ac:	b5400017 	ldw	r21,0(r22)
    75b0:	10002826 	beq	r2,zero,7654 <__sfvwrite_r+0x100>
    75b4:	0021883a 	mov	r16,zero
    75b8:	0023883a 	mov	r17,zero
    75bc:	880d883a 	mov	r6,r17
    75c0:	e009883a 	mov	r4,fp
    75c4:	00810004 	movi	r2,1024
    75c8:	80006e26 	beq	r16,zero,7784 <__sfvwrite_r+0x230>
    75cc:	800f883a 	mov	r7,r16
    75d0:	91400717 	ldw	r5,28(r18)
    75d4:	1400012e 	bgeu	r2,r16,75dc <__sfvwrite_r+0x88>
    75d8:	100f883a 	mov	r7,r2
    75dc:	90c00917 	ldw	r3,36(r18)
    75e0:	183ee83a 	callr	r3
    75e4:	1007883a 	mov	r3,r2
    75e8:	80a1c83a 	sub	r16,r16,r2
    75ec:	88a3883a 	add	r17,r17,r2
    75f0:	00806d0e 	bge	zero,r2,77a8 <__sfvwrite_r+0x254>
    75f4:	b0800217 	ldw	r2,8(r22)
    75f8:	10c5c83a 	sub	r2,r2,r3
    75fc:	b0800215 	stw	r2,8(r22)
    7600:	103fee1e 	bne	r2,zero,75bc <__sfvwrite_r+0x68>
    7604:	0009883a 	mov	r4,zero
    7608:	2005883a 	mov	r2,r4
    760c:	dfc00a17 	ldw	ra,40(sp)
    7610:	df000917 	ldw	fp,36(sp)
    7614:	ddc00817 	ldw	r23,32(sp)
    7618:	dd800717 	ldw	r22,28(sp)
    761c:	dd400617 	ldw	r21,24(sp)
    7620:	dd000517 	ldw	r20,20(sp)
    7624:	dcc00417 	ldw	r19,16(sp)
    7628:	dc800317 	ldw	r18,12(sp)
    762c:	dc400217 	ldw	r17,8(sp)
    7630:	dc000117 	ldw	r16,4(sp)
    7634:	dec00b04 	addi	sp,sp,44
    7638:	f800283a 	ret
    763c:	00052bc0 	call	52bc <__swsetup_r>
    7640:	1000e41e 	bne	r2,zero,79d4 <__sfvwrite_r+0x480>
    7644:	91c0030b 	ldhu	r7,12(r18)
    7648:	b5400017 	ldw	r21,0(r22)
    764c:	3880008c 	andi	r2,r7,2
    7650:	103fd81e 	bne	r2,zero,75b4 <__sfvwrite_r+0x60>
    7654:	3880004c 	andi	r2,r7,1
    7658:	1005003a 	cmpeq	r2,r2,zero
    765c:	10005726 	beq	r2,zero,77bc <__sfvwrite_r+0x268>
    7660:	0029883a 	mov	r20,zero
    7664:	002f883a 	mov	r23,zero
    7668:	a0004226 	beq	r20,zero,7774 <__sfvwrite_r+0x220>
    766c:	3880800c 	andi	r2,r7,512
    7670:	94000217 	ldw	r16,8(r18)
    7674:	10008b26 	beq	r2,zero,78a4 <__sfvwrite_r+0x350>
    7678:	800d883a 	mov	r6,r16
    767c:	a400a536 	bltu	r20,r16,7914 <__sfvwrite_r+0x3c0>
    7680:	3881200c 	andi	r2,r7,1152
    7684:	10002726 	beq	r2,zero,7724 <__sfvwrite_r+0x1d0>
    7688:	90800517 	ldw	r2,20(r18)
    768c:	92000417 	ldw	r8,16(r18)
    7690:	91400017 	ldw	r5,0(r18)
    7694:	1087883a 	add	r3,r2,r2
    7698:	1887883a 	add	r3,r3,r2
    769c:	1808d7fa 	srli	r4,r3,31
    76a0:	2a21c83a 	sub	r16,r5,r8
    76a4:	80800044 	addi	r2,r16,1
    76a8:	20c9883a 	add	r4,r4,r3
    76ac:	2027d07a 	srai	r19,r4,1
    76b0:	a085883a 	add	r2,r20,r2
    76b4:	980d883a 	mov	r6,r19
    76b8:	9880022e 	bgeu	r19,r2,76c4 <__sfvwrite_r+0x170>
    76bc:	1027883a 	mov	r19,r2
    76c0:	100d883a 	mov	r6,r2
    76c4:	3881000c 	andi	r2,r7,1024
    76c8:	1000b826 	beq	r2,zero,79ac <__sfvwrite_r+0x458>
    76cc:	300b883a 	mov	r5,r6
    76d0:	e009883a 	mov	r4,fp
    76d4:	0000b200 	call	b20 <_malloc_r>
    76d8:	10003126 	beq	r2,zero,77a0 <__sfvwrite_r+0x24c>
    76dc:	91400417 	ldw	r5,16(r18)
    76e0:	1009883a 	mov	r4,r2
    76e4:	800d883a 	mov	r6,r16
    76e8:	1023883a 	mov	r17,r2
    76ec:	0008aec0 	call	8aec <memcpy>
    76f0:	90c0030b 	ldhu	r3,12(r18)
    76f4:	00beffc4 	movi	r2,-1025
    76f8:	1886703a 	and	r3,r3,r2
    76fc:	18c02014 	ori	r3,r3,128
    7700:	90c0030d 	sth	r3,12(r18)
    7704:	9c07c83a 	sub	r3,r19,r16
    7708:	8c05883a 	add	r2,r17,r16
    770c:	a00d883a 	mov	r6,r20
    7710:	a021883a 	mov	r16,r20
    7714:	90800015 	stw	r2,0(r18)
    7718:	90c00215 	stw	r3,8(r18)
    771c:	94400415 	stw	r17,16(r18)
    7720:	94c00515 	stw	r19,20(r18)
    7724:	91000017 	ldw	r4,0(r18)
    7728:	b80b883a 	mov	r5,r23
    772c:	a023883a 	mov	r17,r20
    7730:	0008b8c0 	call	8b8c <memmove>
    7734:	90c00217 	ldw	r3,8(r18)
    7738:	90800017 	ldw	r2,0(r18)
    773c:	a027883a 	mov	r19,r20
    7740:	1c07c83a 	sub	r3,r3,r16
    7744:	1405883a 	add	r2,r2,r16
    7748:	90c00215 	stw	r3,8(r18)
    774c:	a021883a 	mov	r16,r20
    7750:	90800015 	stw	r2,0(r18)
    7754:	b0800217 	ldw	r2,8(r22)
    7758:	1405c83a 	sub	r2,r2,r16
    775c:	b0800215 	stw	r2,8(r22)
    7760:	103fa826 	beq	r2,zero,7604 <__sfvwrite_r+0xb0>
    7764:	a469c83a 	sub	r20,r20,r17
    7768:	91c0030b 	ldhu	r7,12(r18)
    776c:	bcef883a 	add	r23,r23,r19
    7770:	a03fbe1e 	bne	r20,zero,766c <__sfvwrite_r+0x118>
    7774:	adc00017 	ldw	r23,0(r21)
    7778:	ad000117 	ldw	r20,4(r21)
    777c:	ad400204 	addi	r21,r21,8
    7780:	003fb906 	br	7668 <__sfvwrite_r+0x114>
    7784:	ac400017 	ldw	r17,0(r21)
    7788:	ac000117 	ldw	r16,4(r21)
    778c:	ad400204 	addi	r21,r21,8
    7790:	003f8a06 	br	75bc <__sfvwrite_r+0x68>
    7794:	91400417 	ldw	r5,16(r18)
    7798:	e009883a 	mov	r4,fp
    779c:	00072400 	call	7240 <_free_r>
    77a0:	00800304 	movi	r2,12
    77a4:	e0800015 	stw	r2,0(fp)
    77a8:	9080030b 	ldhu	r2,12(r18)
    77ac:	013fffc4 	movi	r4,-1
    77b0:	10801014 	ori	r2,r2,64
    77b4:	9080030d 	sth	r2,12(r18)
    77b8:	003f9306 	br	7608 <__sfvwrite_r+0xb4>
    77bc:	0027883a 	mov	r19,zero
    77c0:	002f883a 	mov	r23,zero
    77c4:	d8000015 	stw	zero,0(sp)
    77c8:	0029883a 	mov	r20,zero
    77cc:	98001e26 	beq	r19,zero,7848 <__sfvwrite_r+0x2f4>
    77d0:	d8c00017 	ldw	r3,0(sp)
    77d4:	1804c03a 	cmpne	r2,r3,zero
    77d8:	10005e26 	beq	r2,zero,7954 <__sfvwrite_r+0x400>
    77dc:	9821883a 	mov	r16,r19
    77e0:	a4c0012e 	bgeu	r20,r19,77e8 <__sfvwrite_r+0x294>
    77e4:	a021883a 	mov	r16,r20
    77e8:	91000017 	ldw	r4,0(r18)
    77ec:	90800417 	ldw	r2,16(r18)
    77f0:	91800217 	ldw	r6,8(r18)
    77f4:	91c00517 	ldw	r7,20(r18)
    77f8:	1100022e 	bgeu	r2,r4,7804 <__sfvwrite_r+0x2b0>
    77fc:	31e3883a 	add	r17,r6,r7
    7800:	8c001616 	blt	r17,r16,785c <__sfvwrite_r+0x308>
    7804:	81c03816 	blt	r16,r7,78e8 <__sfvwrite_r+0x394>
    7808:	90c00917 	ldw	r3,36(r18)
    780c:	91400717 	ldw	r5,28(r18)
    7810:	e009883a 	mov	r4,fp
    7814:	b80d883a 	mov	r6,r23
    7818:	183ee83a 	callr	r3
    781c:	1023883a 	mov	r17,r2
    7820:	00bfe10e 	bge	zero,r2,77a8 <__sfvwrite_r+0x254>
    7824:	a469c83a 	sub	r20,r20,r17
    7828:	a0001826 	beq	r20,zero,788c <__sfvwrite_r+0x338>
    782c:	b0800217 	ldw	r2,8(r22)
    7830:	1445c83a 	sub	r2,r2,r17
    7834:	b0800215 	stw	r2,8(r22)
    7838:	103f7226 	beq	r2,zero,7604 <__sfvwrite_r+0xb0>
    783c:	9c67c83a 	sub	r19,r19,r17
    7840:	bc6f883a 	add	r23,r23,r17
    7844:	983fe21e 	bne	r19,zero,77d0 <__sfvwrite_r+0x27c>
    7848:	adc00017 	ldw	r23,0(r21)
    784c:	acc00117 	ldw	r19,4(r21)
    7850:	ad400204 	addi	r21,r21,8
    7854:	d8000015 	stw	zero,0(sp)
    7858:	003fdc06 	br	77cc <__sfvwrite_r+0x278>
    785c:	b80b883a 	mov	r5,r23
    7860:	880d883a 	mov	r6,r17
    7864:	0008b8c0 	call	8b8c <memmove>
    7868:	90c00017 	ldw	r3,0(r18)
    786c:	e009883a 	mov	r4,fp
    7870:	900b883a 	mov	r5,r18
    7874:	1c47883a 	add	r3,r3,r17
    7878:	90c00015 	stw	r3,0(r18)
    787c:	0006bf00 	call	6bf0 <_fflush_r>
    7880:	103fc91e 	bne	r2,zero,77a8 <__sfvwrite_r+0x254>
    7884:	a469c83a 	sub	r20,r20,r17
    7888:	a03fe81e 	bne	r20,zero,782c <__sfvwrite_r+0x2d8>
    788c:	e009883a 	mov	r4,fp
    7890:	900b883a 	mov	r5,r18
    7894:	0006bf00 	call	6bf0 <_fflush_r>
    7898:	103fc31e 	bne	r2,zero,77a8 <__sfvwrite_r+0x254>
    789c:	d8000015 	stw	zero,0(sp)
    78a0:	003fe206 	br	782c <__sfvwrite_r+0x2d8>
    78a4:	91000017 	ldw	r4,0(r18)
    78a8:	90800417 	ldw	r2,16(r18)
    78ac:	1100022e 	bgeu	r2,r4,78b8 <__sfvwrite_r+0x364>
    78b0:	8023883a 	mov	r17,r16
    78b4:	85003136 	bltu	r16,r20,797c <__sfvwrite_r+0x428>
    78b8:	91c00517 	ldw	r7,20(r18)
    78bc:	a1c01836 	bltu	r20,r7,7920 <__sfvwrite_r+0x3cc>
    78c0:	90c00917 	ldw	r3,36(r18)
    78c4:	91400717 	ldw	r5,28(r18)
    78c8:	e009883a 	mov	r4,fp
    78cc:	b80d883a 	mov	r6,r23
    78d0:	183ee83a 	callr	r3
    78d4:	1021883a 	mov	r16,r2
    78d8:	00bfb30e 	bge	zero,r2,77a8 <__sfvwrite_r+0x254>
    78dc:	1023883a 	mov	r17,r2
    78e0:	1027883a 	mov	r19,r2
    78e4:	003f9b06 	br	7754 <__sfvwrite_r+0x200>
    78e8:	b80b883a 	mov	r5,r23
    78ec:	800d883a 	mov	r6,r16
    78f0:	0008b8c0 	call	8b8c <memmove>
    78f4:	90c00217 	ldw	r3,8(r18)
    78f8:	90800017 	ldw	r2,0(r18)
    78fc:	8023883a 	mov	r17,r16
    7900:	1c07c83a 	sub	r3,r3,r16
    7904:	1405883a 	add	r2,r2,r16
    7908:	90c00215 	stw	r3,8(r18)
    790c:	90800015 	stw	r2,0(r18)
    7910:	003fc406 	br	7824 <__sfvwrite_r+0x2d0>
    7914:	a00d883a 	mov	r6,r20
    7918:	a021883a 	mov	r16,r20
    791c:	003f8106 	br	7724 <__sfvwrite_r+0x1d0>
    7920:	b80b883a 	mov	r5,r23
    7924:	a00d883a 	mov	r6,r20
    7928:	0008b8c0 	call	8b8c <memmove>
    792c:	90c00217 	ldw	r3,8(r18)
    7930:	90800017 	ldw	r2,0(r18)
    7934:	a021883a 	mov	r16,r20
    7938:	1d07c83a 	sub	r3,r3,r20
    793c:	1505883a 	add	r2,r2,r20
    7940:	a023883a 	mov	r17,r20
    7944:	a027883a 	mov	r19,r20
    7948:	90c00215 	stw	r3,8(r18)
    794c:	90800015 	stw	r2,0(r18)
    7950:	003f8006 	br	7754 <__sfvwrite_r+0x200>
    7954:	b809883a 	mov	r4,r23
    7958:	01400284 	movi	r5,10
    795c:	980d883a 	mov	r6,r19
    7960:	00089940 	call	8994 <memchr>
    7964:	10001726 	beq	r2,zero,79c4 <__sfvwrite_r+0x470>
    7968:	15c5c83a 	sub	r2,r2,r23
    796c:	15000044 	addi	r20,r2,1
    7970:	00800044 	movi	r2,1
    7974:	d8800015 	stw	r2,0(sp)
    7978:	003f9806 	br	77dc <__sfvwrite_r+0x288>
    797c:	b80b883a 	mov	r5,r23
    7980:	800d883a 	mov	r6,r16
    7984:	0008b8c0 	call	8b8c <memmove>
    7988:	90c00017 	ldw	r3,0(r18)
    798c:	e009883a 	mov	r4,fp
    7990:	900b883a 	mov	r5,r18
    7994:	1c07883a 	add	r3,r3,r16
    7998:	90c00015 	stw	r3,0(r18)
    799c:	8027883a 	mov	r19,r16
    79a0:	0006bf00 	call	6bf0 <_fflush_r>
    79a4:	103f6b26 	beq	r2,zero,7754 <__sfvwrite_r+0x200>
    79a8:	003f7f06 	br	77a8 <__sfvwrite_r+0x254>
    79ac:	400b883a 	mov	r5,r8
    79b0:	e009883a 	mov	r4,fp
    79b4:	0009f7c0 	call	9f7c <_realloc_r>
    79b8:	103f7626 	beq	r2,zero,7794 <__sfvwrite_r+0x240>
    79bc:	1023883a 	mov	r17,r2
    79c0:	003f5006 	br	7704 <__sfvwrite_r+0x1b0>
    79c4:	00c00044 	movi	r3,1
    79c8:	9d000044 	addi	r20,r19,1
    79cc:	d8c00015 	stw	r3,0(sp)
    79d0:	003f8206 	br	77dc <__sfvwrite_r+0x288>
    79d4:	9080030b 	ldhu	r2,12(r18)
    79d8:	00c00244 	movi	r3,9
    79dc:	013fffc4 	movi	r4,-1
    79e0:	10801014 	ori	r2,r2,64
    79e4:	9080030d 	sth	r2,12(r18)
    79e8:	e0c00015 	stw	r3,0(fp)
    79ec:	003f0606 	br	7608 <__sfvwrite_r+0xb4>

000079f0 <_fwalk_reent>:
    79f0:	defff704 	addi	sp,sp,-36
    79f4:	dcc00315 	stw	r19,12(sp)
    79f8:	24c0b804 	addi	r19,r4,736
    79fc:	dd800615 	stw	r22,24(sp)
    7a00:	dd400515 	stw	r21,20(sp)
    7a04:	dfc00815 	stw	ra,32(sp)
    7a08:	ddc00715 	stw	r23,28(sp)
    7a0c:	dd000415 	stw	r20,16(sp)
    7a10:	dc800215 	stw	r18,8(sp)
    7a14:	dc400115 	stw	r17,4(sp)
    7a18:	dc000015 	stw	r16,0(sp)
    7a1c:	202b883a 	mov	r21,r4
    7a20:	282d883a 	mov	r22,r5
    7a24:	0006e780 	call	6e78 <__sfp_lock_acquire>
    7a28:	98002126 	beq	r19,zero,7ab0 <_fwalk_reent+0xc0>
    7a2c:	002f883a 	mov	r23,zero
    7a30:	9c800117 	ldw	r18,4(r19)
    7a34:	9c000217 	ldw	r16,8(r19)
    7a38:	90bfffc4 	addi	r2,r18,-1
    7a3c:	10000d16 	blt	r2,zero,7a74 <_fwalk_reent+0x84>
    7a40:	0023883a 	mov	r17,zero
    7a44:	053fffc4 	movi	r20,-1
    7a48:	8080030f 	ldh	r2,12(r16)
    7a4c:	8c400044 	addi	r17,r17,1
    7a50:	10000626 	beq	r2,zero,7a6c <_fwalk_reent+0x7c>
    7a54:	8080038f 	ldh	r2,14(r16)
    7a58:	800b883a 	mov	r5,r16
    7a5c:	a809883a 	mov	r4,r21
    7a60:	15000226 	beq	r2,r20,7a6c <_fwalk_reent+0x7c>
    7a64:	b03ee83a 	callr	r22
    7a68:	b8aeb03a 	or	r23,r23,r2
    7a6c:	84001704 	addi	r16,r16,92
    7a70:	947ff51e 	bne	r18,r17,7a48 <_fwalk_reent+0x58>
    7a74:	9cc00017 	ldw	r19,0(r19)
    7a78:	983fed1e 	bne	r19,zero,7a30 <_fwalk_reent+0x40>
    7a7c:	0006e7c0 	call	6e7c <__sfp_lock_release>
    7a80:	b805883a 	mov	r2,r23
    7a84:	dfc00817 	ldw	ra,32(sp)
    7a88:	ddc00717 	ldw	r23,28(sp)
    7a8c:	dd800617 	ldw	r22,24(sp)
    7a90:	dd400517 	ldw	r21,20(sp)
    7a94:	dd000417 	ldw	r20,16(sp)
    7a98:	dcc00317 	ldw	r19,12(sp)
    7a9c:	dc800217 	ldw	r18,8(sp)
    7aa0:	dc400117 	ldw	r17,4(sp)
    7aa4:	dc000017 	ldw	r16,0(sp)
    7aa8:	dec00904 	addi	sp,sp,36
    7aac:	f800283a 	ret
    7ab0:	002f883a 	mov	r23,zero
    7ab4:	003ff106 	br	7a7c <_fwalk_reent+0x8c>

00007ab8 <_fwalk>:
    7ab8:	defff804 	addi	sp,sp,-32
    7abc:	dcc00315 	stw	r19,12(sp)
    7ac0:	24c0b804 	addi	r19,r4,736
    7ac4:	dd400515 	stw	r21,20(sp)
    7ac8:	dfc00715 	stw	ra,28(sp)
    7acc:	dd800615 	stw	r22,24(sp)
    7ad0:	dd000415 	stw	r20,16(sp)
    7ad4:	dc800215 	stw	r18,8(sp)
    7ad8:	dc400115 	stw	r17,4(sp)
    7adc:	dc000015 	stw	r16,0(sp)
    7ae0:	282b883a 	mov	r21,r5
    7ae4:	0006e780 	call	6e78 <__sfp_lock_acquire>
    7ae8:	98001f26 	beq	r19,zero,7b68 <_fwalk+0xb0>
    7aec:	002d883a 	mov	r22,zero
    7af0:	9c800117 	ldw	r18,4(r19)
    7af4:	9c000217 	ldw	r16,8(r19)
    7af8:	90bfffc4 	addi	r2,r18,-1
    7afc:	10000c16 	blt	r2,zero,7b30 <_fwalk+0x78>
    7b00:	0023883a 	mov	r17,zero
    7b04:	053fffc4 	movi	r20,-1
    7b08:	8080030f 	ldh	r2,12(r16)
    7b0c:	8c400044 	addi	r17,r17,1
    7b10:	10000526 	beq	r2,zero,7b28 <_fwalk+0x70>
    7b14:	8080038f 	ldh	r2,14(r16)
    7b18:	8009883a 	mov	r4,r16
    7b1c:	15000226 	beq	r2,r20,7b28 <_fwalk+0x70>
    7b20:	a83ee83a 	callr	r21
    7b24:	b0acb03a 	or	r22,r22,r2
    7b28:	84001704 	addi	r16,r16,92
    7b2c:	947ff61e 	bne	r18,r17,7b08 <_fwalk+0x50>
    7b30:	9cc00017 	ldw	r19,0(r19)
    7b34:	983fee1e 	bne	r19,zero,7af0 <_fwalk+0x38>
    7b38:	0006e7c0 	call	6e7c <__sfp_lock_release>
    7b3c:	b005883a 	mov	r2,r22
    7b40:	dfc00717 	ldw	ra,28(sp)
    7b44:	dd800617 	ldw	r22,24(sp)
    7b48:	dd400517 	ldw	r21,20(sp)
    7b4c:	dd000417 	ldw	r20,16(sp)
    7b50:	dcc00317 	ldw	r19,12(sp)
    7b54:	dc800217 	ldw	r18,8(sp)
    7b58:	dc400117 	ldw	r17,4(sp)
    7b5c:	dc000017 	ldw	r16,0(sp)
    7b60:	dec00804 	addi	sp,sp,32
    7b64:	f800283a 	ret
    7b68:	002d883a 	mov	r22,zero
    7b6c:	003ff206 	br	7b38 <_fwalk+0x80>

00007b70 <htinit>:
    7b70:	28800003 	ldbu	r2,0(r5)
    7b74:	10000626 	beq	r2,zero,7b90 <htinit+0x20>
    7b78:	1105883a 	add	r2,r2,r4
    7b7c:	11800005 	stb	r6,0(r2)
    7b80:	28800043 	ldbu	r2,1(r5)
    7b84:	31800044 	addi	r6,r6,1
    7b88:	29400044 	addi	r5,r5,1
    7b8c:	103ffa1e 	bne	r2,zero,7b78 <htinit+0x8>
    7b90:	f800283a 	ret

00007b94 <__hexdig_init>:
    7b94:	defffd04 	addi	sp,sp,-12
    7b98:	dc400015 	stw	r17,0(sp)
    7b9c:	04400074 	movhi	r17,1
    7ba0:	8c4a4204 	addi	r17,r17,10504
    7ba4:	dcc00115 	stw	r19,4(sp)
    7ba8:	8809883a 	mov	r4,r17
    7bac:	04c00684 	movi	r19,26
    7bb0:	01400074 	movhi	r5,1
    7bb4:	297beb04 	addi	r5,r5,-4180
    7bb8:	01800404 	movi	r6,16
    7bbc:	dfc00215 	stw	ra,8(sp)
    7bc0:	0007b700 	call	7b70 <htinit>
    7bc4:	980d883a 	mov	r6,r19
    7bc8:	8809883a 	mov	r4,r17
    7bcc:	01400074 	movhi	r5,1
    7bd0:	297bee04 	addi	r5,r5,-4168
    7bd4:	0007b700 	call	7b70 <htinit>
    7bd8:	8809883a 	mov	r4,r17
    7bdc:	980d883a 	mov	r6,r19
    7be0:	01400074 	movhi	r5,1
    7be4:	297bf004 	addi	r5,r5,-4160
    7be8:	dfc00217 	ldw	ra,8(sp)
    7bec:	dcc00117 	ldw	r19,4(sp)
    7bf0:	dc400017 	ldw	r17,0(sp)
    7bf4:	dec00304 	addi	sp,sp,12
    7bf8:	0007b701 	jmpi	7b70 <htinit>

00007bfc <rshift>:
    7bfc:	2807d17a 	srai	r3,r5,5
    7c00:	20800417 	ldw	r2,16(r4)
    7c04:	22400504 	addi	r9,r4,20
    7c08:	480f883a 	mov	r7,r9
    7c0c:	1880190e 	bge	r3,r2,7c74 <rshift+0x78>
    7c10:	1085883a 	add	r2,r2,r2
    7c14:	18c7883a 	add	r3,r3,r3
    7c18:	1085883a 	add	r2,r2,r2
    7c1c:	18c7883a 	add	r3,r3,r3
    7c20:	294007cc 	andi	r5,r5,31
    7c24:	4891883a 	add	r8,r9,r2
    7c28:	48cd883a 	add	r6,r9,r3
    7c2c:	28001726 	beq	r5,zero,7c8c <rshift+0x90>
    7c30:	30c00017 	ldw	r3,0(r6)
    7c34:	00800804 	movi	r2,32
    7c38:	31800104 	addi	r6,r6,4
    7c3c:	1155c83a 	sub	r10,r2,r5
    7c40:	1946d83a 	srl	r3,r3,r5
    7c44:	3200092e 	bgeu	r6,r8,7c6c <rshift+0x70>
    7c48:	30800017 	ldw	r2,0(r6)
    7c4c:	1284983a 	sll	r2,r2,r10
    7c50:	10c4b03a 	or	r2,r2,r3
    7c54:	38800015 	stw	r2,0(r7)
    7c58:	30c00017 	ldw	r3,0(r6)
    7c5c:	31800104 	addi	r6,r6,4
    7c60:	39c00104 	addi	r7,r7,4
    7c64:	1946d83a 	srl	r3,r3,r5
    7c68:	323ff736 	bltu	r6,r8,7c48 <rshift+0x4c>
    7c6c:	38c00015 	stw	r3,0(r7)
    7c70:	18000c1e 	bne	r3,zero,7ca4 <rshift+0xa8>
    7c74:	3a45c83a 	sub	r2,r7,r9
    7c78:	1005d0ba 	srai	r2,r2,2
    7c7c:	20800415 	stw	r2,16(r4)
    7c80:	1000011e 	bne	r2,zero,7c88 <rshift+0x8c>
    7c84:	20000515 	stw	zero,20(r4)
    7c88:	f800283a 	ret
    7c8c:	323ff92e 	bgeu	r6,r8,7c74 <rshift+0x78>
    7c90:	30800017 	ldw	r2,0(r6)
    7c94:	31800104 	addi	r6,r6,4
    7c98:	38800015 	stw	r2,0(r7)
    7c9c:	39c00104 	addi	r7,r7,4
    7ca0:	003ffa06 	br	7c8c <rshift+0x90>
    7ca4:	39c00104 	addi	r7,r7,4
    7ca8:	003ff206 	br	7c74 <rshift+0x78>

00007cac <__gethex>:
    7cac:	defff104 	addi	sp,sp,-60
    7cb0:	df000d15 	stw	fp,52(sp)
    7cb4:	dcc00815 	stw	r19,32(sp)
    7cb8:	dfc00e15 	stw	ra,56(sp)
    7cbc:	ddc00c15 	stw	r23,48(sp)
    7cc0:	dd800b15 	stw	r22,44(sp)
    7cc4:	dd400a15 	stw	r21,40(sp)
    7cc8:	dd000915 	stw	r20,36(sp)
    7ccc:	dc800715 	stw	r18,28(sp)
    7cd0:	dc400615 	stw	r17,24(sp)
    7cd4:	dc000515 	stw	r16,20(sp)
    7cd8:	04c00074 	movhi	r19,1
    7cdc:	9cca4204 	addi	r19,r19,10504
    7ce0:	98800c03 	ldbu	r2,48(r19)
    7ce4:	d9000115 	stw	r4,4(sp)
    7ce8:	2839883a 	mov	fp,r5
    7cec:	d9800215 	stw	r6,8(sp)
    7cf0:	d9c00315 	stw	r7,12(sp)
    7cf4:	10007526 	beq	r2,zero,7ecc <__gethex+0x220>
    7cf8:	e1800017 	ldw	r6,0(fp)
    7cfc:	00800c04 	movi	r2,48
    7d00:	31000083 	ldbu	r4,2(r6)
    7d04:	30c00084 	addi	r3,r6,2
    7d08:	2080761e 	bne	r4,r2,7ee4 <__gethex+0x238>
    7d0c:	200b883a 	mov	r5,r4
    7d10:	3007883a 	mov	r3,r6
    7d14:	188000c3 	ldbu	r2,3(r3)
    7d18:	18c00044 	addi	r3,r3,1
    7d1c:	1009883a 	mov	r4,r2
    7d20:	117ffc26 	beq	r2,r5,7d14 <__gethex+0x68>
    7d24:	198fc83a 	sub	r7,r3,r6
    7d28:	19400084 	addi	r5,r3,2
    7d2c:	24c5883a 	add	r2,r4,r19
    7d30:	10c00003 	ldbu	r3,0(r2)
    7d34:	18002e26 	beq	r3,zero,7df0 <__gethex+0x144>
    7d38:	29000003 	ldbu	r4,0(r5)
    7d3c:	282b883a 	mov	r21,r5
    7d40:	000d883a 	mov	r6,zero
    7d44:	002d883a 	mov	r22,zero
    7d48:	21003fcc 	andi	r4,r4,255
    7d4c:	24c5883a 	add	r2,r4,r19
    7d50:	10c00003 	ldbu	r3,0(r2)
    7d54:	18000526 	beq	r3,zero,7d6c <__gethex+0xc0>
    7d58:	29400044 	addi	r5,r5,1
    7d5c:	29000003 	ldbu	r4,0(r5)
    7d60:	24c5883a 	add	r2,r4,r19
    7d64:	10c00003 	ldbu	r3,0(r2)
    7d68:	183ffb1e 	bne	r3,zero,7d58 <__gethex+0xac>
    7d6c:	00800b84 	movi	r2,46
    7d70:	20805f26 	beq	r4,r2,7ef0 <__gethex+0x244>
    7d74:	30008226 	beq	r6,zero,7f80 <__gethex+0x2d4>
    7d78:	2985c83a 	sub	r2,r5,r6
    7d7c:	1085883a 	add	r2,r2,r2
    7d80:	1085883a 	add	r2,r2,r2
    7d84:	0085c83a 	sub	r2,zero,r2
    7d88:	d8800015 	stw	r2,0(sp)
    7d8c:	2825883a 	mov	r18,r5
    7d90:	90c00003 	ldbu	r3,0(r18)
    7d94:	00801404 	movi	r2,80
    7d98:	18801e26 	beq	r3,r2,7e14 <__gethex+0x168>
    7d9c:	00801c04 	movi	r2,112
    7da0:	18801c26 	beq	r3,r2,7e14 <__gethex+0x168>
    7da4:	9023883a 	mov	r17,r18
    7da8:	b005003a 	cmpeq	r2,r22,zero
    7dac:	e4400015 	stw	r17,0(fp)
    7db0:	10008d1e 	bne	r2,zero,7fe8 <__gethex+0x33c>
    7db4:	38004326 	beq	r7,zero,7ec4 <__gethex+0x218>
    7db8:	0025883a 	mov	r18,zero
    7dbc:	9005883a 	mov	r2,r18
    7dc0:	dfc00e17 	ldw	ra,56(sp)
    7dc4:	df000d17 	ldw	fp,52(sp)
    7dc8:	ddc00c17 	ldw	r23,48(sp)
    7dcc:	dd800b17 	ldw	r22,44(sp)
    7dd0:	dd400a17 	ldw	r21,40(sp)
    7dd4:	dd000917 	ldw	r20,36(sp)
    7dd8:	dcc00817 	ldw	r19,32(sp)
    7ddc:	dc800717 	ldw	r18,28(sp)
    7de0:	dc400617 	ldw	r17,24(sp)
    7de4:	dc000517 	ldw	r16,20(sp)
    7de8:	dec00f04 	addi	sp,sp,60
    7dec:	f800283a 	ret
    7df0:	00800b84 	movi	r2,46
    7df4:	20805126 	beq	r4,r2,7f3c <__gethex+0x290>
    7df8:	2825883a 	mov	r18,r5
    7dfc:	d8000015 	stw	zero,0(sp)
    7e00:	90c00003 	ldbu	r3,0(r18)
    7e04:	00801404 	movi	r2,80
    7e08:	282b883a 	mov	r21,r5
    7e0c:	05800044 	movi	r22,1
    7e10:	18bfe21e 	bne	r3,r2,7d9c <__gethex+0xf0>
    7e14:	90c00043 	ldbu	r3,1(r18)
    7e18:	00800ac4 	movi	r2,43
    7e1c:	91400044 	addi	r5,r18,1
    7e20:	18805126 	beq	r3,r2,7f68 <__gethex+0x2bc>
    7e24:	00800b44 	movi	r2,45
    7e28:	18805326 	beq	r3,r2,7f78 <__gethex+0x2cc>
    7e2c:	002f883a 	mov	r23,zero
    7e30:	1cc5883a 	add	r2,r3,r19
    7e34:	10800003 	ldbu	r2,0(r2)
    7e38:	103fda26 	beq	r2,zero,7da4 <__gethex+0xf8>
    7e3c:	01800644 	movi	r6,25
    7e40:	30bfd816 	blt	r6,r2,7da4 <__gethex+0xf8>
    7e44:	28c00043 	ldbu	r3,1(r5)
    7e48:	113ffc04 	addi	r4,r2,-16
    7e4c:	00800074 	movhi	r2,1
    7e50:	108a4204 	addi	r2,r2,10504
    7e54:	1887883a 	add	r3,r3,r2
    7e58:	18800003 	ldbu	r2,0(r3)
    7e5c:	2c400044 	addi	r17,r5,1
    7e60:	10001126 	beq	r2,zero,7ea8 <__gethex+0x1fc>
    7e64:	1021883a 	mov	r16,r2
    7e68:	30800f16 	blt	r6,r2,7ea8 <__gethex+0x1fc>
    7e6c:	3029883a 	mov	r20,r6
    7e70:	00000106 	br	7e78 <__gethex+0x1cc>
    7e74:	a0800c16 	blt	r20,r2,7ea8 <__gethex+0x1fc>
    7e78:	8c400044 	addi	r17,r17,1
    7e7c:	01400284 	movi	r5,10
    7e80:	d9c00415 	stw	r7,16(sp)
    7e84:	000d0940 	call	d094 <__mulsi3>
    7e88:	88c00003 	ldbu	r3,0(r17)
    7e8c:	1405883a 	add	r2,r2,r16
    7e90:	113ffc04 	addi	r4,r2,-16
    7e94:	1cc7883a 	add	r3,r3,r19
    7e98:	18800003 	ldbu	r2,0(r3)
    7e9c:	d9c00417 	ldw	r7,16(sp)
    7ea0:	1021883a 	mov	r16,r2
    7ea4:	103ff31e 	bne	r2,zero,7e74 <__gethex+0x1c8>
    7ea8:	b805003a 	cmpeq	r2,r23,zero
    7eac:	1000011e 	bne	r2,zero,7eb4 <__gethex+0x208>
    7eb0:	0109c83a 	sub	r4,zero,r4
    7eb4:	d8800017 	ldw	r2,0(sp)
    7eb8:	1105883a 	add	r2,r2,r4
    7ebc:	d8800015 	stw	r2,0(sp)
    7ec0:	003fb906 	br	7da8 <__gethex+0xfc>
    7ec4:	04800184 	movi	r18,6
    7ec8:	003fbc06 	br	7dbc <__gethex+0x110>
    7ecc:	0007b940 	call	7b94 <__hexdig_init>
    7ed0:	e1800017 	ldw	r6,0(fp)
    7ed4:	00800c04 	movi	r2,48
    7ed8:	31000083 	ldbu	r4,2(r6)
    7edc:	30c00084 	addi	r3,r6,2
    7ee0:	20bf8a26 	beq	r4,r2,7d0c <__gethex+0x60>
    7ee4:	180b883a 	mov	r5,r3
    7ee8:	000f883a 	mov	r7,zero
    7eec:	003f8f06 	br	7d2c <__gethex+0x80>
    7ef0:	303fa11e 	bne	r6,zero,7d78 <__gethex+0xcc>
    7ef4:	29400044 	addi	r5,r5,1
    7ef8:	28800003 	ldbu	r2,0(r5)
    7efc:	14c5883a 	add	r2,r2,r19
    7f00:	10c00003 	ldbu	r3,0(r2)
    7f04:	1800b526 	beq	r3,zero,81dc <__gethex+0x530>
    7f08:	2809883a 	mov	r4,r5
    7f0c:	21000044 	addi	r4,r4,1
    7f10:	20800003 	ldbu	r2,0(r4)
    7f14:	14c5883a 	add	r2,r2,r19
    7f18:	10c00003 	ldbu	r3,0(r2)
    7f1c:	183ffb1e 	bne	r3,zero,7f0c <__gethex+0x260>
    7f20:	2145c83a 	sub	r2,r4,r5
    7f24:	1085883a 	add	r2,r2,r2
    7f28:	1085883a 	add	r2,r2,r2
    7f2c:	0085c83a 	sub	r2,zero,r2
    7f30:	200b883a 	mov	r5,r4
    7f34:	d8800015 	stw	r2,0(sp)
    7f38:	003f9406 	br	7d8c <__gethex+0xe0>
    7f3c:	29000043 	ldbu	r4,1(r5)
    7f40:	00800074 	movhi	r2,1
    7f44:	108a4204 	addi	r2,r2,10504
    7f48:	2c800044 	addi	r18,r5,1
    7f4c:	2085883a 	add	r2,r4,r2
    7f50:	10c00003 	ldbu	r3,0(r2)
    7f54:	18000d1e 	bne	r3,zero,7f8c <__gethex+0x2e0>
    7f58:	282b883a 	mov	r21,r5
    7f5c:	05800044 	movi	r22,1
    7f60:	d8000015 	stw	zero,0(sp)
    7f64:	003f8a06 	br	7d90 <__gethex+0xe4>
    7f68:	002f883a 	mov	r23,zero
    7f6c:	29400044 	addi	r5,r5,1
    7f70:	28c00003 	ldbu	r3,0(r5)
    7f74:	003fae06 	br	7e30 <__gethex+0x184>
    7f78:	05c00044 	movi	r23,1
    7f7c:	003ffb06 	br	7f6c <__gethex+0x2c0>
    7f80:	2825883a 	mov	r18,r5
    7f84:	d8000015 	stw	zero,0(sp)
    7f88:	003f8106 	br	7d90 <__gethex+0xe4>
    7f8c:	00800c04 	movi	r2,48
    7f90:	20800e1e 	bne	r4,r2,7fcc <__gethex+0x320>
    7f94:	2007883a 	mov	r3,r4
    7f98:	900b883a 	mov	r5,r18
    7f9c:	29400044 	addi	r5,r5,1
    7fa0:	29000003 	ldbu	r4,0(r5)
    7fa4:	20803fcc 	andi	r2,r4,255
    7fa8:	10fffc26 	beq	r2,r3,7f9c <__gethex+0x2f0>
    7fac:	14c5883a 	add	r2,r2,r19
    7fb0:	10c00003 	ldbu	r3,0(r2)
    7fb4:	1800071e 	bne	r3,zero,7fd4 <__gethex+0x328>
    7fb8:	01c00044 	movi	r7,1
    7fbc:	900d883a 	mov	r6,r18
    7fc0:	282b883a 	mov	r21,r5
    7fc4:	382d883a 	mov	r22,r7
    7fc8:	003f5f06 	br	7d48 <__gethex+0x9c>
    7fcc:	91000003 	ldbu	r4,0(r18)
    7fd0:	900b883a 	mov	r5,r18
    7fd4:	900d883a 	mov	r6,r18
    7fd8:	282b883a 	mov	r21,r5
    7fdc:	01c00044 	movi	r7,1
    7fe0:	002d883a 	mov	r22,zero
    7fe4:	003f5806 	br	7d48 <__gethex+0x9c>
    7fe8:	9545c83a 	sub	r2,r18,r21
    7fec:	10bfffc4 	addi	r2,r2,-1
    7ff0:	00c001c4 	movi	r3,7
    7ff4:	1880770e 	bge	r3,r2,81d4 <__gethex+0x528>
    7ff8:	000b883a 	mov	r5,zero
    7ffc:	1005d07a 	srai	r2,r2,1
    8000:	29400044 	addi	r5,r5,1
    8004:	18bffd16 	blt	r3,r2,7ffc <__gethex+0x350>
    8008:	d9000117 	ldw	r4,4(sp)
    800c:	00092840 	call	9284 <_Balloc>
    8010:	1029883a 	mov	r20,r2
    8014:	15800504 	addi	r22,r2,20
    8018:	ac80562e 	bgeu	r21,r18,8174 <__gethex+0x4c8>
    801c:	900b883a 	mov	r5,r18
    8020:	b011883a 	mov	r8,r22
    8024:	000f883a 	mov	r7,zero
    8028:	0009883a 	mov	r4,zero
    802c:	02400b84 	movi	r9,46
    8030:	02800804 	movi	r10,32
    8034:	297fffc4 	addi	r5,r5,-1
    8038:	28c00003 	ldbu	r3,0(r5)
    803c:	1a400826 	beq	r3,r9,8060 <__gethex+0x3b4>
    8040:	380d883a 	mov	r6,r7
    8044:	3a802a26 	beq	r7,r10,80f0 <__gethex+0x444>
    8048:	39c00104 	addi	r7,r7,4
    804c:	1cc7883a 	add	r3,r3,r19
    8050:	18800003 	ldbu	r2,0(r3)
    8054:	108003cc 	andi	r2,r2,15
    8058:	1184983a 	sll	r2,r2,r6
    805c:	2088b03a 	or	r4,r4,r2
    8060:	a97ff436 	bltu	r21,r5,8034 <__gethex+0x388>
    8064:	40800104 	addi	r2,r8,4
    8068:	1585c83a 	sub	r2,r2,r22
    806c:	1021d0ba 	srai	r16,r2,2
    8070:	41000015 	stw	r4,0(r8)
    8074:	a4000415 	stw	r16,16(r20)
    8078:	0008d2c0 	call	8d2c <__hi0bits>
    807c:	d9000217 	ldw	r4,8(sp)
    8080:	8006917a 	slli	r3,r16,5
    8084:	24c00017 	ldw	r19,0(r4)
    8088:	1885c83a 	sub	r2,r3,r2
    808c:	98801f16 	blt	r19,r2,810c <__gethex+0x460>
    8090:	14c00c16 	blt	r2,r19,80c4 <__gethex+0x418>
    8094:	002b883a 	mov	r21,zero
    8098:	d9000217 	ldw	r4,8(sp)
    809c:	d8c00017 	ldw	r3,0(sp)
    80a0:	20800217 	ldw	r2,8(r4)
    80a4:	10c0360e 	bge	r2,r3,8180 <__gethex+0x4d4>
    80a8:	d9000117 	ldw	r4,4(sp)
    80ac:	a00b883a 	mov	r5,r20
    80b0:	048028c4 	movi	r18,163
    80b4:	0008d040 	call	8d04 <_Bfree>
    80b8:	d9000f17 	ldw	r4,60(sp)
    80bc:	20000015 	stw	zero,0(r4)
    80c0:	003f3e06 	br	7dbc <__gethex+0x110>
    80c4:	d9000117 	ldw	r4,4(sp)
    80c8:	98a1c83a 	sub	r16,r19,r2
    80cc:	a00b883a 	mov	r5,r20
    80d0:	800d883a 	mov	r6,r16
    80d4:	00096480 	call	9648 <__lshift>
    80d8:	d8c00017 	ldw	r3,0(sp)
    80dc:	1029883a 	mov	r20,r2
    80e0:	15800504 	addi	r22,r2,20
    80e4:	1c07c83a 	sub	r3,r3,r16
    80e8:	d8c00015 	stw	r3,0(sp)
    80ec:	003fe906 	br	8094 <__gethex+0x3e8>
    80f0:	41000015 	stw	r4,0(r8)
    80f4:	28c00003 	ldbu	r3,0(r5)
    80f8:	01c00104 	movi	r7,4
    80fc:	000d883a 	mov	r6,zero
    8100:	41d1883a 	add	r8,r8,r7
    8104:	0009883a 	mov	r4,zero
    8108:	003fd006 	br	804c <__gethex+0x3a0>
    810c:	14e1c83a 	sub	r16,r2,r19
    8110:	a009883a 	mov	r4,r20
    8114:	800b883a 	mov	r5,r16
    8118:	00091fc0 	call	91fc <__any_on>
    811c:	1000081e 	bne	r2,zero,8140 <__gethex+0x494>
    8120:	002b883a 	mov	r21,zero
    8124:	a009883a 	mov	r4,r20
    8128:	800b883a 	mov	r5,r16
    812c:	0007bfc0 	call	7bfc <rshift>
    8130:	d8800017 	ldw	r2,0(sp)
    8134:	1405883a 	add	r2,r2,r16
    8138:	d8800015 	stw	r2,0(sp)
    813c:	003fd606 	br	8098 <__gethex+0x3ec>
    8140:	817fffc4 	addi	r5,r16,-1
    8144:	2805d17a 	srai	r2,r5,5
    8148:	290007cc 	andi	r4,r5,31
    814c:	01800044 	movi	r6,1
    8150:	1085883a 	add	r2,r2,r2
    8154:	1085883a 	add	r2,r2,r2
    8158:	1585883a 	add	r2,r2,r22
    815c:	3108983a 	sll	r4,r6,r4
    8160:	10c00017 	ldw	r3,0(r2)
    8164:	20c8703a 	and	r4,r4,r3
    8168:	20001e1e 	bne	r4,zero,81e4 <__gethex+0x538>
    816c:	302b883a 	mov	r21,r6
    8170:	003fec06 	br	8124 <__gethex+0x478>
    8174:	b011883a 	mov	r8,r22
    8178:	0009883a 	mov	r4,zero
    817c:	003fb906 	br	8064 <__gethex+0x3b8>
    8180:	d8800217 	ldw	r2,8(sp)
    8184:	d8c00017 	ldw	r3,0(sp)
    8188:	11000117 	ldw	r4,4(r2)
    818c:	19001c16 	blt	r3,r4,8200 <__gethex+0x554>
    8190:	04800044 	movi	r18,1
    8194:	a8000926 	beq	r21,zero,81bc <__gethex+0x510>
    8198:	d8c00217 	ldw	r3,8(sp)
    819c:	00800084 	movi	r2,2
    81a0:	19000317 	ldw	r4,12(r3)
    81a4:	20809826 	beq	r4,r2,8408 <__gethex+0x75c>
    81a8:	008000c4 	movi	r2,3
    81ac:	20805b26 	beq	r4,r2,831c <__gethex+0x670>
    81b0:	00800044 	movi	r2,1
    81b4:	20804326 	beq	r4,r2,82c4 <__gethex+0x618>
    81b8:	94800414 	ori	r18,r18,16
    81bc:	d9000f17 	ldw	r4,60(sp)
    81c0:	d8800017 	ldw	r2,0(sp)
    81c4:	d8c00317 	ldw	r3,12(sp)
    81c8:	25000015 	stw	r20,0(r4)
    81cc:	18800015 	stw	r2,0(r3)
    81d0:	003efa06 	br	7dbc <__gethex+0x110>
    81d4:	000b883a 	mov	r5,zero
    81d8:	003f8b06 	br	8008 <__gethex+0x35c>
    81dc:	d8000015 	stw	zero,0(sp)
    81e0:	003eea06 	br	7d8c <__gethex+0xe0>
    81e4:	3140180e 	bge	r6,r5,8248 <__gethex+0x59c>
    81e8:	a009883a 	mov	r4,r20
    81ec:	817fff84 	addi	r5,r16,-2
    81f0:	00091fc0 	call	91fc <__any_on>
    81f4:	10001426 	beq	r2,zero,8248 <__gethex+0x59c>
    81f8:	054000c4 	movi	r21,3
    81fc:	003fc906 	br	8124 <__gethex+0x478>
    8200:	d8800017 	ldw	r2,0(sp)
    8204:	20a3c83a 	sub	r17,r4,r2
    8208:	8cc01116 	blt	r17,r19,8250 <__gethex+0x5a4>
    820c:	d8800217 	ldw	r2,8(sp)
    8210:	10c00317 	ldw	r3,12(r2)
    8214:	00800084 	movi	r2,2
    8218:	18809426 	beq	r3,r2,846c <__gethex+0x7c0>
    821c:	008000c4 	movi	r2,3
    8220:	18808f26 	beq	r3,r2,8460 <__gethex+0x7b4>
    8224:	00800044 	movi	r2,1
    8228:	18807c26 	beq	r3,r2,841c <__gethex+0x770>
    822c:	d9000117 	ldw	r4,4(sp)
    8230:	a00b883a 	mov	r5,r20
    8234:	04801404 	movi	r18,80
    8238:	0008d040 	call	8d04 <_Bfree>
    823c:	d9000f17 	ldw	r4,60(sp)
    8240:	20000015 	stw	zero,0(r4)
    8244:	003edd06 	br	7dbc <__gethex+0x110>
    8248:	05400084 	movi	r21,2
    824c:	003fb506 	br	8124 <__gethex+0x478>
    8250:	8c3fffc4 	addi	r16,r17,-1
    8254:	a8001526 	beq	r21,zero,82ac <__gethex+0x600>
    8258:	05400044 	movi	r21,1
    825c:	8005d17a 	srai	r2,r16,5
    8260:	814007cc 	andi	r5,r16,31
    8264:	00c00044 	movi	r3,1
    8268:	1085883a 	add	r2,r2,r2
    826c:	1085883a 	add	r2,r2,r2
    8270:	1585883a 	add	r2,r2,r22
    8274:	1946983a 	sll	r3,r3,r5
    8278:	11000017 	ldw	r4,0(r2)
    827c:	1906703a 	and	r3,r3,r4
    8280:	18000126 	beq	r3,zero,8288 <__gethex+0x5dc>
    8284:	ad400094 	ori	r21,r21,2
    8288:	880b883a 	mov	r5,r17
    828c:	a009883a 	mov	r4,r20
    8290:	0007bfc0 	call	7bfc <rshift>
    8294:	d8800217 	ldw	r2,8(sp)
    8298:	9c67c83a 	sub	r19,r19,r17
    829c:	04800084 	movi	r18,2
    82a0:	10800117 	ldw	r2,4(r2)
    82a4:	d8800015 	stw	r2,0(sp)
    82a8:	003fba06 	br	8194 <__gethex+0x4e8>
    82ac:	043feb0e 	bge	zero,r16,825c <__gethex+0x5b0>
    82b0:	a009883a 	mov	r4,r20
    82b4:	800b883a 	mov	r5,r16
    82b8:	00091fc0 	call	91fc <__any_on>
    82bc:	102b883a 	mov	r21,r2
    82c0:	003fe606 	br	825c <__gethex+0x5b0>
    82c4:	a880008c 	andi	r2,r21,2
    82c8:	103fbb26 	beq	r2,zero,81b8 <__gethex+0x50c>
    82cc:	b0800017 	ldw	r2,0(r22)
    82d0:	a884b03a 	or	r2,r21,r2
    82d4:	1104703a 	and	r2,r2,r4
    82d8:	103fb726 	beq	r2,zero,81b8 <__gethex+0x50c>
    82dc:	a4000417 	ldw	r16,16(r20)
    82e0:	b007883a 	mov	r3,r22
    82e4:	017fffc4 	movi	r5,-1
    82e8:	8405883a 	add	r2,r16,r16
    82ec:	10ab883a 	add	r21,r2,r2
    82f0:	802f883a 	mov	r23,r16
    82f4:	b549883a 	add	r4,r22,r21
    82f8:	00000306 	br	8308 <__gethex+0x65c>
    82fc:	18000015 	stw	zero,0(r3)
    8300:	18c00104 	addi	r3,r3,4
    8304:	1900082e 	bgeu	r3,r4,8328 <__gethex+0x67c>
    8308:	18800017 	ldw	r2,0(r3)
    830c:	117ffb26 	beq	r2,r5,82fc <__gethex+0x650>
    8310:	10800044 	addi	r2,r2,1
    8314:	18800015 	stw	r2,0(r3)
    8318:	00001e06 	br	8394 <__gethex+0x6e8>
    831c:	d8801017 	ldw	r2,64(sp)
    8320:	103fa526 	beq	r2,zero,81b8 <__gethex+0x50c>
    8324:	003fed06 	br	82dc <__gethex+0x630>
    8328:	a0800217 	ldw	r2,8(r20)
    832c:	80801216 	blt	r16,r2,8378 <__gethex+0x6cc>
    8330:	a1400117 	ldw	r5,4(r20)
    8334:	d9000117 	ldw	r4,4(sp)
    8338:	29400044 	addi	r5,r5,1
    833c:	00092840 	call	9284 <_Balloc>
    8340:	a1800417 	ldw	r6,16(r20)
    8344:	a1400304 	addi	r5,r20,12
    8348:	11000304 	addi	r4,r2,12
    834c:	318d883a 	add	r6,r6,r6
    8350:	318d883a 	add	r6,r6,r6
    8354:	31800204 	addi	r6,r6,8
    8358:	1023883a 	mov	r17,r2
    835c:	0008aec0 	call	8aec <memcpy>
    8360:	d9000117 	ldw	r4,4(sp)
    8364:	a00b883a 	mov	r5,r20
    8368:	8d800504 	addi	r22,r17,20
    836c:	0008d040 	call	8d04 <_Bfree>
    8370:	8c000417 	ldw	r16,16(r17)
    8374:	8829883a 	mov	r20,r17
    8378:	8405883a 	add	r2,r16,r16
    837c:	1085883a 	add	r2,r2,r2
    8380:	1505883a 	add	r2,r2,r20
    8384:	84000044 	addi	r16,r16,1
    8388:	00c00044 	movi	r3,1
    838c:	10c00515 	stw	r3,20(r2)
    8390:	a4000415 	stw	r16,16(r20)
    8394:	00800084 	movi	r2,2
    8398:	90801526 	beq	r18,r2,83f0 <__gethex+0x744>
    839c:	bc000a16 	blt	r23,r16,83c8 <__gethex+0x71c>
    83a0:	9c0007cc 	andi	r16,r19,31
    83a4:	8000021e 	bne	r16,zero,83b0 <__gethex+0x704>
    83a8:	94800814 	ori	r18,r18,32
    83ac:	003f8306 	br	81bc <__gethex+0x510>
    83b0:	b545883a 	add	r2,r22,r21
    83b4:	113fff17 	ldw	r4,-4(r2)
    83b8:	0008d2c0 	call	8d2c <__hi0bits>
    83bc:	00c00804 	movi	r3,32
    83c0:	1c07c83a 	sub	r3,r3,r16
    83c4:	10fff80e 	bge	r2,r3,83a8 <__gethex+0x6fc>
    83c8:	a009883a 	mov	r4,r20
    83cc:	01400044 	movi	r5,1
    83d0:	0007bfc0 	call	7bfc <rshift>
    83d4:	d9000217 	ldw	r4,8(sp)
    83d8:	d8c00017 	ldw	r3,0(sp)
    83dc:	20800217 	ldw	r2,8(r4)
    83e0:	18c00044 	addi	r3,r3,1
    83e4:	d8c00015 	stw	r3,0(sp)
    83e8:	10ff2f16 	blt	r2,r3,80a8 <__gethex+0x3fc>
    83ec:	003fee06 	br	83a8 <__gethex+0x6fc>
    83f0:	d8c00217 	ldw	r3,8(sp)
    83f4:	18800017 	ldw	r2,0(r3)
    83f8:	10bfffc4 	addi	r2,r2,-1
    83fc:	98801e26 	beq	r19,r2,8478 <__gethex+0x7cc>
    8400:	04800884 	movi	r18,34
    8404:	003f6d06 	br	81bc <__gethex+0x510>
    8408:	d9001017 	ldw	r4,64(sp)
    840c:	00800044 	movi	r2,1
    8410:	1105c83a 	sub	r2,r2,r4
    8414:	103f6826 	beq	r2,zero,81b8 <__gethex+0x50c>
    8418:	003fb006 	br	82dc <__gethex+0x630>
    841c:	9c7f831e 	bne	r19,r17,822c <__gethex+0x580>
    8420:	1cc0060e 	bge	r3,r19,843c <__gethex+0x790>
    8424:	98cbc83a 	sub	r5,r19,r3
    8428:	a009883a 	mov	r4,r20
    842c:	00091fc0 	call	91fc <__any_on>
    8430:	103f7e26 	beq	r2,zero,822c <__gethex+0x580>
    8434:	d8c00217 	ldw	r3,8(sp)
    8438:	19000117 	ldw	r4,4(r3)
    843c:	d8800317 	ldw	r2,12(sp)
    8440:	d8c00f17 	ldw	r3,60(sp)
    8444:	04000044 	movi	r16,1
    8448:	11000015 	stw	r4,0(r2)
    844c:	04801884 	movi	r18,98
    8450:	b4000015 	stw	r16,0(r22)
    8454:	1d000015 	stw	r20,0(r3)
    8458:	a4000415 	stw	r16,16(r20)
    845c:	003e5706 	br	7dbc <__gethex+0x110>
    8460:	d8801017 	ldw	r2,64(sp)
    8464:	103f7126 	beq	r2,zero,822c <__gethex+0x580>
    8468:	003ff406 	br	843c <__gethex+0x790>
    846c:	d8c01017 	ldw	r3,64(sp)
    8470:	183ff226 	beq	r3,zero,843c <__gethex+0x790>
    8474:	003f6d06 	br	822c <__gethex+0x580>
    8478:	9805d17a 	srai	r2,r19,5
    847c:	994007cc 	andi	r5,r19,31
    8480:	00c00044 	movi	r3,1
    8484:	1085883a 	add	r2,r2,r2
    8488:	1085883a 	add	r2,r2,r2
    848c:	1585883a 	add	r2,r2,r22
    8490:	1946983a 	sll	r3,r3,r5
    8494:	11000017 	ldw	r4,0(r2)
    8498:	1906703a 	and	r3,r3,r4
    849c:	183fd826 	beq	r3,zero,8400 <__gethex+0x754>
    84a0:	04800844 	movi	r18,33
    84a4:	003f4506 	br	81bc <__gethex+0x510>

000084a8 <L_shift>:
    84a8:	00800204 	movi	r2,8
    84ac:	1185c83a 	sub	r2,r2,r6
    84b0:	1085883a 	add	r2,r2,r2
    84b4:	21c00017 	ldw	r7,0(r4)
    84b8:	1093883a 	add	r9,r2,r2
    84bc:	00800804 	movi	r2,32
    84c0:	200d883a 	mov	r6,r4
    84c4:	1251c83a 	sub	r8,r2,r9
    84c8:	31800104 	addi	r6,r6,4
    84cc:	3805883a 	mov	r2,r7
    84d0:	31c00017 	ldw	r7,0(r6)
    84d4:	3a08983a 	sll	r4,r7,r8
    84d8:	3a46d83a 	srl	r3,r7,r9
    84dc:	1104b03a 	or	r2,r2,r4
    84e0:	180f883a 	mov	r7,r3
    84e4:	30bfff15 	stw	r2,-4(r6)
    84e8:	30c00015 	stw	r3,0(r6)
    84ec:	317ff636 	bltu	r6,r5,84c8 <L_shift+0x20>
    84f0:	f800283a 	ret

000084f4 <__hexnan>:
    84f4:	defff404 	addi	sp,sp,-48
    84f8:	dd800815 	stw	r22,32(sp)
    84fc:	05800074 	movhi	r22,1
    8500:	b58a4204 	addi	r22,r22,10504
    8504:	b0800c03 	ldbu	r2,48(r22)
    8508:	dcc00515 	stw	r19,20(sp)
    850c:	dc000215 	stw	r16,8(sp)
    8510:	dfc00b15 	stw	ra,44(sp)
    8514:	df000a15 	stw	fp,40(sp)
    8518:	ddc00915 	stw	r23,36(sp)
    851c:	dd400715 	stw	r21,28(sp)
    8520:	dd000615 	stw	r20,24(sp)
    8524:	dc800415 	stw	r18,16(sp)
    8528:	dc400315 	stw	r17,12(sp)
    852c:	d9000115 	stw	r4,4(sp)
    8530:	2821883a 	mov	r16,r5
    8534:	3027883a 	mov	r19,r6
    8538:	10007426 	beq	r2,zero,870c <__hexnan+0x218>
    853c:	80c00017 	ldw	r3,0(r16)
    8540:	1805d17a 	srai	r2,r3,5
    8544:	18c007cc 	andi	r3,r3,31
    8548:	1839003a 	cmpeq	fp,r3,zero
    854c:	1085883a 	add	r2,r2,r2
    8550:	1085883a 	add	r2,r2,r2
    8554:	d8c00015 	stw	r3,0(sp)
    8558:	14c5883a 	add	r2,r2,r19
    855c:	e000011e 	bne	fp,zero,8564 <__hexnan+0x70>
    8560:	10800104 	addi	r2,r2,4
    8564:	d8c00117 	ldw	r3,4(sp)
    8568:	153fff04 	addi	r20,r2,-4
    856c:	a021883a 	mov	r16,r20
    8570:	1c400017 	ldw	r17,0(r3)
    8574:	a02b883a 	mov	r21,r20
    8578:	0025883a 	mov	r18,zero
    857c:	002f883a 	mov	r23,zero
    8580:	000d883a 	mov	r6,zero
    8584:	103fff15 	stw	zero,-4(r2)
    8588:	8c400044 	addi	r17,r17,1
    858c:	89000003 	ldbu	r4,0(r17)
    8590:	20000e26 	beq	r4,zero,85cc <__hexnan+0xd8>
    8594:	2585883a 	add	r2,r4,r22
    8598:	10c00003 	ldbu	r3,0(r2)
    859c:	18002e1e 	bne	r3,zero,8658 <__hexnan+0x164>
    85a0:	00800804 	movi	r2,32
    85a4:	11005536 	bltu	r2,r4,86fc <__hexnan+0x208>
    85a8:	bcbff70e 	bge	r23,r18,8588 <__hexnan+0x94>
    85ac:	8540022e 	bgeu	r16,r21,85b8 <__hexnan+0xc4>
    85b0:	008001c4 	movi	r2,7
    85b4:	11803c0e 	bge	r2,r6,86a8 <__hexnan+0x1b4>
    85b8:	9c003536 	bltu	r19,r16,8690 <__hexnan+0x19c>
    85bc:	8c400044 	addi	r17,r17,1
    85c0:	89000003 	ldbu	r4,0(r17)
    85c4:	01800204 	movi	r6,8
    85c8:	203ff21e 	bne	r4,zero,8594 <__hexnan+0xa0>
    85cc:	90004d26 	beq	r18,zero,8704 <__hexnan+0x210>
    85d0:	85404336 	bltu	r16,r21,86e0 <__hexnan+0x1ec>
    85d4:	9c00382e 	bgeu	r19,r16,86b8 <__hexnan+0x1c4>
    85d8:	9807883a 	mov	r3,r19
    85dc:	80800017 	ldw	r2,0(r16)
    85e0:	84000104 	addi	r16,r16,4
    85e4:	18800015 	stw	r2,0(r3)
    85e8:	18c00104 	addi	r3,r3,4
    85ec:	a43ffb2e 	bgeu	r20,r16,85dc <__hexnan+0xe8>
    85f0:	18000015 	stw	zero,0(r3)
    85f4:	18c00104 	addi	r3,r3,4
    85f8:	a0fffd2e 	bgeu	r20,r3,85f0 <__hexnan+0xfc>
    85fc:	a0800017 	ldw	r2,0(r20)
    8600:	1000071e 	bne	r2,zero,8620 <__hexnan+0x12c>
    8604:	9d004326 	beq	r19,r20,8714 <__hexnan+0x220>
    8608:	a007883a 	mov	r3,r20
    860c:	00000106 	br	8614 <__hexnan+0x120>
    8610:	98c04026 	beq	r19,r3,8714 <__hexnan+0x220>
    8614:	18ffff04 	addi	r3,r3,-4
    8618:	18800017 	ldw	r2,0(r3)
    861c:	103ffc26 	beq	r2,zero,8610 <__hexnan+0x11c>
    8620:	00c00144 	movi	r3,5
    8624:	1805883a 	mov	r2,r3
    8628:	dfc00b17 	ldw	ra,44(sp)
    862c:	df000a17 	ldw	fp,40(sp)
    8630:	ddc00917 	ldw	r23,36(sp)
    8634:	dd800817 	ldw	r22,32(sp)
    8638:	dd400717 	ldw	r21,28(sp)
    863c:	dd000617 	ldw	r20,24(sp)
    8640:	dcc00517 	ldw	r19,20(sp)
    8644:	dc800417 	ldw	r18,16(sp)
    8648:	dc400317 	ldw	r17,12(sp)
    864c:	dc000217 	ldw	r16,8(sp)
    8650:	dec00c04 	addi	sp,sp,48
    8654:	f800283a 	ret
    8658:	31800044 	addi	r6,r6,1
    865c:	00800204 	movi	r2,8
    8660:	94800044 	addi	r18,r18,1
    8664:	1180040e 	bge	r2,r6,8678 <__hexnan+0x184>
    8668:	9c3fc72e 	bgeu	r19,r16,8588 <__hexnan+0x94>
    866c:	843fff04 	addi	r16,r16,-4
    8670:	80000015 	stw	zero,0(r16)
    8674:	01800044 	movi	r6,1
    8678:	80800017 	ldw	r2,0(r16)
    867c:	18c003cc 	andi	r3,r3,15
    8680:	1004913a 	slli	r2,r2,4
    8684:	10c4b03a 	or	r2,r2,r3
    8688:	80800015 	stw	r2,0(r16)
    868c:	003fbe06 	br	8588 <__hexnan+0x94>
    8690:	843fff04 	addi	r16,r16,-4
    8694:	802b883a 	mov	r21,r16
    8698:	902f883a 	mov	r23,r18
    869c:	000d883a 	mov	r6,zero
    86a0:	80000015 	stw	zero,0(r16)
    86a4:	003fb806 	br	8588 <__hexnan+0x94>
    86a8:	8009883a 	mov	r4,r16
    86ac:	a80b883a 	mov	r5,r21
    86b0:	00084a80 	call	84a8 <L_shift>
    86b4:	003fc006 	br	85b8 <__hexnan+0xc4>
    86b8:	e03fd01e 	bne	fp,zero,85fc <__hexnan+0x108>
    86bc:	d8c00017 	ldw	r3,0(sp)
    86c0:	00800804 	movi	r2,32
    86c4:	10c5c83a 	sub	r2,r2,r3
    86c8:	00ffffc4 	movi	r3,-1
    86cc:	1886d83a 	srl	r3,r3,r2
    86d0:	a0800017 	ldw	r2,0(r20)
    86d4:	10c4703a 	and	r2,r2,r3
    86d8:	a0800015 	stw	r2,0(r20)
    86dc:	003fc806 	br	8600 <__hexnan+0x10c>
    86e0:	008001c4 	movi	r2,7
    86e4:	11bfbb16 	blt	r2,r6,85d4 <__hexnan+0xe0>
    86e8:	a80b883a 	mov	r5,r21
    86ec:	8009883a 	mov	r4,r16
    86f0:	00084a80 	call	84a8 <L_shift>
    86f4:	9c3ff02e 	bgeu	r19,r16,86b8 <__hexnan+0x1c4>
    86f8:	003fb706 	br	85d8 <__hexnan+0xe4>
    86fc:	00800a44 	movi	r2,41
    8700:	20800826 	beq	r4,r2,8724 <__hexnan+0x230>
    8704:	00c00104 	movi	r3,4
    8708:	003fc606 	br	8624 <__hexnan+0x130>
    870c:	0007b940 	call	7b94 <__hexdig_init>
    8710:	003f8a06 	br	853c <__hexnan+0x48>
    8714:	00800044 	movi	r2,1
    8718:	00c00144 	movi	r3,5
    871c:	98800015 	stw	r2,0(r19)
    8720:	003fc006 	br	8624 <__hexnan+0x130>
    8724:	903ff726 	beq	r18,zero,8704 <__hexnan+0x210>
    8728:	d8c00117 	ldw	r3,4(sp)
    872c:	88800044 	addi	r2,r17,1
    8730:	18800015 	stw	r2,0(r3)
    8734:	857fa72e 	bgeu	r16,r21,85d4 <__hexnan+0xe0>
    8738:	003fe906 	br	86e0 <__hexnan+0x1ec>

0000873c <__locale_charset>:
    873c:	d0a00617 	ldw	r2,-32744(gp)
    8740:	f800283a 	ret

00008744 <_localeconv_r>:
    8744:	00800074 	movhi	r2,1
    8748:	10bbf704 	addi	r2,r2,-4132
    874c:	f800283a 	ret

00008750 <localeconv>:
    8750:	00800074 	movhi	r2,1
    8754:	10835a04 	addi	r2,r2,3432
    8758:	11000017 	ldw	r4,0(r2)
    875c:	00087441 	jmpi	8744 <_localeconv_r>

00008760 <_setlocale_r>:
    8760:	defffc04 	addi	sp,sp,-16
    8764:	00c00074 	movhi	r3,1
    8768:	18fbf204 	addi	r3,r3,-4152
    876c:	dc800215 	stw	r18,8(sp)
    8770:	dc400115 	stw	r17,4(sp)
    8774:	dc000015 	stw	r16,0(sp)
    8778:	2023883a 	mov	r17,r4
    877c:	2825883a 	mov	r18,r5
    8780:	dfc00315 	stw	ra,12(sp)
    8784:	3021883a 	mov	r16,r6
    8788:	3009883a 	mov	r4,r6
    878c:	180b883a 	mov	r5,r3
    8790:	30000926 	beq	r6,zero,87b8 <_setlocale_r+0x58>
    8794:	000a80c0 	call	a80c <strcmp>
    8798:	8009883a 	mov	r4,r16
    879c:	01400074 	movhi	r5,1
    87a0:	297b9c04 	addi	r5,r5,-4496
    87a4:	10000b1e 	bne	r2,zero,87d4 <_setlocale_r+0x74>
    87a8:	8c000d15 	stw	r16,52(r17)
    87ac:	8c800c15 	stw	r18,48(r17)
    87b0:	00c00074 	movhi	r3,1
    87b4:	18fbf204 	addi	r3,r3,-4152
    87b8:	1805883a 	mov	r2,r3
    87bc:	dfc00317 	ldw	ra,12(sp)
    87c0:	dc800217 	ldw	r18,8(sp)
    87c4:	dc400117 	ldw	r17,4(sp)
    87c8:	dc000017 	ldw	r16,0(sp)
    87cc:	dec00404 	addi	sp,sp,16
    87d0:	f800283a 	ret
    87d4:	000a80c0 	call	a80c <strcmp>
    87d8:	0007883a 	mov	r3,zero
    87dc:	103ff226 	beq	r2,zero,87a8 <_setlocale_r+0x48>
    87e0:	003ff506 	br	87b8 <_setlocale_r+0x58>

000087e4 <setlocale>:
    87e4:	01800074 	movhi	r6,1
    87e8:	31835a04 	addi	r6,r6,3432
    87ec:	2007883a 	mov	r3,r4
    87f0:	31000017 	ldw	r4,0(r6)
    87f4:	280d883a 	mov	r6,r5
    87f8:	180b883a 	mov	r5,r3
    87fc:	00087601 	jmpi	8760 <_setlocale_r>

00008800 <__smakebuf_r>:
    8800:	2880030b 	ldhu	r2,12(r5)
    8804:	deffed04 	addi	sp,sp,-76
    8808:	dc401015 	stw	r17,64(sp)
    880c:	1080008c 	andi	r2,r2,2
    8810:	dc000f15 	stw	r16,60(sp)
    8814:	dfc01215 	stw	ra,72(sp)
    8818:	dc801115 	stw	r18,68(sp)
    881c:	2821883a 	mov	r16,r5
    8820:	2023883a 	mov	r17,r4
    8824:	10000b26 	beq	r2,zero,8854 <__smakebuf_r+0x54>
    8828:	28c010c4 	addi	r3,r5,67
    882c:	00800044 	movi	r2,1
    8830:	28800515 	stw	r2,20(r5)
    8834:	28c00415 	stw	r3,16(r5)
    8838:	28c00015 	stw	r3,0(r5)
    883c:	dfc01217 	ldw	ra,72(sp)
    8840:	dc801117 	ldw	r18,68(sp)
    8844:	dc401017 	ldw	r17,64(sp)
    8848:	dc000f17 	ldw	r16,60(sp)
    884c:	dec01304 	addi	sp,sp,76
    8850:	f800283a 	ret
    8854:	2940038f 	ldh	r5,14(r5)
    8858:	28002116 	blt	r5,zero,88e0 <__smakebuf_r+0xe0>
    885c:	d80d883a 	mov	r6,sp
    8860:	000ace80 	call	ace8 <_fstat_r>
    8864:	10001e16 	blt	r2,zero,88e0 <__smakebuf_r+0xe0>
    8868:	d8800117 	ldw	r2,4(sp)
    886c:	00e00014 	movui	r3,32768
    8870:	113c000c 	andi	r4,r2,61440
    8874:	20c03126 	beq	r4,r3,893c <__smakebuf_r+0x13c>
    8878:	8080030b 	ldhu	r2,12(r16)
    887c:	00c80004 	movi	r3,8192
    8880:	10820014 	ori	r2,r2,2048
    8884:	8080030d 	sth	r2,12(r16)
    8888:	20c01e26 	beq	r4,r3,8904 <__smakebuf_r+0x104>
    888c:	04810004 	movi	r18,1024
    8890:	8809883a 	mov	r4,r17
    8894:	900b883a 	mov	r5,r18
    8898:	0000b200 	call	b20 <_malloc_r>
    889c:	1009883a 	mov	r4,r2
    88a0:	10003126 	beq	r2,zero,8968 <__smakebuf_r+0x168>
    88a4:	80c0030b 	ldhu	r3,12(r16)
    88a8:	00800034 	movhi	r2,0
    88ac:	109bdb04 	addi	r2,r2,28524
    88b0:	88800f15 	stw	r2,60(r17)
    88b4:	18c02014 	ori	r3,r3,128
    88b8:	84800515 	stw	r18,20(r16)
    88bc:	80c0030d 	sth	r3,12(r16)
    88c0:	81000415 	stw	r4,16(r16)
    88c4:	81000015 	stw	r4,0(r16)
    88c8:	dfc01217 	ldw	ra,72(sp)
    88cc:	dc801117 	ldw	r18,68(sp)
    88d0:	dc401017 	ldw	r17,64(sp)
    88d4:	dc000f17 	ldw	r16,60(sp)
    88d8:	dec01304 	addi	sp,sp,76
    88dc:	f800283a 	ret
    88e0:	80c0030b 	ldhu	r3,12(r16)
    88e4:	1880200c 	andi	r2,r3,128
    88e8:	10000426 	beq	r2,zero,88fc <__smakebuf_r+0xfc>
    88ec:	04801004 	movi	r18,64
    88f0:	18820014 	ori	r2,r3,2048
    88f4:	8080030d 	sth	r2,12(r16)
    88f8:	003fe506 	br	8890 <__smakebuf_r+0x90>
    88fc:	04810004 	movi	r18,1024
    8900:	003ffb06 	br	88f0 <__smakebuf_r+0xf0>
    8904:	8140038f 	ldh	r5,14(r16)
    8908:	8809883a 	mov	r4,r17
    890c:	000ad5c0 	call	ad5c <_isatty_r>
    8910:	103fde26 	beq	r2,zero,888c <__smakebuf_r+0x8c>
    8914:	8080030b 	ldhu	r2,12(r16)
    8918:	80c010c4 	addi	r3,r16,67
    891c:	04810004 	movi	r18,1024
    8920:	10800054 	ori	r2,r2,1
    8924:	8080030d 	sth	r2,12(r16)
    8928:	00800044 	movi	r2,1
    892c:	80c00415 	stw	r3,16(r16)
    8930:	80800515 	stw	r2,20(r16)
    8934:	80c00015 	stw	r3,0(r16)
    8938:	003fd506 	br	8890 <__smakebuf_r+0x90>
    893c:	80c00a17 	ldw	r3,40(r16)
    8940:	00800074 	movhi	r2,1
    8944:	10a97a04 	addi	r2,r2,-23064
    8948:	18bfcb1e 	bne	r3,r2,8878 <__smakebuf_r+0x78>
    894c:	8080030b 	ldhu	r2,12(r16)
    8950:	00c10004 	movi	r3,1024
    8954:	1825883a 	mov	r18,r3
    8958:	10c4b03a 	or	r2,r2,r3
    895c:	8080030d 	sth	r2,12(r16)
    8960:	80c01315 	stw	r3,76(r16)
    8964:	003fca06 	br	8890 <__smakebuf_r+0x90>
    8968:	8100030b 	ldhu	r4,12(r16)
    896c:	2080800c 	andi	r2,r4,512
    8970:	103fb21e 	bne	r2,zero,883c <__smakebuf_r+0x3c>
    8974:	80c010c4 	addi	r3,r16,67
    8978:	21000094 	ori	r4,r4,2
    897c:	00800044 	movi	r2,1
    8980:	80800515 	stw	r2,20(r16)
    8984:	8100030d 	sth	r4,12(r16)
    8988:	80c00415 	stw	r3,16(r16)
    898c:	80c00015 	stw	r3,0(r16)
    8990:	003faa06 	br	883c <__smakebuf_r+0x3c>

00008994 <memchr>:
    8994:	008000c4 	movi	r2,3
    8998:	29403fcc 	andi	r5,r5,255
    899c:	2007883a 	mov	r3,r4
    89a0:	1180022e 	bgeu	r2,r6,89ac <memchr+0x18>
    89a4:	2084703a 	and	r2,r4,r2
    89a8:	10000b26 	beq	r2,zero,89d8 <memchr+0x44>
    89ac:	313fffc4 	addi	r4,r6,-1
    89b0:	3000051e 	bne	r6,zero,89c8 <memchr+0x34>
    89b4:	00002c06 	br	8a68 <memchr+0xd4>
    89b8:	213fffc4 	addi	r4,r4,-1
    89bc:	00bfffc4 	movi	r2,-1
    89c0:	18c00044 	addi	r3,r3,1
    89c4:	20802826 	beq	r4,r2,8a68 <memchr+0xd4>
    89c8:	18800003 	ldbu	r2,0(r3)
    89cc:	28bffa1e 	bne	r5,r2,89b8 <memchr+0x24>
    89d0:	1805883a 	mov	r2,r3
    89d4:	f800283a 	ret
    89d8:	0011883a 	mov	r8,zero
    89dc:	0007883a 	mov	r3,zero
    89e0:	01c00104 	movi	r7,4
    89e4:	4004923a 	slli	r2,r8,8
    89e8:	18c00044 	addi	r3,r3,1
    89ec:	1151883a 	add	r8,r2,r5
    89f0:	19fffc1e 	bne	r3,r7,89e4 <memchr+0x50>
    89f4:	02bfbff4 	movhi	r10,65279
    89f8:	52bfbfc4 	addi	r10,r10,-257
    89fc:	02602074 	movhi	r9,32897
    8a00:	4a602004 	addi	r9,r9,-32640
    8a04:	02c000c4 	movi	r11,3
    8a08:	20800017 	ldw	r2,0(r4)
    8a0c:	31bfff04 	addi	r6,r6,-4
    8a10:	200f883a 	mov	r7,r4
    8a14:	1204f03a 	xor	r2,r2,r8
    8a18:	1287883a 	add	r3,r2,r10
    8a1c:	1a46703a 	and	r3,r3,r9
    8a20:	0084303a 	nor	r2,zero,r2
    8a24:	10c4703a 	and	r2,r2,r3
    8a28:	10000b26 	beq	r2,zero,8a58 <memchr+0xc4>
    8a2c:	20800003 	ldbu	r2,0(r4)
    8a30:	28800f26 	beq	r5,r2,8a70 <memchr+0xdc>
    8a34:	20800043 	ldbu	r2,1(r4)
    8a38:	21c00044 	addi	r7,r4,1
    8a3c:	28800c26 	beq	r5,r2,8a70 <memchr+0xdc>
    8a40:	20800083 	ldbu	r2,2(r4)
    8a44:	21c00084 	addi	r7,r4,2
    8a48:	28800926 	beq	r5,r2,8a70 <memchr+0xdc>
    8a4c:	208000c3 	ldbu	r2,3(r4)
    8a50:	21c000c4 	addi	r7,r4,3
    8a54:	28800626 	beq	r5,r2,8a70 <memchr+0xdc>
    8a58:	21000104 	addi	r4,r4,4
    8a5c:	59bfea36 	bltu	r11,r6,8a08 <memchr+0x74>
    8a60:	2007883a 	mov	r3,r4
    8a64:	003fd106 	br	89ac <memchr+0x18>
    8a68:	0005883a 	mov	r2,zero
    8a6c:	f800283a 	ret
    8a70:	3805883a 	mov	r2,r7
    8a74:	f800283a 	ret

00008a78 <memcmp>:
    8a78:	00c000c4 	movi	r3,3
    8a7c:	1980032e 	bgeu	r3,r6,8a8c <memcmp+0x14>
    8a80:	2144b03a 	or	r2,r4,r5
    8a84:	10c4703a 	and	r2,r2,r3
    8a88:	10000f26 	beq	r2,zero,8ac8 <memcmp+0x50>
    8a8c:	31ffffc4 	addi	r7,r6,-1
    8a90:	3000061e 	bne	r6,zero,8aac <memcmp+0x34>
    8a94:	00000a06 	br	8ac0 <memcmp+0x48>
    8a98:	39ffffc4 	addi	r7,r7,-1
    8a9c:	00bfffc4 	movi	r2,-1
    8aa0:	21000044 	addi	r4,r4,1
    8aa4:	29400044 	addi	r5,r5,1
    8aa8:	38800526 	beq	r7,r2,8ac0 <memcmp+0x48>
    8aac:	20c00003 	ldbu	r3,0(r4)
    8ab0:	28800003 	ldbu	r2,0(r5)
    8ab4:	18bff826 	beq	r3,r2,8a98 <memcmp+0x20>
    8ab8:	1885c83a 	sub	r2,r3,r2
    8abc:	f800283a 	ret
    8ac0:	0005883a 	mov	r2,zero
    8ac4:	f800283a 	ret
    8ac8:	180f883a 	mov	r7,r3
    8acc:	20c00017 	ldw	r3,0(r4)
    8ad0:	28800017 	ldw	r2,0(r5)
    8ad4:	18bfed1e 	bne	r3,r2,8a8c <memcmp+0x14>
    8ad8:	31bfff04 	addi	r6,r6,-4
    8adc:	21000104 	addi	r4,r4,4
    8ae0:	29400104 	addi	r5,r5,4
    8ae4:	39bff936 	bltu	r7,r6,8acc <memcmp+0x54>
    8ae8:	003fe806 	br	8a8c <memcmp+0x14>

00008aec <memcpy>:
    8aec:	01c003c4 	movi	r7,15
    8af0:	2007883a 	mov	r3,r4
    8af4:	3980032e 	bgeu	r7,r6,8b04 <memcpy+0x18>
    8af8:	2904b03a 	or	r2,r5,r4
    8afc:	108000cc 	andi	r2,r2,3
    8b00:	10000926 	beq	r2,zero,8b28 <memcpy+0x3c>
    8b04:	30000626 	beq	r6,zero,8b20 <memcpy+0x34>
    8b08:	30cd883a 	add	r6,r6,r3
    8b0c:	28800003 	ldbu	r2,0(r5)
    8b10:	29400044 	addi	r5,r5,1
    8b14:	18800005 	stb	r2,0(r3)
    8b18:	18c00044 	addi	r3,r3,1
    8b1c:	30fffb1e 	bne	r6,r3,8b0c <memcpy+0x20>
    8b20:	2005883a 	mov	r2,r4
    8b24:	f800283a 	ret
    8b28:	3811883a 	mov	r8,r7
    8b2c:	200f883a 	mov	r7,r4
    8b30:	28c00017 	ldw	r3,0(r5)
    8b34:	31bffc04 	addi	r6,r6,-16
    8b38:	38c00015 	stw	r3,0(r7)
    8b3c:	28800117 	ldw	r2,4(r5)
    8b40:	38800115 	stw	r2,4(r7)
    8b44:	28c00217 	ldw	r3,8(r5)
    8b48:	38c00215 	stw	r3,8(r7)
    8b4c:	28800317 	ldw	r2,12(r5)
    8b50:	29400404 	addi	r5,r5,16
    8b54:	38800315 	stw	r2,12(r7)
    8b58:	39c00404 	addi	r7,r7,16
    8b5c:	41bff436 	bltu	r8,r6,8b30 <memcpy+0x44>
    8b60:	008000c4 	movi	r2,3
    8b64:	1180072e 	bgeu	r2,r6,8b84 <memcpy+0x98>
    8b68:	1007883a 	mov	r3,r2
    8b6c:	28800017 	ldw	r2,0(r5)
    8b70:	31bfff04 	addi	r6,r6,-4
    8b74:	29400104 	addi	r5,r5,4
    8b78:	38800015 	stw	r2,0(r7)
    8b7c:	39c00104 	addi	r7,r7,4
    8b80:	19bffa36 	bltu	r3,r6,8b6c <memcpy+0x80>
    8b84:	3807883a 	mov	r3,r7
    8b88:	003fde06 	br	8b04 <memcpy+0x18>

00008b8c <memmove>:
    8b8c:	2807883a 	mov	r3,r5
    8b90:	2011883a 	mov	r8,r4
    8b94:	29000c2e 	bgeu	r5,r4,8bc8 <memmove+0x3c>
    8b98:	298f883a 	add	r7,r5,r6
    8b9c:	21c00a2e 	bgeu	r4,r7,8bc8 <memmove+0x3c>
    8ba0:	30000726 	beq	r6,zero,8bc0 <memmove+0x34>
    8ba4:	2187883a 	add	r3,r4,r6
    8ba8:	198dc83a 	sub	r6,r3,r6
    8bac:	39ffffc4 	addi	r7,r7,-1
    8bb0:	38800003 	ldbu	r2,0(r7)
    8bb4:	18ffffc4 	addi	r3,r3,-1
    8bb8:	18800005 	stb	r2,0(r3)
    8bbc:	19bffb1e 	bne	r3,r6,8bac <memmove+0x20>
    8bc0:	2005883a 	mov	r2,r4
    8bc4:	f800283a 	ret
    8bc8:	01c003c4 	movi	r7,15
    8bcc:	39800a36 	bltu	r7,r6,8bf8 <memmove+0x6c>
    8bd0:	303ffb26 	beq	r6,zero,8bc0 <memmove+0x34>
    8bd4:	400f883a 	mov	r7,r8
    8bd8:	320d883a 	add	r6,r6,r8
    8bdc:	28800003 	ldbu	r2,0(r5)
    8be0:	29400044 	addi	r5,r5,1
    8be4:	38800005 	stb	r2,0(r7)
    8be8:	39c00044 	addi	r7,r7,1
    8bec:	39bffb1e 	bne	r7,r6,8bdc <memmove+0x50>
    8bf0:	2005883a 	mov	r2,r4
    8bf4:	f800283a 	ret
    8bf8:	1904b03a 	or	r2,r3,r4
    8bfc:	108000cc 	andi	r2,r2,3
    8c00:	103ff31e 	bne	r2,zero,8bd0 <memmove+0x44>
    8c04:	3811883a 	mov	r8,r7
    8c08:	180b883a 	mov	r5,r3
    8c0c:	200f883a 	mov	r7,r4
    8c10:	28c00017 	ldw	r3,0(r5)
    8c14:	31bffc04 	addi	r6,r6,-16
    8c18:	38c00015 	stw	r3,0(r7)
    8c1c:	28800117 	ldw	r2,4(r5)
    8c20:	38800115 	stw	r2,4(r7)
    8c24:	28c00217 	ldw	r3,8(r5)
    8c28:	38c00215 	stw	r3,8(r7)
    8c2c:	28800317 	ldw	r2,12(r5)
    8c30:	29400404 	addi	r5,r5,16
    8c34:	38800315 	stw	r2,12(r7)
    8c38:	39c00404 	addi	r7,r7,16
    8c3c:	41bff436 	bltu	r8,r6,8c10 <memmove+0x84>
    8c40:	008000c4 	movi	r2,3
    8c44:	1180072e 	bgeu	r2,r6,8c64 <memmove+0xd8>
    8c48:	1007883a 	mov	r3,r2
    8c4c:	28800017 	ldw	r2,0(r5)
    8c50:	31bfff04 	addi	r6,r6,-4
    8c54:	29400104 	addi	r5,r5,4
    8c58:	38800015 	stw	r2,0(r7)
    8c5c:	39c00104 	addi	r7,r7,4
    8c60:	19bffa36 	bltu	r3,r6,8c4c <memmove+0xc0>
    8c64:	3811883a 	mov	r8,r7
    8c68:	003fd906 	br	8bd0 <memmove+0x44>

00008c6c <memset>:
    8c6c:	008000c4 	movi	r2,3
    8c70:	29403fcc 	andi	r5,r5,255
    8c74:	2007883a 	mov	r3,r4
    8c78:	1180022e 	bgeu	r2,r6,8c84 <memset+0x18>
    8c7c:	2084703a 	and	r2,r4,r2
    8c80:	10000826 	beq	r2,zero,8ca4 <memset+0x38>
    8c84:	30000526 	beq	r6,zero,8c9c <memset+0x30>
    8c88:	2805883a 	mov	r2,r5
    8c8c:	30cd883a 	add	r6,r6,r3
    8c90:	18800005 	stb	r2,0(r3)
    8c94:	18c00044 	addi	r3,r3,1
    8c98:	19bffd1e 	bne	r3,r6,8c90 <memset+0x24>
    8c9c:	2005883a 	mov	r2,r4
    8ca0:	f800283a 	ret
    8ca4:	2804923a 	slli	r2,r5,8
    8ca8:	020003c4 	movi	r8,15
    8cac:	200f883a 	mov	r7,r4
    8cb0:	2884b03a 	or	r2,r5,r2
    8cb4:	1006943a 	slli	r3,r2,16
    8cb8:	10c6b03a 	or	r3,r2,r3
    8cbc:	41800a2e 	bgeu	r8,r6,8ce8 <memset+0x7c>
    8cc0:	4005883a 	mov	r2,r8
    8cc4:	31bffc04 	addi	r6,r6,-16
    8cc8:	38c00015 	stw	r3,0(r7)
    8ccc:	38c00115 	stw	r3,4(r7)
    8cd0:	38c00215 	stw	r3,8(r7)
    8cd4:	38c00315 	stw	r3,12(r7)
    8cd8:	39c00404 	addi	r7,r7,16
    8cdc:	11bff936 	bltu	r2,r6,8cc4 <memset+0x58>
    8ce0:	008000c4 	movi	r2,3
    8ce4:	1180052e 	bgeu	r2,r6,8cfc <memset+0x90>
    8ce8:	31bfff04 	addi	r6,r6,-4
    8cec:	008000c4 	movi	r2,3
    8cf0:	38c00015 	stw	r3,0(r7)
    8cf4:	39c00104 	addi	r7,r7,4
    8cf8:	11bffb36 	bltu	r2,r6,8ce8 <memset+0x7c>
    8cfc:	3807883a 	mov	r3,r7
    8d00:	003fe006 	br	8c84 <memset+0x18>

00008d04 <_Bfree>:
    8d04:	28000826 	beq	r5,zero,8d28 <_Bfree+0x24>
    8d08:	28800117 	ldw	r2,4(r5)
    8d0c:	21001317 	ldw	r4,76(r4)
    8d10:	1085883a 	add	r2,r2,r2
    8d14:	1085883a 	add	r2,r2,r2
    8d18:	1105883a 	add	r2,r2,r4
    8d1c:	10c00017 	ldw	r3,0(r2)
    8d20:	28c00015 	stw	r3,0(r5)
    8d24:	11400015 	stw	r5,0(r2)
    8d28:	f800283a 	ret

00008d2c <__hi0bits>:
    8d2c:	20bfffec 	andhi	r2,r4,65535
    8d30:	10001426 	beq	r2,zero,8d84 <__hi0bits+0x58>
    8d34:	0007883a 	mov	r3,zero
    8d38:	20bfc02c 	andhi	r2,r4,65280
    8d3c:	1000021e 	bne	r2,zero,8d48 <__hi0bits+0x1c>
    8d40:	2008923a 	slli	r4,r4,8
    8d44:	18c00204 	addi	r3,r3,8
    8d48:	20bc002c 	andhi	r2,r4,61440
    8d4c:	1000021e 	bne	r2,zero,8d58 <__hi0bits+0x2c>
    8d50:	2008913a 	slli	r4,r4,4
    8d54:	18c00104 	addi	r3,r3,4
    8d58:	20b0002c 	andhi	r2,r4,49152
    8d5c:	1000031e 	bne	r2,zero,8d6c <__hi0bits+0x40>
    8d60:	2105883a 	add	r2,r4,r4
    8d64:	18c00084 	addi	r3,r3,2
    8d68:	1089883a 	add	r4,r2,r2
    8d6c:	20000316 	blt	r4,zero,8d7c <__hi0bits+0x50>
    8d70:	2090002c 	andhi	r2,r4,16384
    8d74:	10000626 	beq	r2,zero,8d90 <__hi0bits+0x64>
    8d78:	18c00044 	addi	r3,r3,1
    8d7c:	1805883a 	mov	r2,r3
    8d80:	f800283a 	ret
    8d84:	2008943a 	slli	r4,r4,16
    8d88:	00c00404 	movi	r3,16
    8d8c:	003fea06 	br	8d38 <__hi0bits+0xc>
    8d90:	00c00804 	movi	r3,32
    8d94:	1805883a 	mov	r2,r3
    8d98:	f800283a 	ret

00008d9c <__lo0bits>:
    8d9c:	20c00017 	ldw	r3,0(r4)
    8da0:	188001cc 	andi	r2,r3,7
    8da4:	10000a26 	beq	r2,zero,8dd0 <__lo0bits+0x34>
    8da8:	1880004c 	andi	r2,r3,1
    8dac:	1005003a 	cmpeq	r2,r2,zero
    8db0:	10002126 	beq	r2,zero,8e38 <__lo0bits+0x9c>
    8db4:	1880008c 	andi	r2,r3,2
    8db8:	1000251e 	bne	r2,zero,8e50 <__lo0bits+0xb4>
    8dbc:	1804d0ba 	srli	r2,r3,2
    8dc0:	01400084 	movi	r5,2
    8dc4:	20800015 	stw	r2,0(r4)
    8dc8:	2805883a 	mov	r2,r5
    8dcc:	f800283a 	ret
    8dd0:	18bfffcc 	andi	r2,r3,65535
    8dd4:	10001526 	beq	r2,zero,8e2c <__lo0bits+0x90>
    8dd8:	000b883a 	mov	r5,zero
    8ddc:	18803fcc 	andi	r2,r3,255
    8de0:	1000021e 	bne	r2,zero,8dec <__lo0bits+0x50>
    8de4:	1806d23a 	srli	r3,r3,8
    8de8:	29400204 	addi	r5,r5,8
    8dec:	188003cc 	andi	r2,r3,15
    8df0:	1000021e 	bne	r2,zero,8dfc <__lo0bits+0x60>
    8df4:	1806d13a 	srli	r3,r3,4
    8df8:	29400104 	addi	r5,r5,4
    8dfc:	188000cc 	andi	r2,r3,3
    8e00:	1000021e 	bne	r2,zero,8e0c <__lo0bits+0x70>
    8e04:	1806d0ba 	srli	r3,r3,2
    8e08:	29400084 	addi	r5,r5,2
    8e0c:	1880004c 	andi	r2,r3,1
    8e10:	1000031e 	bne	r2,zero,8e20 <__lo0bits+0x84>
    8e14:	1806d07a 	srli	r3,r3,1
    8e18:	18000a26 	beq	r3,zero,8e44 <__lo0bits+0xa8>
    8e1c:	29400044 	addi	r5,r5,1
    8e20:	2805883a 	mov	r2,r5
    8e24:	20c00015 	stw	r3,0(r4)
    8e28:	f800283a 	ret
    8e2c:	1806d43a 	srli	r3,r3,16
    8e30:	01400404 	movi	r5,16
    8e34:	003fe906 	br	8ddc <__lo0bits+0x40>
    8e38:	000b883a 	mov	r5,zero
    8e3c:	2805883a 	mov	r2,r5
    8e40:	f800283a 	ret
    8e44:	01400804 	movi	r5,32
    8e48:	2805883a 	mov	r2,r5
    8e4c:	f800283a 	ret
    8e50:	1804d07a 	srli	r2,r3,1
    8e54:	01400044 	movi	r5,1
    8e58:	20800015 	stw	r2,0(r4)
    8e5c:	003fda06 	br	8dc8 <__lo0bits+0x2c>

00008e60 <__mcmp>:
    8e60:	20800417 	ldw	r2,16(r4)
    8e64:	28c00417 	ldw	r3,16(r5)
    8e68:	10cfc83a 	sub	r7,r2,r3
    8e6c:	38000c1e 	bne	r7,zero,8ea0 <__mcmp+0x40>
    8e70:	18c5883a 	add	r2,r3,r3
    8e74:	1085883a 	add	r2,r2,r2
    8e78:	10c00504 	addi	r3,r2,20
    8e7c:	21000504 	addi	r4,r4,20
    8e80:	28cb883a 	add	r5,r5,r3
    8e84:	2085883a 	add	r2,r4,r2
    8e88:	10bfff04 	addi	r2,r2,-4
    8e8c:	297fff04 	addi	r5,r5,-4
    8e90:	11800017 	ldw	r6,0(r2)
    8e94:	28c00017 	ldw	r3,0(r5)
    8e98:	30c0031e 	bne	r6,r3,8ea8 <__mcmp+0x48>
    8e9c:	20bffa36 	bltu	r4,r2,8e88 <__mcmp+0x28>
    8ea0:	3805883a 	mov	r2,r7
    8ea4:	f800283a 	ret
    8ea8:	30c00336 	bltu	r6,r3,8eb8 <__mcmp+0x58>
    8eac:	01c00044 	movi	r7,1
    8eb0:	3805883a 	mov	r2,r7
    8eb4:	f800283a 	ret
    8eb8:	01ffffc4 	movi	r7,-1
    8ebc:	003ff806 	br	8ea0 <__mcmp+0x40>

00008ec0 <__ulp>:
    8ec0:	295ffc2c 	andhi	r5,r5,32752
    8ec4:	013f3034 	movhi	r4,64704
    8ec8:	290b883a 	add	r5,r5,r4
    8ecc:	0145c83a 	sub	r2,zero,r5
    8ed0:	1007d53a 	srai	r3,r2,20
    8ed4:	000d883a 	mov	r6,zero
    8ed8:	0140040e 	bge	zero,r5,8eec <__ulp+0x2c>
    8edc:	280f883a 	mov	r7,r5
    8ee0:	3807883a 	mov	r3,r7
    8ee4:	3005883a 	mov	r2,r6
    8ee8:	f800283a 	ret
    8eec:	008004c4 	movi	r2,19
    8ef0:	193ffb04 	addi	r4,r3,-20
    8ef4:	10c00c0e 	bge	r2,r3,8f28 <__ulp+0x68>
    8ef8:	008007c4 	movi	r2,31
    8efc:	1107c83a 	sub	r3,r2,r4
    8f00:	00800784 	movi	r2,30
    8f04:	01400044 	movi	r5,1
    8f08:	11000216 	blt	r2,r4,8f14 <__ulp+0x54>
    8f0c:	00800044 	movi	r2,1
    8f10:	10ca983a 	sll	r5,r2,r3
    8f14:	000f883a 	mov	r7,zero
    8f18:	280d883a 	mov	r6,r5
    8f1c:	3807883a 	mov	r3,r7
    8f20:	3005883a 	mov	r2,r6
    8f24:	f800283a 	ret
    8f28:	00800234 	movhi	r2,8
    8f2c:	10cfd83a 	sra	r7,r2,r3
    8f30:	000d883a 	mov	r6,zero
    8f34:	3005883a 	mov	r2,r6
    8f38:	3807883a 	mov	r3,r7
    8f3c:	f800283a 	ret

00008f40 <__b2d>:
    8f40:	20800417 	ldw	r2,16(r4)
    8f44:	defff904 	addi	sp,sp,-28
    8f48:	dd000415 	stw	r20,16(sp)
    8f4c:	1085883a 	add	r2,r2,r2
    8f50:	25000504 	addi	r20,r4,20
    8f54:	1085883a 	add	r2,r2,r2
    8f58:	dc000015 	stw	r16,0(sp)
    8f5c:	a0a1883a 	add	r16,r20,r2
    8f60:	dd400515 	stw	r21,20(sp)
    8f64:	857fff17 	ldw	r21,-4(r16)
    8f68:	dc400115 	stw	r17,4(sp)
    8f6c:	dfc00615 	stw	ra,24(sp)
    8f70:	a809883a 	mov	r4,r21
    8f74:	2823883a 	mov	r17,r5
    8f78:	dcc00315 	stw	r19,12(sp)
    8f7c:	dc800215 	stw	r18,8(sp)
    8f80:	0008d2c0 	call	8d2c <__hi0bits>
    8f84:	100b883a 	mov	r5,r2
    8f88:	00800804 	movi	r2,32
    8f8c:	1145c83a 	sub	r2,r2,r5
    8f90:	88800015 	stw	r2,0(r17)
    8f94:	00800284 	movi	r2,10
    8f98:	80ffff04 	addi	r3,r16,-4
    8f9c:	11401416 	blt	r2,r5,8ff0 <__b2d+0xb0>
    8fa0:	008002c4 	movi	r2,11
    8fa4:	1149c83a 	sub	r4,r2,r5
    8fa8:	a0c02736 	bltu	r20,r3,9048 <__b2d+0x108>
    8fac:	000d883a 	mov	r6,zero
    8fb0:	28800544 	addi	r2,r5,21
    8fb4:	a906d83a 	srl	r3,r21,r4
    8fb8:	a884983a 	sll	r2,r21,r2
    8fbc:	1ccffc34 	orhi	r19,r3,16368
    8fc0:	11a4b03a 	or	r18,r2,r6
    8fc4:	9005883a 	mov	r2,r18
    8fc8:	9807883a 	mov	r3,r19
    8fcc:	dfc00617 	ldw	ra,24(sp)
    8fd0:	dd400517 	ldw	r21,20(sp)
    8fd4:	dd000417 	ldw	r20,16(sp)
    8fd8:	dcc00317 	ldw	r19,12(sp)
    8fdc:	dc800217 	ldw	r18,8(sp)
    8fe0:	dc400117 	ldw	r17,4(sp)
    8fe4:	dc000017 	ldw	r16,0(sp)
    8fe8:	dec00704 	addi	sp,sp,28
    8fec:	f800283a 	ret
    8ff0:	a0c00e36 	bltu	r20,r3,902c <__b2d+0xec>
    8ff4:	293ffd44 	addi	r4,r5,-11
    8ff8:	000d883a 	mov	r6,zero
    8ffc:	20000f26 	beq	r4,zero,903c <__b2d+0xfc>
    9000:	00800804 	movi	r2,32
    9004:	110bc83a 	sub	r5,r2,r4
    9008:	a0c01236 	bltu	r20,r3,9054 <__b2d+0x114>
    900c:	000f883a 	mov	r7,zero
    9010:	a904983a 	sll	r2,r21,r4
    9014:	3146d83a 	srl	r3,r6,r5
    9018:	3108983a 	sll	r4,r6,r4
    901c:	108ffc34 	orhi	r2,r2,16368
    9020:	18a6b03a 	or	r19,r3,r2
    9024:	3924b03a 	or	r18,r7,r4
    9028:	003fe606 	br	8fc4 <__b2d+0x84>
    902c:	293ffd44 	addi	r4,r5,-11
    9030:	81bffe17 	ldw	r6,-8(r16)
    9034:	80fffe04 	addi	r3,r16,-8
    9038:	203ff11e 	bne	r4,zero,9000 <__b2d+0xc0>
    903c:	accffc34 	orhi	r19,r21,16368
    9040:	3025883a 	mov	r18,r6
    9044:	003fdf06 	br	8fc4 <__b2d+0x84>
    9048:	18bfff17 	ldw	r2,-4(r3)
    904c:	110cd83a 	srl	r6,r2,r4
    9050:	003fd706 	br	8fb0 <__b2d+0x70>
    9054:	18bfff17 	ldw	r2,-4(r3)
    9058:	114ed83a 	srl	r7,r2,r5
    905c:	003fec06 	br	9010 <__b2d+0xd0>

00009060 <__ratio>:
    9060:	defff904 	addi	sp,sp,-28
    9064:	dc400215 	stw	r17,8(sp)
    9068:	2823883a 	mov	r17,r5
    906c:	d80b883a 	mov	r5,sp
    9070:	dfc00615 	stw	ra,24(sp)
    9074:	dd000515 	stw	r20,20(sp)
    9078:	dcc00415 	stw	r19,16(sp)
    907c:	dc800315 	stw	r18,12(sp)
    9080:	2025883a 	mov	r18,r4
    9084:	0008f400 	call	8f40 <__b2d>
    9088:	8809883a 	mov	r4,r17
    908c:	d9400104 	addi	r5,sp,4
    9090:	1027883a 	mov	r19,r2
    9094:	1829883a 	mov	r20,r3
    9098:	0008f400 	call	8f40 <__b2d>
    909c:	89000417 	ldw	r4,16(r17)
    90a0:	91c00417 	ldw	r7,16(r18)
    90a4:	d9800117 	ldw	r6,4(sp)
    90a8:	180b883a 	mov	r5,r3
    90ac:	390fc83a 	sub	r7,r7,r4
    90b0:	1009883a 	mov	r4,r2
    90b4:	d8800017 	ldw	r2,0(sp)
    90b8:	380e917a 	slli	r7,r7,5
    90bc:	2011883a 	mov	r8,r4
    90c0:	1185c83a 	sub	r2,r2,r6
    90c4:	11c5883a 	add	r2,r2,r7
    90c8:	1006953a 	slli	r3,r2,20
    90cc:	2813883a 	mov	r9,r5
    90d0:	00800d0e 	bge	zero,r2,9108 <__ratio+0xa8>
    90d4:	1d29883a 	add	r20,r3,r20
    90d8:	a00b883a 	mov	r5,r20
    90dc:	480f883a 	mov	r7,r9
    90e0:	9809883a 	mov	r4,r19
    90e4:	400d883a 	mov	r6,r8
    90e8:	000c65c0 	call	c65c <__divdf3>
    90ec:	dfc00617 	ldw	ra,24(sp)
    90f0:	dd000517 	ldw	r20,20(sp)
    90f4:	dcc00417 	ldw	r19,16(sp)
    90f8:	dc800317 	ldw	r18,12(sp)
    90fc:	dc400217 	ldw	r17,8(sp)
    9100:	dec00704 	addi	sp,sp,28
    9104:	f800283a 	ret
    9108:	28d3c83a 	sub	r9,r5,r3
    910c:	003ff206 	br	90d8 <__ratio+0x78>

00009110 <_mprec_log10>:
    9110:	defffe04 	addi	sp,sp,-8
    9114:	008005c4 	movi	r2,23
    9118:	dc000015 	stw	r16,0(sp)
    911c:	dfc00115 	stw	ra,4(sp)
    9120:	2021883a 	mov	r16,r4
    9124:	11000c16 	blt	r2,r4,9158 <_mprec_log10+0x48>
    9128:	200490fa 	slli	r2,r4,3
    912c:	00c00074 	movhi	r3,1
    9130:	18fc0304 	addi	r3,r3,-4084
    9134:	10c5883a 	add	r2,r2,r3
    9138:	12400117 	ldw	r9,4(r2)
    913c:	12000017 	ldw	r8,0(r2)
    9140:	4807883a 	mov	r3,r9
    9144:	4005883a 	mov	r2,r8
    9148:	dfc00117 	ldw	ra,4(sp)
    914c:	dc000017 	ldw	r16,0(sp)
    9150:	dec00204 	addi	sp,sp,8
    9154:	f800283a 	ret
    9158:	0011883a 	mov	r8,zero
    915c:	024ffc34 	movhi	r9,16368
    9160:	0005883a 	mov	r2,zero
    9164:	00d00934 	movhi	r3,16420
    9168:	480b883a 	mov	r5,r9
    916c:	4009883a 	mov	r4,r8
    9170:	180f883a 	mov	r7,r3
    9174:	100d883a 	mov	r6,r2
    9178:	000c2980 	call	c298 <__muldf3>
    917c:	843fffc4 	addi	r16,r16,-1
    9180:	1011883a 	mov	r8,r2
    9184:	1813883a 	mov	r9,r3
    9188:	803ff51e 	bne	r16,zero,9160 <_mprec_log10+0x50>
    918c:	4005883a 	mov	r2,r8
    9190:	4807883a 	mov	r3,r9
    9194:	dfc00117 	ldw	ra,4(sp)
    9198:	dc000017 	ldw	r16,0(sp)
    919c:	dec00204 	addi	sp,sp,8
    91a0:	f800283a 	ret

000091a4 <__copybits>:
    91a4:	297fffc4 	addi	r5,r5,-1
    91a8:	30800417 	ldw	r2,16(r6)
    91ac:	280bd17a 	srai	r5,r5,5
    91b0:	31800504 	addi	r6,r6,20
    91b4:	1085883a 	add	r2,r2,r2
    91b8:	294b883a 	add	r5,r5,r5
    91bc:	294b883a 	add	r5,r5,r5
    91c0:	1085883a 	add	r2,r2,r2
    91c4:	290b883a 	add	r5,r5,r4
    91c8:	3087883a 	add	r3,r6,r2
    91cc:	29400104 	addi	r5,r5,4
    91d0:	30c0052e 	bgeu	r6,r3,91e8 <__copybits+0x44>
    91d4:	30800017 	ldw	r2,0(r6)
    91d8:	31800104 	addi	r6,r6,4
    91dc:	20800015 	stw	r2,0(r4)
    91e0:	21000104 	addi	r4,r4,4
    91e4:	30fffb36 	bltu	r6,r3,91d4 <__copybits+0x30>
    91e8:	2140032e 	bgeu	r4,r5,91f8 <__copybits+0x54>
    91ec:	20000015 	stw	zero,0(r4)
    91f0:	21000104 	addi	r4,r4,4
    91f4:	217ffd36 	bltu	r4,r5,91ec <__copybits+0x48>
    91f8:	f800283a 	ret

000091fc <__any_on>:
    91fc:	20800417 	ldw	r2,16(r4)
    9200:	2807d17a 	srai	r3,r5,5
    9204:	21000504 	addi	r4,r4,20
    9208:	10c00d0e 	bge	r2,r3,9240 <__any_on+0x44>
    920c:	1085883a 	add	r2,r2,r2
    9210:	1085883a 	add	r2,r2,r2
    9214:	208d883a 	add	r6,r4,r2
    9218:	2180182e 	bgeu	r4,r6,927c <__any_on+0x80>
    921c:	30bfff17 	ldw	r2,-4(r6)
    9220:	30ffff04 	addi	r3,r6,-4
    9224:	1000041e 	bne	r2,zero,9238 <__any_on+0x3c>
    9228:	20c0142e 	bgeu	r4,r3,927c <__any_on+0x80>
    922c:	18ffff04 	addi	r3,r3,-4
    9230:	18800017 	ldw	r2,0(r3)
    9234:	103ffc26 	beq	r2,zero,9228 <__any_on+0x2c>
    9238:	00800044 	movi	r2,1
    923c:	f800283a 	ret
    9240:	18800a0e 	bge	r3,r2,926c <__any_on+0x70>
    9244:	294007cc 	andi	r5,r5,31
    9248:	28000826 	beq	r5,zero,926c <__any_on+0x70>
    924c:	18c5883a 	add	r2,r3,r3
    9250:	1085883a 	add	r2,r2,r2
    9254:	208d883a 	add	r6,r4,r2
    9258:	30c00017 	ldw	r3,0(r6)
    925c:	1944d83a 	srl	r2,r3,r5
    9260:	1144983a 	sll	r2,r2,r5
    9264:	18bff41e 	bne	r3,r2,9238 <__any_on+0x3c>
    9268:	003feb06 	br	9218 <__any_on+0x1c>
    926c:	18c5883a 	add	r2,r3,r3
    9270:	1085883a 	add	r2,r2,r2
    9274:	208d883a 	add	r6,r4,r2
    9278:	003fe706 	br	9218 <__any_on+0x1c>
    927c:	0005883a 	mov	r2,zero
    9280:	f800283a 	ret

00009284 <_Balloc>:
    9284:	20c01317 	ldw	r3,76(r4)
    9288:	defffb04 	addi	sp,sp,-20
    928c:	dcc00315 	stw	r19,12(sp)
    9290:	dc800215 	stw	r18,8(sp)
    9294:	dfc00415 	stw	ra,16(sp)
    9298:	2825883a 	mov	r18,r5
    929c:	dc400115 	stw	r17,4(sp)
    92a0:	dc000015 	stw	r16,0(sp)
    92a4:	2027883a 	mov	r19,r4
    92a8:	01800404 	movi	r6,16
    92ac:	01400104 	movi	r5,4
    92b0:	18001726 	beq	r3,zero,9310 <_Balloc+0x8c>
    92b4:	01400044 	movi	r5,1
    92b8:	9485883a 	add	r2,r18,r18
    92bc:	2ca2983a 	sll	r17,r5,r18
    92c0:	1085883a 	add	r2,r2,r2
    92c4:	10c7883a 	add	r3,r2,r3
    92c8:	1c000017 	ldw	r16,0(r3)
    92cc:	8c4d883a 	add	r6,r17,r17
    92d0:	318d883a 	add	r6,r6,r6
    92d4:	9809883a 	mov	r4,r19
    92d8:	31800504 	addi	r6,r6,20
    92dc:	80001226 	beq	r16,zero,9328 <_Balloc+0xa4>
    92e0:	80800017 	ldw	r2,0(r16)
    92e4:	18800015 	stw	r2,0(r3)
    92e8:	80000415 	stw	zero,16(r16)
    92ec:	80000315 	stw	zero,12(r16)
    92f0:	8005883a 	mov	r2,r16
    92f4:	dfc00417 	ldw	ra,16(sp)
    92f8:	dcc00317 	ldw	r19,12(sp)
    92fc:	dc800217 	ldw	r18,8(sp)
    9300:	dc400117 	ldw	r17,4(sp)
    9304:	dc000017 	ldw	r16,0(sp)
    9308:	dec00504 	addi	sp,sp,20
    930c:	f800283a 	ret
    9310:	000aa8c0 	call	aa8c <_calloc_r>
    9314:	1007883a 	mov	r3,r2
    9318:	0021883a 	mov	r16,zero
    931c:	98801315 	stw	r2,76(r19)
    9320:	103fe41e 	bne	r2,zero,92b4 <_Balloc+0x30>
    9324:	003ff206 	br	92f0 <_Balloc+0x6c>
    9328:	000aa8c0 	call	aa8c <_calloc_r>
    932c:	103ff026 	beq	r2,zero,92f0 <_Balloc+0x6c>
    9330:	1021883a 	mov	r16,r2
    9334:	14800115 	stw	r18,4(r2)
    9338:	14400215 	stw	r17,8(r2)
    933c:	003fea06 	br	92e8 <_Balloc+0x64>

00009340 <__d2b>:
    9340:	defff504 	addi	sp,sp,-44
    9344:	dcc00515 	stw	r19,20(sp)
    9348:	04c00044 	movi	r19,1
    934c:	dc000215 	stw	r16,8(sp)
    9350:	2821883a 	mov	r16,r5
    9354:	980b883a 	mov	r5,r19
    9358:	ddc00915 	stw	r23,36(sp)
    935c:	dd800815 	stw	r22,32(sp)
    9360:	dd400715 	stw	r21,28(sp)
    9364:	dd000615 	stw	r20,24(sp)
    9368:	dc800415 	stw	r18,16(sp)
    936c:	dc400315 	stw	r17,12(sp)
    9370:	dfc00a15 	stw	ra,40(sp)
    9374:	3023883a 	mov	r17,r6
    9378:	382d883a 	mov	r22,r7
    937c:	ddc00b17 	ldw	r23,44(sp)
    9380:	00092840 	call	9284 <_Balloc>
    9384:	1025883a 	mov	r18,r2
    9388:	00a00034 	movhi	r2,32768
    938c:	10bfffc4 	addi	r2,r2,-1
    9390:	8888703a 	and	r4,r17,r2
    9394:	202ad53a 	srli	r21,r4,20
    9398:	00800434 	movhi	r2,16
    939c:	10bfffc4 	addi	r2,r2,-1
    93a0:	8886703a 	and	r3,r17,r2
    93a4:	a829003a 	cmpeq	r20,r21,zero
    93a8:	800b883a 	mov	r5,r16
    93ac:	d8c00115 	stw	r3,4(sp)
    93b0:	94000504 	addi	r16,r18,20
    93b4:	a000021e 	bne	r20,zero,93c0 <__d2b+0x80>
    93b8:	18c00434 	orhi	r3,r3,16
    93bc:	d8c00115 	stw	r3,4(sp)
    93c0:	28002726 	beq	r5,zero,9460 <__d2b+0x120>
    93c4:	d809883a 	mov	r4,sp
    93c8:	d9400015 	stw	r5,0(sp)
    93cc:	0008d9c0 	call	8d9c <__lo0bits>
    93d0:	100d883a 	mov	r6,r2
    93d4:	10003526 	beq	r2,zero,94ac <__d2b+0x16c>
    93d8:	d8c00117 	ldw	r3,4(sp)
    93dc:	00800804 	movi	r2,32
    93e0:	1185c83a 	sub	r2,r2,r6
    93e4:	d9000017 	ldw	r4,0(sp)
    93e8:	1886983a 	sll	r3,r3,r2
    93ec:	1906b03a 	or	r3,r3,r4
    93f0:	90c00515 	stw	r3,20(r18)
    93f4:	d8c00117 	ldw	r3,4(sp)
    93f8:	1986d83a 	srl	r3,r3,r6
    93fc:	d8c00115 	stw	r3,4(sp)
    9400:	180b003a 	cmpeq	r5,r3,zero
    9404:	00800084 	movi	r2,2
    9408:	114bc83a 	sub	r5,r2,r5
    940c:	80c00115 	stw	r3,4(r16)
    9410:	91400415 	stw	r5,16(r18)
    9414:	a0001a1e 	bne	r20,zero,9480 <__d2b+0x140>
    9418:	3545883a 	add	r2,r6,r21
    941c:	10bef344 	addi	r2,r2,-1075
    9420:	00c00d44 	movi	r3,53
    9424:	b0800015 	stw	r2,0(r22)
    9428:	1987c83a 	sub	r3,r3,r6
    942c:	b8c00015 	stw	r3,0(r23)
    9430:	9005883a 	mov	r2,r18
    9434:	dfc00a17 	ldw	ra,40(sp)
    9438:	ddc00917 	ldw	r23,36(sp)
    943c:	dd800817 	ldw	r22,32(sp)
    9440:	dd400717 	ldw	r21,28(sp)
    9444:	dd000617 	ldw	r20,24(sp)
    9448:	dcc00517 	ldw	r19,20(sp)
    944c:	dc800417 	ldw	r18,16(sp)
    9450:	dc400317 	ldw	r17,12(sp)
    9454:	dc000217 	ldw	r16,8(sp)
    9458:	dec00b04 	addi	sp,sp,44
    945c:	f800283a 	ret
    9460:	d9000104 	addi	r4,sp,4
    9464:	0008d9c0 	call	8d9c <__lo0bits>
    9468:	11800804 	addi	r6,r2,32
    946c:	d8800117 	ldw	r2,4(sp)
    9470:	94c00415 	stw	r19,16(r18)
    9474:	980b883a 	mov	r5,r19
    9478:	90800515 	stw	r2,20(r18)
    947c:	a03fe626 	beq	r20,zero,9418 <__d2b+0xd8>
    9480:	2945883a 	add	r2,r5,r5
    9484:	1085883a 	add	r2,r2,r2
    9488:	1405883a 	add	r2,r2,r16
    948c:	113fff17 	ldw	r4,-4(r2)
    9490:	30fef384 	addi	r3,r6,-1074
    9494:	2820917a 	slli	r16,r5,5
    9498:	b0c00015 	stw	r3,0(r22)
    949c:	0008d2c0 	call	8d2c <__hi0bits>
    94a0:	80a1c83a 	sub	r16,r16,r2
    94a4:	bc000015 	stw	r16,0(r23)
    94a8:	003fe106 	br	9430 <__d2b+0xf0>
    94ac:	d8800017 	ldw	r2,0(sp)
    94b0:	90800515 	stw	r2,20(r18)
    94b4:	d8c00117 	ldw	r3,4(sp)
    94b8:	003fd106 	br	9400 <__d2b+0xc0>

000094bc <__mdiff>:
    94bc:	defffb04 	addi	sp,sp,-20
    94c0:	dc000015 	stw	r16,0(sp)
    94c4:	2821883a 	mov	r16,r5
    94c8:	dc800215 	stw	r18,8(sp)
    94cc:	300b883a 	mov	r5,r6
    94d0:	2025883a 	mov	r18,r4
    94d4:	8009883a 	mov	r4,r16
    94d8:	dc400115 	stw	r17,4(sp)
    94dc:	dfc00415 	stw	ra,16(sp)
    94e0:	dcc00315 	stw	r19,12(sp)
    94e4:	3023883a 	mov	r17,r6
    94e8:	0008e600 	call	8e60 <__mcmp>
    94ec:	10004226 	beq	r2,zero,95f8 <__mdiff+0x13c>
    94f0:	10005016 	blt	r2,zero,9634 <__mdiff+0x178>
    94f4:	0027883a 	mov	r19,zero
    94f8:	81400117 	ldw	r5,4(r16)
    94fc:	9009883a 	mov	r4,r18
    9500:	00092840 	call	9284 <_Balloc>
    9504:	1019883a 	mov	r12,r2
    9508:	82800417 	ldw	r10,16(r16)
    950c:	88800417 	ldw	r2,16(r17)
    9510:	81800504 	addi	r6,r16,20
    9514:	5287883a 	add	r3,r10,r10
    9518:	1085883a 	add	r2,r2,r2
    951c:	18c7883a 	add	r3,r3,r3
    9520:	1085883a 	add	r2,r2,r2
    9524:	8a000504 	addi	r8,r17,20
    9528:	64c00315 	stw	r19,12(r12)
    952c:	30db883a 	add	r13,r6,r3
    9530:	4097883a 	add	r11,r8,r2
    9534:	61c00504 	addi	r7,r12,20
    9538:	0013883a 	mov	r9,zero
    953c:	31000017 	ldw	r4,0(r6)
    9540:	41400017 	ldw	r5,0(r8)
    9544:	42000104 	addi	r8,r8,4
    9548:	20bfffcc 	andi	r2,r4,65535
    954c:	28ffffcc 	andi	r3,r5,65535
    9550:	10c5c83a 	sub	r2,r2,r3
    9554:	1245883a 	add	r2,r2,r9
    9558:	2008d43a 	srli	r4,r4,16
    955c:	280ad43a 	srli	r5,r5,16
    9560:	1007d43a 	srai	r3,r2,16
    9564:	3880000d 	sth	r2,0(r7)
    9568:	2149c83a 	sub	r4,r4,r5
    956c:	20c9883a 	add	r4,r4,r3
    9570:	3900008d 	sth	r4,2(r7)
    9574:	31800104 	addi	r6,r6,4
    9578:	39c00104 	addi	r7,r7,4
    957c:	2013d43a 	srai	r9,r4,16
    9580:	42ffee36 	bltu	r8,r11,953c <__mdiff+0x80>
    9584:	33400c2e 	bgeu	r6,r13,95b8 <__mdiff+0xfc>
    9588:	30800017 	ldw	r2,0(r6)
    958c:	31800104 	addi	r6,r6,4
    9590:	10ffffcc 	andi	r3,r2,65535
    9594:	1a47883a 	add	r3,r3,r9
    9598:	1004d43a 	srli	r2,r2,16
    959c:	1809d43a 	srai	r4,r3,16
    95a0:	38c0000d 	sth	r3,0(r7)
    95a4:	1105883a 	add	r2,r2,r4
    95a8:	3880008d 	sth	r2,2(r7)
    95ac:	1013d43a 	srai	r9,r2,16
    95b0:	39c00104 	addi	r7,r7,4
    95b4:	337ff436 	bltu	r6,r13,9588 <__mdiff+0xcc>
    95b8:	38bfff17 	ldw	r2,-4(r7)
    95bc:	38ffff04 	addi	r3,r7,-4
    95c0:	1000041e 	bne	r2,zero,95d4 <__mdiff+0x118>
    95c4:	18ffff04 	addi	r3,r3,-4
    95c8:	18800017 	ldw	r2,0(r3)
    95cc:	52bfffc4 	addi	r10,r10,-1
    95d0:	103ffc26 	beq	r2,zero,95c4 <__mdiff+0x108>
    95d4:	6005883a 	mov	r2,r12
    95d8:	62800415 	stw	r10,16(r12)
    95dc:	dfc00417 	ldw	ra,16(sp)
    95e0:	dcc00317 	ldw	r19,12(sp)
    95e4:	dc800217 	ldw	r18,8(sp)
    95e8:	dc400117 	ldw	r17,4(sp)
    95ec:	dc000017 	ldw	r16,0(sp)
    95f0:	dec00504 	addi	sp,sp,20
    95f4:	f800283a 	ret
    95f8:	9009883a 	mov	r4,r18
    95fc:	000b883a 	mov	r5,zero
    9600:	00092840 	call	9284 <_Balloc>
    9604:	1019883a 	mov	r12,r2
    9608:	00800044 	movi	r2,1
    960c:	60800415 	stw	r2,16(r12)
    9610:	6005883a 	mov	r2,r12
    9614:	60000515 	stw	zero,20(r12)
    9618:	dfc00417 	ldw	ra,16(sp)
    961c:	dcc00317 	ldw	r19,12(sp)
    9620:	dc800217 	ldw	r18,8(sp)
    9624:	dc400117 	ldw	r17,4(sp)
    9628:	dc000017 	ldw	r16,0(sp)
    962c:	dec00504 	addi	sp,sp,20
    9630:	f800283a 	ret
    9634:	880d883a 	mov	r6,r17
    9638:	04c00044 	movi	r19,1
    963c:	8023883a 	mov	r17,r16
    9640:	3021883a 	mov	r16,r6
    9644:	003fac06 	br	94f8 <__mdiff+0x3c>

00009648 <__lshift>:
    9648:	defff904 	addi	sp,sp,-28
    964c:	28800417 	ldw	r2,16(r5)
    9650:	dc000015 	stw	r16,0(sp)
    9654:	3021d17a 	srai	r16,r6,5
    9658:	28c00217 	ldw	r3,8(r5)
    965c:	10800044 	addi	r2,r2,1
    9660:	dc400115 	stw	r17,4(sp)
    9664:	80a3883a 	add	r17,r16,r2
    9668:	dd400515 	stw	r21,20(sp)
    966c:	dd000415 	stw	r20,16(sp)
    9670:	dc800215 	stw	r18,8(sp)
    9674:	dfc00615 	stw	ra,24(sp)
    9678:	2825883a 	mov	r18,r5
    967c:	dcc00315 	stw	r19,12(sp)
    9680:	3029883a 	mov	r20,r6
    9684:	202b883a 	mov	r21,r4
    9688:	29400117 	ldw	r5,4(r5)
    968c:	1c40030e 	bge	r3,r17,969c <__lshift+0x54>
    9690:	18c7883a 	add	r3,r3,r3
    9694:	29400044 	addi	r5,r5,1
    9698:	1c7ffd16 	blt	r3,r17,9690 <__lshift+0x48>
    969c:	a809883a 	mov	r4,r21
    96a0:	00092840 	call	9284 <_Balloc>
    96a4:	1027883a 	mov	r19,r2
    96a8:	11400504 	addi	r5,r2,20
    96ac:	0400090e 	bge	zero,r16,96d4 <__lshift+0x8c>
    96b0:	2805883a 	mov	r2,r5
    96b4:	0007883a 	mov	r3,zero
    96b8:	18c00044 	addi	r3,r3,1
    96bc:	10000015 	stw	zero,0(r2)
    96c0:	10800104 	addi	r2,r2,4
    96c4:	80fffc1e 	bne	r16,r3,96b8 <__lshift+0x70>
    96c8:	8405883a 	add	r2,r16,r16
    96cc:	1085883a 	add	r2,r2,r2
    96d0:	288b883a 	add	r5,r5,r2
    96d4:	90800417 	ldw	r2,16(r18)
    96d8:	91000504 	addi	r4,r18,20
    96dc:	a18007cc 	andi	r6,r20,31
    96e0:	1085883a 	add	r2,r2,r2
    96e4:	1085883a 	add	r2,r2,r2
    96e8:	208f883a 	add	r7,r4,r2
    96ec:	30001e26 	beq	r6,zero,9768 <__lshift+0x120>
    96f0:	00800804 	movi	r2,32
    96f4:	1191c83a 	sub	r8,r2,r6
    96f8:	0007883a 	mov	r3,zero
    96fc:	20800017 	ldw	r2,0(r4)
    9700:	1184983a 	sll	r2,r2,r6
    9704:	1884b03a 	or	r2,r3,r2
    9708:	28800015 	stw	r2,0(r5)
    970c:	20c00017 	ldw	r3,0(r4)
    9710:	21000104 	addi	r4,r4,4
    9714:	29400104 	addi	r5,r5,4
    9718:	1a06d83a 	srl	r3,r3,r8
    971c:	21fff736 	bltu	r4,r7,96fc <__lshift+0xb4>
    9720:	28c00015 	stw	r3,0(r5)
    9724:	18000126 	beq	r3,zero,972c <__lshift+0xe4>
    9728:	8c400044 	addi	r17,r17,1
    972c:	88bfffc4 	addi	r2,r17,-1
    9730:	98800415 	stw	r2,16(r19)
    9734:	a809883a 	mov	r4,r21
    9738:	900b883a 	mov	r5,r18
    973c:	0008d040 	call	8d04 <_Bfree>
    9740:	9805883a 	mov	r2,r19
    9744:	dfc00617 	ldw	ra,24(sp)
    9748:	dd400517 	ldw	r21,20(sp)
    974c:	dd000417 	ldw	r20,16(sp)
    9750:	dcc00317 	ldw	r19,12(sp)
    9754:	dc800217 	ldw	r18,8(sp)
    9758:	dc400117 	ldw	r17,4(sp)
    975c:	dc000017 	ldw	r16,0(sp)
    9760:	dec00704 	addi	sp,sp,28
    9764:	f800283a 	ret
    9768:	20800017 	ldw	r2,0(r4)
    976c:	21000104 	addi	r4,r4,4
    9770:	28800015 	stw	r2,0(r5)
    9774:	29400104 	addi	r5,r5,4
    9778:	21ffec2e 	bgeu	r4,r7,972c <__lshift+0xe4>
    977c:	20800017 	ldw	r2,0(r4)
    9780:	21000104 	addi	r4,r4,4
    9784:	28800015 	stw	r2,0(r5)
    9788:	29400104 	addi	r5,r5,4
    978c:	21fff636 	bltu	r4,r7,9768 <__lshift+0x120>
    9790:	003fe606 	br	972c <__lshift+0xe4>

00009794 <__multiply>:
    9794:	defff004 	addi	sp,sp,-64
    9798:	dc800815 	stw	r18,32(sp)
    979c:	dc400715 	stw	r17,28(sp)
    97a0:	2c800417 	ldw	r18,16(r5)
    97a4:	34400417 	ldw	r17,16(r6)
    97a8:	dcc00915 	stw	r19,36(sp)
    97ac:	dc000615 	stw	r16,24(sp)
    97b0:	dfc00f15 	stw	ra,60(sp)
    97b4:	df000e15 	stw	fp,56(sp)
    97b8:	ddc00d15 	stw	r23,52(sp)
    97bc:	dd800c15 	stw	r22,48(sp)
    97c0:	dd400b15 	stw	r21,44(sp)
    97c4:	dd000a15 	stw	r20,40(sp)
    97c8:	2821883a 	mov	r16,r5
    97cc:	3027883a 	mov	r19,r6
    97d0:	9440040e 	bge	r18,r17,97e4 <__multiply+0x50>
    97d4:	8825883a 	mov	r18,r17
    97d8:	2c400417 	ldw	r17,16(r5)
    97dc:	2827883a 	mov	r19,r5
    97e0:	3021883a 	mov	r16,r6
    97e4:	80800217 	ldw	r2,8(r16)
    97e8:	9447883a 	add	r3,r18,r17
    97ec:	d8c00415 	stw	r3,16(sp)
    97f0:	81400117 	ldw	r5,4(r16)
    97f4:	10c0010e 	bge	r2,r3,97fc <__multiply+0x68>
    97f8:	29400044 	addi	r5,r5,1
    97fc:	00092840 	call	9284 <_Balloc>
    9800:	d8800515 	stw	r2,20(sp)
    9804:	d9000417 	ldw	r4,16(sp)
    9808:	d8c00517 	ldw	r3,20(sp)
    980c:	2105883a 	add	r2,r4,r4
    9810:	1085883a 	add	r2,r2,r2
    9814:	19000504 	addi	r4,r3,20
    9818:	2085883a 	add	r2,r4,r2
    981c:	d8800315 	stw	r2,12(sp)
    9820:	2080052e 	bgeu	r4,r2,9838 <__multiply+0xa4>
    9824:	2005883a 	mov	r2,r4
    9828:	d8c00317 	ldw	r3,12(sp)
    982c:	10000015 	stw	zero,0(r2)
    9830:	10800104 	addi	r2,r2,4
    9834:	10fffc36 	bltu	r2,r3,9828 <__multiply+0x94>
    9838:	8c45883a 	add	r2,r17,r17
    983c:	9487883a 	add	r3,r18,r18
    9840:	9dc00504 	addi	r23,r19,20
    9844:	1085883a 	add	r2,r2,r2
    9848:	84000504 	addi	r16,r16,20
    984c:	18c7883a 	add	r3,r3,r3
    9850:	b885883a 	add	r2,r23,r2
    9854:	dc000015 	stw	r16,0(sp)
    9858:	d8800215 	stw	r2,8(sp)
    985c:	80f9883a 	add	fp,r16,r3
    9860:	b880432e 	bgeu	r23,r2,9970 <__multiply+0x1dc>
    9864:	d9000115 	stw	r4,4(sp)
    9868:	b9000017 	ldw	r4,0(r23)
    986c:	253fffcc 	andi	r20,r4,65535
    9870:	a0001a26 	beq	r20,zero,98dc <__multiply+0x148>
    9874:	dcc00017 	ldw	r19,0(sp)
    9878:	dc800117 	ldw	r18,4(sp)
    987c:	002b883a 	mov	r21,zero
    9880:	9c400017 	ldw	r17,0(r19)
    9884:	94000017 	ldw	r16,0(r18)
    9888:	a009883a 	mov	r4,r20
    988c:	897fffcc 	andi	r5,r17,65535
    9890:	000d0940 	call	d094 <__mulsi3>
    9894:	880ad43a 	srli	r5,r17,16
    9898:	80ffffcc 	andi	r3,r16,65535
    989c:	a8c7883a 	add	r3,r21,r3
    98a0:	a009883a 	mov	r4,r20
    98a4:	10e3883a 	add	r17,r2,r3
    98a8:	8020d43a 	srli	r16,r16,16
    98ac:	000d0940 	call	d094 <__mulsi3>
    98b0:	8806d43a 	srli	r3,r17,16
    98b4:	1405883a 	add	r2,r2,r16
    98b8:	9cc00104 	addi	r19,r19,4
    98bc:	1887883a 	add	r3,r3,r2
    98c0:	90c0008d 	sth	r3,2(r18)
    98c4:	9440000d 	sth	r17,0(r18)
    98c8:	182ad43a 	srli	r21,r3,16
    98cc:	94800104 	addi	r18,r18,4
    98d0:	9f3feb36 	bltu	r19,fp,9880 <__multiply+0xec>
    98d4:	95400015 	stw	r21,0(r18)
    98d8:	b9000017 	ldw	r4,0(r23)
    98dc:	202ad43a 	srli	r21,r4,16
    98e0:	a8001c26 	beq	r21,zero,9954 <__multiply+0x1c0>
    98e4:	d9000117 	ldw	r4,4(sp)
    98e8:	dd000017 	ldw	r20,0(sp)
    98ec:	002d883a 	mov	r22,zero
    98f0:	24c00017 	ldw	r19,0(r4)
    98f4:	2025883a 	mov	r18,r4
    98f8:	9823883a 	mov	r17,r19
    98fc:	a4000017 	ldw	r16,0(r20)
    9900:	a809883a 	mov	r4,r21
    9904:	a5000104 	addi	r20,r20,4
    9908:	817fffcc 	andi	r5,r16,65535
    990c:	000d0940 	call	d094 <__mulsi3>
    9910:	8806d43a 	srli	r3,r17,16
    9914:	800ad43a 	srli	r5,r16,16
    9918:	94c0000d 	sth	r19,0(r18)
    991c:	b0c7883a 	add	r3,r22,r3
    9920:	10e1883a 	add	r16,r2,r3
    9924:	9400008d 	sth	r16,2(r18)
    9928:	a809883a 	mov	r4,r21
    992c:	94800104 	addi	r18,r18,4
    9930:	000d0940 	call	d094 <__mulsi3>
    9934:	94400017 	ldw	r17,0(r18)
    9938:	8020d43a 	srli	r16,r16,16
    993c:	88ffffcc 	andi	r3,r17,65535
    9940:	10c5883a 	add	r2,r2,r3
    9944:	80a7883a 	add	r19,r16,r2
    9948:	982cd43a 	srli	r22,r19,16
    994c:	a73feb36 	bltu	r20,fp,98fc <__multiply+0x168>
    9950:	94c00015 	stw	r19,0(r18)
    9954:	d8800217 	ldw	r2,8(sp)
    9958:	bdc00104 	addi	r23,r23,4
    995c:	b880042e 	bgeu	r23,r2,9970 <__multiply+0x1dc>
    9960:	d8c00117 	ldw	r3,4(sp)
    9964:	18c00104 	addi	r3,r3,4
    9968:	d8c00115 	stw	r3,4(sp)
    996c:	003fbe06 	br	9868 <__multiply+0xd4>
    9970:	d9000417 	ldw	r4,16(sp)
    9974:	01000c0e 	bge	zero,r4,99a8 <__multiply+0x214>
    9978:	d8c00317 	ldw	r3,12(sp)
    997c:	18bfff17 	ldw	r2,-4(r3)
    9980:	18ffff04 	addi	r3,r3,-4
    9984:	10000326 	beq	r2,zero,9994 <__multiply+0x200>
    9988:	00000706 	br	99a8 <__multiply+0x214>
    998c:	18800017 	ldw	r2,0(r3)
    9990:	1000051e 	bne	r2,zero,99a8 <__multiply+0x214>
    9994:	d9000417 	ldw	r4,16(sp)
    9998:	18ffff04 	addi	r3,r3,-4
    999c:	213fffc4 	addi	r4,r4,-1
    99a0:	d9000415 	stw	r4,16(sp)
    99a4:	203ff91e 	bne	r4,zero,998c <__multiply+0x1f8>
    99a8:	d8800417 	ldw	r2,16(sp)
    99ac:	d8c00517 	ldw	r3,20(sp)
    99b0:	18800415 	stw	r2,16(r3)
    99b4:	1805883a 	mov	r2,r3
    99b8:	dfc00f17 	ldw	ra,60(sp)
    99bc:	df000e17 	ldw	fp,56(sp)
    99c0:	ddc00d17 	ldw	r23,52(sp)
    99c4:	dd800c17 	ldw	r22,48(sp)
    99c8:	dd400b17 	ldw	r21,44(sp)
    99cc:	dd000a17 	ldw	r20,40(sp)
    99d0:	dcc00917 	ldw	r19,36(sp)
    99d4:	dc800817 	ldw	r18,32(sp)
    99d8:	dc400717 	ldw	r17,28(sp)
    99dc:	dc000617 	ldw	r16,24(sp)
    99e0:	dec01004 	addi	sp,sp,64
    99e4:	f800283a 	ret

000099e8 <__i2b>:
    99e8:	defffd04 	addi	sp,sp,-12
    99ec:	dc000015 	stw	r16,0(sp)
    99f0:	04000044 	movi	r16,1
    99f4:	dc800115 	stw	r18,4(sp)
    99f8:	2825883a 	mov	r18,r5
    99fc:	800b883a 	mov	r5,r16
    9a00:	dfc00215 	stw	ra,8(sp)
    9a04:	00092840 	call	9284 <_Balloc>
    9a08:	14000415 	stw	r16,16(r2)
    9a0c:	14800515 	stw	r18,20(r2)
    9a10:	dfc00217 	ldw	ra,8(sp)
    9a14:	dc800117 	ldw	r18,4(sp)
    9a18:	dc000017 	ldw	r16,0(sp)
    9a1c:	dec00304 	addi	sp,sp,12
    9a20:	f800283a 	ret

00009a24 <__multadd>:
    9a24:	defff604 	addi	sp,sp,-40
    9a28:	dd800615 	stw	r22,24(sp)
    9a2c:	2d800417 	ldw	r22,16(r5)
    9a30:	df000815 	stw	fp,32(sp)
    9a34:	ddc00715 	stw	r23,28(sp)
    9a38:	dd400515 	stw	r21,20(sp)
    9a3c:	dd000415 	stw	r20,16(sp)
    9a40:	dcc00315 	stw	r19,12(sp)
    9a44:	dc800215 	stw	r18,8(sp)
    9a48:	dfc00915 	stw	ra,36(sp)
    9a4c:	dc400115 	stw	r17,4(sp)
    9a50:	dc000015 	stw	r16,0(sp)
    9a54:	282f883a 	mov	r23,r5
    9a58:	2039883a 	mov	fp,r4
    9a5c:	302b883a 	mov	r21,r6
    9a60:	3829883a 	mov	r20,r7
    9a64:	2c800504 	addi	r18,r5,20
    9a68:	0027883a 	mov	r19,zero
    9a6c:	94400017 	ldw	r17,0(r18)
    9a70:	a80b883a 	mov	r5,r21
    9a74:	9cc00044 	addi	r19,r19,1
    9a78:	893fffcc 	andi	r4,r17,65535
    9a7c:	000d0940 	call	d094 <__mulsi3>
    9a80:	8808d43a 	srli	r4,r17,16
    9a84:	1521883a 	add	r16,r2,r20
    9a88:	a80b883a 	mov	r5,r21
    9a8c:	000d0940 	call	d094 <__mulsi3>
    9a90:	8008d43a 	srli	r4,r16,16
    9a94:	843fffcc 	andi	r16,r16,65535
    9a98:	1105883a 	add	r2,r2,r4
    9a9c:	1006943a 	slli	r3,r2,16
    9aa0:	1028d43a 	srli	r20,r2,16
    9aa4:	1c07883a 	add	r3,r3,r16
    9aa8:	90c00015 	stw	r3,0(r18)
    9aac:	94800104 	addi	r18,r18,4
    9ab0:	9dbfee16 	blt	r19,r22,9a6c <__multadd+0x48>
    9ab4:	a0000826 	beq	r20,zero,9ad8 <__multadd+0xb4>
    9ab8:	b8800217 	ldw	r2,8(r23)
    9abc:	b080130e 	bge	r22,r2,9b0c <__multadd+0xe8>
    9ac0:	b585883a 	add	r2,r22,r22
    9ac4:	1085883a 	add	r2,r2,r2
    9ac8:	15c5883a 	add	r2,r2,r23
    9acc:	b0c00044 	addi	r3,r22,1
    9ad0:	15000515 	stw	r20,20(r2)
    9ad4:	b8c00415 	stw	r3,16(r23)
    9ad8:	b805883a 	mov	r2,r23
    9adc:	dfc00917 	ldw	ra,36(sp)
    9ae0:	df000817 	ldw	fp,32(sp)
    9ae4:	ddc00717 	ldw	r23,28(sp)
    9ae8:	dd800617 	ldw	r22,24(sp)
    9aec:	dd400517 	ldw	r21,20(sp)
    9af0:	dd000417 	ldw	r20,16(sp)
    9af4:	dcc00317 	ldw	r19,12(sp)
    9af8:	dc800217 	ldw	r18,8(sp)
    9afc:	dc400117 	ldw	r17,4(sp)
    9b00:	dc000017 	ldw	r16,0(sp)
    9b04:	dec00a04 	addi	sp,sp,40
    9b08:	f800283a 	ret
    9b0c:	b9400117 	ldw	r5,4(r23)
    9b10:	e009883a 	mov	r4,fp
    9b14:	29400044 	addi	r5,r5,1
    9b18:	00092840 	call	9284 <_Balloc>
    9b1c:	b9800417 	ldw	r6,16(r23)
    9b20:	b9400304 	addi	r5,r23,12
    9b24:	11000304 	addi	r4,r2,12
    9b28:	318d883a 	add	r6,r6,r6
    9b2c:	318d883a 	add	r6,r6,r6
    9b30:	31800204 	addi	r6,r6,8
    9b34:	1023883a 	mov	r17,r2
    9b38:	0008aec0 	call	8aec <memcpy>
    9b3c:	b80b883a 	mov	r5,r23
    9b40:	e009883a 	mov	r4,fp
    9b44:	0008d040 	call	8d04 <_Bfree>
    9b48:	882f883a 	mov	r23,r17
    9b4c:	003fdc06 	br	9ac0 <__multadd+0x9c>

00009b50 <__pow5mult>:
    9b50:	defffa04 	addi	sp,sp,-24
    9b54:	308000cc 	andi	r2,r6,3
    9b58:	dd000415 	stw	r20,16(sp)
    9b5c:	dcc00315 	stw	r19,12(sp)
    9b60:	dc000015 	stw	r16,0(sp)
    9b64:	dfc00515 	stw	ra,20(sp)
    9b68:	dc800215 	stw	r18,8(sp)
    9b6c:	dc400115 	stw	r17,4(sp)
    9b70:	3021883a 	mov	r16,r6
    9b74:	2027883a 	mov	r19,r4
    9b78:	2829883a 	mov	r20,r5
    9b7c:	10002b1e 	bne	r2,zero,9c2c <__pow5mult+0xdc>
    9b80:	8025d0ba 	srai	r18,r16,2
    9b84:	90001b26 	beq	r18,zero,9bf4 <__pow5mult+0xa4>
    9b88:	9c001217 	ldw	r16,72(r19)
    9b8c:	8000081e 	bne	r16,zero,9bb0 <__pow5mult+0x60>
    9b90:	00003006 	br	9c54 <__pow5mult+0x104>
    9b94:	800b883a 	mov	r5,r16
    9b98:	800d883a 	mov	r6,r16
    9b9c:	9809883a 	mov	r4,r19
    9ba0:	90001426 	beq	r18,zero,9bf4 <__pow5mult+0xa4>
    9ba4:	80800017 	ldw	r2,0(r16)
    9ba8:	10001b26 	beq	r2,zero,9c18 <__pow5mult+0xc8>
    9bac:	1021883a 	mov	r16,r2
    9bb0:	9080004c 	andi	r2,r18,1
    9bb4:	1005003a 	cmpeq	r2,r2,zero
    9bb8:	9025d07a 	srai	r18,r18,1
    9bbc:	800d883a 	mov	r6,r16
    9bc0:	9809883a 	mov	r4,r19
    9bc4:	a00b883a 	mov	r5,r20
    9bc8:	103ff21e 	bne	r2,zero,9b94 <__pow5mult+0x44>
    9bcc:	00097940 	call	9794 <__multiply>
    9bd0:	a00b883a 	mov	r5,r20
    9bd4:	9809883a 	mov	r4,r19
    9bd8:	1023883a 	mov	r17,r2
    9bdc:	0008d040 	call	8d04 <_Bfree>
    9be0:	8829883a 	mov	r20,r17
    9be4:	800b883a 	mov	r5,r16
    9be8:	800d883a 	mov	r6,r16
    9bec:	9809883a 	mov	r4,r19
    9bf0:	903fec1e 	bne	r18,zero,9ba4 <__pow5mult+0x54>
    9bf4:	a005883a 	mov	r2,r20
    9bf8:	dfc00517 	ldw	ra,20(sp)
    9bfc:	dd000417 	ldw	r20,16(sp)
    9c00:	dcc00317 	ldw	r19,12(sp)
    9c04:	dc800217 	ldw	r18,8(sp)
    9c08:	dc400117 	ldw	r17,4(sp)
    9c0c:	dc000017 	ldw	r16,0(sp)
    9c10:	dec00604 	addi	sp,sp,24
    9c14:	f800283a 	ret
    9c18:	00097940 	call	9794 <__multiply>
    9c1c:	80800015 	stw	r2,0(r16)
    9c20:	1021883a 	mov	r16,r2
    9c24:	10000015 	stw	zero,0(r2)
    9c28:	003fe106 	br	9bb0 <__pow5mult+0x60>
    9c2c:	1085883a 	add	r2,r2,r2
    9c30:	00c00074 	movhi	r3,1
    9c34:	18fc4904 	addi	r3,r3,-3804
    9c38:	1085883a 	add	r2,r2,r2
    9c3c:	10c5883a 	add	r2,r2,r3
    9c40:	11bfff17 	ldw	r6,-4(r2)
    9c44:	000f883a 	mov	r7,zero
    9c48:	0009a240 	call	9a24 <__multadd>
    9c4c:	1029883a 	mov	r20,r2
    9c50:	003fcb06 	br	9b80 <__pow5mult+0x30>
    9c54:	9809883a 	mov	r4,r19
    9c58:	01409c44 	movi	r5,625
    9c5c:	00099e80 	call	99e8 <__i2b>
    9c60:	98801215 	stw	r2,72(r19)
    9c64:	1021883a 	mov	r16,r2
    9c68:	10000015 	stw	zero,0(r2)
    9c6c:	003fd006 	br	9bb0 <__pow5mult+0x60>

00009c70 <__s2b>:
    9c70:	defff904 	addi	sp,sp,-28
    9c74:	dcc00315 	stw	r19,12(sp)
    9c78:	dc800215 	stw	r18,8(sp)
    9c7c:	2827883a 	mov	r19,r5
    9c80:	2025883a 	mov	r18,r4
    9c84:	01400244 	movi	r5,9
    9c88:	39000204 	addi	r4,r7,8
    9c8c:	dd000415 	stw	r20,16(sp)
    9c90:	dc400115 	stw	r17,4(sp)
    9c94:	dfc00615 	stw	ra,24(sp)
    9c98:	dd400515 	stw	r21,20(sp)
    9c9c:	dc000015 	stw	r16,0(sp)
    9ca0:	3829883a 	mov	r20,r7
    9ca4:	3023883a 	mov	r17,r6
    9ca8:	000cfc40 	call	cfc4 <__divsi3>
    9cac:	00c00044 	movi	r3,1
    9cb0:	1880350e 	bge	r3,r2,9d88 <__s2b+0x118>
    9cb4:	000b883a 	mov	r5,zero
    9cb8:	18c7883a 	add	r3,r3,r3
    9cbc:	29400044 	addi	r5,r5,1
    9cc0:	18bffd16 	blt	r3,r2,9cb8 <__s2b+0x48>
    9cc4:	9009883a 	mov	r4,r18
    9cc8:	00092840 	call	9284 <_Balloc>
    9ccc:	1011883a 	mov	r8,r2
    9cd0:	d8800717 	ldw	r2,28(sp)
    9cd4:	00c00044 	movi	r3,1
    9cd8:	01800244 	movi	r6,9
    9cdc:	40800515 	stw	r2,20(r8)
    9ce0:	40c00415 	stw	r3,16(r8)
    9ce4:	3440260e 	bge	r6,r17,9d80 <__s2b+0x110>
    9ce8:	3021883a 	mov	r16,r6
    9cec:	99ab883a 	add	r21,r19,r6
    9cf0:	9c05883a 	add	r2,r19,r16
    9cf4:	11c00007 	ldb	r7,0(r2)
    9cf8:	400b883a 	mov	r5,r8
    9cfc:	9009883a 	mov	r4,r18
    9d00:	39fff404 	addi	r7,r7,-48
    9d04:	01800284 	movi	r6,10
    9d08:	0009a240 	call	9a24 <__multadd>
    9d0c:	84000044 	addi	r16,r16,1
    9d10:	1011883a 	mov	r8,r2
    9d14:	8c3ff61e 	bne	r17,r16,9cf0 <__s2b+0x80>
    9d18:	ac45883a 	add	r2,r21,r17
    9d1c:	117ffe04 	addi	r5,r2,-8
    9d20:	880d883a 	mov	r6,r17
    9d24:	35000c0e 	bge	r6,r20,9d58 <__s2b+0xe8>
    9d28:	a185c83a 	sub	r2,r20,r6
    9d2c:	2821883a 	mov	r16,r5
    9d30:	28a3883a 	add	r17,r5,r2
    9d34:	81c00007 	ldb	r7,0(r16)
    9d38:	400b883a 	mov	r5,r8
    9d3c:	9009883a 	mov	r4,r18
    9d40:	39fff404 	addi	r7,r7,-48
    9d44:	01800284 	movi	r6,10
    9d48:	0009a240 	call	9a24 <__multadd>
    9d4c:	84000044 	addi	r16,r16,1
    9d50:	1011883a 	mov	r8,r2
    9d54:	847ff71e 	bne	r16,r17,9d34 <__s2b+0xc4>
    9d58:	4005883a 	mov	r2,r8
    9d5c:	dfc00617 	ldw	ra,24(sp)
    9d60:	dd400517 	ldw	r21,20(sp)
    9d64:	dd000417 	ldw	r20,16(sp)
    9d68:	dcc00317 	ldw	r19,12(sp)
    9d6c:	dc800217 	ldw	r18,8(sp)
    9d70:	dc400117 	ldw	r17,4(sp)
    9d74:	dc000017 	ldw	r16,0(sp)
    9d78:	dec00704 	addi	sp,sp,28
    9d7c:	f800283a 	ret
    9d80:	99400284 	addi	r5,r19,10
    9d84:	003fe706 	br	9d24 <__s2b+0xb4>
    9d88:	000b883a 	mov	r5,zero
    9d8c:	003fcd06 	br	9cc4 <__s2b+0x54>

00009d90 <putc>:
    9d90:	defffc04 	addi	sp,sp,-16
    9d94:	dc800215 	stw	r18,8(sp)
    9d98:	04800074 	movhi	r18,1
    9d9c:	94835a04 	addi	r18,r18,3432
    9da0:	90c00017 	ldw	r3,0(r18)
    9da4:	dc400115 	stw	r17,4(sp)
    9da8:	dc000015 	stw	r16,0(sp)
    9dac:	dfc00315 	stw	ra,12(sp)
    9db0:	2023883a 	mov	r17,r4
    9db4:	2821883a 	mov	r16,r5
    9db8:	18000226 	beq	r3,zero,9dc4 <putc+0x34>
    9dbc:	18800e17 	ldw	r2,56(r3)
    9dc0:	10001126 	beq	r2,zero,9e08 <putc+0x78>
    9dc4:	80800217 	ldw	r2,8(r16)
    9dc8:	10ffffc4 	addi	r3,r2,-1
    9dcc:	80c00215 	stw	r3,8(r16)
    9dd0:	18001316 	blt	r3,zero,9e20 <putc+0x90>
    9dd4:	80800017 	ldw	r2,0(r16)
    9dd8:	14400005 	stb	r17,0(r2)
    9ddc:	80c00017 	ldw	r3,0(r16)
    9de0:	18800044 	addi	r2,r3,1
    9de4:	18c00003 	ldbu	r3,0(r3)
    9de8:	80800015 	stw	r2,0(r16)
    9dec:	1805883a 	mov	r2,r3
    9df0:	dfc00317 	ldw	ra,12(sp)
    9df4:	dc800217 	ldw	r18,8(sp)
    9df8:	dc400117 	ldw	r17,4(sp)
    9dfc:	dc000017 	ldw	r16,0(sp)
    9e00:	dec00404 	addi	sp,sp,16
    9e04:	f800283a 	ret
    9e08:	1809883a 	mov	r4,r3
    9e0c:	0006e880 	call	6e88 <__sinit>
    9e10:	80800217 	ldw	r2,8(r16)
    9e14:	10ffffc4 	addi	r3,r2,-1
    9e18:	80c00215 	stw	r3,8(r16)
    9e1c:	183fed0e 	bge	r3,zero,9dd4 <putc+0x44>
    9e20:	80800617 	ldw	r2,24(r16)
    9e24:	18800f16 	blt	r3,r2,9e64 <putc+0xd4>
    9e28:	80800017 	ldw	r2,0(r16)
    9e2c:	14400005 	stb	r17,0(r2)
    9e30:	81000017 	ldw	r4,0(r16)
    9e34:	00800284 	movi	r2,10
    9e38:	20c00003 	ldbu	r3,0(r4)
    9e3c:	18801226 	beq	r3,r2,9e88 <putc+0xf8>
    9e40:	20800044 	addi	r2,r4,1
    9e44:	80800015 	stw	r2,0(r16)
    9e48:	1805883a 	mov	r2,r3
    9e4c:	dfc00317 	ldw	ra,12(sp)
    9e50:	dc800217 	ldw	r18,8(sp)
    9e54:	dc400117 	ldw	r17,4(sp)
    9e58:	dc000017 	ldw	r16,0(sp)
    9e5c:	dec00404 	addi	sp,sp,16
    9e60:	f800283a 	ret
    9e64:	91000017 	ldw	r4,0(r18)
    9e68:	880b883a 	mov	r5,r17
    9e6c:	800d883a 	mov	r6,r16
    9e70:	dfc00317 	ldw	ra,12(sp)
    9e74:	dc800217 	ldw	r18,8(sp)
    9e78:	dc400117 	ldw	r17,4(sp)
    9e7c:	dc000017 	ldw	r16,0(sp)
    9e80:	dec00404 	addi	sp,sp,16
    9e84:	000a8c81 	jmpi	a8c8 <__swbuf_r>
    9e88:	91000017 	ldw	r4,0(r18)
    9e8c:	180b883a 	mov	r5,r3
    9e90:	003ff606 	br	9e6c <putc+0xdc>

00009e94 <_putc_r>:
    9e94:	defffc04 	addi	sp,sp,-16
    9e98:	dc400215 	stw	r17,8(sp)
    9e9c:	dc000115 	stw	r16,4(sp)
    9ea0:	dfc00315 	stw	ra,12(sp)
    9ea4:	2021883a 	mov	r16,r4
    9ea8:	2823883a 	mov	r17,r5
    9eac:	20000226 	beq	r4,zero,9eb8 <_putc_r+0x24>
    9eb0:	20800e17 	ldw	r2,56(r4)
    9eb4:	10001026 	beq	r2,zero,9ef8 <_putc_r+0x64>
    9eb8:	30800217 	ldw	r2,8(r6)
    9ebc:	10ffffc4 	addi	r3,r2,-1
    9ec0:	30c00215 	stw	r3,8(r6)
    9ec4:	18001316 	blt	r3,zero,9f14 <_putc_r+0x80>
    9ec8:	30800017 	ldw	r2,0(r6)
    9ecc:	14400005 	stb	r17,0(r2)
    9ed0:	30c00017 	ldw	r3,0(r6)
    9ed4:	18800044 	addi	r2,r3,1
    9ed8:	18c00003 	ldbu	r3,0(r3)
    9edc:	30800015 	stw	r2,0(r6)
    9ee0:	1805883a 	mov	r2,r3
    9ee4:	dfc00317 	ldw	ra,12(sp)
    9ee8:	dc400217 	ldw	r17,8(sp)
    9eec:	dc000117 	ldw	r16,4(sp)
    9ef0:	dec00404 	addi	sp,sp,16
    9ef4:	f800283a 	ret
    9ef8:	d9800015 	stw	r6,0(sp)
    9efc:	0006e880 	call	6e88 <__sinit>
    9f00:	d9800017 	ldw	r6,0(sp)
    9f04:	30800217 	ldw	r2,8(r6)
    9f08:	10ffffc4 	addi	r3,r2,-1
    9f0c:	30c00215 	stw	r3,8(r6)
    9f10:	183fed0e 	bge	r3,zero,9ec8 <_putc_r+0x34>
    9f14:	30800617 	ldw	r2,24(r6)
    9f18:	18800e16 	blt	r3,r2,9f54 <_putc_r+0xc0>
    9f1c:	30800017 	ldw	r2,0(r6)
    9f20:	14400005 	stb	r17,0(r2)
    9f24:	31000017 	ldw	r4,0(r6)
    9f28:	00800284 	movi	r2,10
    9f2c:	20c00003 	ldbu	r3,0(r4)
    9f30:	18800f26 	beq	r3,r2,9f70 <_putc_r+0xdc>
    9f34:	20800044 	addi	r2,r4,1
    9f38:	30800015 	stw	r2,0(r6)
    9f3c:	1805883a 	mov	r2,r3
    9f40:	dfc00317 	ldw	ra,12(sp)
    9f44:	dc400217 	ldw	r17,8(sp)
    9f48:	dc000117 	ldw	r16,4(sp)
    9f4c:	dec00404 	addi	sp,sp,16
    9f50:	f800283a 	ret
    9f54:	8009883a 	mov	r4,r16
    9f58:	880b883a 	mov	r5,r17
    9f5c:	dfc00317 	ldw	ra,12(sp)
    9f60:	dc400217 	ldw	r17,8(sp)
    9f64:	dc000117 	ldw	r16,4(sp)
    9f68:	dec00404 	addi	sp,sp,16
    9f6c:	000a8c81 	jmpi	a8c8 <__swbuf_r>
    9f70:	8009883a 	mov	r4,r16
    9f74:	180b883a 	mov	r5,r3
    9f78:	003ff806 	br	9f5c <_putc_r+0xc8>

00009f7c <_realloc_r>:
    9f7c:	defff404 	addi	sp,sp,-48
    9f80:	dd800815 	stw	r22,32(sp)
    9f84:	dc800415 	stw	r18,16(sp)
    9f88:	dc400315 	stw	r17,12(sp)
    9f8c:	dfc00b15 	stw	ra,44(sp)
    9f90:	df000a15 	stw	fp,40(sp)
    9f94:	ddc00915 	stw	r23,36(sp)
    9f98:	dd400715 	stw	r21,28(sp)
    9f9c:	dd000615 	stw	r20,24(sp)
    9fa0:	dcc00515 	stw	r19,20(sp)
    9fa4:	dc000215 	stw	r16,8(sp)
    9fa8:	2825883a 	mov	r18,r5
    9fac:	3023883a 	mov	r17,r6
    9fb0:	202d883a 	mov	r22,r4
    9fb4:	2800c926 	beq	r5,zero,a2dc <_realloc_r+0x360>
    9fb8:	000dad00 	call	dad0 <__malloc_lock>
    9fbc:	943ffe04 	addi	r16,r18,-8
    9fc0:	88c002c4 	addi	r3,r17,11
    9fc4:	00800584 	movi	r2,22
    9fc8:	82000117 	ldw	r8,4(r16)
    9fcc:	10c01b2e 	bgeu	r2,r3,a03c <_realloc_r+0xc0>
    9fd0:	00bffe04 	movi	r2,-8
    9fd4:	188e703a 	and	r7,r3,r2
    9fd8:	3839883a 	mov	fp,r7
    9fdc:	38001a16 	blt	r7,zero,a048 <_realloc_r+0xcc>
    9fe0:	e4401936 	bltu	fp,r17,a048 <_realloc_r+0xcc>
    9fe4:	013fff04 	movi	r4,-4
    9fe8:	4126703a 	and	r19,r8,r4
    9fec:	99c02616 	blt	r19,r7,a088 <_realloc_r+0x10c>
    9ff0:	802b883a 	mov	r21,r16
    9ff4:	9829883a 	mov	r20,r19
    9ff8:	84000204 	addi	r16,r16,8
    9ffc:	a80f883a 	mov	r7,r21
    a000:	a70dc83a 	sub	r6,r20,fp
    a004:	008003c4 	movi	r2,15
    a008:	1180c136 	bltu	r2,r6,a310 <_realloc_r+0x394>
    a00c:	38800117 	ldw	r2,4(r7)
    a010:	a549883a 	add	r4,r20,r21
    a014:	1080004c 	andi	r2,r2,1
    a018:	a084b03a 	or	r2,r20,r2
    a01c:	38800115 	stw	r2,4(r7)
    a020:	20c00117 	ldw	r3,4(r4)
    a024:	18c00054 	ori	r3,r3,1
    a028:	20c00115 	stw	r3,4(r4)
    a02c:	b009883a 	mov	r4,r22
    a030:	000dad40 	call	dad4 <__malloc_unlock>
    a034:	8023883a 	mov	r17,r16
    a038:	00000606 	br	a054 <_realloc_r+0xd8>
    a03c:	01c00404 	movi	r7,16
    a040:	3839883a 	mov	fp,r7
    a044:	e47fe72e 	bgeu	fp,r17,9fe4 <_realloc_r+0x68>
    a048:	00800304 	movi	r2,12
    a04c:	0023883a 	mov	r17,zero
    a050:	b0800015 	stw	r2,0(r22)
    a054:	8805883a 	mov	r2,r17
    a058:	dfc00b17 	ldw	ra,44(sp)
    a05c:	df000a17 	ldw	fp,40(sp)
    a060:	ddc00917 	ldw	r23,36(sp)
    a064:	dd800817 	ldw	r22,32(sp)
    a068:	dd400717 	ldw	r21,28(sp)
    a06c:	dd000617 	ldw	r20,24(sp)
    a070:	dcc00517 	ldw	r19,20(sp)
    a074:	dc800417 	ldw	r18,16(sp)
    a078:	dc400317 	ldw	r17,12(sp)
    a07c:	dc000217 	ldw	r16,8(sp)
    a080:	dec00c04 	addi	sp,sp,48
    a084:	f800283a 	ret
    a088:	00800074 	movhi	r2,1
    a08c:	10bca504 	addi	r2,r2,-3436
    a090:	12400217 	ldw	r9,8(r2)
    a094:	84cd883a 	add	r6,r16,r19
    a098:	802b883a 	mov	r21,r16
    a09c:	3240b926 	beq	r6,r9,a384 <_realloc_r+0x408>
    a0a0:	31400117 	ldw	r5,4(r6)
    a0a4:	00bfff84 	movi	r2,-2
    a0a8:	2884703a 	and	r2,r5,r2
    a0ac:	1185883a 	add	r2,r2,r6
    a0b0:	10c00117 	ldw	r3,4(r2)
    a0b4:	18c0004c 	andi	r3,r3,1
    a0b8:	1807003a 	cmpeq	r3,r3,zero
    a0bc:	1800a326 	beq	r3,zero,a34c <_realloc_r+0x3d0>
    a0c0:	2908703a 	and	r4,r5,r4
    a0c4:	9929883a 	add	r20,r19,r4
    a0c8:	a1c0a30e 	bge	r20,r7,a358 <_realloc_r+0x3dc>
    a0cc:	4080004c 	andi	r2,r8,1
    a0d0:	1000551e 	bne	r2,zero,a228 <_realloc_r+0x2ac>
    a0d4:	80800017 	ldw	r2,0(r16)
    a0d8:	80afc83a 	sub	r23,r16,r2
    a0dc:	b8c00117 	ldw	r3,4(r23)
    a0e0:	00bfff04 	movi	r2,-4
    a0e4:	1884703a 	and	r2,r3,r2
    a0e8:	30002e26 	beq	r6,zero,a1a4 <_realloc_r+0x228>
    a0ec:	3240b926 	beq	r6,r9,a3d4 <_realloc_r+0x458>
    a0f0:	98a9883a 	add	r20,r19,r2
    a0f4:	2509883a 	add	r4,r4,r20
    a0f8:	d9000015 	stw	r4,0(sp)
    a0fc:	21c02a16 	blt	r4,r7,a1a8 <_realloc_r+0x22c>
    a100:	30800317 	ldw	r2,12(r6)
    a104:	30c00217 	ldw	r3,8(r6)
    a108:	01400904 	movi	r5,36
    a10c:	99bfff04 	addi	r6,r19,-4
    a110:	18800315 	stw	r2,12(r3)
    a114:	10c00215 	stw	r3,8(r2)
    a118:	b9000317 	ldw	r4,12(r23)
    a11c:	b8800217 	ldw	r2,8(r23)
    a120:	b82b883a 	mov	r21,r23
    a124:	bc000204 	addi	r16,r23,8
    a128:	20800215 	stw	r2,8(r4)
    a12c:	11000315 	stw	r4,12(r2)
    a130:	2980e436 	bltu	r5,r6,a4c4 <_realloc_r+0x548>
    a134:	008004c4 	movi	r2,19
    a138:	9009883a 	mov	r4,r18
    a13c:	8011883a 	mov	r8,r16
    a140:	11800f2e 	bgeu	r2,r6,a180 <_realloc_r+0x204>
    a144:	90800017 	ldw	r2,0(r18)
    a148:	ba000404 	addi	r8,r23,16
    a14c:	91000204 	addi	r4,r18,8
    a150:	b8800215 	stw	r2,8(r23)
    a154:	90c00117 	ldw	r3,4(r18)
    a158:	008006c4 	movi	r2,27
    a15c:	b8c00315 	stw	r3,12(r23)
    a160:	1180072e 	bgeu	r2,r6,a180 <_realloc_r+0x204>
    a164:	90c00217 	ldw	r3,8(r18)
    a168:	ba000604 	addi	r8,r23,24
    a16c:	91000404 	addi	r4,r18,16
    a170:	b8c00415 	stw	r3,16(r23)
    a174:	90800317 	ldw	r2,12(r18)
    a178:	b8800515 	stw	r2,20(r23)
    a17c:	3140e726 	beq	r6,r5,a51c <_realloc_r+0x5a0>
    a180:	20800017 	ldw	r2,0(r4)
    a184:	dd000017 	ldw	r20,0(sp)
    a188:	b80f883a 	mov	r7,r23
    a18c:	40800015 	stw	r2,0(r8)
    a190:	20c00117 	ldw	r3,4(r4)
    a194:	40c00115 	stw	r3,4(r8)
    a198:	20800217 	ldw	r2,8(r4)
    a19c:	40800215 	stw	r2,8(r8)
    a1a0:	003f9706 	br	a000 <_realloc_r+0x84>
    a1a4:	98a9883a 	add	r20,r19,r2
    a1a8:	a1c01f16 	blt	r20,r7,a228 <_realloc_r+0x2ac>
    a1ac:	b8c00317 	ldw	r3,12(r23)
    a1b0:	b8800217 	ldw	r2,8(r23)
    a1b4:	99bfff04 	addi	r6,r19,-4
    a1b8:	01400904 	movi	r5,36
    a1bc:	b82b883a 	mov	r21,r23
    a1c0:	18800215 	stw	r2,8(r3)
    a1c4:	10c00315 	stw	r3,12(r2)
    a1c8:	bc000204 	addi	r16,r23,8
    a1cc:	2980c336 	bltu	r5,r6,a4dc <_realloc_r+0x560>
    a1d0:	008004c4 	movi	r2,19
    a1d4:	9009883a 	mov	r4,r18
    a1d8:	8011883a 	mov	r8,r16
    a1dc:	11800f2e 	bgeu	r2,r6,a21c <_realloc_r+0x2a0>
    a1e0:	90800017 	ldw	r2,0(r18)
    a1e4:	ba000404 	addi	r8,r23,16
    a1e8:	91000204 	addi	r4,r18,8
    a1ec:	b8800215 	stw	r2,8(r23)
    a1f0:	90c00117 	ldw	r3,4(r18)
    a1f4:	008006c4 	movi	r2,27
    a1f8:	b8c00315 	stw	r3,12(r23)
    a1fc:	1180072e 	bgeu	r2,r6,a21c <_realloc_r+0x2a0>
    a200:	90c00217 	ldw	r3,8(r18)
    a204:	ba000604 	addi	r8,r23,24
    a208:	91000404 	addi	r4,r18,16
    a20c:	b8c00415 	stw	r3,16(r23)
    a210:	90800317 	ldw	r2,12(r18)
    a214:	b8800515 	stw	r2,20(r23)
    a218:	3140c726 	beq	r6,r5,a538 <_realloc_r+0x5bc>
    a21c:	20800017 	ldw	r2,0(r4)
    a220:	b80f883a 	mov	r7,r23
    a224:	003fd906 	br	a18c <_realloc_r+0x210>
    a228:	880b883a 	mov	r5,r17
    a22c:	b009883a 	mov	r4,r22
    a230:	0000b200 	call	b20 <_malloc_r>
    a234:	1023883a 	mov	r17,r2
    a238:	10002526 	beq	r2,zero,a2d0 <_realloc_r+0x354>
    a23c:	80800117 	ldw	r2,4(r16)
    a240:	00ffff84 	movi	r3,-2
    a244:	893ffe04 	addi	r4,r17,-8
    a248:	10c4703a 	and	r2,r2,r3
    a24c:	8085883a 	add	r2,r16,r2
    a250:	20809526 	beq	r4,r2,a4a8 <_realloc_r+0x52c>
    a254:	99bfff04 	addi	r6,r19,-4
    a258:	01c00904 	movi	r7,36
    a25c:	39804536 	bltu	r7,r6,a374 <_realloc_r+0x3f8>
    a260:	008004c4 	movi	r2,19
    a264:	9009883a 	mov	r4,r18
    a268:	880b883a 	mov	r5,r17
    a26c:	11800f2e 	bgeu	r2,r6,a2ac <_realloc_r+0x330>
    a270:	90800017 	ldw	r2,0(r18)
    a274:	89400204 	addi	r5,r17,8
    a278:	91000204 	addi	r4,r18,8
    a27c:	88800015 	stw	r2,0(r17)
    a280:	90c00117 	ldw	r3,4(r18)
    a284:	008006c4 	movi	r2,27
    a288:	88c00115 	stw	r3,4(r17)
    a28c:	1180072e 	bgeu	r2,r6,a2ac <_realloc_r+0x330>
    a290:	90c00217 	ldw	r3,8(r18)
    a294:	89400404 	addi	r5,r17,16
    a298:	91000404 	addi	r4,r18,16
    a29c:	88c00215 	stw	r3,8(r17)
    a2a0:	90800317 	ldw	r2,12(r18)
    a2a4:	88800315 	stw	r2,12(r17)
    a2a8:	31c09126 	beq	r6,r7,a4f0 <_realloc_r+0x574>
    a2ac:	20800017 	ldw	r2,0(r4)
    a2b0:	28800015 	stw	r2,0(r5)
    a2b4:	20c00117 	ldw	r3,4(r4)
    a2b8:	28c00115 	stw	r3,4(r5)
    a2bc:	20800217 	ldw	r2,8(r4)
    a2c0:	28800215 	stw	r2,8(r5)
    a2c4:	900b883a 	mov	r5,r18
    a2c8:	b009883a 	mov	r4,r22
    a2cc:	00072400 	call	7240 <_free_r>
    a2d0:	b009883a 	mov	r4,r22
    a2d4:	000dad40 	call	dad4 <__malloc_unlock>
    a2d8:	003f5e06 	br	a054 <_realloc_r+0xd8>
    a2dc:	300b883a 	mov	r5,r6
    a2e0:	dfc00b17 	ldw	ra,44(sp)
    a2e4:	df000a17 	ldw	fp,40(sp)
    a2e8:	ddc00917 	ldw	r23,36(sp)
    a2ec:	dd800817 	ldw	r22,32(sp)
    a2f0:	dd400717 	ldw	r21,28(sp)
    a2f4:	dd000617 	ldw	r20,24(sp)
    a2f8:	dcc00517 	ldw	r19,20(sp)
    a2fc:	dc800417 	ldw	r18,16(sp)
    a300:	dc400317 	ldw	r17,12(sp)
    a304:	dc000217 	ldw	r16,8(sp)
    a308:	dec00c04 	addi	sp,sp,48
    a30c:	0000b201 	jmpi	b20 <_malloc_r>
    a310:	38800117 	ldw	r2,4(r7)
    a314:	e54b883a 	add	r5,fp,r21
    a318:	31000054 	ori	r4,r6,1
    a31c:	1080004c 	andi	r2,r2,1
    a320:	1704b03a 	or	r2,r2,fp
    a324:	38800115 	stw	r2,4(r7)
    a328:	29000115 	stw	r4,4(r5)
    a32c:	2987883a 	add	r3,r5,r6
    a330:	18800117 	ldw	r2,4(r3)
    a334:	29400204 	addi	r5,r5,8
    a338:	b009883a 	mov	r4,r22
    a33c:	10800054 	ori	r2,r2,1
    a340:	18800115 	stw	r2,4(r3)
    a344:	00072400 	call	7240 <_free_r>
    a348:	003f3806 	br	a02c <_realloc_r+0xb0>
    a34c:	000d883a 	mov	r6,zero
    a350:	0009883a 	mov	r4,zero
    a354:	003f5d06 	br	a0cc <_realloc_r+0x150>
    a358:	30c00217 	ldw	r3,8(r6)
    a35c:	30800317 	ldw	r2,12(r6)
    a360:	800f883a 	mov	r7,r16
    a364:	84000204 	addi	r16,r16,8
    a368:	10c00215 	stw	r3,8(r2)
    a36c:	18800315 	stw	r2,12(r3)
    a370:	003f2306 	br	a000 <_realloc_r+0x84>
    a374:	8809883a 	mov	r4,r17
    a378:	900b883a 	mov	r5,r18
    a37c:	0008b8c0 	call	8b8c <memmove>
    a380:	003fd006 	br	a2c4 <_realloc_r+0x348>
    a384:	30800117 	ldw	r2,4(r6)
    a388:	e0c00404 	addi	r3,fp,16
    a38c:	1108703a 	and	r4,r2,r4
    a390:	9905883a 	add	r2,r19,r4
    a394:	10ff4d16 	blt	r2,r3,a0cc <_realloc_r+0x150>
    a398:	1705c83a 	sub	r2,r2,fp
    a39c:	870b883a 	add	r5,r16,fp
    a3a0:	10800054 	ori	r2,r2,1
    a3a4:	28800115 	stw	r2,4(r5)
    a3a8:	80c00117 	ldw	r3,4(r16)
    a3ac:	00800074 	movhi	r2,1
    a3b0:	10bca504 	addi	r2,r2,-3436
    a3b4:	b009883a 	mov	r4,r22
    a3b8:	18c0004c 	andi	r3,r3,1
    a3bc:	e0c6b03a 	or	r3,fp,r3
    a3c0:	11400215 	stw	r5,8(r2)
    a3c4:	80c00115 	stw	r3,4(r16)
    a3c8:	000dad40 	call	dad4 <__malloc_unlock>
    a3cc:	84400204 	addi	r17,r16,8
    a3d0:	003f2006 	br	a054 <_realloc_r+0xd8>
    a3d4:	98a9883a 	add	r20,r19,r2
    a3d8:	2509883a 	add	r4,r4,r20
    a3dc:	e0800404 	addi	r2,fp,16
    a3e0:	d9000115 	stw	r4,4(sp)
    a3e4:	20bf7016 	blt	r4,r2,a1a8 <_realloc_r+0x22c>
    a3e8:	b8c00317 	ldw	r3,12(r23)
    a3ec:	b8800217 	ldw	r2,8(r23)
    a3f0:	99bfff04 	addi	r6,r19,-4
    a3f4:	01400904 	movi	r5,36
    a3f8:	18800215 	stw	r2,8(r3)
    a3fc:	10c00315 	stw	r3,12(r2)
    a400:	bc400204 	addi	r17,r23,8
    a404:	29804136 	bltu	r5,r6,a50c <_realloc_r+0x590>
    a408:	008004c4 	movi	r2,19
    a40c:	9009883a 	mov	r4,r18
    a410:	880f883a 	mov	r7,r17
    a414:	11800f2e 	bgeu	r2,r6,a454 <_realloc_r+0x4d8>
    a418:	90800017 	ldw	r2,0(r18)
    a41c:	b9c00404 	addi	r7,r23,16
    a420:	91000204 	addi	r4,r18,8
    a424:	b8800215 	stw	r2,8(r23)
    a428:	90c00117 	ldw	r3,4(r18)
    a42c:	008006c4 	movi	r2,27
    a430:	b8c00315 	stw	r3,12(r23)
    a434:	1180072e 	bgeu	r2,r6,a454 <_realloc_r+0x4d8>
    a438:	90c00217 	ldw	r3,8(r18)
    a43c:	b9c00604 	addi	r7,r23,24
    a440:	91000404 	addi	r4,r18,16
    a444:	b8c00415 	stw	r3,16(r23)
    a448:	90800317 	ldw	r2,12(r18)
    a44c:	b8800515 	stw	r2,20(r23)
    a450:	31404026 	beq	r6,r5,a554 <_realloc_r+0x5d8>
    a454:	20800017 	ldw	r2,0(r4)
    a458:	38800015 	stw	r2,0(r7)
    a45c:	20c00117 	ldw	r3,4(r4)
    a460:	38c00115 	stw	r3,4(r7)
    a464:	20800217 	ldw	r2,8(r4)
    a468:	38800215 	stw	r2,8(r7)
    a46c:	d8c00117 	ldw	r3,4(sp)
    a470:	bf0b883a 	add	r5,r23,fp
    a474:	b009883a 	mov	r4,r22
    a478:	1f05c83a 	sub	r2,r3,fp
    a47c:	10800054 	ori	r2,r2,1
    a480:	28800115 	stw	r2,4(r5)
    a484:	b8c00117 	ldw	r3,4(r23)
    a488:	00800074 	movhi	r2,1
    a48c:	10bca504 	addi	r2,r2,-3436
    a490:	11400215 	stw	r5,8(r2)
    a494:	18c0004c 	andi	r3,r3,1
    a498:	e0c6b03a 	or	r3,fp,r3
    a49c:	b8c00115 	stw	r3,4(r23)
    a4a0:	000dad40 	call	dad4 <__malloc_unlock>
    a4a4:	003eeb06 	br	a054 <_realloc_r+0xd8>
    a4a8:	20800117 	ldw	r2,4(r4)
    a4ac:	00ffff04 	movi	r3,-4
    a4b0:	800f883a 	mov	r7,r16
    a4b4:	10c4703a 	and	r2,r2,r3
    a4b8:	98a9883a 	add	r20,r19,r2
    a4bc:	84000204 	addi	r16,r16,8
    a4c0:	003ecf06 	br	a000 <_realloc_r+0x84>
    a4c4:	900b883a 	mov	r5,r18
    a4c8:	8009883a 	mov	r4,r16
    a4cc:	0008b8c0 	call	8b8c <memmove>
    a4d0:	dd000017 	ldw	r20,0(sp)
    a4d4:	b80f883a 	mov	r7,r23
    a4d8:	003ec906 	br	a000 <_realloc_r+0x84>
    a4dc:	900b883a 	mov	r5,r18
    a4e0:	8009883a 	mov	r4,r16
    a4e4:	0008b8c0 	call	8b8c <memmove>
    a4e8:	b80f883a 	mov	r7,r23
    a4ec:	003ec406 	br	a000 <_realloc_r+0x84>
    a4f0:	90c00417 	ldw	r3,16(r18)
    a4f4:	89400604 	addi	r5,r17,24
    a4f8:	91000604 	addi	r4,r18,24
    a4fc:	88c00415 	stw	r3,16(r17)
    a500:	90800517 	ldw	r2,20(r18)
    a504:	88800515 	stw	r2,20(r17)
    a508:	003f6806 	br	a2ac <_realloc_r+0x330>
    a50c:	900b883a 	mov	r5,r18
    a510:	8809883a 	mov	r4,r17
    a514:	0008b8c0 	call	8b8c <memmove>
    a518:	003fd406 	br	a46c <_realloc_r+0x4f0>
    a51c:	90c00417 	ldw	r3,16(r18)
    a520:	91000604 	addi	r4,r18,24
    a524:	ba000804 	addi	r8,r23,32
    a528:	b8c00615 	stw	r3,24(r23)
    a52c:	90800517 	ldw	r2,20(r18)
    a530:	b8800715 	stw	r2,28(r23)
    a534:	003f1206 	br	a180 <_realloc_r+0x204>
    a538:	90c00417 	ldw	r3,16(r18)
    a53c:	91000604 	addi	r4,r18,24
    a540:	ba000804 	addi	r8,r23,32
    a544:	b8c00615 	stw	r3,24(r23)
    a548:	90800517 	ldw	r2,20(r18)
    a54c:	b8800715 	stw	r2,28(r23)
    a550:	003f3206 	br	a21c <_realloc_r+0x2a0>
    a554:	90c00417 	ldw	r3,16(r18)
    a558:	91000604 	addi	r4,r18,24
    a55c:	b9c00804 	addi	r7,r23,32
    a560:	b8c00615 	stw	r3,24(r23)
    a564:	90800517 	ldw	r2,20(r18)
    a568:	b8800715 	stw	r2,28(r23)
    a56c:	003fb906 	br	a454 <_realloc_r+0x4d8>

0000a570 <__isinfd>:
    a570:	200d883a 	mov	r6,r4
    a574:	0109c83a 	sub	r4,zero,r4
    a578:	2188b03a 	or	r4,r4,r6
    a57c:	2008d7fa 	srli	r4,r4,31
    a580:	00a00034 	movhi	r2,32768
    a584:	10bfffc4 	addi	r2,r2,-1
    a588:	1144703a 	and	r2,r2,r5
    a58c:	2088b03a 	or	r4,r4,r2
    a590:	009ffc34 	movhi	r2,32752
    a594:	1105c83a 	sub	r2,r2,r4
    a598:	0087c83a 	sub	r3,zero,r2
    a59c:	10c4b03a 	or	r2,r2,r3
    a5a0:	1004d7fa 	srli	r2,r2,31
    a5a4:	00c00044 	movi	r3,1
    a5a8:	1885c83a 	sub	r2,r3,r2
    a5ac:	f800283a 	ret

0000a5b0 <__isnand>:
    a5b0:	200d883a 	mov	r6,r4
    a5b4:	0109c83a 	sub	r4,zero,r4
    a5b8:	2188b03a 	or	r4,r4,r6
    a5bc:	2008d7fa 	srli	r4,r4,31
    a5c0:	00a00034 	movhi	r2,32768
    a5c4:	10bfffc4 	addi	r2,r2,-1
    a5c8:	1144703a 	and	r2,r2,r5
    a5cc:	2088b03a 	or	r4,r4,r2
    a5d0:	009ffc34 	movhi	r2,32752
    a5d4:	1105c83a 	sub	r2,r2,r4
    a5d8:	1004d7fa 	srli	r2,r2,31
    a5dc:	f800283a 	ret

0000a5e0 <__sclose>:
    a5e0:	2940038f 	ldh	r5,14(r5)
    a5e4:	000ab541 	jmpi	ab54 <_close_r>

0000a5e8 <__sseek>:
    a5e8:	defffe04 	addi	sp,sp,-8
    a5ec:	dc000015 	stw	r16,0(sp)
    a5f0:	2821883a 	mov	r16,r5
    a5f4:	2940038f 	ldh	r5,14(r5)
    a5f8:	dfc00115 	stw	ra,4(sp)
    a5fc:	000adcc0 	call	adcc <_lseek_r>
    a600:	1007883a 	mov	r3,r2
    a604:	00bfffc4 	movi	r2,-1
    a608:	18800926 	beq	r3,r2,a630 <__sseek+0x48>
    a60c:	8080030b 	ldhu	r2,12(r16)
    a610:	80c01415 	stw	r3,80(r16)
    a614:	10840014 	ori	r2,r2,4096
    a618:	8080030d 	sth	r2,12(r16)
    a61c:	1805883a 	mov	r2,r3
    a620:	dfc00117 	ldw	ra,4(sp)
    a624:	dc000017 	ldw	r16,0(sp)
    a628:	dec00204 	addi	sp,sp,8
    a62c:	f800283a 	ret
    a630:	8080030b 	ldhu	r2,12(r16)
    a634:	10bbffcc 	andi	r2,r2,61439
    a638:	8080030d 	sth	r2,12(r16)
    a63c:	1805883a 	mov	r2,r3
    a640:	dfc00117 	ldw	ra,4(sp)
    a644:	dc000017 	ldw	r16,0(sp)
    a648:	dec00204 	addi	sp,sp,8
    a64c:	f800283a 	ret

0000a650 <__swrite>:
    a650:	2880030b 	ldhu	r2,12(r5)
    a654:	defffb04 	addi	sp,sp,-20
    a658:	dcc00315 	stw	r19,12(sp)
    a65c:	1080400c 	andi	r2,r2,256
    a660:	dc800215 	stw	r18,8(sp)
    a664:	dc400115 	stw	r17,4(sp)
    a668:	dc000015 	stw	r16,0(sp)
    a66c:	3027883a 	mov	r19,r6
    a670:	3825883a 	mov	r18,r7
    a674:	dfc00415 	stw	ra,16(sp)
    a678:	2821883a 	mov	r16,r5
    a67c:	000d883a 	mov	r6,zero
    a680:	01c00084 	movi	r7,2
    a684:	2023883a 	mov	r17,r4
    a688:	10000226 	beq	r2,zero,a694 <__swrite+0x44>
    a68c:	2940038f 	ldh	r5,14(r5)
    a690:	000adcc0 	call	adcc <_lseek_r>
    a694:	8080030b 	ldhu	r2,12(r16)
    a698:	8140038f 	ldh	r5,14(r16)
    a69c:	8809883a 	mov	r4,r17
    a6a0:	10bbffcc 	andi	r2,r2,61439
    a6a4:	980d883a 	mov	r6,r19
    a6a8:	900f883a 	mov	r7,r18
    a6ac:	8080030d 	sth	r2,12(r16)
    a6b0:	dfc00417 	ldw	ra,16(sp)
    a6b4:	dcc00317 	ldw	r19,12(sp)
    a6b8:	dc800217 	ldw	r18,8(sp)
    a6bc:	dc400117 	ldw	r17,4(sp)
    a6c0:	dc000017 	ldw	r16,0(sp)
    a6c4:	dec00504 	addi	sp,sp,20
    a6c8:	000aa141 	jmpi	aa14 <_write_r>

0000a6cc <__sread>:
    a6cc:	defffe04 	addi	sp,sp,-8
    a6d0:	dc000015 	stw	r16,0(sp)
    a6d4:	2821883a 	mov	r16,r5
    a6d8:	2940038f 	ldh	r5,14(r5)
    a6dc:	dfc00115 	stw	ra,4(sp)
    a6e0:	000ae440 	call	ae44 <_read_r>
    a6e4:	1007883a 	mov	r3,r2
    a6e8:	10000816 	blt	r2,zero,a70c <__sread+0x40>
    a6ec:	80801417 	ldw	r2,80(r16)
    a6f0:	10c5883a 	add	r2,r2,r3
    a6f4:	80801415 	stw	r2,80(r16)
    a6f8:	1805883a 	mov	r2,r3
    a6fc:	dfc00117 	ldw	ra,4(sp)
    a700:	dc000017 	ldw	r16,0(sp)
    a704:	dec00204 	addi	sp,sp,8
    a708:	f800283a 	ret
    a70c:	8080030b 	ldhu	r2,12(r16)
    a710:	10bbffcc 	andi	r2,r2,61439
    a714:	8080030d 	sth	r2,12(r16)
    a718:	1805883a 	mov	r2,r3
    a71c:	dfc00117 	ldw	ra,4(sp)
    a720:	dc000017 	ldw	r16,0(sp)
    a724:	dec00204 	addi	sp,sp,8
    a728:	f800283a 	ret

0000a72c <strchr>:
    a72c:	208000cc 	andi	r2,r4,3
    a730:	2007883a 	mov	r3,r4
    a734:	1000311e 	bne	r2,zero,a7fc <strchr+0xd0>
    a738:	29c03fcc 	andi	r7,r5,255
    a73c:	0015883a 	mov	r10,zero
    a740:	0007883a 	mov	r3,zero
    a744:	01400104 	movi	r5,4
    a748:	5004923a 	slli	r2,r10,8
    a74c:	18c00044 	addi	r3,r3,1
    a750:	3894b03a 	or	r10,r7,r2
    a754:	197ffc1e 	bne	r3,r5,a748 <strchr+0x1c>
    a758:	200d883a 	mov	r6,r4
    a75c:	21000017 	ldw	r4,0(r4)
    a760:	017fbff4 	movhi	r5,65279
    a764:	297fbfc4 	addi	r5,r5,-257
    a768:	02202074 	movhi	r8,32897
    a76c:	42202004 	addi	r8,r8,-32640
    a770:	2145883a 	add	r2,r4,r5
    a774:	1204703a 	and	r2,r2,r8
    a778:	0106303a 	nor	r3,zero,r4
    a77c:	10c4703a 	and	r2,r2,r3
    a780:	1000151e 	bne	r2,zero,a7d8 <strchr+0xac>
    a784:	2284f03a 	xor	r2,r4,r10
    a788:	1147883a 	add	r3,r2,r5
    a78c:	1a06703a 	and	r3,r3,r8
    a790:	0084303a 	nor	r2,zero,r2
    a794:	10c4703a 	and	r2,r2,r3
    a798:	10000f1e 	bne	r2,zero,a7d8 <strchr+0xac>
    a79c:	2813883a 	mov	r9,r5
    a7a0:	00000106 	br	a7a8 <strchr+0x7c>
    a7a4:	18000c1e 	bne	r3,zero,a7d8 <strchr+0xac>
    a7a8:	31800104 	addi	r6,r6,4
    a7ac:	30800017 	ldw	r2,0(r6)
    a7b0:	1286f03a 	xor	r3,r2,r10
    a7b4:	124b883a 	add	r5,r2,r9
    a7b8:	1a49883a 	add	r4,r3,r9
    a7bc:	2a0a703a 	and	r5,r5,r8
    a7c0:	0084303a 	nor	r2,zero,r2
    a7c4:	2208703a 	and	r4,r4,r8
    a7c8:	00c6303a 	nor	r3,zero,r3
    a7cc:	1144703a 	and	r2,r2,r5
    a7d0:	1906703a 	and	r3,r3,r4
    a7d4:	103ff326 	beq	r2,zero,a7a4 <strchr+0x78>
    a7d8:	3007883a 	mov	r3,r6
    a7dc:	00000206 	br	a7e8 <strchr+0xbc>
    a7e0:	38800426 	beq	r7,r2,a7f4 <strchr+0xc8>
    a7e4:	18c00044 	addi	r3,r3,1
    a7e8:	18800003 	ldbu	r2,0(r3)
    a7ec:	103ffc1e 	bne	r2,zero,a7e0 <strchr+0xb4>
    a7f0:	3800041e 	bne	r7,zero,a804 <strchr+0xd8>
    a7f4:	1805883a 	mov	r2,r3
    a7f8:	f800283a 	ret
    a7fc:	29c03fcc 	andi	r7,r5,255
    a800:	003ff906 	br	a7e8 <strchr+0xbc>
    a804:	0005883a 	mov	r2,zero
    a808:	f800283a 	ret

0000a80c <strcmp>:
    a80c:	2144b03a 	or	r2,r4,r5
    a810:	108000cc 	andi	r2,r2,3
    a814:	10001d1e 	bne	r2,zero,a88c <strcmp+0x80>
    a818:	200f883a 	mov	r7,r4
    a81c:	28800017 	ldw	r2,0(r5)
    a820:	21000017 	ldw	r4,0(r4)
    a824:	280d883a 	mov	r6,r5
    a828:	2080161e 	bne	r4,r2,a884 <strcmp+0x78>
    a82c:	023fbff4 	movhi	r8,65279
    a830:	423fbfc4 	addi	r8,r8,-257
    a834:	2207883a 	add	r3,r4,r8
    a838:	01602074 	movhi	r5,32897
    a83c:	29602004 	addi	r5,r5,-32640
    a840:	1946703a 	and	r3,r3,r5
    a844:	0104303a 	nor	r2,zero,r4
    a848:	10c4703a 	and	r2,r2,r3
    a84c:	10001c1e 	bne	r2,zero,a8c0 <strcmp+0xb4>
    a850:	4013883a 	mov	r9,r8
    a854:	2811883a 	mov	r8,r5
    a858:	00000106 	br	a860 <strcmp+0x54>
    a85c:	1800181e 	bne	r3,zero,a8c0 <strcmp+0xb4>
    a860:	39c00104 	addi	r7,r7,4
    a864:	39000017 	ldw	r4,0(r7)
    a868:	31800104 	addi	r6,r6,4
    a86c:	31400017 	ldw	r5,0(r6)
    a870:	2245883a 	add	r2,r4,r9
    a874:	1204703a 	and	r2,r2,r8
    a878:	0106303a 	nor	r3,zero,r4
    a87c:	1886703a 	and	r3,r3,r2
    a880:	217ff626 	beq	r4,r5,a85c <strcmp+0x50>
    a884:	3809883a 	mov	r4,r7
    a888:	300b883a 	mov	r5,r6
    a88c:	20c00007 	ldb	r3,0(r4)
    a890:	1800051e 	bne	r3,zero,a8a8 <strcmp+0x9c>
    a894:	00000606 	br	a8b0 <strcmp+0xa4>
    a898:	21000044 	addi	r4,r4,1
    a89c:	20c00007 	ldb	r3,0(r4)
    a8a0:	29400044 	addi	r5,r5,1
    a8a4:	18000226 	beq	r3,zero,a8b0 <strcmp+0xa4>
    a8a8:	28800007 	ldb	r2,0(r5)
    a8ac:	18bffa26 	beq	r3,r2,a898 <strcmp+0x8c>
    a8b0:	20c00003 	ldbu	r3,0(r4)
    a8b4:	28800003 	ldbu	r2,0(r5)
    a8b8:	1885c83a 	sub	r2,r3,r2
    a8bc:	f800283a 	ret
    a8c0:	0005883a 	mov	r2,zero
    a8c4:	f800283a 	ret

0000a8c8 <__swbuf_r>:
    a8c8:	defffc04 	addi	sp,sp,-16
    a8cc:	dc400215 	stw	r17,8(sp)
    a8d0:	dc000115 	stw	r16,4(sp)
    a8d4:	dfc00315 	stw	ra,12(sp)
    a8d8:	2023883a 	mov	r17,r4
    a8dc:	2821883a 	mov	r16,r5
    a8e0:	20000226 	beq	r4,zero,a8ec <__swbuf_r+0x24>
    a8e4:	20800e17 	ldw	r2,56(r4)
    a8e8:	10002f26 	beq	r2,zero,a9a8 <__swbuf_r+0xe0>
    a8ec:	3080030b 	ldhu	r2,12(r6)
    a8f0:	30c00617 	ldw	r3,24(r6)
    a8f4:	1080020c 	andi	r2,r2,8
    a8f8:	30c00215 	stw	r3,8(r6)
    a8fc:	10002226 	beq	r2,zero,a988 <__swbuf_r+0xc0>
    a900:	30c00417 	ldw	r3,16(r6)
    a904:	18002026 	beq	r3,zero,a988 <__swbuf_r+0xc0>
    a908:	31000017 	ldw	r4,0(r6)
    a90c:	30800517 	ldw	r2,20(r6)
    a910:	20c7c83a 	sub	r3,r4,r3
    a914:	18802f0e 	bge	r3,r2,a9d4 <__swbuf_r+0x10c>
    a918:	19400044 	addi	r5,r3,1
    a91c:	30800217 	ldw	r2,8(r6)
    a920:	84003fcc 	andi	r16,r16,255
    a924:	20c00044 	addi	r3,r4,1
    a928:	10bfffc4 	addi	r2,r2,-1
    a92c:	30800215 	stw	r2,8(r6)
    a930:	24000005 	stb	r16,0(r4)
    a934:	30800517 	ldw	r2,20(r6)
    a938:	30c00015 	stw	r3,0(r6)
    a93c:	11400c26 	beq	r2,r5,a970 <__swbuf_r+0xa8>
    a940:	3080030b 	ldhu	r2,12(r6)
    a944:	1080004c 	andi	r2,r2,1
    a948:	1005003a 	cmpeq	r2,r2,zero
    a94c:	10000626 	beq	r2,zero,a968 <__swbuf_r+0xa0>
    a950:	8005883a 	mov	r2,r16
    a954:	dfc00317 	ldw	ra,12(sp)
    a958:	dc400217 	ldw	r17,8(sp)
    a95c:	dc000117 	ldw	r16,4(sp)
    a960:	dec00404 	addi	sp,sp,16
    a964:	f800283a 	ret
    a968:	00800284 	movi	r2,10
    a96c:	80bff81e 	bne	r16,r2,a950 <__swbuf_r+0x88>
    a970:	8809883a 	mov	r4,r17
    a974:	300b883a 	mov	r5,r6
    a978:	0006bf00 	call	6bf0 <_fflush_r>
    a97c:	103ff426 	beq	r2,zero,a950 <__swbuf_r+0x88>
    a980:	043fffc4 	movi	r16,-1
    a984:	003ff206 	br	a950 <__swbuf_r+0x88>
    a988:	300b883a 	mov	r5,r6
    a98c:	8809883a 	mov	r4,r17
    a990:	d9800015 	stw	r6,0(sp)
    a994:	00052bc0 	call	52bc <__swsetup_r>
    a998:	d9800017 	ldw	r6,0(sp)
    a99c:	1000061e 	bne	r2,zero,a9b8 <__swbuf_r+0xf0>
    a9a0:	30c00417 	ldw	r3,16(r6)
    a9a4:	003fd806 	br	a908 <__swbuf_r+0x40>
    a9a8:	d9800015 	stw	r6,0(sp)
    a9ac:	0006e880 	call	6e88 <__sinit>
    a9b0:	d9800017 	ldw	r6,0(sp)
    a9b4:	003fcd06 	br	a8ec <__swbuf_r+0x24>
    a9b8:	3080030b 	ldhu	r2,12(r6)
    a9bc:	00c00244 	movi	r3,9
    a9c0:	043fffc4 	movi	r16,-1
    a9c4:	10801014 	ori	r2,r2,64
    a9c8:	3080030d 	sth	r2,12(r6)
    a9cc:	88c00015 	stw	r3,0(r17)
    a9d0:	003fdf06 	br	a950 <__swbuf_r+0x88>
    a9d4:	300b883a 	mov	r5,r6
    a9d8:	8809883a 	mov	r4,r17
    a9dc:	d9800015 	stw	r6,0(sp)
    a9e0:	0006bf00 	call	6bf0 <_fflush_r>
    a9e4:	d9800017 	ldw	r6,0(sp)
    a9e8:	103fe51e 	bne	r2,zero,a980 <__swbuf_r+0xb8>
    a9ec:	31000017 	ldw	r4,0(r6)
    a9f0:	01400044 	movi	r5,1
    a9f4:	003fc906 	br	a91c <__swbuf_r+0x54>

0000a9f8 <__swbuf>:
    a9f8:	01800074 	movhi	r6,1
    a9fc:	31835a04 	addi	r6,r6,3432
    aa00:	2007883a 	mov	r3,r4
    aa04:	31000017 	ldw	r4,0(r6)
    aa08:	280d883a 	mov	r6,r5
    aa0c:	180b883a 	mov	r5,r3
    aa10:	000a8c81 	jmpi	a8c8 <__swbuf_r>

0000aa14 <_write_r>:
    aa14:	defffd04 	addi	sp,sp,-12
    aa18:	dc000015 	stw	r16,0(sp)
    aa1c:	04000074 	movhi	r16,1
    aa20:	840a2e04 	addi	r16,r16,10424
    aa24:	dc400115 	stw	r17,4(sp)
    aa28:	80000015 	stw	zero,0(r16)
    aa2c:	2023883a 	mov	r17,r4
    aa30:	2809883a 	mov	r4,r5
    aa34:	300b883a 	mov	r5,r6
    aa38:	380d883a 	mov	r6,r7
    aa3c:	dfc00215 	stw	ra,8(sp)
    aa40:	000dca40 	call	dca4 <write>
    aa44:	1007883a 	mov	r3,r2
    aa48:	00bfffc4 	movi	r2,-1
    aa4c:	18800626 	beq	r3,r2,aa68 <_write_r+0x54>
    aa50:	1805883a 	mov	r2,r3
    aa54:	dfc00217 	ldw	ra,8(sp)
    aa58:	dc400117 	ldw	r17,4(sp)
    aa5c:	dc000017 	ldw	r16,0(sp)
    aa60:	dec00304 	addi	sp,sp,12
    aa64:	f800283a 	ret
    aa68:	80800017 	ldw	r2,0(r16)
    aa6c:	103ff826 	beq	r2,zero,aa50 <_write_r+0x3c>
    aa70:	88800015 	stw	r2,0(r17)
    aa74:	1805883a 	mov	r2,r3
    aa78:	dfc00217 	ldw	ra,8(sp)
    aa7c:	dc400117 	ldw	r17,4(sp)
    aa80:	dc000017 	ldw	r16,0(sp)
    aa84:	dec00304 	addi	sp,sp,12
    aa88:	f800283a 	ret

0000aa8c <_calloc_r>:
    aa8c:	defffe04 	addi	sp,sp,-8
    aa90:	dc400015 	stw	r17,0(sp)
    aa94:	2023883a 	mov	r17,r4
    aa98:	2809883a 	mov	r4,r5
    aa9c:	300b883a 	mov	r5,r6
    aaa0:	dfc00115 	stw	ra,4(sp)
    aaa4:	000d0940 	call	d094 <__mulsi3>
    aaa8:	100b883a 	mov	r5,r2
    aaac:	8809883a 	mov	r4,r17
    aab0:	0000b200 	call	b20 <_malloc_r>
    aab4:	1023883a 	mov	r17,r2
    aab8:	01c00904 	movi	r7,36
    aabc:	10000d26 	beq	r2,zero,aaf4 <_calloc_r+0x68>
    aac0:	10ffff17 	ldw	r3,-4(r2)
    aac4:	1009883a 	mov	r4,r2
    aac8:	00bfff04 	movi	r2,-4
    aacc:	1886703a 	and	r3,r3,r2
    aad0:	1887883a 	add	r3,r3,r2
    aad4:	180d883a 	mov	r6,r3
    aad8:	000b883a 	mov	r5,zero
    aadc:	38c01736 	bltu	r7,r3,ab3c <_calloc_r+0xb0>
    aae0:	008004c4 	movi	r2,19
    aae4:	10c00836 	bltu	r2,r3,ab08 <_calloc_r+0x7c>
    aae8:	20000215 	stw	zero,8(r4)
    aaec:	20000015 	stw	zero,0(r4)
    aaf0:	20000115 	stw	zero,4(r4)
    aaf4:	8805883a 	mov	r2,r17
    aaf8:	dfc00117 	ldw	ra,4(sp)
    aafc:	dc400017 	ldw	r17,0(sp)
    ab00:	dec00204 	addi	sp,sp,8
    ab04:	f800283a 	ret
    ab08:	008006c4 	movi	r2,27
    ab0c:	88000015 	stw	zero,0(r17)
    ab10:	88000115 	stw	zero,4(r17)
    ab14:	89000204 	addi	r4,r17,8
    ab18:	10fff32e 	bgeu	r2,r3,aae8 <_calloc_r+0x5c>
    ab1c:	88000215 	stw	zero,8(r17)
    ab20:	88000315 	stw	zero,12(r17)
    ab24:	89000404 	addi	r4,r17,16
    ab28:	19ffef1e 	bne	r3,r7,aae8 <_calloc_r+0x5c>
    ab2c:	89000604 	addi	r4,r17,24
    ab30:	88000415 	stw	zero,16(r17)
    ab34:	88000515 	stw	zero,20(r17)
    ab38:	003feb06 	br	aae8 <_calloc_r+0x5c>
    ab3c:	0008c6c0 	call	8c6c <memset>
    ab40:	8805883a 	mov	r2,r17
    ab44:	dfc00117 	ldw	ra,4(sp)
    ab48:	dc400017 	ldw	r17,0(sp)
    ab4c:	dec00204 	addi	sp,sp,8
    ab50:	f800283a 	ret

0000ab54 <_close_r>:
    ab54:	defffd04 	addi	sp,sp,-12
    ab58:	dc000015 	stw	r16,0(sp)
    ab5c:	04000074 	movhi	r16,1
    ab60:	840a2e04 	addi	r16,r16,10424
    ab64:	dc400115 	stw	r17,4(sp)
    ab68:	80000015 	stw	zero,0(r16)
    ab6c:	2023883a 	mov	r17,r4
    ab70:	2809883a 	mov	r4,r5
    ab74:	dfc00215 	stw	ra,8(sp)
    ab78:	000d6f40 	call	d6f4 <close>
    ab7c:	1007883a 	mov	r3,r2
    ab80:	00bfffc4 	movi	r2,-1
    ab84:	18800626 	beq	r3,r2,aba0 <_close_r+0x4c>
    ab88:	1805883a 	mov	r2,r3
    ab8c:	dfc00217 	ldw	ra,8(sp)
    ab90:	dc400117 	ldw	r17,4(sp)
    ab94:	dc000017 	ldw	r16,0(sp)
    ab98:	dec00304 	addi	sp,sp,12
    ab9c:	f800283a 	ret
    aba0:	80800017 	ldw	r2,0(r16)
    aba4:	103ff826 	beq	r2,zero,ab88 <_close_r+0x34>
    aba8:	88800015 	stw	r2,0(r17)
    abac:	1805883a 	mov	r2,r3
    abb0:	dfc00217 	ldw	ra,8(sp)
    abb4:	dc400117 	ldw	r17,4(sp)
    abb8:	dc000017 	ldw	r16,0(sp)
    abbc:	dec00304 	addi	sp,sp,12
    abc0:	f800283a 	ret

0000abc4 <_fclose_r>:
    abc4:	defffc04 	addi	sp,sp,-16
    abc8:	dc400115 	stw	r17,4(sp)
    abcc:	dc000015 	stw	r16,0(sp)
    abd0:	dfc00315 	stw	ra,12(sp)
    abd4:	dc800215 	stw	r18,8(sp)
    abd8:	2821883a 	mov	r16,r5
    abdc:	2023883a 	mov	r17,r4
    abe0:	28002926 	beq	r5,zero,ac88 <_fclose_r+0xc4>
    abe4:	0006e780 	call	6e78 <__sfp_lock_acquire>
    abe8:	88000226 	beq	r17,zero,abf4 <_fclose_r+0x30>
    abec:	88800e17 	ldw	r2,56(r17)
    abf0:	10002d26 	beq	r2,zero,aca8 <_fclose_r+0xe4>
    abf4:	8080030f 	ldh	r2,12(r16)
    abf8:	10002226 	beq	r2,zero,ac84 <_fclose_r+0xc0>
    abfc:	8809883a 	mov	r4,r17
    ac00:	800b883a 	mov	r5,r16
    ac04:	0006bf00 	call	6bf0 <_fflush_r>
    ac08:	1025883a 	mov	r18,r2
    ac0c:	80800b17 	ldw	r2,44(r16)
    ac10:	10000426 	beq	r2,zero,ac24 <_fclose_r+0x60>
    ac14:	81400717 	ldw	r5,28(r16)
    ac18:	8809883a 	mov	r4,r17
    ac1c:	103ee83a 	callr	r2
    ac20:	10002a16 	blt	r2,zero,accc <_fclose_r+0x108>
    ac24:	8080030b 	ldhu	r2,12(r16)
    ac28:	1080200c 	andi	r2,r2,128
    ac2c:	1000231e 	bne	r2,zero,acbc <_fclose_r+0xf8>
    ac30:	81400c17 	ldw	r5,48(r16)
    ac34:	28000526 	beq	r5,zero,ac4c <_fclose_r+0x88>
    ac38:	80801004 	addi	r2,r16,64
    ac3c:	28800226 	beq	r5,r2,ac48 <_fclose_r+0x84>
    ac40:	8809883a 	mov	r4,r17
    ac44:	00072400 	call	7240 <_free_r>
    ac48:	80000c15 	stw	zero,48(r16)
    ac4c:	81401117 	ldw	r5,68(r16)
    ac50:	28000326 	beq	r5,zero,ac60 <_fclose_r+0x9c>
    ac54:	8809883a 	mov	r4,r17
    ac58:	00072400 	call	7240 <_free_r>
    ac5c:	80001115 	stw	zero,68(r16)
    ac60:	8000030d 	sth	zero,12(r16)
    ac64:	0006e7c0 	call	6e7c <__sfp_lock_release>
    ac68:	9005883a 	mov	r2,r18
    ac6c:	dfc00317 	ldw	ra,12(sp)
    ac70:	dc800217 	ldw	r18,8(sp)
    ac74:	dc400117 	ldw	r17,4(sp)
    ac78:	dc000017 	ldw	r16,0(sp)
    ac7c:	dec00404 	addi	sp,sp,16
    ac80:	f800283a 	ret
    ac84:	0006e7c0 	call	6e7c <__sfp_lock_release>
    ac88:	0025883a 	mov	r18,zero
    ac8c:	9005883a 	mov	r2,r18
    ac90:	dfc00317 	ldw	ra,12(sp)
    ac94:	dc800217 	ldw	r18,8(sp)
    ac98:	dc400117 	ldw	r17,4(sp)
    ac9c:	dc000017 	ldw	r16,0(sp)
    aca0:	dec00404 	addi	sp,sp,16
    aca4:	f800283a 	ret
    aca8:	8809883a 	mov	r4,r17
    acac:	0006e880 	call	6e88 <__sinit>
    acb0:	8080030f 	ldh	r2,12(r16)
    acb4:	103fd11e 	bne	r2,zero,abfc <_fclose_r+0x38>
    acb8:	003ff206 	br	ac84 <_fclose_r+0xc0>
    acbc:	81400417 	ldw	r5,16(r16)
    acc0:	8809883a 	mov	r4,r17
    acc4:	00072400 	call	7240 <_free_r>
    acc8:	003fd906 	br	ac30 <_fclose_r+0x6c>
    accc:	04bfffc4 	movi	r18,-1
    acd0:	003fd406 	br	ac24 <_fclose_r+0x60>

0000acd4 <fclose>:
    acd4:	00800074 	movhi	r2,1
    acd8:	10835a04 	addi	r2,r2,3432
    acdc:	200b883a 	mov	r5,r4
    ace0:	11000017 	ldw	r4,0(r2)
    ace4:	000abc41 	jmpi	abc4 <_fclose_r>

0000ace8 <_fstat_r>:
    ace8:	defffd04 	addi	sp,sp,-12
    acec:	dc000015 	stw	r16,0(sp)
    acf0:	04000074 	movhi	r16,1
    acf4:	840a2e04 	addi	r16,r16,10424
    acf8:	dc400115 	stw	r17,4(sp)
    acfc:	80000015 	stw	zero,0(r16)
    ad00:	2023883a 	mov	r17,r4
    ad04:	2809883a 	mov	r4,r5
    ad08:	300b883a 	mov	r5,r6
    ad0c:	dfc00215 	stw	ra,8(sp)
    ad10:	000d7dc0 	call	d7dc <fstat>
    ad14:	1007883a 	mov	r3,r2
    ad18:	00bfffc4 	movi	r2,-1
    ad1c:	18800626 	beq	r3,r2,ad38 <_fstat_r+0x50>
    ad20:	1805883a 	mov	r2,r3
    ad24:	dfc00217 	ldw	ra,8(sp)
    ad28:	dc400117 	ldw	r17,4(sp)
    ad2c:	dc000017 	ldw	r16,0(sp)
    ad30:	dec00304 	addi	sp,sp,12
    ad34:	f800283a 	ret
    ad38:	80800017 	ldw	r2,0(r16)
    ad3c:	103ff826 	beq	r2,zero,ad20 <_fstat_r+0x38>
    ad40:	88800015 	stw	r2,0(r17)
    ad44:	1805883a 	mov	r2,r3
    ad48:	dfc00217 	ldw	ra,8(sp)
    ad4c:	dc400117 	ldw	r17,4(sp)
    ad50:	dc000017 	ldw	r16,0(sp)
    ad54:	dec00304 	addi	sp,sp,12
    ad58:	f800283a 	ret

0000ad5c <_isatty_r>:
    ad5c:	defffd04 	addi	sp,sp,-12
    ad60:	dc000015 	stw	r16,0(sp)
    ad64:	04000074 	movhi	r16,1
    ad68:	840a2e04 	addi	r16,r16,10424
    ad6c:	dc400115 	stw	r17,4(sp)
    ad70:	80000015 	stw	zero,0(r16)
    ad74:	2023883a 	mov	r17,r4
    ad78:	2809883a 	mov	r4,r5
    ad7c:	dfc00215 	stw	ra,8(sp)
    ad80:	000d8700 	call	d870 <isatty>
    ad84:	1007883a 	mov	r3,r2
    ad88:	00bfffc4 	movi	r2,-1
    ad8c:	18800626 	beq	r3,r2,ada8 <_isatty_r+0x4c>
    ad90:	1805883a 	mov	r2,r3
    ad94:	dfc00217 	ldw	ra,8(sp)
    ad98:	dc400117 	ldw	r17,4(sp)
    ad9c:	dc000017 	ldw	r16,0(sp)
    ada0:	dec00304 	addi	sp,sp,12
    ada4:	f800283a 	ret
    ada8:	80800017 	ldw	r2,0(r16)
    adac:	103ff826 	beq	r2,zero,ad90 <_isatty_r+0x34>
    adb0:	88800015 	stw	r2,0(r17)
    adb4:	1805883a 	mov	r2,r3
    adb8:	dfc00217 	ldw	ra,8(sp)
    adbc:	dc400117 	ldw	r17,4(sp)
    adc0:	dc000017 	ldw	r16,0(sp)
    adc4:	dec00304 	addi	sp,sp,12
    adc8:	f800283a 	ret

0000adcc <_lseek_r>:
    adcc:	defffd04 	addi	sp,sp,-12
    add0:	dc000015 	stw	r16,0(sp)
    add4:	04000074 	movhi	r16,1
    add8:	840a2e04 	addi	r16,r16,10424
    addc:	dc400115 	stw	r17,4(sp)
    ade0:	80000015 	stw	zero,0(r16)
    ade4:	2023883a 	mov	r17,r4
    ade8:	2809883a 	mov	r4,r5
    adec:	300b883a 	mov	r5,r6
    adf0:	380d883a 	mov	r6,r7
    adf4:	dfc00215 	stw	ra,8(sp)
    adf8:	000d9cc0 	call	d9cc <lseek>
    adfc:	1007883a 	mov	r3,r2
    ae00:	00bfffc4 	movi	r2,-1
    ae04:	18800626 	beq	r3,r2,ae20 <_lseek_r+0x54>
    ae08:	1805883a 	mov	r2,r3
    ae0c:	dfc00217 	ldw	ra,8(sp)
    ae10:	dc400117 	ldw	r17,4(sp)
    ae14:	dc000017 	ldw	r16,0(sp)
    ae18:	dec00304 	addi	sp,sp,12
    ae1c:	f800283a 	ret
    ae20:	80800017 	ldw	r2,0(r16)
    ae24:	103ff826 	beq	r2,zero,ae08 <_lseek_r+0x3c>
    ae28:	88800015 	stw	r2,0(r17)
    ae2c:	1805883a 	mov	r2,r3
    ae30:	dfc00217 	ldw	ra,8(sp)
    ae34:	dc400117 	ldw	r17,4(sp)
    ae38:	dc000017 	ldw	r16,0(sp)
    ae3c:	dec00304 	addi	sp,sp,12
    ae40:	f800283a 	ret

0000ae44 <_read_r>:
    ae44:	defffd04 	addi	sp,sp,-12
    ae48:	dc000015 	stw	r16,0(sp)
    ae4c:	04000074 	movhi	r16,1
    ae50:	840a2e04 	addi	r16,r16,10424
    ae54:	dc400115 	stw	r17,4(sp)
    ae58:	80000015 	stw	zero,0(r16)
    ae5c:	2023883a 	mov	r17,r4
    ae60:	2809883a 	mov	r4,r5
    ae64:	300b883a 	mov	r5,r6
    ae68:	380d883a 	mov	r6,r7
    ae6c:	dfc00215 	stw	ra,8(sp)
    ae70:	000dad80 	call	dad8 <read>
    ae74:	1007883a 	mov	r3,r2
    ae78:	00bfffc4 	movi	r2,-1
    ae7c:	18800626 	beq	r3,r2,ae98 <_read_r+0x54>
    ae80:	1805883a 	mov	r2,r3
    ae84:	dfc00217 	ldw	ra,8(sp)
    ae88:	dc400117 	ldw	r17,4(sp)
    ae8c:	dc000017 	ldw	r16,0(sp)
    ae90:	dec00304 	addi	sp,sp,12
    ae94:	f800283a 	ret
    ae98:	80800017 	ldw	r2,0(r16)
    ae9c:	103ff826 	beq	r2,zero,ae80 <_read_r+0x3c>
    aea0:	88800015 	stw	r2,0(r17)
    aea4:	1805883a 	mov	r2,r3
    aea8:	dfc00217 	ldw	ra,8(sp)
    aeac:	dc400117 	ldw	r17,4(sp)
    aeb0:	dc000017 	ldw	r16,0(sp)
    aeb4:	dec00304 	addi	sp,sp,12
    aeb8:	f800283a 	ret

0000aebc <__fixunsdfsi>:
    aebc:	defffb04 	addi	sp,sp,-20
    aec0:	dc400115 	stw	r17,4(sp)
    aec4:	dc000015 	stw	r16,0(sp)
    aec8:	04507834 	movhi	r17,16864
    aecc:	0021883a 	mov	r16,zero
    aed0:	800d883a 	mov	r6,r16
    aed4:	880f883a 	mov	r7,r17
    aed8:	dcc00315 	stw	r19,12(sp)
    aedc:	dc800215 	stw	r18,8(sp)
    aee0:	2827883a 	mov	r19,r5
    aee4:	2025883a 	mov	r18,r4
    aee8:	dfc00415 	stw	ra,16(sp)
    aeec:	000ca4c0 	call	ca4c <__gedf2>
    aef0:	000d883a 	mov	r6,zero
    aef4:	880f883a 	mov	r7,r17
    aef8:	980b883a 	mov	r5,r19
    aefc:	9009883a 	mov	r4,r18
    af00:	10000d16 	blt	r2,zero,af38 <__fixunsdfsi+0x7c>
    af04:	000c1a40 	call	c1a4 <__subdf3>
    af08:	180b883a 	mov	r5,r3
    af0c:	1009883a 	mov	r4,r2
    af10:	000ccdc0 	call	ccdc <__fixdfsi>
    af14:	00e00034 	movhi	r3,32768
    af18:	10c5883a 	add	r2,r2,r3
    af1c:	dfc00417 	ldw	ra,16(sp)
    af20:	dcc00317 	ldw	r19,12(sp)
    af24:	dc800217 	ldw	r18,8(sp)
    af28:	dc400117 	ldw	r17,4(sp)
    af2c:	dc000017 	ldw	r16,0(sp)
    af30:	dec00504 	addi	sp,sp,20
    af34:	f800283a 	ret
    af38:	980b883a 	mov	r5,r19
    af3c:	9009883a 	mov	r4,r18
    af40:	000ccdc0 	call	ccdc <__fixdfsi>
    af44:	dfc00417 	ldw	ra,16(sp)
    af48:	dcc00317 	ldw	r19,12(sp)
    af4c:	dc800217 	ldw	r18,8(sp)
    af50:	dc400117 	ldw	r17,4(sp)
    af54:	dc000017 	ldw	r16,0(sp)
    af58:	dec00504 	addi	sp,sp,20
    af5c:	f800283a 	ret

0000af60 <__udivdi3>:
    af60:	defff104 	addi	sp,sp,-60
    af64:	0015883a 	mov	r10,zero
    af68:	2005883a 	mov	r2,r4
    af6c:	3011883a 	mov	r8,r6
    af70:	df000d15 	stw	fp,52(sp)
    af74:	dd400a15 	stw	r21,40(sp)
    af78:	dcc00815 	stw	r19,32(sp)
    af7c:	dfc00e15 	stw	ra,56(sp)
    af80:	ddc00c15 	stw	r23,48(sp)
    af84:	dd800b15 	stw	r22,44(sp)
    af88:	dd000915 	stw	r20,36(sp)
    af8c:	dc800715 	stw	r18,28(sp)
    af90:	dc400615 	stw	r17,24(sp)
    af94:	dc000515 	stw	r16,20(sp)
    af98:	da800315 	stw	r10,12(sp)
    af9c:	4027883a 	mov	r19,r8
    afa0:	1039883a 	mov	fp,r2
    afa4:	282b883a 	mov	r21,r5
    afa8:	da800415 	stw	r10,16(sp)
    afac:	3800401e 	bne	r7,zero,b0b0 <__udivdi3+0x150>
    afb0:	2a006536 	bltu	r5,r8,b148 <__udivdi3+0x1e8>
    afb4:	4000b526 	beq	r8,zero,b28c <__udivdi3+0x32c>
    afb8:	00bfffd4 	movui	r2,65535
    afbc:	14c0ad36 	bltu	r2,r19,b274 <__udivdi3+0x314>
    afc0:	00803fc4 	movi	r2,255
    afc4:	14c15e36 	bltu	r2,r19,b540 <__udivdi3+0x5e0>
    afc8:	000b883a 	mov	r5,zero
    afcc:	0005883a 	mov	r2,zero
    afd0:	9884d83a 	srl	r2,r19,r2
    afd4:	01000074 	movhi	r4,1
    afd8:	213c5104 	addi	r4,r4,-3772
    afdc:	01800804 	movi	r6,32
    afe0:	1105883a 	add	r2,r2,r4
    afe4:	10c00003 	ldbu	r3,0(r2)
    afe8:	28c7883a 	add	r3,r5,r3
    afec:	30e9c83a 	sub	r20,r6,r3
    aff0:	a0010a1e 	bne	r20,zero,b41c <__udivdi3+0x4bc>
    aff4:	982ed43a 	srli	r23,r19,16
    aff8:	acebc83a 	sub	r21,r21,r19
    affc:	9dbfffcc 	andi	r22,r19,65535
    b000:	05000044 	movi	r20,1
    b004:	a809883a 	mov	r4,r21
    b008:	b80b883a 	mov	r5,r23
    b00c:	000d0840 	call	d084 <__udivsi3>
    b010:	100b883a 	mov	r5,r2
    b014:	b009883a 	mov	r4,r22
    b018:	1021883a 	mov	r16,r2
    b01c:	000d0940 	call	d094 <__mulsi3>
    b020:	a809883a 	mov	r4,r21
    b024:	b80b883a 	mov	r5,r23
    b028:	1023883a 	mov	r17,r2
    b02c:	000d08c0 	call	d08c <__umodsi3>
    b030:	1004943a 	slli	r2,r2,16
    b034:	e006d43a 	srli	r3,fp,16
    b038:	10c4b03a 	or	r2,r2,r3
    b03c:	1440042e 	bgeu	r2,r17,b050 <__udivdi3+0xf0>
    b040:	14c5883a 	add	r2,r2,r19
    b044:	843fffc4 	addi	r16,r16,-1
    b048:	14c00136 	bltu	r2,r19,b050 <__udivdi3+0xf0>
    b04c:	14415c36 	bltu	r2,r17,b5c0 <__udivdi3+0x660>
    b050:	1463c83a 	sub	r17,r2,r17
    b054:	8809883a 	mov	r4,r17
    b058:	b80b883a 	mov	r5,r23
    b05c:	000d0840 	call	d084 <__udivsi3>
    b060:	100b883a 	mov	r5,r2
    b064:	b009883a 	mov	r4,r22
    b068:	102b883a 	mov	r21,r2
    b06c:	000d0940 	call	d094 <__mulsi3>
    b070:	8809883a 	mov	r4,r17
    b074:	b80b883a 	mov	r5,r23
    b078:	1025883a 	mov	r18,r2
    b07c:	000d08c0 	call	d08c <__umodsi3>
    b080:	1004943a 	slli	r2,r2,16
    b084:	e0ffffcc 	andi	r3,fp,65535
    b088:	10c4b03a 	or	r2,r2,r3
    b08c:	1480042e 	bgeu	r2,r18,b0a0 <__udivdi3+0x140>
    b090:	9885883a 	add	r2,r19,r2
    b094:	ad7fffc4 	addi	r21,r21,-1
    b098:	14c00136 	bltu	r2,r19,b0a0 <__udivdi3+0x140>
    b09c:	14813c36 	bltu	r2,r18,b590 <__udivdi3+0x630>
    b0a0:	8004943a 	slli	r2,r16,16
    b0a4:	a009883a 	mov	r4,r20
    b0a8:	a884b03a 	or	r2,r21,r2
    b0ac:	00001506 	br	b104 <__udivdi3+0x1a4>
    b0b0:	380d883a 	mov	r6,r7
    b0b4:	29c06c36 	bltu	r5,r7,b268 <__udivdi3+0x308>
    b0b8:	00bfffd4 	movui	r2,65535
    b0bc:	11c06436 	bltu	r2,r7,b250 <__udivdi3+0x2f0>
    b0c0:	00803fc4 	movi	r2,255
    b0c4:	11c11836 	bltu	r2,r7,b528 <__udivdi3+0x5c8>
    b0c8:	000b883a 	mov	r5,zero
    b0cc:	0005883a 	mov	r2,zero
    b0d0:	3084d83a 	srl	r2,r6,r2
    b0d4:	01000074 	movhi	r4,1
    b0d8:	213c5104 	addi	r4,r4,-3772
    b0dc:	01c00804 	movi	r7,32
    b0e0:	1105883a 	add	r2,r2,r4
    b0e4:	10c00003 	ldbu	r3,0(r2)
    b0e8:	28c7883a 	add	r3,r5,r3
    b0ec:	38edc83a 	sub	r22,r7,r3
    b0f0:	b000731e 	bne	r22,zero,b2c0 <__udivdi3+0x360>
    b0f4:	35400136 	bltu	r6,r21,b0fc <__udivdi3+0x19c>
    b0f8:	e4c05b36 	bltu	fp,r19,b268 <__udivdi3+0x308>
    b0fc:	00800044 	movi	r2,1
    b100:	0009883a 	mov	r4,zero
    b104:	d8800315 	stw	r2,12(sp)
    b108:	d9400317 	ldw	r5,12(sp)
    b10c:	2007883a 	mov	r3,r4
    b110:	d9000415 	stw	r4,16(sp)
    b114:	2805883a 	mov	r2,r5
    b118:	dfc00e17 	ldw	ra,56(sp)
    b11c:	df000d17 	ldw	fp,52(sp)
    b120:	ddc00c17 	ldw	r23,48(sp)
    b124:	dd800b17 	ldw	r22,44(sp)
    b128:	dd400a17 	ldw	r21,40(sp)
    b12c:	dd000917 	ldw	r20,36(sp)
    b130:	dcc00817 	ldw	r19,32(sp)
    b134:	dc800717 	ldw	r18,28(sp)
    b138:	dc400617 	ldw	r17,24(sp)
    b13c:	dc000517 	ldw	r16,20(sp)
    b140:	dec00f04 	addi	sp,sp,60
    b144:	f800283a 	ret
    b148:	00bfffd4 	movui	r2,65535
    b14c:	12005636 	bltu	r2,r8,b2a8 <__udivdi3+0x348>
    b150:	00803fc4 	movi	r2,255
    b154:	12010036 	bltu	r2,r8,b558 <__udivdi3+0x5f8>
    b158:	000b883a 	mov	r5,zero
    b15c:	0005883a 	mov	r2,zero
    b160:	9884d83a 	srl	r2,r19,r2
    b164:	01000074 	movhi	r4,1
    b168:	213c5104 	addi	r4,r4,-3772
    b16c:	01800804 	movi	r6,32
    b170:	1105883a 	add	r2,r2,r4
    b174:	10c00003 	ldbu	r3,0(r2)
    b178:	28c7883a 	add	r3,r5,r3
    b17c:	30cbc83a 	sub	r5,r6,r3
    b180:	28000626 	beq	r5,zero,b19c <__udivdi3+0x23c>
    b184:	3145c83a 	sub	r2,r6,r5
    b188:	e084d83a 	srl	r2,fp,r2
    b18c:	a946983a 	sll	r3,r21,r5
    b190:	e178983a 	sll	fp,fp,r5
    b194:	9966983a 	sll	r19,r19,r5
    b198:	18aab03a 	or	r21,r3,r2
    b19c:	982ed43a 	srli	r23,r19,16
    b1a0:	a809883a 	mov	r4,r21
    b1a4:	9cbfffcc 	andi	r18,r19,65535
    b1a8:	b80b883a 	mov	r5,r23
    b1ac:	000d0840 	call	d084 <__udivsi3>
    b1b0:	100b883a 	mov	r5,r2
    b1b4:	9009883a 	mov	r4,r18
    b1b8:	1021883a 	mov	r16,r2
    b1bc:	000d0940 	call	d094 <__mulsi3>
    b1c0:	a809883a 	mov	r4,r21
    b1c4:	b80b883a 	mov	r5,r23
    b1c8:	1023883a 	mov	r17,r2
    b1cc:	000d08c0 	call	d08c <__umodsi3>
    b1d0:	1004943a 	slli	r2,r2,16
    b1d4:	e006d43a 	srli	r3,fp,16
    b1d8:	10c4b03a 	or	r2,r2,r3
    b1dc:	1440042e 	bgeu	r2,r17,b1f0 <__udivdi3+0x290>
    b1e0:	14c5883a 	add	r2,r2,r19
    b1e4:	843fffc4 	addi	r16,r16,-1
    b1e8:	14c00136 	bltu	r2,r19,b1f0 <__udivdi3+0x290>
    b1ec:	1440ea36 	bltu	r2,r17,b598 <__udivdi3+0x638>
    b1f0:	1463c83a 	sub	r17,r2,r17
    b1f4:	8809883a 	mov	r4,r17
    b1f8:	b80b883a 	mov	r5,r23
    b1fc:	000d0840 	call	d084 <__udivsi3>
    b200:	100b883a 	mov	r5,r2
    b204:	9009883a 	mov	r4,r18
    b208:	102b883a 	mov	r21,r2
    b20c:	000d0940 	call	d094 <__mulsi3>
    b210:	8809883a 	mov	r4,r17
    b214:	b80b883a 	mov	r5,r23
    b218:	1025883a 	mov	r18,r2
    b21c:	000d08c0 	call	d08c <__umodsi3>
    b220:	1004943a 	slli	r2,r2,16
    b224:	e0ffffcc 	andi	r3,fp,65535
    b228:	10c4b03a 	or	r2,r2,r3
    b22c:	1480042e 	bgeu	r2,r18,b240 <__udivdi3+0x2e0>
    b230:	9885883a 	add	r2,r19,r2
    b234:	ad7fffc4 	addi	r21,r21,-1
    b238:	14c00136 	bltu	r2,r19,b240 <__udivdi3+0x2e0>
    b23c:	1480d936 	bltu	r2,r18,b5a4 <__udivdi3+0x644>
    b240:	8004943a 	slli	r2,r16,16
    b244:	0009883a 	mov	r4,zero
    b248:	a884b03a 	or	r2,r21,r2
    b24c:	003fad06 	br	b104 <__udivdi3+0x1a4>
    b250:	00804034 	movhi	r2,256
    b254:	10bfffc4 	addi	r2,r2,-1
    b258:	11c0b636 	bltu	r2,r7,b534 <__udivdi3+0x5d4>
    b25c:	01400404 	movi	r5,16
    b260:	2805883a 	mov	r2,r5
    b264:	003f9a06 	br	b0d0 <__udivdi3+0x170>
    b268:	0005883a 	mov	r2,zero
    b26c:	0009883a 	mov	r4,zero
    b270:	003fa406 	br	b104 <__udivdi3+0x1a4>
    b274:	00804034 	movhi	r2,256
    b278:	10bfffc4 	addi	r2,r2,-1
    b27c:	14c0b336 	bltu	r2,r19,b54c <__udivdi3+0x5ec>
    b280:	01400404 	movi	r5,16
    b284:	2805883a 	mov	r2,r5
    b288:	003f5106 	br	afd0 <__udivdi3+0x70>
    b28c:	01000044 	movi	r4,1
    b290:	000b883a 	mov	r5,zero
    b294:	000d0840 	call	d084 <__udivsi3>
    b298:	1027883a 	mov	r19,r2
    b29c:	00bfffd4 	movui	r2,65535
    b2a0:	14fff436 	bltu	r2,r19,b274 <__udivdi3+0x314>
    b2a4:	003f4606 	br	afc0 <__udivdi3+0x60>
    b2a8:	00804034 	movhi	r2,256
    b2ac:	10bfffc4 	addi	r2,r2,-1
    b2b0:	1200ac36 	bltu	r2,r8,b564 <__udivdi3+0x604>
    b2b4:	01400404 	movi	r5,16
    b2b8:	2805883a 	mov	r2,r5
    b2bc:	003fa806 	br	b160 <__udivdi3+0x200>
    b2c0:	3d85c83a 	sub	r2,r7,r22
    b2c4:	3588983a 	sll	r4,r6,r22
    b2c8:	9886d83a 	srl	r3,r19,r2
    b2cc:	a8a2d83a 	srl	r17,r21,r2
    b2d0:	e084d83a 	srl	r2,fp,r2
    b2d4:	20eeb03a 	or	r23,r4,r3
    b2d8:	b824d43a 	srli	r18,r23,16
    b2dc:	ad86983a 	sll	r3,r21,r22
    b2e0:	8809883a 	mov	r4,r17
    b2e4:	900b883a 	mov	r5,r18
    b2e8:	1886b03a 	or	r3,r3,r2
    b2ec:	d8c00115 	stw	r3,4(sp)
    b2f0:	bc3fffcc 	andi	r16,r23,65535
    b2f4:	000d0840 	call	d084 <__udivsi3>
    b2f8:	100b883a 	mov	r5,r2
    b2fc:	8009883a 	mov	r4,r16
    b300:	1029883a 	mov	r20,r2
    b304:	000d0940 	call	d094 <__mulsi3>
    b308:	900b883a 	mov	r5,r18
    b30c:	8809883a 	mov	r4,r17
    b310:	102b883a 	mov	r21,r2
    b314:	000d08c0 	call	d08c <__umodsi3>
    b318:	d9400117 	ldw	r5,4(sp)
    b31c:	1004943a 	slli	r2,r2,16
    b320:	9da6983a 	sll	r19,r19,r22
    b324:	2806d43a 	srli	r3,r5,16
    b328:	10c4b03a 	or	r2,r2,r3
    b32c:	1540032e 	bgeu	r2,r21,b33c <__udivdi3+0x3dc>
    b330:	15c5883a 	add	r2,r2,r23
    b334:	a53fffc4 	addi	r20,r20,-1
    b338:	15c0912e 	bgeu	r2,r23,b580 <__udivdi3+0x620>
    b33c:	1563c83a 	sub	r17,r2,r21
    b340:	8809883a 	mov	r4,r17
    b344:	900b883a 	mov	r5,r18
    b348:	000d0840 	call	d084 <__udivsi3>
    b34c:	100b883a 	mov	r5,r2
    b350:	8009883a 	mov	r4,r16
    b354:	102b883a 	mov	r21,r2
    b358:	000d0940 	call	d094 <__mulsi3>
    b35c:	8809883a 	mov	r4,r17
    b360:	900b883a 	mov	r5,r18
    b364:	1021883a 	mov	r16,r2
    b368:	000d08c0 	call	d08c <__umodsi3>
    b36c:	da800117 	ldw	r10,4(sp)
    b370:	1004943a 	slli	r2,r2,16
    b374:	50ffffcc 	andi	r3,r10,65535
    b378:	10c6b03a 	or	r3,r2,r3
    b37c:	1c00032e 	bgeu	r3,r16,b38c <__udivdi3+0x42c>
    b380:	1dc7883a 	add	r3,r3,r23
    b384:	ad7fffc4 	addi	r21,r21,-1
    b388:	1dc0792e 	bgeu	r3,r23,b570 <__udivdi3+0x610>
    b38c:	a004943a 	slli	r2,r20,16
    b390:	982ed43a 	srli	r23,r19,16
    b394:	9cffffcc 	andi	r19,r19,65535
    b398:	a8a4b03a 	or	r18,r21,r2
    b39c:	947fffcc 	andi	r17,r18,65535
    b3a0:	902ad43a 	srli	r21,r18,16
    b3a4:	8809883a 	mov	r4,r17
    b3a8:	980b883a 	mov	r5,r19
    b3ac:	1c21c83a 	sub	r16,r3,r16
    b3b0:	000d0940 	call	d094 <__mulsi3>
    b3b4:	8809883a 	mov	r4,r17
    b3b8:	b80b883a 	mov	r5,r23
    b3bc:	1029883a 	mov	r20,r2
    b3c0:	000d0940 	call	d094 <__mulsi3>
    b3c4:	980b883a 	mov	r5,r19
    b3c8:	a809883a 	mov	r4,r21
    b3cc:	1023883a 	mov	r17,r2
    b3d0:	000d0940 	call	d094 <__mulsi3>
    b3d4:	a809883a 	mov	r4,r21
    b3d8:	b80b883a 	mov	r5,r23
    b3dc:	1027883a 	mov	r19,r2
    b3e0:	000d0940 	call	d094 <__mulsi3>
    b3e4:	1009883a 	mov	r4,r2
    b3e8:	a004d43a 	srli	r2,r20,16
    b3ec:	8ce3883a 	add	r17,r17,r19
    b3f0:	1447883a 	add	r3,r2,r17
    b3f4:	1cc0022e 	bgeu	r3,r19,b400 <__udivdi3+0x4a0>
    b3f8:	00800074 	movhi	r2,1
    b3fc:	2089883a 	add	r4,r4,r2
    b400:	1804d43a 	srli	r2,r3,16
    b404:	2085883a 	add	r2,r4,r2
    b408:	80804436 	bltu	r16,r2,b51c <__udivdi3+0x5bc>
    b40c:	80803e26 	beq	r16,r2,b508 <__udivdi3+0x5a8>
    b410:	9005883a 	mov	r2,r18
    b414:	0009883a 	mov	r4,zero
    b418:	003f3a06 	br	b104 <__udivdi3+0x1a4>
    b41c:	9d26983a 	sll	r19,r19,r20
    b420:	3505c83a 	sub	r2,r6,r20
    b424:	a8a2d83a 	srl	r17,r21,r2
    b428:	982ed43a 	srli	r23,r19,16
    b42c:	e084d83a 	srl	r2,fp,r2
    b430:	ad06983a 	sll	r3,r21,r20
    b434:	8809883a 	mov	r4,r17
    b438:	b80b883a 	mov	r5,r23
    b43c:	1886b03a 	or	r3,r3,r2
    b440:	d8c00015 	stw	r3,0(sp)
    b444:	9dbfffcc 	andi	r22,r19,65535
    b448:	000d0840 	call	d084 <__udivsi3>
    b44c:	100b883a 	mov	r5,r2
    b450:	b009883a 	mov	r4,r22
    b454:	d8800215 	stw	r2,8(sp)
    b458:	000d0940 	call	d094 <__mulsi3>
    b45c:	8809883a 	mov	r4,r17
    b460:	b80b883a 	mov	r5,r23
    b464:	102b883a 	mov	r21,r2
    b468:	000d08c0 	call	d08c <__umodsi3>
    b46c:	d9000017 	ldw	r4,0(sp)
    b470:	1004943a 	slli	r2,r2,16
    b474:	2006d43a 	srli	r3,r4,16
    b478:	10c4b03a 	or	r2,r2,r3
    b47c:	1540052e 	bgeu	r2,r21,b494 <__udivdi3+0x534>
    b480:	d9400217 	ldw	r5,8(sp)
    b484:	14c5883a 	add	r2,r2,r19
    b488:	297fffc4 	addi	r5,r5,-1
    b48c:	d9400215 	stw	r5,8(sp)
    b490:	14c0462e 	bgeu	r2,r19,b5ac <__udivdi3+0x64c>
    b494:	1563c83a 	sub	r17,r2,r21
    b498:	8809883a 	mov	r4,r17
    b49c:	b80b883a 	mov	r5,r23
    b4a0:	000d0840 	call	d084 <__udivsi3>
    b4a4:	100b883a 	mov	r5,r2
    b4a8:	b009883a 	mov	r4,r22
    b4ac:	1025883a 	mov	r18,r2
    b4b0:	000d0940 	call	d094 <__mulsi3>
    b4b4:	8809883a 	mov	r4,r17
    b4b8:	b80b883a 	mov	r5,r23
    b4bc:	1021883a 	mov	r16,r2
    b4c0:	000d08c0 	call	d08c <__umodsi3>
    b4c4:	da800017 	ldw	r10,0(sp)
    b4c8:	1004943a 	slli	r2,r2,16
    b4cc:	50ffffcc 	andi	r3,r10,65535
    b4d0:	10c6b03a 	or	r3,r2,r3
    b4d4:	1c00062e 	bgeu	r3,r16,b4f0 <__udivdi3+0x590>
    b4d8:	1cc7883a 	add	r3,r3,r19
    b4dc:	94bfffc4 	addi	r18,r18,-1
    b4e0:	1cc00336 	bltu	r3,r19,b4f0 <__udivdi3+0x590>
    b4e4:	1c00022e 	bgeu	r3,r16,b4f0 <__udivdi3+0x590>
    b4e8:	94bfffc4 	addi	r18,r18,-1
    b4ec:	1cc7883a 	add	r3,r3,r19
    b4f0:	d9000217 	ldw	r4,8(sp)
    b4f4:	e538983a 	sll	fp,fp,r20
    b4f8:	1c2bc83a 	sub	r21,r3,r16
    b4fc:	2004943a 	slli	r2,r4,16
    b500:	90a8b03a 	or	r20,r18,r2
    b504:	003ebf06 	br	b004 <__udivdi3+0xa4>
    b508:	1804943a 	slli	r2,r3,16
    b50c:	e588983a 	sll	r4,fp,r22
    b510:	a0ffffcc 	andi	r3,r20,65535
    b514:	10c5883a 	add	r2,r2,r3
    b518:	20bfbd2e 	bgeu	r4,r2,b410 <__udivdi3+0x4b0>
    b51c:	90bfffc4 	addi	r2,r18,-1
    b520:	0009883a 	mov	r4,zero
    b524:	003ef706 	br	b104 <__udivdi3+0x1a4>
    b528:	01400204 	movi	r5,8
    b52c:	2805883a 	mov	r2,r5
    b530:	003ee706 	br	b0d0 <__udivdi3+0x170>
    b534:	01400604 	movi	r5,24
    b538:	2805883a 	mov	r2,r5
    b53c:	003ee406 	br	b0d0 <__udivdi3+0x170>
    b540:	01400204 	movi	r5,8
    b544:	2805883a 	mov	r2,r5
    b548:	003ea106 	br	afd0 <__udivdi3+0x70>
    b54c:	01400604 	movi	r5,24
    b550:	2805883a 	mov	r2,r5
    b554:	003e9e06 	br	afd0 <__udivdi3+0x70>
    b558:	01400204 	movi	r5,8
    b55c:	2805883a 	mov	r2,r5
    b560:	003eff06 	br	b160 <__udivdi3+0x200>
    b564:	01400604 	movi	r5,24
    b568:	2805883a 	mov	r2,r5
    b56c:	003efc06 	br	b160 <__udivdi3+0x200>
    b570:	1c3f862e 	bgeu	r3,r16,b38c <__udivdi3+0x42c>
    b574:	1dc7883a 	add	r3,r3,r23
    b578:	ad7fffc4 	addi	r21,r21,-1
    b57c:	003f8306 	br	b38c <__udivdi3+0x42c>
    b580:	157f6e2e 	bgeu	r2,r21,b33c <__udivdi3+0x3dc>
    b584:	a53fffc4 	addi	r20,r20,-1
    b588:	15c5883a 	add	r2,r2,r23
    b58c:	003f6b06 	br	b33c <__udivdi3+0x3dc>
    b590:	ad7fffc4 	addi	r21,r21,-1
    b594:	003ec206 	br	b0a0 <__udivdi3+0x140>
    b598:	843fffc4 	addi	r16,r16,-1
    b59c:	14c5883a 	add	r2,r2,r19
    b5a0:	003f1306 	br	b1f0 <__udivdi3+0x290>
    b5a4:	ad7fffc4 	addi	r21,r21,-1
    b5a8:	003f2506 	br	b240 <__udivdi3+0x2e0>
    b5ac:	157fb92e 	bgeu	r2,r21,b494 <__udivdi3+0x534>
    b5b0:	297fffc4 	addi	r5,r5,-1
    b5b4:	14c5883a 	add	r2,r2,r19
    b5b8:	d9400215 	stw	r5,8(sp)
    b5bc:	003fb506 	br	b494 <__udivdi3+0x534>
    b5c0:	843fffc4 	addi	r16,r16,-1
    b5c4:	14c5883a 	add	r2,r2,r19
    b5c8:	003ea106 	br	b050 <__udivdi3+0xf0>

0000b5cc <__umoddi3>:
    b5cc:	defff004 	addi	sp,sp,-64
    b5d0:	3011883a 	mov	r8,r6
    b5d4:	000d883a 	mov	r6,zero
    b5d8:	dd400b15 	stw	r21,44(sp)
    b5dc:	dcc00915 	stw	r19,36(sp)
    b5e0:	dc000615 	stw	r16,24(sp)
    b5e4:	dfc00f15 	stw	ra,60(sp)
    b5e8:	df000e15 	stw	fp,56(sp)
    b5ec:	ddc00d15 	stw	r23,52(sp)
    b5f0:	dd800c15 	stw	r22,48(sp)
    b5f4:	dd000a15 	stw	r20,40(sp)
    b5f8:	dc800815 	stw	r18,32(sp)
    b5fc:	dc400715 	stw	r17,28(sp)
    b600:	2817883a 	mov	r11,r5
    b604:	d9800415 	stw	r6,16(sp)
    b608:	4027883a 	mov	r19,r8
    b60c:	d9800515 	stw	r6,20(sp)
    b610:	2021883a 	mov	r16,r4
    b614:	282b883a 	mov	r21,r5
    b618:	38002c1e 	bne	r7,zero,b6cc <__umoddi3+0x100>
    b61c:	2a005636 	bltu	r5,r8,b778 <__umoddi3+0x1ac>
    b620:	40009a26 	beq	r8,zero,b88c <__umoddi3+0x2c0>
    b624:	00bfffd4 	movui	r2,65535
    b628:	14c09236 	bltu	r2,r19,b874 <__umoddi3+0x2a8>
    b62c:	00803fc4 	movi	r2,255
    b630:	14c15c36 	bltu	r2,r19,bba4 <__umoddi3+0x5d8>
    b634:	000b883a 	mov	r5,zero
    b638:	0005883a 	mov	r2,zero
    b63c:	9884d83a 	srl	r2,r19,r2
    b640:	01000074 	movhi	r4,1
    b644:	213c5104 	addi	r4,r4,-3772
    b648:	01800804 	movi	r6,32
    b64c:	1105883a 	add	r2,r2,r4
    b650:	10c00003 	ldbu	r3,0(r2)
    b654:	28c7883a 	add	r3,r5,r3
    b658:	30e5c83a 	sub	r18,r6,r3
    b65c:	9000a41e 	bne	r18,zero,b8f0 <__umoddi3+0x324>
    b660:	982ed43a 	srli	r23,r19,16
    b664:	acebc83a 	sub	r21,r21,r19
    b668:	9d3fffcc 	andi	r20,r19,65535
    b66c:	002d883a 	mov	r22,zero
    b670:	a809883a 	mov	r4,r21
    b674:	b80b883a 	mov	r5,r23
    b678:	000d0840 	call	d084 <__udivsi3>
    b67c:	100b883a 	mov	r5,r2
    b680:	a009883a 	mov	r4,r20
    b684:	000d0940 	call	d094 <__mulsi3>
    b688:	a809883a 	mov	r4,r21
    b68c:	b80b883a 	mov	r5,r23
    b690:	1023883a 	mov	r17,r2
    b694:	000d08c0 	call	d08c <__umodsi3>
    b698:	1004943a 	slli	r2,r2,16
    b69c:	8006d43a 	srli	r3,r16,16
    b6a0:	10c4b03a 	or	r2,r2,r3
    b6a4:	1440032e 	bgeu	r2,r17,b6b4 <__umoddi3+0xe8>
    b6a8:	14c5883a 	add	r2,r2,r19
    b6ac:	14c00136 	bltu	r2,r19,b6b4 <__umoddi3+0xe8>
    b6b0:	14415836 	bltu	r2,r17,bc14 <__umoddi3+0x648>
    b6b4:	1463c83a 	sub	r17,r2,r17
    b6b8:	8809883a 	mov	r4,r17
    b6bc:	b80b883a 	mov	r5,r23
    b6c0:	000d0840 	call	d084 <__udivsi3>
    b6c4:	a009883a 	mov	r4,r20
    b6c8:	00005306 	br	b818 <__umoddi3+0x24c>
    b6cc:	380d883a 	mov	r6,r7
    b6d0:	29c0132e 	bgeu	r5,r7,b720 <__umoddi3+0x154>
    b6d4:	d9000415 	stw	r4,16(sp)
    b6d8:	d9400515 	stw	r5,20(sp)
    b6dc:	d9400417 	ldw	r5,16(sp)
    b6e0:	5813883a 	mov	r9,r11
    b6e4:	2811883a 	mov	r8,r5
    b6e8:	4005883a 	mov	r2,r8
    b6ec:	4807883a 	mov	r3,r9
    b6f0:	dfc00f17 	ldw	ra,60(sp)
    b6f4:	df000e17 	ldw	fp,56(sp)
    b6f8:	ddc00d17 	ldw	r23,52(sp)
    b6fc:	dd800c17 	ldw	r22,48(sp)
    b700:	dd400b17 	ldw	r21,44(sp)
    b704:	dd000a17 	ldw	r20,40(sp)
    b708:	dcc00917 	ldw	r19,36(sp)
    b70c:	dc800817 	ldw	r18,32(sp)
    b710:	dc400717 	ldw	r17,28(sp)
    b714:	dc000617 	ldw	r16,24(sp)
    b718:	dec01004 	addi	sp,sp,64
    b71c:	f800283a 	ret
    b720:	00bfffd4 	movui	r2,65535
    b724:	11c06636 	bltu	r2,r7,b8c0 <__umoddi3+0x2f4>
    b728:	00803fc4 	movi	r2,255
    b72c:	11c12036 	bltu	r2,r7,bbb0 <__umoddi3+0x5e4>
    b730:	000b883a 	mov	r5,zero
    b734:	0005883a 	mov	r2,zero
    b738:	3084d83a 	srl	r2,r6,r2
    b73c:	01000074 	movhi	r4,1
    b740:	213c5104 	addi	r4,r4,-3772
    b744:	01c00804 	movi	r7,32
    b748:	1105883a 	add	r2,r2,r4
    b74c:	10c00003 	ldbu	r3,0(r2)
    b750:	28c7883a 	add	r3,r5,r3
    b754:	38e5c83a 	sub	r18,r7,r3
    b758:	9000941e 	bne	r18,zero,b9ac <__umoddi3+0x3e0>
    b75c:	35405e36 	bltu	r6,r21,b8d8 <__umoddi3+0x30c>
    b760:	84c05d2e 	bgeu	r16,r19,b8d8 <__umoddi3+0x30c>
    b764:	8011883a 	mov	r8,r16
    b768:	a813883a 	mov	r9,r21
    b76c:	dc000415 	stw	r16,16(sp)
    b770:	dd400515 	stw	r21,20(sp)
    b774:	003fdc06 	br	b6e8 <__umoddi3+0x11c>
    b778:	00bfffd4 	movui	r2,65535
    b77c:	12004a36 	bltu	r2,r8,b8a8 <__umoddi3+0x2dc>
    b780:	00803fc4 	movi	r2,255
    b784:	12010d36 	bltu	r2,r8,bbbc <__umoddi3+0x5f0>
    b788:	000b883a 	mov	r5,zero
    b78c:	0005883a 	mov	r2,zero
    b790:	9884d83a 	srl	r2,r19,r2
    b794:	01000074 	movhi	r4,1
    b798:	213c5104 	addi	r4,r4,-3772
    b79c:	01800804 	movi	r6,32
    b7a0:	1105883a 	add	r2,r2,r4
    b7a4:	10c00003 	ldbu	r3,0(r2)
    b7a8:	28c7883a 	add	r3,r5,r3
    b7ac:	30c7c83a 	sub	r3,r6,r3
    b7b0:	1800dc1e 	bne	r3,zero,bb24 <__umoddi3+0x558>
    b7b4:	002d883a 	mov	r22,zero
    b7b8:	982ed43a 	srli	r23,r19,16
    b7bc:	a809883a 	mov	r4,r21
    b7c0:	9cbfffcc 	andi	r18,r19,65535
    b7c4:	b80b883a 	mov	r5,r23
    b7c8:	000d0840 	call	d084 <__udivsi3>
    b7cc:	100b883a 	mov	r5,r2
    b7d0:	9009883a 	mov	r4,r18
    b7d4:	000d0940 	call	d094 <__mulsi3>
    b7d8:	a809883a 	mov	r4,r21
    b7dc:	b80b883a 	mov	r5,r23
    b7e0:	1023883a 	mov	r17,r2
    b7e4:	000d08c0 	call	d08c <__umodsi3>
    b7e8:	1004943a 	slli	r2,r2,16
    b7ec:	8006d43a 	srli	r3,r16,16
    b7f0:	10c4b03a 	or	r2,r2,r3
    b7f4:	1440032e 	bgeu	r2,r17,b804 <__umoddi3+0x238>
    b7f8:	14c5883a 	add	r2,r2,r19
    b7fc:	14c00136 	bltu	r2,r19,b804 <__umoddi3+0x238>
    b800:	14410236 	bltu	r2,r17,bc0c <__umoddi3+0x640>
    b804:	1463c83a 	sub	r17,r2,r17
    b808:	8809883a 	mov	r4,r17
    b80c:	b80b883a 	mov	r5,r23
    b810:	000d0840 	call	d084 <__udivsi3>
    b814:	9009883a 	mov	r4,r18
    b818:	100b883a 	mov	r5,r2
    b81c:	000d0940 	call	d094 <__mulsi3>
    b820:	8809883a 	mov	r4,r17
    b824:	b80b883a 	mov	r5,r23
    b828:	102b883a 	mov	r21,r2
    b82c:	000d08c0 	call	d08c <__umodsi3>
    b830:	1004943a 	slli	r2,r2,16
    b834:	80ffffcc 	andi	r3,r16,65535
    b838:	10c4b03a 	or	r2,r2,r3
    b83c:	1540042e 	bgeu	r2,r21,b850 <__umoddi3+0x284>
    b840:	14c5883a 	add	r2,r2,r19
    b844:	14c00236 	bltu	r2,r19,b850 <__umoddi3+0x284>
    b848:	1540012e 	bgeu	r2,r21,b850 <__umoddi3+0x284>
    b84c:	14c5883a 	add	r2,r2,r19
    b850:	1545c83a 	sub	r2,r2,r21
    b854:	1584d83a 	srl	r2,r2,r22
    b858:	0013883a 	mov	r9,zero
    b85c:	d8800415 	stw	r2,16(sp)
    b860:	d8c00417 	ldw	r3,16(sp)
    b864:	0005883a 	mov	r2,zero
    b868:	d8800515 	stw	r2,20(sp)
    b86c:	1811883a 	mov	r8,r3
    b870:	003f9d06 	br	b6e8 <__umoddi3+0x11c>
    b874:	00804034 	movhi	r2,256
    b878:	10bfffc4 	addi	r2,r2,-1
    b87c:	14c0c636 	bltu	r2,r19,bb98 <__umoddi3+0x5cc>
    b880:	01400404 	movi	r5,16
    b884:	2805883a 	mov	r2,r5
    b888:	003f6c06 	br	b63c <__umoddi3+0x70>
    b88c:	01000044 	movi	r4,1
    b890:	000b883a 	mov	r5,zero
    b894:	000d0840 	call	d084 <__udivsi3>
    b898:	1027883a 	mov	r19,r2
    b89c:	00bfffd4 	movui	r2,65535
    b8a0:	14fff436 	bltu	r2,r19,b874 <__umoddi3+0x2a8>
    b8a4:	003f6106 	br	b62c <__umoddi3+0x60>
    b8a8:	00804034 	movhi	r2,256
    b8ac:	10bfffc4 	addi	r2,r2,-1
    b8b0:	1200c536 	bltu	r2,r8,bbc8 <__umoddi3+0x5fc>
    b8b4:	01400404 	movi	r5,16
    b8b8:	2805883a 	mov	r2,r5
    b8bc:	003fb406 	br	b790 <__umoddi3+0x1c4>
    b8c0:	00804034 	movhi	r2,256
    b8c4:	10bfffc4 	addi	r2,r2,-1
    b8c8:	11c0c236 	bltu	r2,r7,bbd4 <__umoddi3+0x608>
    b8cc:	01400404 	movi	r5,16
    b8d0:	2805883a 	mov	r2,r5
    b8d4:	003f9806 	br	b738 <__umoddi3+0x16c>
    b8d8:	84c9c83a 	sub	r4,r16,r19
    b8dc:	8105803a 	cmpltu	r2,r16,r4
    b8e0:	a987c83a 	sub	r3,r21,r6
    b8e4:	18abc83a 	sub	r21,r3,r2
    b8e8:	2021883a 	mov	r16,r4
    b8ec:	003f9d06 	br	b764 <__umoddi3+0x198>
    b8f0:	9ca6983a 	sll	r19,r19,r18
    b8f4:	3485c83a 	sub	r2,r6,r18
    b8f8:	a8a2d83a 	srl	r17,r21,r2
    b8fc:	982ed43a 	srli	r23,r19,16
    b900:	ac86983a 	sll	r3,r21,r18
    b904:	8084d83a 	srl	r2,r16,r2
    b908:	8809883a 	mov	r4,r17
    b90c:	b80b883a 	mov	r5,r23
    b910:	18b8b03a 	or	fp,r3,r2
    b914:	9d3fffcc 	andi	r20,r19,65535
    b918:	000d0840 	call	d084 <__udivsi3>
    b91c:	100b883a 	mov	r5,r2
    b920:	a009883a 	mov	r4,r20
    b924:	000d0940 	call	d094 <__mulsi3>
    b928:	8809883a 	mov	r4,r17
    b92c:	b80b883a 	mov	r5,r23
    b930:	102b883a 	mov	r21,r2
    b934:	000d08c0 	call	d08c <__umodsi3>
    b938:	1004943a 	slli	r2,r2,16
    b93c:	e006d43a 	srli	r3,fp,16
    b940:	902d883a 	mov	r22,r18
    b944:	10c4b03a 	or	r2,r2,r3
    b948:	1540022e 	bgeu	r2,r21,b954 <__umoddi3+0x388>
    b94c:	14c5883a 	add	r2,r2,r19
    b950:	14c0ab2e 	bgeu	r2,r19,bc00 <__umoddi3+0x634>
    b954:	1563c83a 	sub	r17,r2,r21
    b958:	8809883a 	mov	r4,r17
    b95c:	b80b883a 	mov	r5,r23
    b960:	000d0840 	call	d084 <__udivsi3>
    b964:	100b883a 	mov	r5,r2
    b968:	a009883a 	mov	r4,r20
    b96c:	000d0940 	call	d094 <__mulsi3>
    b970:	8809883a 	mov	r4,r17
    b974:	b80b883a 	mov	r5,r23
    b978:	102b883a 	mov	r21,r2
    b97c:	000d08c0 	call	d08c <__umodsi3>
    b980:	1004943a 	slli	r2,r2,16
    b984:	e0ffffcc 	andi	r3,fp,65535
    b988:	10c4b03a 	or	r2,r2,r3
    b98c:	1540042e 	bgeu	r2,r21,b9a0 <__umoddi3+0x3d4>
    b990:	14c5883a 	add	r2,r2,r19
    b994:	14c00236 	bltu	r2,r19,b9a0 <__umoddi3+0x3d4>
    b998:	1540012e 	bgeu	r2,r21,b9a0 <__umoddi3+0x3d4>
    b99c:	14c5883a 	add	r2,r2,r19
    b9a0:	84a0983a 	sll	r16,r16,r18
    b9a4:	156bc83a 	sub	r21,r2,r21
    b9a8:	003f3106 	br	b670 <__umoddi3+0xa4>
    b9ac:	3c8fc83a 	sub	r7,r7,r18
    b9b0:	3486983a 	sll	r3,r6,r18
    b9b4:	99c4d83a 	srl	r2,r19,r7
    b9b8:	a9e2d83a 	srl	r17,r21,r7
    b9bc:	ac8c983a 	sll	r6,r21,r18
    b9c0:	18acb03a 	or	r22,r3,r2
    b9c4:	b02ed43a 	srli	r23,r22,16
    b9c8:	81c4d83a 	srl	r2,r16,r7
    b9cc:	8809883a 	mov	r4,r17
    b9d0:	b80b883a 	mov	r5,r23
    b9d4:	308cb03a 	or	r6,r6,r2
    b9d8:	d9c00315 	stw	r7,12(sp)
    b9dc:	d9800215 	stw	r6,8(sp)
    b9e0:	b53fffcc 	andi	r20,r22,65535
    b9e4:	000d0840 	call	d084 <__udivsi3>
    b9e8:	100b883a 	mov	r5,r2
    b9ec:	a009883a 	mov	r4,r20
    b9f0:	1039883a 	mov	fp,r2
    b9f4:	000d0940 	call	d094 <__mulsi3>
    b9f8:	8809883a 	mov	r4,r17
    b9fc:	b80b883a 	mov	r5,r23
    ba00:	102b883a 	mov	r21,r2
    ba04:	000d08c0 	call	d08c <__umodsi3>
    ba08:	d9000217 	ldw	r4,8(sp)
    ba0c:	1004943a 	slli	r2,r2,16
    ba10:	9ca6983a 	sll	r19,r19,r18
    ba14:	2006d43a 	srli	r3,r4,16
    ba18:	84a0983a 	sll	r16,r16,r18
    ba1c:	dcc00015 	stw	r19,0(sp)
    ba20:	10c4b03a 	or	r2,r2,r3
    ba24:	dc000115 	stw	r16,4(sp)
    ba28:	1540032e 	bgeu	r2,r21,ba38 <__umoddi3+0x46c>
    ba2c:	1585883a 	add	r2,r2,r22
    ba30:	e73fffc4 	addi	fp,fp,-1
    ba34:	15806e2e 	bgeu	r2,r22,bbf0 <__umoddi3+0x624>
    ba38:	1563c83a 	sub	r17,r2,r21
    ba3c:	8809883a 	mov	r4,r17
    ba40:	b80b883a 	mov	r5,r23
    ba44:	000d0840 	call	d084 <__udivsi3>
    ba48:	100b883a 	mov	r5,r2
    ba4c:	a009883a 	mov	r4,r20
    ba50:	1021883a 	mov	r16,r2
    ba54:	000d0940 	call	d094 <__mulsi3>
    ba58:	b80b883a 	mov	r5,r23
    ba5c:	8809883a 	mov	r4,r17
    ba60:	1029883a 	mov	r20,r2
    ba64:	000d08c0 	call	d08c <__umodsi3>
    ba68:	d9400217 	ldw	r5,8(sp)
    ba6c:	1004943a 	slli	r2,r2,16
    ba70:	28ffffcc 	andi	r3,r5,65535
    ba74:	10c4b03a 	or	r2,r2,r3
    ba78:	1500032e 	bgeu	r2,r20,ba88 <__umoddi3+0x4bc>
    ba7c:	1585883a 	add	r2,r2,r22
    ba80:	843fffc4 	addi	r16,r16,-1
    ba84:	1580562e 	bgeu	r2,r22,bbe0 <__umoddi3+0x614>
    ba88:	d9800017 	ldw	r6,0(sp)
    ba8c:	e022943a 	slli	r17,fp,16
    ba90:	302ed43a 	srli	r23,r6,16
    ba94:	8462b03a 	or	r17,r16,r17
    ba98:	34ffffcc 	andi	r19,r6,65535
    ba9c:	882ad43a 	srli	r21,r17,16
    baa0:	8c7fffcc 	andi	r17,r17,65535
    baa4:	8809883a 	mov	r4,r17
    baa8:	980b883a 	mov	r5,r19
    baac:	1521c83a 	sub	r16,r2,r20
    bab0:	000d0940 	call	d094 <__mulsi3>
    bab4:	8809883a 	mov	r4,r17
    bab8:	b80b883a 	mov	r5,r23
    babc:	1029883a 	mov	r20,r2
    bac0:	000d0940 	call	d094 <__mulsi3>
    bac4:	980b883a 	mov	r5,r19
    bac8:	a809883a 	mov	r4,r21
    bacc:	1023883a 	mov	r17,r2
    bad0:	000d0940 	call	d094 <__mulsi3>
    bad4:	a809883a 	mov	r4,r21
    bad8:	b80b883a 	mov	r5,r23
    badc:	1027883a 	mov	r19,r2
    bae0:	000d0940 	call	d094 <__mulsi3>
    bae4:	100b883a 	mov	r5,r2
    bae8:	a004d43a 	srli	r2,r20,16
    baec:	8ce3883a 	add	r17,r17,r19
    baf0:	1449883a 	add	r4,r2,r17
    baf4:	24c0022e 	bgeu	r4,r19,bb00 <__umoddi3+0x534>
    baf8:	00800074 	movhi	r2,1
    bafc:	288b883a 	add	r5,r5,r2
    bb00:	2004d43a 	srli	r2,r4,16
    bb04:	2008943a 	slli	r4,r4,16
    bb08:	a0ffffcc 	andi	r3,r20,65535
    bb0c:	288d883a 	add	r6,r5,r2
    bb10:	20c9883a 	add	r4,r4,r3
    bb14:	81800b36 	bltu	r16,r6,bb44 <__umoddi3+0x578>
    bb18:	81804026 	beq	r16,r6,bc1c <__umoddi3+0x650>
    bb1c:	818dc83a 	sub	r6,r16,r6
    bb20:	00000f06 	br	bb60 <__umoddi3+0x594>
    bb24:	30c5c83a 	sub	r2,r6,r3
    bb28:	182d883a 	mov	r22,r3
    bb2c:	8084d83a 	srl	r2,r16,r2
    bb30:	a8c6983a 	sll	r3,r21,r3
    bb34:	9da6983a 	sll	r19,r19,r22
    bb38:	85a0983a 	sll	r16,r16,r22
    bb3c:	18aab03a 	or	r21,r3,r2
    bb40:	003f1d06 	br	b7b8 <__umoddi3+0x1ec>
    bb44:	d8c00017 	ldw	r3,0(sp)
    bb48:	20c5c83a 	sub	r2,r4,r3
    bb4c:	2089803a 	cmpltu	r4,r4,r2
    bb50:	3587c83a 	sub	r3,r6,r22
    bb54:	1907c83a 	sub	r3,r3,r4
    bb58:	80cdc83a 	sub	r6,r16,r3
    bb5c:	1009883a 	mov	r4,r2
    bb60:	d9400117 	ldw	r5,4(sp)
    bb64:	2905c83a 	sub	r2,r5,r4
    bb68:	2887803a 	cmpltu	r3,r5,r2
    bb6c:	30c7c83a 	sub	r3,r6,r3
    bb70:	d9800317 	ldw	r6,12(sp)
    bb74:	1484d83a 	srl	r2,r2,r18
    bb78:	1988983a 	sll	r4,r3,r6
    bb7c:	1c86d83a 	srl	r3,r3,r18
    bb80:	2088b03a 	or	r4,r4,r2
    bb84:	2011883a 	mov	r8,r4
    bb88:	1813883a 	mov	r9,r3
    bb8c:	d9000415 	stw	r4,16(sp)
    bb90:	d8c00515 	stw	r3,20(sp)
    bb94:	003ed406 	br	b6e8 <__umoddi3+0x11c>
    bb98:	01400604 	movi	r5,24
    bb9c:	2805883a 	mov	r2,r5
    bba0:	003ea606 	br	b63c <__umoddi3+0x70>
    bba4:	01400204 	movi	r5,8
    bba8:	2805883a 	mov	r2,r5
    bbac:	003ea306 	br	b63c <__umoddi3+0x70>
    bbb0:	01400204 	movi	r5,8
    bbb4:	2805883a 	mov	r2,r5
    bbb8:	003edf06 	br	b738 <__umoddi3+0x16c>
    bbbc:	01400204 	movi	r5,8
    bbc0:	2805883a 	mov	r2,r5
    bbc4:	003ef206 	br	b790 <__umoddi3+0x1c4>
    bbc8:	01400604 	movi	r5,24
    bbcc:	2805883a 	mov	r2,r5
    bbd0:	003eef06 	br	b790 <__umoddi3+0x1c4>
    bbd4:	01400604 	movi	r5,24
    bbd8:	2805883a 	mov	r2,r5
    bbdc:	003ed606 	br	b738 <__umoddi3+0x16c>
    bbe0:	153fa92e 	bgeu	r2,r20,ba88 <__umoddi3+0x4bc>
    bbe4:	843fffc4 	addi	r16,r16,-1
    bbe8:	1585883a 	add	r2,r2,r22
    bbec:	003fa606 	br	ba88 <__umoddi3+0x4bc>
    bbf0:	157f912e 	bgeu	r2,r21,ba38 <__umoddi3+0x46c>
    bbf4:	e73fffc4 	addi	fp,fp,-1
    bbf8:	1585883a 	add	r2,r2,r22
    bbfc:	003f8e06 	br	ba38 <__umoddi3+0x46c>
    bc00:	157f542e 	bgeu	r2,r21,b954 <__umoddi3+0x388>
    bc04:	14c5883a 	add	r2,r2,r19
    bc08:	003f5206 	br	b954 <__umoddi3+0x388>
    bc0c:	14c5883a 	add	r2,r2,r19
    bc10:	003efc06 	br	b804 <__umoddi3+0x238>
    bc14:	14c5883a 	add	r2,r2,r19
    bc18:	003ea606 	br	b6b4 <__umoddi3+0xe8>
    bc1c:	d8800117 	ldw	r2,4(sp)
    bc20:	113fc836 	bltu	r2,r4,bb44 <__umoddi3+0x578>
    bc24:	000d883a 	mov	r6,zero
    bc28:	003fcd06 	br	bb60 <__umoddi3+0x594>

0000bc2c <__nesf2>:
    bc2c:	defff304 	addi	sp,sp,-52
    bc30:	dc400b15 	stw	r17,44(sp)
    bc34:	dc400204 	addi	r17,sp,8
    bc38:	dc000a15 	stw	r16,40(sp)
    bc3c:	d9000015 	stw	r4,0(sp)
    bc40:	d9400115 	stw	r5,4(sp)
    bc44:	d809883a 	mov	r4,sp
    bc48:	880b883a 	mov	r5,r17
    bc4c:	dc000604 	addi	r16,sp,24
    bc50:	dfc00c15 	stw	ra,48(sp)
    bc54:	00007640 	call	764 <__unpack_f>
    bc58:	d9000104 	addi	r4,sp,4
    bc5c:	800b883a 	mov	r5,r16
    bc60:	00007640 	call	764 <__unpack_f>
    bc64:	d8800217 	ldw	r2,8(sp)
    bc68:	00c00044 	movi	r3,1
    bc6c:	180d883a 	mov	r6,r3
    bc70:	1880062e 	bgeu	r3,r2,bc8c <__nesf2+0x60>
    bc74:	d8800617 	ldw	r2,24(sp)
    bc78:	8809883a 	mov	r4,r17
    bc7c:	800b883a 	mov	r5,r16
    bc80:	1880022e 	bgeu	r3,r2,bc8c <__nesf2+0x60>
    bc84:	000d2700 	call	d270 <__fpcmp_parts_f>
    bc88:	100d883a 	mov	r6,r2
    bc8c:	3005883a 	mov	r2,r6
    bc90:	dfc00c17 	ldw	ra,48(sp)
    bc94:	dc400b17 	ldw	r17,44(sp)
    bc98:	dc000a17 	ldw	r16,40(sp)
    bc9c:	dec00d04 	addi	sp,sp,52
    bca0:	f800283a 	ret

0000bca4 <__gtsf2>:
    bca4:	defff304 	addi	sp,sp,-52
    bca8:	dc400b15 	stw	r17,44(sp)
    bcac:	dc400204 	addi	r17,sp,8
    bcb0:	dc000a15 	stw	r16,40(sp)
    bcb4:	d9000015 	stw	r4,0(sp)
    bcb8:	d9400115 	stw	r5,4(sp)
    bcbc:	d809883a 	mov	r4,sp
    bcc0:	880b883a 	mov	r5,r17
    bcc4:	dc000604 	addi	r16,sp,24
    bcc8:	dfc00c15 	stw	ra,48(sp)
    bccc:	00007640 	call	764 <__unpack_f>
    bcd0:	d9000104 	addi	r4,sp,4
    bcd4:	800b883a 	mov	r5,r16
    bcd8:	00007640 	call	764 <__unpack_f>
    bcdc:	d8800217 	ldw	r2,8(sp)
    bce0:	00c00044 	movi	r3,1
    bce4:	01bfffc4 	movi	r6,-1
    bce8:	1880062e 	bgeu	r3,r2,bd04 <__gtsf2+0x60>
    bcec:	d8800617 	ldw	r2,24(sp)
    bcf0:	8809883a 	mov	r4,r17
    bcf4:	800b883a 	mov	r5,r16
    bcf8:	1880022e 	bgeu	r3,r2,bd04 <__gtsf2+0x60>
    bcfc:	000d2700 	call	d270 <__fpcmp_parts_f>
    bd00:	100d883a 	mov	r6,r2
    bd04:	3005883a 	mov	r2,r6
    bd08:	dfc00c17 	ldw	ra,48(sp)
    bd0c:	dc400b17 	ldw	r17,44(sp)
    bd10:	dc000a17 	ldw	r16,40(sp)
    bd14:	dec00d04 	addi	sp,sp,52
    bd18:	f800283a 	ret

0000bd1c <__ltsf2>:
    bd1c:	defff304 	addi	sp,sp,-52
    bd20:	dc400b15 	stw	r17,44(sp)
    bd24:	dc400204 	addi	r17,sp,8
    bd28:	dc000a15 	stw	r16,40(sp)
    bd2c:	d9000015 	stw	r4,0(sp)
    bd30:	d9400115 	stw	r5,4(sp)
    bd34:	d809883a 	mov	r4,sp
    bd38:	880b883a 	mov	r5,r17
    bd3c:	dc000604 	addi	r16,sp,24
    bd40:	dfc00c15 	stw	ra,48(sp)
    bd44:	00007640 	call	764 <__unpack_f>
    bd48:	d9000104 	addi	r4,sp,4
    bd4c:	800b883a 	mov	r5,r16
    bd50:	00007640 	call	764 <__unpack_f>
    bd54:	d8800217 	ldw	r2,8(sp)
    bd58:	00c00044 	movi	r3,1
    bd5c:	180d883a 	mov	r6,r3
    bd60:	1880062e 	bgeu	r3,r2,bd7c <__ltsf2+0x60>
    bd64:	d8800617 	ldw	r2,24(sp)
    bd68:	8809883a 	mov	r4,r17
    bd6c:	800b883a 	mov	r5,r16
    bd70:	1880022e 	bgeu	r3,r2,bd7c <__ltsf2+0x60>
    bd74:	000d2700 	call	d270 <__fpcmp_parts_f>
    bd78:	100d883a 	mov	r6,r2
    bd7c:	3005883a 	mov	r2,r6
    bd80:	dfc00c17 	ldw	ra,48(sp)
    bd84:	dc400b17 	ldw	r17,44(sp)
    bd88:	dc000a17 	ldw	r16,40(sp)
    bd8c:	dec00d04 	addi	sp,sp,52
    bd90:	f800283a 	ret

0000bd94 <_fpadd_parts>:
    bd94:	defff804 	addi	sp,sp,-32
    bd98:	dcc00315 	stw	r19,12(sp)
    bd9c:	2027883a 	mov	r19,r4
    bda0:	21000017 	ldw	r4,0(r4)
    bda4:	00c00044 	movi	r3,1
    bda8:	dd400515 	stw	r21,20(sp)
    bdac:	dd000415 	stw	r20,16(sp)
    bdb0:	ddc00715 	stw	r23,28(sp)
    bdb4:	dd800615 	stw	r22,24(sp)
    bdb8:	dc800215 	stw	r18,8(sp)
    bdbc:	dc400115 	stw	r17,4(sp)
    bdc0:	dc000015 	stw	r16,0(sp)
    bdc4:	282b883a 	mov	r21,r5
    bdc8:	3029883a 	mov	r20,r6
    bdcc:	1900632e 	bgeu	r3,r4,bf5c <_fpadd_parts+0x1c8>
    bdd0:	28800017 	ldw	r2,0(r5)
    bdd4:	1880812e 	bgeu	r3,r2,bfdc <_fpadd_parts+0x248>
    bdd8:	00c00104 	movi	r3,4
    bddc:	20c0dc26 	beq	r4,r3,c150 <_fpadd_parts+0x3bc>
    bde0:	10c07e26 	beq	r2,r3,bfdc <_fpadd_parts+0x248>
    bde4:	00c00084 	movi	r3,2
    bde8:	10c06726 	beq	r2,r3,bf88 <_fpadd_parts+0x1f4>
    bdec:	20c07b26 	beq	r4,r3,bfdc <_fpadd_parts+0x248>
    bdf0:	9dc00217 	ldw	r23,8(r19)
    bdf4:	28c00217 	ldw	r3,8(r5)
    bdf8:	9c400317 	ldw	r17,12(r19)
    bdfc:	2bc00317 	ldw	r15,12(r5)
    be00:	b8cdc83a 	sub	r6,r23,r3
    be04:	9c800417 	ldw	r18,16(r19)
    be08:	2c000417 	ldw	r16,16(r5)
    be0c:	3009883a 	mov	r4,r6
    be10:	30009716 	blt	r6,zero,c070 <_fpadd_parts+0x2dc>
    be14:	00800fc4 	movi	r2,63
    be18:	11806b16 	blt	r2,r6,bfc8 <_fpadd_parts+0x234>
    be1c:	0100a40e 	bge	zero,r4,c0b0 <_fpadd_parts+0x31c>
    be20:	35bff804 	addi	r22,r6,-32
    be24:	b000bc16 	blt	r22,zero,c118 <_fpadd_parts+0x384>
    be28:	8596d83a 	srl	r11,r16,r22
    be2c:	0019883a 	mov	r12,zero
    be30:	0013883a 	mov	r9,zero
    be34:	01000044 	movi	r4,1
    be38:	0015883a 	mov	r10,zero
    be3c:	b000be16 	blt	r22,zero,c138 <_fpadd_parts+0x3a4>
    be40:	2590983a 	sll	r8,r4,r22
    be44:	000f883a 	mov	r7,zero
    be48:	00bfffc4 	movi	r2,-1
    be4c:	3889883a 	add	r4,r7,r2
    be50:	408b883a 	add	r5,r8,r2
    be54:	21cd803a 	cmpltu	r6,r4,r7
    be58:	314b883a 	add	r5,r6,r5
    be5c:	7904703a 	and	r2,r15,r4
    be60:	8146703a 	and	r3,r16,r5
    be64:	10c4b03a 	or	r2,r2,r3
    be68:	10000226 	beq	r2,zero,be74 <_fpadd_parts+0xe0>
    be6c:	02400044 	movi	r9,1
    be70:	0015883a 	mov	r10,zero
    be74:	5a5eb03a 	or	r15,r11,r9
    be78:	62a0b03a 	or	r16,r12,r10
    be7c:	99400117 	ldw	r5,4(r19)
    be80:	a8800117 	ldw	r2,4(r21)
    be84:	28806e26 	beq	r5,r2,c040 <_fpadd_parts+0x2ac>
    be88:	28006626 	beq	r5,zero,c024 <_fpadd_parts+0x290>
    be8c:	7c45c83a 	sub	r2,r15,r17
    be90:	7889803a 	cmpltu	r4,r15,r2
    be94:	8487c83a 	sub	r3,r16,r18
    be98:	1909c83a 	sub	r4,r3,r4
    be9c:	100d883a 	mov	r6,r2
    bea0:	200f883a 	mov	r7,r4
    bea4:	38007716 	blt	r7,zero,c084 <_fpadd_parts+0x2f0>
    bea8:	a5c00215 	stw	r23,8(r20)
    beac:	a1c00415 	stw	r7,16(r20)
    beb0:	a0000115 	stw	zero,4(r20)
    beb4:	a1800315 	stw	r6,12(r20)
    beb8:	a2000317 	ldw	r8,12(r20)
    bebc:	a2400417 	ldw	r9,16(r20)
    bec0:	00bfffc4 	movi	r2,-1
    bec4:	408b883a 	add	r5,r8,r2
    bec8:	2a09803a 	cmpltu	r4,r5,r8
    becc:	488d883a 	add	r6,r9,r2
    bed0:	01c40034 	movhi	r7,4096
    bed4:	39ffffc4 	addi	r7,r7,-1
    bed8:	218d883a 	add	r6,r4,r6
    bedc:	39801736 	bltu	r7,r6,bf3c <_fpadd_parts+0x1a8>
    bee0:	31c06526 	beq	r6,r7,c078 <_fpadd_parts+0x2e4>
    bee4:	a3000217 	ldw	r12,8(r20)
    bee8:	4209883a 	add	r4,r8,r8
    beec:	00bfffc4 	movi	r2,-1
    bef0:	220f803a 	cmpltu	r7,r4,r8
    bef4:	4a4b883a 	add	r5,r9,r9
    bef8:	394f883a 	add	r7,r7,r5
    befc:	2095883a 	add	r10,r4,r2
    bf00:	3897883a 	add	r11,r7,r2
    bf04:	510d803a 	cmpltu	r6,r10,r4
    bf08:	6099883a 	add	r12,r12,r2
    bf0c:	32d7883a 	add	r11,r6,r11
    bf10:	00840034 	movhi	r2,4096
    bf14:	10bfffc4 	addi	r2,r2,-1
    bf18:	2011883a 	mov	r8,r4
    bf1c:	3813883a 	mov	r9,r7
    bf20:	a1000315 	stw	r4,12(r20)
    bf24:	a1c00415 	stw	r7,16(r20)
    bf28:	a3000215 	stw	r12,8(r20)
    bf2c:	12c00336 	bltu	r2,r11,bf3c <_fpadd_parts+0x1a8>
    bf30:	58bfed1e 	bne	r11,r2,bee8 <_fpadd_parts+0x154>
    bf34:	00bfff84 	movi	r2,-2
    bf38:	12bfeb2e 	bgeu	r2,r10,bee8 <_fpadd_parts+0x154>
    bf3c:	a2800417 	ldw	r10,16(r20)
    bf40:	008000c4 	movi	r2,3
    bf44:	00c80034 	movhi	r3,8192
    bf48:	18ffffc4 	addi	r3,r3,-1
    bf4c:	a2400317 	ldw	r9,12(r20)
    bf50:	a0800015 	stw	r2,0(r20)
    bf54:	1a802336 	bltu	r3,r10,bfe4 <_fpadd_parts+0x250>
    bf58:	a027883a 	mov	r19,r20
    bf5c:	9805883a 	mov	r2,r19
    bf60:	ddc00717 	ldw	r23,28(sp)
    bf64:	dd800617 	ldw	r22,24(sp)
    bf68:	dd400517 	ldw	r21,20(sp)
    bf6c:	dd000417 	ldw	r20,16(sp)
    bf70:	dcc00317 	ldw	r19,12(sp)
    bf74:	dc800217 	ldw	r18,8(sp)
    bf78:	dc400117 	ldw	r17,4(sp)
    bf7c:	dc000017 	ldw	r16,0(sp)
    bf80:	dec00804 	addi	sp,sp,32
    bf84:	f800283a 	ret
    bf88:	20fff41e 	bne	r4,r3,bf5c <_fpadd_parts+0x1c8>
    bf8c:	31000015 	stw	r4,0(r6)
    bf90:	98800117 	ldw	r2,4(r19)
    bf94:	30800115 	stw	r2,4(r6)
    bf98:	98c00217 	ldw	r3,8(r19)
    bf9c:	30c00215 	stw	r3,8(r6)
    bfa0:	98800317 	ldw	r2,12(r19)
    bfa4:	30800315 	stw	r2,12(r6)
    bfa8:	98c00417 	ldw	r3,16(r19)
    bfac:	30c00415 	stw	r3,16(r6)
    bfb0:	98800117 	ldw	r2,4(r19)
    bfb4:	28c00117 	ldw	r3,4(r5)
    bfb8:	3027883a 	mov	r19,r6
    bfbc:	10c4703a 	and	r2,r2,r3
    bfc0:	30800115 	stw	r2,4(r6)
    bfc4:	003fe506 	br	bf5c <_fpadd_parts+0x1c8>
    bfc8:	1dc02616 	blt	r3,r23,c064 <_fpadd_parts+0x2d0>
    bfcc:	0023883a 	mov	r17,zero
    bfd0:	182f883a 	mov	r23,r3
    bfd4:	0025883a 	mov	r18,zero
    bfd8:	003fa806 	br	be7c <_fpadd_parts+0xe8>
    bfdc:	a827883a 	mov	r19,r21
    bfe0:	003fde06 	br	bf5c <_fpadd_parts+0x1c8>
    bfe4:	01800044 	movi	r6,1
    bfe8:	500497fa 	slli	r2,r10,31
    bfec:	4808d07a 	srli	r4,r9,1
    bff0:	518ad83a 	srl	r5,r10,r6
    bff4:	a2000217 	ldw	r8,8(r20)
    bff8:	1108b03a 	or	r4,r2,r4
    bffc:	0007883a 	mov	r3,zero
    c000:	4984703a 	and	r2,r9,r6
    c004:	208cb03a 	or	r6,r4,r2
    c008:	28ceb03a 	or	r7,r5,r3
    c00c:	42000044 	addi	r8,r8,1
    c010:	a027883a 	mov	r19,r20
    c014:	a1c00415 	stw	r7,16(r20)
    c018:	a2000215 	stw	r8,8(r20)
    c01c:	a1800315 	stw	r6,12(r20)
    c020:	003fce06 	br	bf5c <_fpadd_parts+0x1c8>
    c024:	8bc5c83a 	sub	r2,r17,r15
    c028:	8889803a 	cmpltu	r4,r17,r2
    c02c:	9407c83a 	sub	r3,r18,r16
    c030:	1909c83a 	sub	r4,r3,r4
    c034:	100d883a 	mov	r6,r2
    c038:	200f883a 	mov	r7,r4
    c03c:	003f9906 	br	bea4 <_fpadd_parts+0x110>
    c040:	7c45883a 	add	r2,r15,r17
    c044:	13c9803a 	cmpltu	r4,r2,r15
    c048:	8487883a 	add	r3,r16,r18
    c04c:	20c9883a 	add	r4,r4,r3
    c050:	a1400115 	stw	r5,4(r20)
    c054:	a5c00215 	stw	r23,8(r20)
    c058:	a0800315 	stw	r2,12(r20)
    c05c:	a1000415 	stw	r4,16(r20)
    c060:	003fb606 	br	bf3c <_fpadd_parts+0x1a8>
    c064:	001f883a 	mov	r15,zero
    c068:	0021883a 	mov	r16,zero
    c06c:	003f8306 	br	be7c <_fpadd_parts+0xe8>
    c070:	018dc83a 	sub	r6,zero,r6
    c074:	003f6706 	br	be14 <_fpadd_parts+0x80>
    c078:	00bfff84 	movi	r2,-2
    c07c:	117faf36 	bltu	r2,r5,bf3c <_fpadd_parts+0x1a8>
    c080:	003f9806 	br	bee4 <_fpadd_parts+0x150>
    c084:	0005883a 	mov	r2,zero
    c088:	1189c83a 	sub	r4,r2,r6
    c08c:	1105803a 	cmpltu	r2,r2,r4
    c090:	01cbc83a 	sub	r5,zero,r7
    c094:	2885c83a 	sub	r2,r5,r2
    c098:	01800044 	movi	r6,1
    c09c:	a1800115 	stw	r6,4(r20)
    c0a0:	a5c00215 	stw	r23,8(r20)
    c0a4:	a1000315 	stw	r4,12(r20)
    c0a8:	a0800415 	stw	r2,16(r20)
    c0ac:	003f8206 	br	beb8 <_fpadd_parts+0x124>
    c0b0:	203f7226 	beq	r4,zero,be7c <_fpadd_parts+0xe8>
    c0b4:	35bff804 	addi	r22,r6,-32
    c0b8:	b9af883a 	add	r23,r23,r6
    c0bc:	b0003116 	blt	r22,zero,c184 <_fpadd_parts+0x3f0>
    c0c0:	959ad83a 	srl	r13,r18,r22
    c0c4:	001d883a 	mov	r14,zero
    c0c8:	000f883a 	mov	r7,zero
    c0cc:	01000044 	movi	r4,1
    c0d0:	0011883a 	mov	r8,zero
    c0d4:	b0002516 	blt	r22,zero,c16c <_fpadd_parts+0x3d8>
    c0d8:	2594983a 	sll	r10,r4,r22
    c0dc:	0013883a 	mov	r9,zero
    c0e0:	00bfffc4 	movi	r2,-1
    c0e4:	4889883a 	add	r4,r9,r2
    c0e8:	508b883a 	add	r5,r10,r2
    c0ec:	224d803a 	cmpltu	r6,r4,r9
    c0f0:	314b883a 	add	r5,r6,r5
    c0f4:	8904703a 	and	r2,r17,r4
    c0f8:	9146703a 	and	r3,r18,r5
    c0fc:	10c4b03a 	or	r2,r2,r3
    c100:	10000226 	beq	r2,zero,c10c <_fpadd_parts+0x378>
    c104:	01c00044 	movi	r7,1
    c108:	0011883a 	mov	r8,zero
    c10c:	69e2b03a 	or	r17,r13,r7
    c110:	7224b03a 	or	r18,r14,r8
    c114:	003f5906 	br	be7c <_fpadd_parts+0xe8>
    c118:	8407883a 	add	r3,r16,r16
    c11c:	008007c4 	movi	r2,31
    c120:	1185c83a 	sub	r2,r2,r6
    c124:	1886983a 	sll	r3,r3,r2
    c128:	7996d83a 	srl	r11,r15,r6
    c12c:	8198d83a 	srl	r12,r16,r6
    c130:	1ad6b03a 	or	r11,r3,r11
    c134:	003f3e06 	br	be30 <_fpadd_parts+0x9c>
    c138:	2006d07a 	srli	r3,r4,1
    c13c:	008007c4 	movi	r2,31
    c140:	1185c83a 	sub	r2,r2,r6
    c144:	1890d83a 	srl	r8,r3,r2
    c148:	218e983a 	sll	r7,r4,r6
    c14c:	003f3e06 	br	be48 <_fpadd_parts+0xb4>
    c150:	113f821e 	bne	r2,r4,bf5c <_fpadd_parts+0x1c8>
    c154:	28c00117 	ldw	r3,4(r5)
    c158:	98800117 	ldw	r2,4(r19)
    c15c:	10ff7f26 	beq	r2,r3,bf5c <_fpadd_parts+0x1c8>
    c160:	04c00074 	movhi	r19,1
    c164:	9cfc4c04 	addi	r19,r19,-3792
    c168:	003f7c06 	br	bf5c <_fpadd_parts+0x1c8>
    c16c:	2006d07a 	srli	r3,r4,1
    c170:	008007c4 	movi	r2,31
    c174:	1185c83a 	sub	r2,r2,r6
    c178:	1894d83a 	srl	r10,r3,r2
    c17c:	2192983a 	sll	r9,r4,r6
    c180:	003fd706 	br	c0e0 <_fpadd_parts+0x34c>
    c184:	9487883a 	add	r3,r18,r18
    c188:	008007c4 	movi	r2,31
    c18c:	1185c83a 	sub	r2,r2,r6
    c190:	1886983a 	sll	r3,r3,r2
    c194:	899ad83a 	srl	r13,r17,r6
    c198:	919cd83a 	srl	r14,r18,r6
    c19c:	1b5ab03a 	or	r13,r3,r13
    c1a0:	003fc906 	br	c0c8 <_fpadd_parts+0x334>

0000c1a4 <__subdf3>:
    c1a4:	deffea04 	addi	sp,sp,-88
    c1a8:	dcc01415 	stw	r19,80(sp)
    c1ac:	dcc00404 	addi	r19,sp,16
    c1b0:	2011883a 	mov	r8,r4
    c1b4:	2813883a 	mov	r9,r5
    c1b8:	dc401315 	stw	r17,76(sp)
    c1bc:	d809883a 	mov	r4,sp
    c1c0:	980b883a 	mov	r5,r19
    c1c4:	dc400904 	addi	r17,sp,36
    c1c8:	dfc01515 	stw	ra,84(sp)
    c1cc:	da400115 	stw	r9,4(sp)
    c1d0:	d9c00315 	stw	r7,12(sp)
    c1d4:	da000015 	stw	r8,0(sp)
    c1d8:	d9800215 	stw	r6,8(sp)
    c1dc:	00008580 	call	858 <__unpack_d>
    c1e0:	d9000204 	addi	r4,sp,8
    c1e4:	880b883a 	mov	r5,r17
    c1e8:	00008580 	call	858 <__unpack_d>
    c1ec:	d8800a17 	ldw	r2,40(sp)
    c1f0:	880b883a 	mov	r5,r17
    c1f4:	9809883a 	mov	r4,r19
    c1f8:	d9800e04 	addi	r6,sp,56
    c1fc:	1080005c 	xori	r2,r2,1
    c200:	d8800a15 	stw	r2,40(sp)
    c204:	000bd940 	call	bd94 <_fpadd_parts>
    c208:	1009883a 	mov	r4,r2
    c20c:	000d3180 	call	d318 <__pack_d>
    c210:	dfc01517 	ldw	ra,84(sp)
    c214:	dcc01417 	ldw	r19,80(sp)
    c218:	dc401317 	ldw	r17,76(sp)
    c21c:	dec01604 	addi	sp,sp,88
    c220:	f800283a 	ret

0000c224 <__adddf3>:
    c224:	deffea04 	addi	sp,sp,-88
    c228:	dcc01415 	stw	r19,80(sp)
    c22c:	dcc00404 	addi	r19,sp,16
    c230:	2011883a 	mov	r8,r4
    c234:	2813883a 	mov	r9,r5
    c238:	dc401315 	stw	r17,76(sp)
    c23c:	d809883a 	mov	r4,sp
    c240:	980b883a 	mov	r5,r19
    c244:	dc400904 	addi	r17,sp,36
    c248:	dfc01515 	stw	ra,84(sp)
    c24c:	da400115 	stw	r9,4(sp)
    c250:	d9c00315 	stw	r7,12(sp)
    c254:	da000015 	stw	r8,0(sp)
    c258:	d9800215 	stw	r6,8(sp)
    c25c:	00008580 	call	858 <__unpack_d>
    c260:	d9000204 	addi	r4,sp,8
    c264:	880b883a 	mov	r5,r17
    c268:	00008580 	call	858 <__unpack_d>
    c26c:	d9800e04 	addi	r6,sp,56
    c270:	9809883a 	mov	r4,r19
    c274:	880b883a 	mov	r5,r17
    c278:	000bd940 	call	bd94 <_fpadd_parts>
    c27c:	1009883a 	mov	r4,r2
    c280:	000d3180 	call	d318 <__pack_d>
    c284:	dfc01517 	ldw	ra,84(sp)
    c288:	dcc01417 	ldw	r19,80(sp)
    c28c:	dc401317 	ldw	r17,76(sp)
    c290:	dec01604 	addi	sp,sp,88
    c294:	f800283a 	ret

0000c298 <__muldf3>:
    c298:	deffe004 	addi	sp,sp,-128
    c29c:	dc401815 	stw	r17,96(sp)
    c2a0:	dc400404 	addi	r17,sp,16
    c2a4:	2011883a 	mov	r8,r4
    c2a8:	2813883a 	mov	r9,r5
    c2ac:	dc001715 	stw	r16,92(sp)
    c2b0:	d809883a 	mov	r4,sp
    c2b4:	880b883a 	mov	r5,r17
    c2b8:	dc000904 	addi	r16,sp,36
    c2bc:	dfc01f15 	stw	ra,124(sp)
    c2c0:	da400115 	stw	r9,4(sp)
    c2c4:	d9c00315 	stw	r7,12(sp)
    c2c8:	da000015 	stw	r8,0(sp)
    c2cc:	d9800215 	stw	r6,8(sp)
    c2d0:	ddc01e15 	stw	r23,120(sp)
    c2d4:	dd801d15 	stw	r22,116(sp)
    c2d8:	dd401c15 	stw	r21,112(sp)
    c2dc:	dd001b15 	stw	r20,108(sp)
    c2e0:	dcc01a15 	stw	r19,104(sp)
    c2e4:	dc801915 	stw	r18,100(sp)
    c2e8:	00008580 	call	858 <__unpack_d>
    c2ec:	d9000204 	addi	r4,sp,8
    c2f0:	800b883a 	mov	r5,r16
    c2f4:	00008580 	call	858 <__unpack_d>
    c2f8:	d9000417 	ldw	r4,16(sp)
    c2fc:	00800044 	movi	r2,1
    c300:	1100102e 	bgeu	r2,r4,c344 <__muldf3+0xac>
    c304:	d8c00917 	ldw	r3,36(sp)
    c308:	10c0062e 	bgeu	r2,r3,c324 <__muldf3+0x8c>
    c30c:	00800104 	movi	r2,4
    c310:	20800a26 	beq	r4,r2,c33c <__muldf3+0xa4>
    c314:	1880cc26 	beq	r3,r2,c648 <__muldf3+0x3b0>
    c318:	00800084 	movi	r2,2
    c31c:	20800926 	beq	r4,r2,c344 <__muldf3+0xac>
    c320:	1880191e 	bne	r3,r2,c388 <__muldf3+0xf0>
    c324:	d8c00a17 	ldw	r3,40(sp)
    c328:	d8800517 	ldw	r2,20(sp)
    c32c:	8009883a 	mov	r4,r16
    c330:	10c4c03a 	cmpne	r2,r2,r3
    c334:	d8800a15 	stw	r2,40(sp)
    c338:	00000706 	br	c358 <__muldf3+0xc0>
    c33c:	00800084 	movi	r2,2
    c340:	1880c326 	beq	r3,r2,c650 <__muldf3+0x3b8>
    c344:	d8800517 	ldw	r2,20(sp)
    c348:	d8c00a17 	ldw	r3,40(sp)
    c34c:	8809883a 	mov	r4,r17
    c350:	10c4c03a 	cmpne	r2,r2,r3
    c354:	d8800515 	stw	r2,20(sp)
    c358:	000d3180 	call	d318 <__pack_d>
    c35c:	dfc01f17 	ldw	ra,124(sp)
    c360:	ddc01e17 	ldw	r23,120(sp)
    c364:	dd801d17 	ldw	r22,116(sp)
    c368:	dd401c17 	ldw	r21,112(sp)
    c36c:	dd001b17 	ldw	r20,108(sp)
    c370:	dcc01a17 	ldw	r19,104(sp)
    c374:	dc801917 	ldw	r18,100(sp)
    c378:	dc401817 	ldw	r17,96(sp)
    c37c:	dc001717 	ldw	r16,92(sp)
    c380:	dec02004 	addi	sp,sp,128
    c384:	f800283a 	ret
    c388:	dd800717 	ldw	r22,28(sp)
    c38c:	dc800c17 	ldw	r18,48(sp)
    c390:	002b883a 	mov	r21,zero
    c394:	0023883a 	mov	r17,zero
    c398:	a80b883a 	mov	r5,r21
    c39c:	b00d883a 	mov	r6,r22
    c3a0:	880f883a 	mov	r7,r17
    c3a4:	ddc00817 	ldw	r23,32(sp)
    c3a8:	dcc00d17 	ldw	r19,52(sp)
    c3ac:	9009883a 	mov	r4,r18
    c3b0:	000d0cc0 	call	d0cc <__muldi3>
    c3b4:	001b883a 	mov	r13,zero
    c3b8:	680f883a 	mov	r7,r13
    c3bc:	b009883a 	mov	r4,r22
    c3c0:	000b883a 	mov	r5,zero
    c3c4:	980d883a 	mov	r6,r19
    c3c8:	b82d883a 	mov	r22,r23
    c3cc:	002f883a 	mov	r23,zero
    c3d0:	db401615 	stw	r13,88(sp)
    c3d4:	d8801315 	stw	r2,76(sp)
    c3d8:	d8c01415 	stw	r3,80(sp)
    c3dc:	dcc01515 	stw	r19,84(sp)
    c3e0:	000d0cc0 	call	d0cc <__muldi3>
    c3e4:	b00d883a 	mov	r6,r22
    c3e8:	000b883a 	mov	r5,zero
    c3ec:	9009883a 	mov	r4,r18
    c3f0:	b80f883a 	mov	r7,r23
    c3f4:	1021883a 	mov	r16,r2
    c3f8:	1823883a 	mov	r17,r3
    c3fc:	000d0cc0 	call	d0cc <__muldi3>
    c400:	8085883a 	add	r2,r16,r2
    c404:	140d803a 	cmpltu	r6,r2,r16
    c408:	88c7883a 	add	r3,r17,r3
    c40c:	30cd883a 	add	r6,r6,r3
    c410:	1029883a 	mov	r20,r2
    c414:	302b883a 	mov	r21,r6
    c418:	da801317 	ldw	r10,76(sp)
    c41c:	dac01417 	ldw	r11,80(sp)
    c420:	db001517 	ldw	r12,84(sp)
    c424:	db401617 	ldw	r13,88(sp)
    c428:	3440612e 	bgeu	r6,r17,c5b0 <__muldf3+0x318>
    c42c:	0009883a 	mov	r4,zero
    c430:	5105883a 	add	r2,r10,r4
    c434:	128d803a 	cmpltu	r6,r2,r10
    c438:	5d07883a 	add	r3,r11,r20
    c43c:	30cd883a 	add	r6,r6,r3
    c440:	0021883a 	mov	r16,zero
    c444:	04400044 	movi	r17,1
    c448:	1025883a 	mov	r18,r2
    c44c:	3027883a 	mov	r19,r6
    c450:	32c06236 	bltu	r6,r11,c5dc <__muldf3+0x344>
    c454:	59807a26 	beq	r11,r6,c640 <__muldf3+0x3a8>
    c458:	680b883a 	mov	r5,r13
    c45c:	b80f883a 	mov	r7,r23
    c460:	6009883a 	mov	r4,r12
    c464:	b00d883a 	mov	r6,r22
    c468:	000d0cc0 	call	d0cc <__muldi3>
    c46c:	1009883a 	mov	r4,r2
    c470:	000f883a 	mov	r7,zero
    c474:	1545883a 	add	r2,r2,r21
    c478:	1111803a 	cmpltu	r8,r2,r4
    c47c:	19c7883a 	add	r3,r3,r7
    c480:	40c7883a 	add	r3,r8,r3
    c484:	88cb883a 	add	r5,r17,r3
    c488:	d8c00617 	ldw	r3,24(sp)
    c48c:	8089883a 	add	r4,r16,r2
    c490:	d8800b17 	ldw	r2,44(sp)
    c494:	18c00104 	addi	r3,r3,4
    c498:	240d803a 	cmpltu	r6,r4,r16
    c49c:	10c7883a 	add	r3,r2,r3
    c4a0:	2013883a 	mov	r9,r4
    c4a4:	d8800a17 	ldw	r2,40(sp)
    c4a8:	d9000517 	ldw	r4,20(sp)
    c4ac:	314d883a 	add	r6,r6,r5
    c4b0:	3015883a 	mov	r10,r6
    c4b4:	2088c03a 	cmpne	r4,r4,r2
    c4b8:	00880034 	movhi	r2,8192
    c4bc:	10bfffc4 	addi	r2,r2,-1
    c4c0:	d9000f15 	stw	r4,60(sp)
    c4c4:	d8c01015 	stw	r3,64(sp)
    c4c8:	1180162e 	bgeu	r2,r6,c524 <__muldf3+0x28c>
    c4cc:	1811883a 	mov	r8,r3
    c4d0:	101f883a 	mov	r15,r2
    c4d4:	980497fa 	slli	r2,r19,31
    c4d8:	9016d07a 	srli	r11,r18,1
    c4dc:	500697fa 	slli	r3,r10,31
    c4e0:	480cd07a 	srli	r6,r9,1
    c4e4:	500ed07a 	srli	r7,r10,1
    c4e8:	12d6b03a 	or	r11,r2,r11
    c4ec:	00800044 	movi	r2,1
    c4f0:	198cb03a 	or	r6,r3,r6
    c4f4:	4888703a 	and	r4,r9,r2
    c4f8:	9818d07a 	srli	r12,r19,1
    c4fc:	001b883a 	mov	r13,zero
    c500:	03a00034 	movhi	r14,32768
    c504:	3013883a 	mov	r9,r6
    c508:	3815883a 	mov	r10,r7
    c50c:	4091883a 	add	r8,r8,r2
    c510:	20000226 	beq	r4,zero,c51c <__muldf3+0x284>
    c514:	5b64b03a 	or	r18,r11,r13
    c518:	63a6b03a 	or	r19,r12,r14
    c51c:	7abfed36 	bltu	r15,r10,c4d4 <__muldf3+0x23c>
    c520:	da001015 	stw	r8,64(sp)
    c524:	00840034 	movhi	r2,4096
    c528:	10bfffc4 	addi	r2,r2,-1
    c52c:	12801436 	bltu	r2,r10,c580 <__muldf3+0x2e8>
    c530:	da001017 	ldw	r8,64(sp)
    c534:	101f883a 	mov	r15,r2
    c538:	4a45883a 	add	r2,r9,r9
    c53c:	124d803a 	cmpltu	r6,r2,r9
    c540:	5287883a 	add	r3,r10,r10
    c544:	9497883a 	add	r11,r18,r18
    c548:	5c8f803a 	cmpltu	r7,r11,r18
    c54c:	9cd9883a 	add	r12,r19,r19
    c550:	01000044 	movi	r4,1
    c554:	30cd883a 	add	r6,r6,r3
    c558:	3b0f883a 	add	r7,r7,r12
    c55c:	423fffc4 	addi	r8,r8,-1
    c560:	1013883a 	mov	r9,r2
    c564:	3015883a 	mov	r10,r6
    c568:	111ab03a 	or	r13,r2,r4
    c56c:	98003016 	blt	r19,zero,c630 <__muldf3+0x398>
    c570:	5825883a 	mov	r18,r11
    c574:	3827883a 	mov	r19,r7
    c578:	7abfef2e 	bgeu	r15,r10,c538 <__muldf3+0x2a0>
    c57c:	da001015 	stw	r8,64(sp)
    c580:	00803fc4 	movi	r2,255
    c584:	488e703a 	and	r7,r9,r2
    c588:	00802004 	movi	r2,128
    c58c:	0007883a 	mov	r3,zero
    c590:	0011883a 	mov	r8,zero
    c594:	38801826 	beq	r7,r2,c5f8 <__muldf3+0x360>
    c598:	008000c4 	movi	r2,3
    c59c:	d9000e04 	addi	r4,sp,56
    c5a0:	da801215 	stw	r10,72(sp)
    c5a4:	d8800e15 	stw	r2,56(sp)
    c5a8:	da401115 	stw	r9,68(sp)
    c5ac:	003f6a06 	br	c358 <__muldf3+0xc0>
    c5b0:	89802126 	beq	r17,r6,c638 <__muldf3+0x3a0>
    c5b4:	0009883a 	mov	r4,zero
    c5b8:	5105883a 	add	r2,r10,r4
    c5bc:	128d803a 	cmpltu	r6,r2,r10
    c5c0:	5d07883a 	add	r3,r11,r20
    c5c4:	30cd883a 	add	r6,r6,r3
    c5c8:	0021883a 	mov	r16,zero
    c5cc:	0023883a 	mov	r17,zero
    c5d0:	1025883a 	mov	r18,r2
    c5d4:	3027883a 	mov	r19,r6
    c5d8:	32ff9e2e 	bgeu	r6,r11,c454 <__muldf3+0x1bc>
    c5dc:	00800044 	movi	r2,1
    c5e0:	8089883a 	add	r4,r16,r2
    c5e4:	240d803a 	cmpltu	r6,r4,r16
    c5e8:	344d883a 	add	r6,r6,r17
    c5ec:	2021883a 	mov	r16,r4
    c5f0:	3023883a 	mov	r17,r6
    c5f4:	003f9806 	br	c458 <__muldf3+0x1c0>
    c5f8:	403fe71e 	bne	r8,zero,c598 <__muldf3+0x300>
    c5fc:	01004004 	movi	r4,256
    c600:	4904703a 	and	r2,r9,r4
    c604:	10c4b03a 	or	r2,r2,r3
    c608:	103fe31e 	bne	r2,zero,c598 <__muldf3+0x300>
    c60c:	94c4b03a 	or	r2,r18,r19
    c610:	103fe126 	beq	r2,zero,c598 <__muldf3+0x300>
    c614:	49c5883a 	add	r2,r9,r7
    c618:	1251803a 	cmpltu	r8,r2,r9
    c61c:	4291883a 	add	r8,r8,r10
    c620:	013fc004 	movi	r4,-256
    c624:	1112703a 	and	r9,r2,r4
    c628:	4015883a 	mov	r10,r8
    c62c:	003fda06 	br	c598 <__muldf3+0x300>
    c630:	6813883a 	mov	r9,r13
    c634:	003fce06 	br	c570 <__muldf3+0x2d8>
    c638:	143f7c36 	bltu	r2,r16,c42c <__muldf3+0x194>
    c63c:	003fdd06 	br	c5b4 <__muldf3+0x31c>
    c640:	12bf852e 	bgeu	r2,r10,c458 <__muldf3+0x1c0>
    c644:	003fe506 	br	c5dc <__muldf3+0x344>
    c648:	00800084 	movi	r2,2
    c64c:	20bf351e 	bne	r4,r2,c324 <__muldf3+0x8c>
    c650:	01000074 	movhi	r4,1
    c654:	213c4c04 	addi	r4,r4,-3792
    c658:	003f3f06 	br	c358 <__muldf3+0xc0>

0000c65c <__divdf3>:
    c65c:	deffed04 	addi	sp,sp,-76
    c660:	dcc01115 	stw	r19,68(sp)
    c664:	dcc00404 	addi	r19,sp,16
    c668:	2011883a 	mov	r8,r4
    c66c:	2813883a 	mov	r9,r5
    c670:	dc000e15 	stw	r16,56(sp)
    c674:	d809883a 	mov	r4,sp
    c678:	980b883a 	mov	r5,r19
    c67c:	dc000904 	addi	r16,sp,36
    c680:	dfc01215 	stw	ra,72(sp)
    c684:	da400115 	stw	r9,4(sp)
    c688:	d9c00315 	stw	r7,12(sp)
    c68c:	da000015 	stw	r8,0(sp)
    c690:	d9800215 	stw	r6,8(sp)
    c694:	dc801015 	stw	r18,64(sp)
    c698:	dc400f15 	stw	r17,60(sp)
    c69c:	00008580 	call	858 <__unpack_d>
    c6a0:	d9000204 	addi	r4,sp,8
    c6a4:	800b883a 	mov	r5,r16
    c6a8:	00008580 	call	858 <__unpack_d>
    c6ac:	d9000417 	ldw	r4,16(sp)
    c6b0:	00800044 	movi	r2,1
    c6b4:	11000b2e 	bgeu	r2,r4,c6e4 <__divdf3+0x88>
    c6b8:	d9400917 	ldw	r5,36(sp)
    c6bc:	1140762e 	bgeu	r2,r5,c898 <__divdf3+0x23c>
    c6c0:	d8800517 	ldw	r2,20(sp)
    c6c4:	d8c00a17 	ldw	r3,40(sp)
    c6c8:	01800104 	movi	r6,4
    c6cc:	10c4f03a 	xor	r2,r2,r3
    c6d0:	d8800515 	stw	r2,20(sp)
    c6d4:	21800226 	beq	r4,r6,c6e0 <__divdf3+0x84>
    c6d8:	00800084 	movi	r2,2
    c6dc:	2080141e 	bne	r4,r2,c730 <__divdf3+0xd4>
    c6e0:	29000926 	beq	r5,r4,c708 <__divdf3+0xac>
    c6e4:	9809883a 	mov	r4,r19
    c6e8:	000d3180 	call	d318 <__pack_d>
    c6ec:	dfc01217 	ldw	ra,72(sp)
    c6f0:	dcc01117 	ldw	r19,68(sp)
    c6f4:	dc801017 	ldw	r18,64(sp)
    c6f8:	dc400f17 	ldw	r17,60(sp)
    c6fc:	dc000e17 	ldw	r16,56(sp)
    c700:	dec01304 	addi	sp,sp,76
    c704:	f800283a 	ret
    c708:	01000074 	movhi	r4,1
    c70c:	213c4c04 	addi	r4,r4,-3792
    c710:	000d3180 	call	d318 <__pack_d>
    c714:	dfc01217 	ldw	ra,72(sp)
    c718:	dcc01117 	ldw	r19,68(sp)
    c71c:	dc801017 	ldw	r18,64(sp)
    c720:	dc400f17 	ldw	r17,60(sp)
    c724:	dc000e17 	ldw	r16,56(sp)
    c728:	dec01304 	addi	sp,sp,76
    c72c:	f800283a 	ret
    c730:	29805b26 	beq	r5,r6,c8a0 <__divdf3+0x244>
    c734:	28802d26 	beq	r5,r2,c7ec <__divdf3+0x190>
    c738:	d8c00617 	ldw	r3,24(sp)
    c73c:	d8800b17 	ldw	r2,44(sp)
    c740:	d9c00817 	ldw	r7,32(sp)
    c744:	dc400d17 	ldw	r17,52(sp)
    c748:	188bc83a 	sub	r5,r3,r2
    c74c:	d9800717 	ldw	r6,28(sp)
    c750:	dc000c17 	ldw	r16,48(sp)
    c754:	d9400615 	stw	r5,24(sp)
    c758:	3c403836 	bltu	r7,r17,c83c <__divdf3+0x1e0>
    c75c:	89c03626 	beq	r17,r7,c838 <__divdf3+0x1dc>
    c760:	0015883a 	mov	r10,zero
    c764:	001d883a 	mov	r14,zero
    c768:	02c40034 	movhi	r11,4096
    c76c:	001f883a 	mov	r15,zero
    c770:	003f883a 	mov	ra,zero
    c774:	04800f44 	movi	r18,61
    c778:	00000f06 	br	c7b8 <__divdf3+0x15c>
    c77c:	601d883a 	mov	r14,r12
    c780:	681f883a 	mov	r15,r13
    c784:	400d883a 	mov	r6,r8
    c788:	100f883a 	mov	r7,r2
    c78c:	3191883a 	add	r8,r6,r6
    c790:	5808d07a 	srli	r4,r11,1
    c794:	4185803a 	cmpltu	r2,r8,r6
    c798:	39d3883a 	add	r9,r7,r7
    c79c:	28c6b03a 	or	r3,r5,r3
    c7a0:	1245883a 	add	r2,r2,r9
    c7a4:	1815883a 	mov	r10,r3
    c7a8:	2017883a 	mov	r11,r4
    c7ac:	400d883a 	mov	r6,r8
    c7b0:	100f883a 	mov	r7,r2
    c7b4:	fc801726 	beq	ra,r18,c814 <__divdf3+0x1b8>
    c7b8:	580a97fa 	slli	r5,r11,31
    c7bc:	5006d07a 	srli	r3,r10,1
    c7c0:	ffc00044 	addi	ra,ra,1
    c7c4:	3c7ff136 	bltu	r7,r17,c78c <__divdf3+0x130>
    c7c8:	3411c83a 	sub	r8,r6,r16
    c7cc:	3205803a 	cmpltu	r2,r6,r8
    c7d0:	3c53c83a 	sub	r9,r7,r17
    c7d4:	7298b03a 	or	r12,r14,r10
    c7d8:	7adab03a 	or	r13,r15,r11
    c7dc:	4885c83a 	sub	r2,r9,r2
    c7e0:	89ffe61e 	bne	r17,r7,c77c <__divdf3+0x120>
    c7e4:	343fe936 	bltu	r6,r16,c78c <__divdf3+0x130>
    c7e8:	003fe406 	br	c77c <__divdf3+0x120>
    c7ec:	9809883a 	mov	r4,r19
    c7f0:	d9800415 	stw	r6,16(sp)
    c7f4:	000d3180 	call	d318 <__pack_d>
    c7f8:	dfc01217 	ldw	ra,72(sp)
    c7fc:	dcc01117 	ldw	r19,68(sp)
    c800:	dc801017 	ldw	r18,64(sp)
    c804:	dc400f17 	ldw	r17,60(sp)
    c808:	dc000e17 	ldw	r16,56(sp)
    c80c:	dec01304 	addi	sp,sp,76
    c810:	f800283a 	ret
    c814:	00803fc4 	movi	r2,255
    c818:	7090703a 	and	r8,r14,r2
    c81c:	00802004 	movi	r2,128
    c820:	0007883a 	mov	r3,zero
    c824:	0013883a 	mov	r9,zero
    c828:	40800d26 	beq	r8,r2,c860 <__divdf3+0x204>
    c82c:	dbc00815 	stw	r15,32(sp)
    c830:	db800715 	stw	r14,28(sp)
    c834:	003fab06 	br	c6e4 <__divdf3+0x88>
    c838:	343fc92e 	bgeu	r6,r16,c760 <__divdf3+0x104>
    c83c:	3185883a 	add	r2,r6,r6
    c840:	1189803a 	cmpltu	r4,r2,r6
    c844:	39c7883a 	add	r3,r7,r7
    c848:	20c9883a 	add	r4,r4,r3
    c84c:	297fffc4 	addi	r5,r5,-1
    c850:	100d883a 	mov	r6,r2
    c854:	200f883a 	mov	r7,r4
    c858:	d9400615 	stw	r5,24(sp)
    c85c:	003fc006 	br	c760 <__divdf3+0x104>
    c860:	483ff21e 	bne	r9,zero,c82c <__divdf3+0x1d0>
    c864:	01004004 	movi	r4,256
    c868:	7104703a 	and	r2,r14,r4
    c86c:	10c4b03a 	or	r2,r2,r3
    c870:	103fee1e 	bne	r2,zero,c82c <__divdf3+0x1d0>
    c874:	31c4b03a 	or	r2,r6,r7
    c878:	103fec26 	beq	r2,zero,c82c <__divdf3+0x1d0>
    c87c:	7205883a 	add	r2,r14,r8
    c880:	1391803a 	cmpltu	r8,r2,r14
    c884:	43d1883a 	add	r8,r8,r15
    c888:	013fc004 	movi	r4,-256
    c88c:	111c703a 	and	r14,r2,r4
    c890:	401f883a 	mov	r15,r8
    c894:	003fe506 	br	c82c <__divdf3+0x1d0>
    c898:	8009883a 	mov	r4,r16
    c89c:	003f9206 	br	c6e8 <__divdf3+0x8c>
    c8a0:	9809883a 	mov	r4,r19
    c8a4:	d8000715 	stw	zero,28(sp)
    c8a8:	d8000815 	stw	zero,32(sp)
    c8ac:	d8000615 	stw	zero,24(sp)
    c8b0:	003f8d06 	br	c6e8 <__divdf3+0x8c>

0000c8b4 <__eqdf2>:
    c8b4:	deffef04 	addi	sp,sp,-68
    c8b8:	dc400f15 	stw	r17,60(sp)
    c8bc:	dc400404 	addi	r17,sp,16
    c8c0:	2005883a 	mov	r2,r4
    c8c4:	2807883a 	mov	r3,r5
    c8c8:	dc000e15 	stw	r16,56(sp)
    c8cc:	d809883a 	mov	r4,sp
    c8d0:	880b883a 	mov	r5,r17
    c8d4:	dc000904 	addi	r16,sp,36
    c8d8:	d8c00115 	stw	r3,4(sp)
    c8dc:	d8800015 	stw	r2,0(sp)
    c8e0:	d9800215 	stw	r6,8(sp)
    c8e4:	dfc01015 	stw	ra,64(sp)
    c8e8:	d9c00315 	stw	r7,12(sp)
    c8ec:	00008580 	call	858 <__unpack_d>
    c8f0:	d9000204 	addi	r4,sp,8
    c8f4:	800b883a 	mov	r5,r16
    c8f8:	00008580 	call	858 <__unpack_d>
    c8fc:	d8800417 	ldw	r2,16(sp)
    c900:	00c00044 	movi	r3,1
    c904:	180d883a 	mov	r6,r3
    c908:	1880062e 	bgeu	r3,r2,c924 <__eqdf2+0x70>
    c90c:	d8800917 	ldw	r2,36(sp)
    c910:	8809883a 	mov	r4,r17
    c914:	800b883a 	mov	r5,r16
    c918:	1880022e 	bgeu	r3,r2,c924 <__eqdf2+0x70>
    c91c:	000d62c0 	call	d62c <__fpcmp_parts_d>
    c920:	100d883a 	mov	r6,r2
    c924:	3005883a 	mov	r2,r6
    c928:	dfc01017 	ldw	ra,64(sp)
    c92c:	dc400f17 	ldw	r17,60(sp)
    c930:	dc000e17 	ldw	r16,56(sp)
    c934:	dec01104 	addi	sp,sp,68
    c938:	f800283a 	ret

0000c93c <__nedf2>:
    c93c:	deffef04 	addi	sp,sp,-68
    c940:	dc400f15 	stw	r17,60(sp)
    c944:	dc400404 	addi	r17,sp,16
    c948:	2005883a 	mov	r2,r4
    c94c:	2807883a 	mov	r3,r5
    c950:	dc000e15 	stw	r16,56(sp)
    c954:	d809883a 	mov	r4,sp
    c958:	880b883a 	mov	r5,r17
    c95c:	dc000904 	addi	r16,sp,36
    c960:	d8c00115 	stw	r3,4(sp)
    c964:	d8800015 	stw	r2,0(sp)
    c968:	d9800215 	stw	r6,8(sp)
    c96c:	dfc01015 	stw	ra,64(sp)
    c970:	d9c00315 	stw	r7,12(sp)
    c974:	00008580 	call	858 <__unpack_d>
    c978:	d9000204 	addi	r4,sp,8
    c97c:	800b883a 	mov	r5,r16
    c980:	00008580 	call	858 <__unpack_d>
    c984:	d8800417 	ldw	r2,16(sp)
    c988:	00c00044 	movi	r3,1
    c98c:	180d883a 	mov	r6,r3
    c990:	1880062e 	bgeu	r3,r2,c9ac <__nedf2+0x70>
    c994:	d8800917 	ldw	r2,36(sp)
    c998:	8809883a 	mov	r4,r17
    c99c:	800b883a 	mov	r5,r16
    c9a0:	1880022e 	bgeu	r3,r2,c9ac <__nedf2+0x70>
    c9a4:	000d62c0 	call	d62c <__fpcmp_parts_d>
    c9a8:	100d883a 	mov	r6,r2
    c9ac:	3005883a 	mov	r2,r6
    c9b0:	dfc01017 	ldw	ra,64(sp)
    c9b4:	dc400f17 	ldw	r17,60(sp)
    c9b8:	dc000e17 	ldw	r16,56(sp)
    c9bc:	dec01104 	addi	sp,sp,68
    c9c0:	f800283a 	ret

0000c9c4 <__gtdf2>:
    c9c4:	deffef04 	addi	sp,sp,-68
    c9c8:	dc400f15 	stw	r17,60(sp)
    c9cc:	dc400404 	addi	r17,sp,16
    c9d0:	2005883a 	mov	r2,r4
    c9d4:	2807883a 	mov	r3,r5
    c9d8:	dc000e15 	stw	r16,56(sp)
    c9dc:	d809883a 	mov	r4,sp
    c9e0:	880b883a 	mov	r5,r17
    c9e4:	dc000904 	addi	r16,sp,36
    c9e8:	d8c00115 	stw	r3,4(sp)
    c9ec:	d8800015 	stw	r2,0(sp)
    c9f0:	d9800215 	stw	r6,8(sp)
    c9f4:	dfc01015 	stw	ra,64(sp)
    c9f8:	d9c00315 	stw	r7,12(sp)
    c9fc:	00008580 	call	858 <__unpack_d>
    ca00:	d9000204 	addi	r4,sp,8
    ca04:	800b883a 	mov	r5,r16
    ca08:	00008580 	call	858 <__unpack_d>
    ca0c:	d8800417 	ldw	r2,16(sp)
    ca10:	00c00044 	movi	r3,1
    ca14:	01bfffc4 	movi	r6,-1
    ca18:	1880062e 	bgeu	r3,r2,ca34 <__gtdf2+0x70>
    ca1c:	d8800917 	ldw	r2,36(sp)
    ca20:	8809883a 	mov	r4,r17
    ca24:	800b883a 	mov	r5,r16
    ca28:	1880022e 	bgeu	r3,r2,ca34 <__gtdf2+0x70>
    ca2c:	000d62c0 	call	d62c <__fpcmp_parts_d>
    ca30:	100d883a 	mov	r6,r2
    ca34:	3005883a 	mov	r2,r6
    ca38:	dfc01017 	ldw	ra,64(sp)
    ca3c:	dc400f17 	ldw	r17,60(sp)
    ca40:	dc000e17 	ldw	r16,56(sp)
    ca44:	dec01104 	addi	sp,sp,68
    ca48:	f800283a 	ret

0000ca4c <__gedf2>:
    ca4c:	deffef04 	addi	sp,sp,-68
    ca50:	dc400f15 	stw	r17,60(sp)
    ca54:	dc400404 	addi	r17,sp,16
    ca58:	2005883a 	mov	r2,r4
    ca5c:	2807883a 	mov	r3,r5
    ca60:	dc000e15 	stw	r16,56(sp)
    ca64:	d809883a 	mov	r4,sp
    ca68:	880b883a 	mov	r5,r17
    ca6c:	dc000904 	addi	r16,sp,36
    ca70:	d8c00115 	stw	r3,4(sp)
    ca74:	d8800015 	stw	r2,0(sp)
    ca78:	d9800215 	stw	r6,8(sp)
    ca7c:	dfc01015 	stw	ra,64(sp)
    ca80:	d9c00315 	stw	r7,12(sp)
    ca84:	00008580 	call	858 <__unpack_d>
    ca88:	d9000204 	addi	r4,sp,8
    ca8c:	800b883a 	mov	r5,r16
    ca90:	00008580 	call	858 <__unpack_d>
    ca94:	d8800417 	ldw	r2,16(sp)
    ca98:	00c00044 	movi	r3,1
    ca9c:	01bfffc4 	movi	r6,-1
    caa0:	1880062e 	bgeu	r3,r2,cabc <__gedf2+0x70>
    caa4:	d8800917 	ldw	r2,36(sp)
    caa8:	8809883a 	mov	r4,r17
    caac:	800b883a 	mov	r5,r16
    cab0:	1880022e 	bgeu	r3,r2,cabc <__gedf2+0x70>
    cab4:	000d62c0 	call	d62c <__fpcmp_parts_d>
    cab8:	100d883a 	mov	r6,r2
    cabc:	3005883a 	mov	r2,r6
    cac0:	dfc01017 	ldw	ra,64(sp)
    cac4:	dc400f17 	ldw	r17,60(sp)
    cac8:	dc000e17 	ldw	r16,56(sp)
    cacc:	dec01104 	addi	sp,sp,68
    cad0:	f800283a 	ret

0000cad4 <__ltdf2>:
    cad4:	deffef04 	addi	sp,sp,-68
    cad8:	dc400f15 	stw	r17,60(sp)
    cadc:	dc400404 	addi	r17,sp,16
    cae0:	2005883a 	mov	r2,r4
    cae4:	2807883a 	mov	r3,r5
    cae8:	dc000e15 	stw	r16,56(sp)
    caec:	d809883a 	mov	r4,sp
    caf0:	880b883a 	mov	r5,r17
    caf4:	dc000904 	addi	r16,sp,36
    caf8:	d8c00115 	stw	r3,4(sp)
    cafc:	d8800015 	stw	r2,0(sp)
    cb00:	d9800215 	stw	r6,8(sp)
    cb04:	dfc01015 	stw	ra,64(sp)
    cb08:	d9c00315 	stw	r7,12(sp)
    cb0c:	00008580 	call	858 <__unpack_d>
    cb10:	d9000204 	addi	r4,sp,8
    cb14:	800b883a 	mov	r5,r16
    cb18:	00008580 	call	858 <__unpack_d>
    cb1c:	d8800417 	ldw	r2,16(sp)
    cb20:	00c00044 	movi	r3,1
    cb24:	180d883a 	mov	r6,r3
    cb28:	1880062e 	bgeu	r3,r2,cb44 <__ltdf2+0x70>
    cb2c:	d8800917 	ldw	r2,36(sp)
    cb30:	8809883a 	mov	r4,r17
    cb34:	800b883a 	mov	r5,r16
    cb38:	1880022e 	bgeu	r3,r2,cb44 <__ltdf2+0x70>
    cb3c:	000d62c0 	call	d62c <__fpcmp_parts_d>
    cb40:	100d883a 	mov	r6,r2
    cb44:	3005883a 	mov	r2,r6
    cb48:	dfc01017 	ldw	ra,64(sp)
    cb4c:	dc400f17 	ldw	r17,60(sp)
    cb50:	dc000e17 	ldw	r16,56(sp)
    cb54:	dec01104 	addi	sp,sp,68
    cb58:	f800283a 	ret

0000cb5c <__ledf2>:
    cb5c:	deffef04 	addi	sp,sp,-68
    cb60:	dc400f15 	stw	r17,60(sp)
    cb64:	dc400404 	addi	r17,sp,16
    cb68:	2005883a 	mov	r2,r4
    cb6c:	2807883a 	mov	r3,r5
    cb70:	dc000e15 	stw	r16,56(sp)
    cb74:	d809883a 	mov	r4,sp
    cb78:	880b883a 	mov	r5,r17
    cb7c:	dc000904 	addi	r16,sp,36
    cb80:	d8c00115 	stw	r3,4(sp)
    cb84:	d8800015 	stw	r2,0(sp)
    cb88:	d9800215 	stw	r6,8(sp)
    cb8c:	dfc01015 	stw	ra,64(sp)
    cb90:	d9c00315 	stw	r7,12(sp)
    cb94:	00008580 	call	858 <__unpack_d>
    cb98:	d9000204 	addi	r4,sp,8
    cb9c:	800b883a 	mov	r5,r16
    cba0:	00008580 	call	858 <__unpack_d>
    cba4:	d8800417 	ldw	r2,16(sp)
    cba8:	00c00044 	movi	r3,1
    cbac:	180d883a 	mov	r6,r3
    cbb0:	1880062e 	bgeu	r3,r2,cbcc <__ledf2+0x70>
    cbb4:	d8800917 	ldw	r2,36(sp)
    cbb8:	8809883a 	mov	r4,r17
    cbbc:	800b883a 	mov	r5,r16
    cbc0:	1880022e 	bgeu	r3,r2,cbcc <__ledf2+0x70>
    cbc4:	000d62c0 	call	d62c <__fpcmp_parts_d>
    cbc8:	100d883a 	mov	r6,r2
    cbcc:	3005883a 	mov	r2,r6
    cbd0:	dfc01017 	ldw	ra,64(sp)
    cbd4:	dc400f17 	ldw	r17,60(sp)
    cbd8:	dc000e17 	ldw	r16,56(sp)
    cbdc:	dec01104 	addi	sp,sp,68
    cbe0:	f800283a 	ret

0000cbe4 <__floatsidf>:
    cbe4:	2006d7fa 	srli	r3,r4,31
    cbe8:	defff604 	addi	sp,sp,-40
    cbec:	008000c4 	movi	r2,3
    cbf0:	dfc00915 	stw	ra,36(sp)
    cbf4:	dcc00815 	stw	r19,32(sp)
    cbf8:	dc800715 	stw	r18,28(sp)
    cbfc:	dc400615 	stw	r17,24(sp)
    cc00:	dc000515 	stw	r16,20(sp)
    cc04:	d8800015 	stw	r2,0(sp)
    cc08:	d8c00115 	stw	r3,4(sp)
    cc0c:	20000f1e 	bne	r4,zero,cc4c <__floatsidf+0x68>
    cc10:	00800084 	movi	r2,2
    cc14:	d8800015 	stw	r2,0(sp)
    cc18:	d809883a 	mov	r4,sp
    cc1c:	000d3180 	call	d318 <__pack_d>
    cc20:	1009883a 	mov	r4,r2
    cc24:	180b883a 	mov	r5,r3
    cc28:	2005883a 	mov	r2,r4
    cc2c:	2807883a 	mov	r3,r5
    cc30:	dfc00917 	ldw	ra,36(sp)
    cc34:	dcc00817 	ldw	r19,32(sp)
    cc38:	dc800717 	ldw	r18,28(sp)
    cc3c:	dc400617 	ldw	r17,24(sp)
    cc40:	dc000517 	ldw	r16,20(sp)
    cc44:	dec00a04 	addi	sp,sp,40
    cc48:	f800283a 	ret
    cc4c:	00800f04 	movi	r2,60
    cc50:	1807003a 	cmpeq	r3,r3,zero
    cc54:	d8800215 	stw	r2,8(sp)
    cc58:	18001126 	beq	r3,zero,cca0 <__floatsidf+0xbc>
    cc5c:	0027883a 	mov	r19,zero
    cc60:	2025883a 	mov	r18,r4
    cc64:	d9000315 	stw	r4,12(sp)
    cc68:	dcc00415 	stw	r19,16(sp)
    cc6c:	000d1f00 	call	d1f0 <__clzsi2>
    cc70:	11000744 	addi	r4,r2,29
    cc74:	013fe80e 	bge	zero,r4,cc18 <__floatsidf+0x34>
    cc78:	10bfff44 	addi	r2,r2,-3
    cc7c:	10000c16 	blt	r2,zero,ccb0 <__floatsidf+0xcc>
    cc80:	90a2983a 	sll	r17,r18,r2
    cc84:	0021883a 	mov	r16,zero
    cc88:	d8800217 	ldw	r2,8(sp)
    cc8c:	dc400415 	stw	r17,16(sp)
    cc90:	dc000315 	stw	r16,12(sp)
    cc94:	1105c83a 	sub	r2,r2,r4
    cc98:	d8800215 	stw	r2,8(sp)
    cc9c:	003fde06 	br	cc18 <__floatsidf+0x34>
    cca0:	00a00034 	movhi	r2,32768
    cca4:	20800a26 	beq	r4,r2,ccd0 <__floatsidf+0xec>
    cca8:	0109c83a 	sub	r4,zero,r4
    ccac:	003feb06 	br	cc5c <__floatsidf+0x78>
    ccb0:	9006d07a 	srli	r3,r18,1
    ccb4:	008007c4 	movi	r2,31
    ccb8:	1105c83a 	sub	r2,r2,r4
    ccbc:	1886d83a 	srl	r3,r3,r2
    ccc0:	9922983a 	sll	r17,r19,r4
    ccc4:	9120983a 	sll	r16,r18,r4
    ccc8:	1c62b03a 	or	r17,r3,r17
    cccc:	003fee06 	br	cc88 <__floatsidf+0xa4>
    ccd0:	0009883a 	mov	r4,zero
    ccd4:	01707834 	movhi	r5,49632
    ccd8:	003fd306 	br	cc28 <__floatsidf+0x44>

0000ccdc <__fixdfsi>:
    ccdc:	defff804 	addi	sp,sp,-32
    cce0:	2005883a 	mov	r2,r4
    cce4:	2807883a 	mov	r3,r5
    cce8:	d809883a 	mov	r4,sp
    ccec:	d9400204 	addi	r5,sp,8
    ccf0:	d8c00115 	stw	r3,4(sp)
    ccf4:	d8800015 	stw	r2,0(sp)
    ccf8:	dfc00715 	stw	ra,28(sp)
    ccfc:	00008580 	call	858 <__unpack_d>
    cd00:	d8c00217 	ldw	r3,8(sp)
    cd04:	00800084 	movi	r2,2
    cd08:	1880051e 	bne	r3,r2,cd20 <__fixdfsi+0x44>
    cd0c:	0007883a 	mov	r3,zero
    cd10:	1805883a 	mov	r2,r3
    cd14:	dfc00717 	ldw	ra,28(sp)
    cd18:	dec00804 	addi	sp,sp,32
    cd1c:	f800283a 	ret
    cd20:	00800044 	movi	r2,1
    cd24:	10fff92e 	bgeu	r2,r3,cd0c <__fixdfsi+0x30>
    cd28:	00800104 	movi	r2,4
    cd2c:	18800426 	beq	r3,r2,cd40 <__fixdfsi+0x64>
    cd30:	d8c00417 	ldw	r3,16(sp)
    cd34:	183ff516 	blt	r3,zero,cd0c <__fixdfsi+0x30>
    cd38:	00800784 	movi	r2,30
    cd3c:	10c0080e 	bge	r2,r3,cd60 <__fixdfsi+0x84>
    cd40:	d8800317 	ldw	r2,12(sp)
    cd44:	1000121e 	bne	r2,zero,cd90 <__fixdfsi+0xb4>
    cd48:	00e00034 	movhi	r3,32768
    cd4c:	18ffffc4 	addi	r3,r3,-1
    cd50:	1805883a 	mov	r2,r3
    cd54:	dfc00717 	ldw	ra,28(sp)
    cd58:	dec00804 	addi	sp,sp,32
    cd5c:	f800283a 	ret
    cd60:	00800f04 	movi	r2,60
    cd64:	10d1c83a 	sub	r8,r2,r3
    cd68:	40bff804 	addi	r2,r8,-32
    cd6c:	d9800517 	ldw	r6,20(sp)
    cd70:	d9c00617 	ldw	r7,24(sp)
    cd74:	10000816 	blt	r2,zero,cd98 <__fixdfsi+0xbc>
    cd78:	3888d83a 	srl	r4,r7,r2
    cd7c:	d8800317 	ldw	r2,12(sp)
    cd80:	2007883a 	mov	r3,r4
    cd84:	103fe226 	beq	r2,zero,cd10 <__fixdfsi+0x34>
    cd88:	0107c83a 	sub	r3,zero,r4
    cd8c:	003fe006 	br	cd10 <__fixdfsi+0x34>
    cd90:	00e00034 	movhi	r3,32768
    cd94:	003fde06 	br	cd10 <__fixdfsi+0x34>
    cd98:	39c7883a 	add	r3,r7,r7
    cd9c:	008007c4 	movi	r2,31
    cda0:	1205c83a 	sub	r2,r2,r8
    cda4:	1886983a 	sll	r3,r3,r2
    cda8:	3208d83a 	srl	r4,r6,r8
    cdac:	1908b03a 	or	r4,r3,r4
    cdb0:	003ff206 	br	cd7c <__fixdfsi+0xa0>

0000cdb4 <__floatunsidf>:
    cdb4:	defff204 	addi	sp,sp,-56
    cdb8:	dfc00d15 	stw	ra,52(sp)
    cdbc:	ddc00c15 	stw	r23,48(sp)
    cdc0:	dd800b15 	stw	r22,44(sp)
    cdc4:	dd400a15 	stw	r21,40(sp)
    cdc8:	dd000915 	stw	r20,36(sp)
    cdcc:	dcc00815 	stw	r19,32(sp)
    cdd0:	dc800715 	stw	r18,28(sp)
    cdd4:	dc400615 	stw	r17,24(sp)
    cdd8:	dc000515 	stw	r16,20(sp)
    cddc:	d8000115 	stw	zero,4(sp)
    cde0:	20000f1e 	bne	r4,zero,ce20 <__floatunsidf+0x6c>
    cde4:	00800084 	movi	r2,2
    cde8:	d8800015 	stw	r2,0(sp)
    cdec:	d809883a 	mov	r4,sp
    cdf0:	000d3180 	call	d318 <__pack_d>
    cdf4:	dfc00d17 	ldw	ra,52(sp)
    cdf8:	ddc00c17 	ldw	r23,48(sp)
    cdfc:	dd800b17 	ldw	r22,44(sp)
    ce00:	dd400a17 	ldw	r21,40(sp)
    ce04:	dd000917 	ldw	r20,36(sp)
    ce08:	dcc00817 	ldw	r19,32(sp)
    ce0c:	dc800717 	ldw	r18,28(sp)
    ce10:	dc400617 	ldw	r17,24(sp)
    ce14:	dc000517 	ldw	r16,20(sp)
    ce18:	dec00e04 	addi	sp,sp,56
    ce1c:	f800283a 	ret
    ce20:	008000c4 	movi	r2,3
    ce24:	00c00f04 	movi	r3,60
    ce28:	002f883a 	mov	r23,zero
    ce2c:	202d883a 	mov	r22,r4
    ce30:	d8800015 	stw	r2,0(sp)
    ce34:	d8c00215 	stw	r3,8(sp)
    ce38:	d9000315 	stw	r4,12(sp)
    ce3c:	ddc00415 	stw	r23,16(sp)
    ce40:	000d1f00 	call	d1f0 <__clzsi2>
    ce44:	12400744 	addi	r9,r2,29
    ce48:	48000b16 	blt	r9,zero,ce78 <__floatunsidf+0xc4>
    ce4c:	483fe726 	beq	r9,zero,cdec <__floatunsidf+0x38>
    ce50:	10bfff44 	addi	r2,r2,-3
    ce54:	10002e16 	blt	r2,zero,cf10 <__floatunsidf+0x15c>
    ce58:	b0a2983a 	sll	r17,r22,r2
    ce5c:	0021883a 	mov	r16,zero
    ce60:	d8800217 	ldw	r2,8(sp)
    ce64:	dc400415 	stw	r17,16(sp)
    ce68:	dc000315 	stw	r16,12(sp)
    ce6c:	1245c83a 	sub	r2,r2,r9
    ce70:	d8800215 	stw	r2,8(sp)
    ce74:	003fdd06 	br	cdec <__floatunsidf+0x38>
    ce78:	0255c83a 	sub	r10,zero,r9
    ce7c:	51bff804 	addi	r6,r10,-32
    ce80:	30001b16 	blt	r6,zero,cef0 <__floatunsidf+0x13c>
    ce84:	b9a8d83a 	srl	r20,r23,r6
    ce88:	002b883a 	mov	r21,zero
    ce8c:	000f883a 	mov	r7,zero
    ce90:	01000044 	movi	r4,1
    ce94:	0011883a 	mov	r8,zero
    ce98:	30002516 	blt	r6,zero,cf30 <__floatunsidf+0x17c>
    ce9c:	21a6983a 	sll	r19,r4,r6
    cea0:	0025883a 	mov	r18,zero
    cea4:	00bfffc4 	movi	r2,-1
    cea8:	9089883a 	add	r4,r18,r2
    ceac:	988b883a 	add	r5,r19,r2
    ceb0:	248d803a 	cmpltu	r6,r4,r18
    ceb4:	314b883a 	add	r5,r6,r5
    ceb8:	b104703a 	and	r2,r22,r4
    cebc:	b946703a 	and	r3,r23,r5
    cec0:	10c4b03a 	or	r2,r2,r3
    cec4:	10000226 	beq	r2,zero,ced0 <__floatunsidf+0x11c>
    cec8:	01c00044 	movi	r7,1
    cecc:	0011883a 	mov	r8,zero
    ced0:	d9000217 	ldw	r4,8(sp)
    ced4:	a1c4b03a 	or	r2,r20,r7
    ced8:	aa06b03a 	or	r3,r21,r8
    cedc:	2249c83a 	sub	r4,r4,r9
    cee0:	d8c00415 	stw	r3,16(sp)
    cee4:	d9000215 	stw	r4,8(sp)
    cee8:	d8800315 	stw	r2,12(sp)
    ceec:	003fbf06 	br	cdec <__floatunsidf+0x38>
    cef0:	bdc7883a 	add	r3,r23,r23
    cef4:	008007c4 	movi	r2,31
    cef8:	1285c83a 	sub	r2,r2,r10
    cefc:	1886983a 	sll	r3,r3,r2
    cf00:	b2a8d83a 	srl	r20,r22,r10
    cf04:	baaad83a 	srl	r21,r23,r10
    cf08:	1d28b03a 	or	r20,r3,r20
    cf0c:	003fdf06 	br	ce8c <__floatunsidf+0xd8>
    cf10:	b006d07a 	srli	r3,r22,1
    cf14:	008007c4 	movi	r2,31
    cf18:	1245c83a 	sub	r2,r2,r9
    cf1c:	1886d83a 	srl	r3,r3,r2
    cf20:	ba62983a 	sll	r17,r23,r9
    cf24:	b260983a 	sll	r16,r22,r9
    cf28:	1c62b03a 	or	r17,r3,r17
    cf2c:	003fcc06 	br	ce60 <__floatunsidf+0xac>
    cf30:	2006d07a 	srli	r3,r4,1
    cf34:	008007c4 	movi	r2,31
    cf38:	1285c83a 	sub	r2,r2,r10
    cf3c:	18a6d83a 	srl	r19,r3,r2
    cf40:	22a4983a 	sll	r18,r4,r10
    cf44:	003fd706 	br	cea4 <__floatunsidf+0xf0>

0000cf48 <udivmodsi4>:
    cf48:	29001b2e 	bgeu	r5,r4,cfb8 <udivmodsi4+0x70>
    cf4c:	28001a16 	blt	r5,zero,cfb8 <udivmodsi4+0x70>
    cf50:	00800044 	movi	r2,1
    cf54:	0007883a 	mov	r3,zero
    cf58:	01c007c4 	movi	r7,31
    cf5c:	00000306 	br	cf6c <udivmodsi4+0x24>
    cf60:	19c01326 	beq	r3,r7,cfb0 <udivmodsi4+0x68>
    cf64:	18c00044 	addi	r3,r3,1
    cf68:	28000416 	blt	r5,zero,cf7c <udivmodsi4+0x34>
    cf6c:	294b883a 	add	r5,r5,r5
    cf70:	1085883a 	add	r2,r2,r2
    cf74:	293ffa36 	bltu	r5,r4,cf60 <udivmodsi4+0x18>
    cf78:	10000d26 	beq	r2,zero,cfb0 <udivmodsi4+0x68>
    cf7c:	0007883a 	mov	r3,zero
    cf80:	21400236 	bltu	r4,r5,cf8c <udivmodsi4+0x44>
    cf84:	2149c83a 	sub	r4,r4,r5
    cf88:	1886b03a 	or	r3,r3,r2
    cf8c:	1004d07a 	srli	r2,r2,1
    cf90:	280ad07a 	srli	r5,r5,1
    cf94:	103ffa1e 	bne	r2,zero,cf80 <udivmodsi4+0x38>
    cf98:	30000226 	beq	r6,zero,cfa4 <udivmodsi4+0x5c>
    cf9c:	2005883a 	mov	r2,r4
    cfa0:	f800283a 	ret
    cfa4:	1809883a 	mov	r4,r3
    cfa8:	2005883a 	mov	r2,r4
    cfac:	f800283a 	ret
    cfb0:	0007883a 	mov	r3,zero
    cfb4:	003ff806 	br	cf98 <udivmodsi4+0x50>
    cfb8:	00800044 	movi	r2,1
    cfbc:	0007883a 	mov	r3,zero
    cfc0:	003fef06 	br	cf80 <udivmodsi4+0x38>

0000cfc4 <__divsi3>:
    cfc4:	defffe04 	addi	sp,sp,-8
    cfc8:	dc000015 	stw	r16,0(sp)
    cfcc:	dfc00115 	stw	ra,4(sp)
    cfd0:	0021883a 	mov	r16,zero
    cfd4:	20000c16 	blt	r4,zero,d008 <__divsi3+0x44>
    cfd8:	000d883a 	mov	r6,zero
    cfdc:	28000e16 	blt	r5,zero,d018 <__divsi3+0x54>
    cfe0:	000cf480 	call	cf48 <udivmodsi4>
    cfe4:	1007883a 	mov	r3,r2
    cfe8:	8005003a 	cmpeq	r2,r16,zero
    cfec:	1000011e 	bne	r2,zero,cff4 <__divsi3+0x30>
    cff0:	00c7c83a 	sub	r3,zero,r3
    cff4:	1805883a 	mov	r2,r3
    cff8:	dfc00117 	ldw	ra,4(sp)
    cffc:	dc000017 	ldw	r16,0(sp)
    d000:	dec00204 	addi	sp,sp,8
    d004:	f800283a 	ret
    d008:	0109c83a 	sub	r4,zero,r4
    d00c:	04000044 	movi	r16,1
    d010:	000d883a 	mov	r6,zero
    d014:	283ff20e 	bge	r5,zero,cfe0 <__divsi3+0x1c>
    d018:	014bc83a 	sub	r5,zero,r5
    d01c:	8021003a 	cmpeq	r16,r16,zero
    d020:	003fef06 	br	cfe0 <__divsi3+0x1c>

0000d024 <__modsi3>:
    d024:	deffff04 	addi	sp,sp,-4
    d028:	dfc00015 	stw	ra,0(sp)
    d02c:	01800044 	movi	r6,1
    d030:	2807883a 	mov	r3,r5
    d034:	20000416 	blt	r4,zero,d048 <__modsi3+0x24>
    d038:	28000c16 	blt	r5,zero,d06c <__modsi3+0x48>
    d03c:	dfc00017 	ldw	ra,0(sp)
    d040:	dec00104 	addi	sp,sp,4
    d044:	000cf481 	jmpi	cf48 <udivmodsi4>
    d048:	0109c83a 	sub	r4,zero,r4
    d04c:	28000b16 	blt	r5,zero,d07c <__modsi3+0x58>
    d050:	180b883a 	mov	r5,r3
    d054:	01800044 	movi	r6,1
    d058:	000cf480 	call	cf48 <udivmodsi4>
    d05c:	0085c83a 	sub	r2,zero,r2
    d060:	dfc00017 	ldw	ra,0(sp)
    d064:	dec00104 	addi	sp,sp,4
    d068:	f800283a 	ret
    d06c:	014bc83a 	sub	r5,zero,r5
    d070:	dfc00017 	ldw	ra,0(sp)
    d074:	dec00104 	addi	sp,sp,4
    d078:	000cf481 	jmpi	cf48 <udivmodsi4>
    d07c:	0147c83a 	sub	r3,zero,r5
    d080:	003ff306 	br	d050 <__modsi3+0x2c>

0000d084 <__udivsi3>:
    d084:	000d883a 	mov	r6,zero
    d088:	000cf481 	jmpi	cf48 <udivmodsi4>

0000d08c <__umodsi3>:
    d08c:	01800044 	movi	r6,1
    d090:	000cf481 	jmpi	cf48 <udivmodsi4>

0000d094 <__mulsi3>:
    d094:	20000a26 	beq	r4,zero,d0c0 <__mulsi3+0x2c>
    d098:	0007883a 	mov	r3,zero
    d09c:	2080004c 	andi	r2,r4,1
    d0a0:	1005003a 	cmpeq	r2,r2,zero
    d0a4:	2008d07a 	srli	r4,r4,1
    d0a8:	1000011e 	bne	r2,zero,d0b0 <__mulsi3+0x1c>
    d0ac:	1947883a 	add	r3,r3,r5
    d0b0:	294b883a 	add	r5,r5,r5
    d0b4:	203ff91e 	bne	r4,zero,d09c <__mulsi3+0x8>
    d0b8:	1805883a 	mov	r2,r3
    d0bc:	f800283a 	ret
    d0c0:	0007883a 	mov	r3,zero
    d0c4:	1805883a 	mov	r2,r3
    d0c8:	f800283a 	ret

0000d0cc <__muldi3>:
    d0cc:	defff204 	addi	sp,sp,-56
    d0d0:	df000c15 	stw	fp,48(sp)
    d0d4:	3038d43a 	srli	fp,r6,16
    d0d8:	dd000815 	stw	r20,32(sp)
    d0dc:	dc400515 	stw	r17,20(sp)
    d0e0:	2028d43a 	srli	r20,r4,16
    d0e4:	247fffcc 	andi	r17,r4,65535
    d0e8:	dc000415 	stw	r16,16(sp)
    d0ec:	343fffcc 	andi	r16,r6,65535
    d0f0:	dcc00715 	stw	r19,28(sp)
    d0f4:	d9000015 	stw	r4,0(sp)
    d0f8:	2827883a 	mov	r19,r5
    d0fc:	8809883a 	mov	r4,r17
    d100:	d9400115 	stw	r5,4(sp)
    d104:	800b883a 	mov	r5,r16
    d108:	d9800215 	stw	r6,8(sp)
    d10c:	dfc00d15 	stw	ra,52(sp)
    d110:	d9c00315 	stw	r7,12(sp)
    d114:	dd800a15 	stw	r22,40(sp)
    d118:	dd400915 	stw	r21,36(sp)
    d11c:	302d883a 	mov	r22,r6
    d120:	ddc00b15 	stw	r23,44(sp)
    d124:	dc800615 	stw	r18,24(sp)
    d128:	000d0940 	call	d094 <__mulsi3>
    d12c:	8809883a 	mov	r4,r17
    d130:	e00b883a 	mov	r5,fp
    d134:	102b883a 	mov	r21,r2
    d138:	000d0940 	call	d094 <__mulsi3>
    d13c:	800b883a 	mov	r5,r16
    d140:	a009883a 	mov	r4,r20
    d144:	1023883a 	mov	r17,r2
    d148:	000d0940 	call	d094 <__mulsi3>
    d14c:	a009883a 	mov	r4,r20
    d150:	e00b883a 	mov	r5,fp
    d154:	1021883a 	mov	r16,r2
    d158:	000d0940 	call	d094 <__mulsi3>
    d15c:	a8ffffcc 	andi	r3,r21,65535
    d160:	a82ad43a 	srli	r21,r21,16
    d164:	8c23883a 	add	r17,r17,r16
    d168:	1011883a 	mov	r8,r2
    d16c:	ac6b883a 	add	r21,r21,r17
    d170:	a804943a 	slli	r2,r21,16
    d174:	b009883a 	mov	r4,r22
    d178:	980b883a 	mov	r5,r19
    d17c:	10c7883a 	add	r3,r2,r3
    d180:	a812d43a 	srli	r9,r21,16
    d184:	180d883a 	mov	r6,r3
    d188:	ac00022e 	bgeu	r21,r16,d194 <__muldi3+0xc8>
    d18c:	00800074 	movhi	r2,1
    d190:	4091883a 	add	r8,r8,r2
    d194:	4267883a 	add	r19,r8,r9
    d198:	302d883a 	mov	r22,r6
    d19c:	000d0940 	call	d094 <__mulsi3>
    d1a0:	d9400317 	ldw	r5,12(sp)
    d1a4:	d9000017 	ldw	r4,0(sp)
    d1a8:	1023883a 	mov	r17,r2
    d1ac:	000d0940 	call	d094 <__mulsi3>
    d1b0:	14cb883a 	add	r5,r2,r19
    d1b4:	894b883a 	add	r5,r17,r5
    d1b8:	b005883a 	mov	r2,r22
    d1bc:	2807883a 	mov	r3,r5
    d1c0:	dfc00d17 	ldw	ra,52(sp)
    d1c4:	df000c17 	ldw	fp,48(sp)
    d1c8:	ddc00b17 	ldw	r23,44(sp)
    d1cc:	dd800a17 	ldw	r22,40(sp)
    d1d0:	dd400917 	ldw	r21,36(sp)
    d1d4:	dd000817 	ldw	r20,32(sp)
    d1d8:	dcc00717 	ldw	r19,28(sp)
    d1dc:	dc800617 	ldw	r18,24(sp)
    d1e0:	dc400517 	ldw	r17,20(sp)
    d1e4:	dc000417 	ldw	r16,16(sp)
    d1e8:	dec00e04 	addi	sp,sp,56
    d1ec:	f800283a 	ret

0000d1f0 <__clzsi2>:
    d1f0:	00bfffd4 	movui	r2,65535
    d1f4:	11000e36 	bltu	r2,r4,d230 <__clzsi2+0x40>
    d1f8:	00803fc4 	movi	r2,255
    d1fc:	01400204 	movi	r5,8
    d200:	0007883a 	mov	r3,zero
    d204:	11001036 	bltu	r2,r4,d248 <__clzsi2+0x58>
    d208:	000b883a 	mov	r5,zero
    d20c:	20c6d83a 	srl	r3,r4,r3
    d210:	00800074 	movhi	r2,1
    d214:	10bc5104 	addi	r2,r2,-3772
    d218:	1887883a 	add	r3,r3,r2
    d21c:	18800003 	ldbu	r2,0(r3)
    d220:	00c00804 	movi	r3,32
    d224:	2885883a 	add	r2,r5,r2
    d228:	1885c83a 	sub	r2,r3,r2
    d22c:	f800283a 	ret
    d230:	01400404 	movi	r5,16
    d234:	00804034 	movhi	r2,256
    d238:	10bfffc4 	addi	r2,r2,-1
    d23c:	2807883a 	mov	r3,r5
    d240:	113ff22e 	bgeu	r2,r4,d20c <__clzsi2+0x1c>
    d244:	01400604 	movi	r5,24
    d248:	2807883a 	mov	r3,r5
    d24c:	20c6d83a 	srl	r3,r4,r3
    d250:	00800074 	movhi	r2,1
    d254:	10bc5104 	addi	r2,r2,-3772
    d258:	1887883a 	add	r3,r3,r2
    d25c:	18800003 	ldbu	r2,0(r3)
    d260:	00c00804 	movi	r3,32
    d264:	2885883a 	add	r2,r5,r2
    d268:	1885c83a 	sub	r2,r3,r2
    d26c:	f800283a 	ret

0000d270 <__fpcmp_parts_f>:
    d270:	21800017 	ldw	r6,0(r4)
    d274:	00c00044 	movi	r3,1
    d278:	19800a2e 	bgeu	r3,r6,d2a4 <__fpcmp_parts_f+0x34>
    d27c:	28800017 	ldw	r2,0(r5)
    d280:	1880082e 	bgeu	r3,r2,d2a4 <__fpcmp_parts_f+0x34>
    d284:	00c00104 	movi	r3,4
    d288:	30c01e26 	beq	r6,r3,d304 <__fpcmp_parts_f+0x94>
    d28c:	10c01a26 	beq	r2,r3,d2f8 <__fpcmp_parts_f+0x88>
    d290:	00c00084 	movi	r3,2
    d294:	30c00526 	beq	r6,r3,d2ac <__fpcmp_parts_f+0x3c>
    d298:	10c0071e 	bne	r2,r3,d2b8 <__fpcmp_parts_f+0x48>
    d29c:	20800117 	ldw	r2,4(r4)
    d2a0:	1000091e 	bne	r2,zero,d2c8 <__fpcmp_parts_f+0x58>
    d2a4:	00800044 	movi	r2,1
    d2a8:	f800283a 	ret
    d2ac:	10c0121e 	bne	r2,r3,d2f8 <__fpcmp_parts_f+0x88>
    d2b0:	0005883a 	mov	r2,zero
    d2b4:	f800283a 	ret
    d2b8:	20c00117 	ldw	r3,4(r4)
    d2bc:	28800117 	ldw	r2,4(r5)
    d2c0:	18800326 	beq	r3,r2,d2d0 <__fpcmp_parts_f+0x60>
    d2c4:	183ff726 	beq	r3,zero,d2a4 <__fpcmp_parts_f+0x34>
    d2c8:	00bfffc4 	movi	r2,-1
    d2cc:	f800283a 	ret
    d2d0:	21800217 	ldw	r6,8(r4)
    d2d4:	28800217 	ldw	r2,8(r5)
    d2d8:	11bffa16 	blt	r2,r6,d2c4 <__fpcmp_parts_f+0x54>
    d2dc:	30800416 	blt	r6,r2,d2f0 <__fpcmp_parts_f+0x80>
    d2e0:	21000317 	ldw	r4,12(r4)
    d2e4:	29400317 	ldw	r5,12(r5)
    d2e8:	293ff636 	bltu	r5,r4,d2c4 <__fpcmp_parts_f+0x54>
    d2ec:	217ff02e 	bgeu	r4,r5,d2b0 <__fpcmp_parts_f+0x40>
    d2f0:	183fec1e 	bne	r3,zero,d2a4 <__fpcmp_parts_f+0x34>
    d2f4:	003ff406 	br	d2c8 <__fpcmp_parts_f+0x58>
    d2f8:	28800117 	ldw	r2,4(r5)
    d2fc:	103fe91e 	bne	r2,zero,d2a4 <__fpcmp_parts_f+0x34>
    d300:	003ff106 	br	d2c8 <__fpcmp_parts_f+0x58>
    d304:	11bfe51e 	bne	r2,r6,d29c <__fpcmp_parts_f+0x2c>
    d308:	28c00117 	ldw	r3,4(r5)
    d30c:	20800117 	ldw	r2,4(r4)
    d310:	1885c83a 	sub	r2,r3,r2
    d314:	f800283a 	ret

0000d318 <__pack_d>:
    d318:	20c00017 	ldw	r3,0(r4)
    d31c:	defffd04 	addi	sp,sp,-12
    d320:	dc000015 	stw	r16,0(sp)
    d324:	dc800215 	stw	r18,8(sp)
    d328:	dc400115 	stw	r17,4(sp)
    d32c:	00800044 	movi	r2,1
    d330:	22000317 	ldw	r8,12(r4)
    d334:	001f883a 	mov	r15,zero
    d338:	22400417 	ldw	r9,16(r4)
    d33c:	24000117 	ldw	r16,4(r4)
    d340:	10c0552e 	bgeu	r2,r3,d498 <__pack_d+0x180>
    d344:	00800104 	movi	r2,4
    d348:	18804f26 	beq	r3,r2,d488 <__pack_d+0x170>
    d34c:	00800084 	movi	r2,2
    d350:	18800226 	beq	r3,r2,d35c <__pack_d+0x44>
    d354:	4244b03a 	or	r2,r8,r9
    d358:	10001a1e 	bne	r2,zero,d3c4 <__pack_d+0xac>
    d35c:	000d883a 	mov	r6,zero
    d360:	000f883a 	mov	r7,zero
    d364:	0011883a 	mov	r8,zero
    d368:	00800434 	movhi	r2,16
    d36c:	10bfffc4 	addi	r2,r2,-1
    d370:	301d883a 	mov	r14,r6
    d374:	3884703a 	and	r2,r7,r2
    d378:	400a953a 	slli	r5,r8,20
    d37c:	79bffc2c 	andhi	r6,r15,65520
    d380:	308cb03a 	or	r6,r6,r2
    d384:	00e00434 	movhi	r3,32784
    d388:	18ffffc4 	addi	r3,r3,-1
    d38c:	800497fa 	slli	r2,r16,31
    d390:	30c6703a 	and	r3,r6,r3
    d394:	1946b03a 	or	r3,r3,r5
    d398:	01600034 	movhi	r5,32768
    d39c:	297fffc4 	addi	r5,r5,-1
    d3a0:	194a703a 	and	r5,r3,r5
    d3a4:	288ab03a 	or	r5,r5,r2
    d3a8:	2807883a 	mov	r3,r5
    d3ac:	7005883a 	mov	r2,r14
    d3b0:	dc800217 	ldw	r18,8(sp)
    d3b4:	dc400117 	ldw	r17,4(sp)
    d3b8:	dc000017 	ldw	r16,0(sp)
    d3bc:	dec00304 	addi	sp,sp,12
    d3c0:	f800283a 	ret
    d3c4:	21000217 	ldw	r4,8(r4)
    d3c8:	00bf0084 	movi	r2,-1022
    d3cc:	20803f16 	blt	r4,r2,d4cc <__pack_d+0x1b4>
    d3d0:	0080ffc4 	movi	r2,1023
    d3d4:	11002c16 	blt	r2,r4,d488 <__pack_d+0x170>
    d3d8:	00803fc4 	movi	r2,255
    d3dc:	408c703a 	and	r6,r8,r2
    d3e0:	00802004 	movi	r2,128
    d3e4:	0007883a 	mov	r3,zero
    d3e8:	000f883a 	mov	r7,zero
    d3ec:	2280ffc4 	addi	r10,r4,1023
    d3f0:	30801e26 	beq	r6,r2,d46c <__pack_d+0x154>
    d3f4:	00801fc4 	movi	r2,127
    d3f8:	4089883a 	add	r4,r8,r2
    d3fc:	220d803a 	cmpltu	r6,r4,r8
    d400:	324d883a 	add	r6,r6,r9
    d404:	2011883a 	mov	r8,r4
    d408:	3013883a 	mov	r9,r6
    d40c:	00880034 	movhi	r2,8192
    d410:	10bfffc4 	addi	r2,r2,-1
    d414:	12400d36 	bltu	r2,r9,d44c <__pack_d+0x134>
    d418:	4804963a 	slli	r2,r9,24
    d41c:	400cd23a 	srli	r6,r8,8
    d420:	480ed23a 	srli	r7,r9,8
    d424:	013fffc4 	movi	r4,-1
    d428:	118cb03a 	or	r6,r2,r6
    d42c:	01400434 	movhi	r5,16
    d430:	297fffc4 	addi	r5,r5,-1
    d434:	3104703a 	and	r2,r6,r4
    d438:	3946703a 	and	r3,r7,r5
    d43c:	5201ffcc 	andi	r8,r10,2047
    d440:	100d883a 	mov	r6,r2
    d444:	180f883a 	mov	r7,r3
    d448:	003fc706 	br	d368 <__pack_d+0x50>
    d44c:	480897fa 	slli	r4,r9,31
    d450:	4004d07a 	srli	r2,r8,1
    d454:	4806d07a 	srli	r3,r9,1
    d458:	52800044 	addi	r10,r10,1
    d45c:	2084b03a 	or	r2,r4,r2
    d460:	1011883a 	mov	r8,r2
    d464:	1813883a 	mov	r9,r3
    d468:	003feb06 	br	d418 <__pack_d+0x100>
    d46c:	383fe11e 	bne	r7,zero,d3f4 <__pack_d+0xdc>
    d470:	01004004 	movi	r4,256
    d474:	4104703a 	and	r2,r8,r4
    d478:	10c4b03a 	or	r2,r2,r3
    d47c:	103fe326 	beq	r2,zero,d40c <__pack_d+0xf4>
    d480:	3005883a 	mov	r2,r6
    d484:	003fdc06 	br	d3f8 <__pack_d+0xe0>
    d488:	000d883a 	mov	r6,zero
    d48c:	000f883a 	mov	r7,zero
    d490:	0201ffc4 	movi	r8,2047
    d494:	003fb406 	br	d368 <__pack_d+0x50>
    d498:	0005883a 	mov	r2,zero
    d49c:	00c00234 	movhi	r3,8
    d4a0:	408cb03a 	or	r6,r8,r2
    d4a4:	48ceb03a 	or	r7,r9,r3
    d4a8:	013fffc4 	movi	r4,-1
    d4ac:	01400434 	movhi	r5,16
    d4b0:	297fffc4 	addi	r5,r5,-1
    d4b4:	3104703a 	and	r2,r6,r4
    d4b8:	3946703a 	and	r3,r7,r5
    d4bc:	100d883a 	mov	r6,r2
    d4c0:	180f883a 	mov	r7,r3
    d4c4:	0201ffc4 	movi	r8,2047
    d4c8:	003fa706 	br	d368 <__pack_d+0x50>
    d4cc:	1109c83a 	sub	r4,r2,r4
    d4d0:	00800e04 	movi	r2,56
    d4d4:	11004316 	blt	r2,r4,d5e4 <__pack_d+0x2cc>
    d4d8:	21fff804 	addi	r7,r4,-32
    d4dc:	38004516 	blt	r7,zero,d5f4 <__pack_d+0x2dc>
    d4e0:	49d8d83a 	srl	r12,r9,r7
    d4e4:	001b883a 	mov	r13,zero
    d4e8:	0023883a 	mov	r17,zero
    d4ec:	01400044 	movi	r5,1
    d4f0:	0025883a 	mov	r18,zero
    d4f4:	38004716 	blt	r7,zero,d614 <__pack_d+0x2fc>
    d4f8:	29d6983a 	sll	r11,r5,r7
    d4fc:	0015883a 	mov	r10,zero
    d500:	00bfffc4 	movi	r2,-1
    d504:	5089883a 	add	r4,r10,r2
    d508:	588b883a 	add	r5,r11,r2
    d50c:	228d803a 	cmpltu	r6,r4,r10
    d510:	314b883a 	add	r5,r6,r5
    d514:	4104703a 	and	r2,r8,r4
    d518:	4946703a 	and	r3,r9,r5
    d51c:	10c4b03a 	or	r2,r2,r3
    d520:	10000226 	beq	r2,zero,d52c <__pack_d+0x214>
    d524:	04400044 	movi	r17,1
    d528:	0025883a 	mov	r18,zero
    d52c:	00803fc4 	movi	r2,255
    d530:	644eb03a 	or	r7,r12,r17
    d534:	3892703a 	and	r9,r7,r2
    d538:	00802004 	movi	r2,128
    d53c:	6c90b03a 	or	r8,r13,r18
    d540:	0015883a 	mov	r10,zero
    d544:	48801626 	beq	r9,r2,d5a0 <__pack_d+0x288>
    d548:	01001fc4 	movi	r4,127
    d54c:	3905883a 	add	r2,r7,r4
    d550:	11cd803a 	cmpltu	r6,r2,r7
    d554:	320d883a 	add	r6,r6,r8
    d558:	100f883a 	mov	r7,r2
    d55c:	00840034 	movhi	r2,4096
    d560:	10bfffc4 	addi	r2,r2,-1
    d564:	3011883a 	mov	r8,r6
    d568:	0007883a 	mov	r3,zero
    d56c:	11801b36 	bltu	r2,r6,d5dc <__pack_d+0x2c4>
    d570:	4004963a 	slli	r2,r8,24
    d574:	3808d23a 	srli	r4,r7,8
    d578:	400ad23a 	srli	r5,r8,8
    d57c:	1813883a 	mov	r9,r3
    d580:	1108b03a 	or	r4,r2,r4
    d584:	00bfffc4 	movi	r2,-1
    d588:	00c00434 	movhi	r3,16
    d58c:	18ffffc4 	addi	r3,r3,-1
    d590:	208c703a 	and	r6,r4,r2
    d594:	28ce703a 	and	r7,r5,r3
    d598:	4a01ffcc 	andi	r8,r9,2047
    d59c:	003f7206 	br	d368 <__pack_d+0x50>
    d5a0:	503fe91e 	bne	r10,zero,d548 <__pack_d+0x230>
    d5a4:	01004004 	movi	r4,256
    d5a8:	3904703a 	and	r2,r7,r4
    d5ac:	0007883a 	mov	r3,zero
    d5b0:	10c4b03a 	or	r2,r2,r3
    d5b4:	10000626 	beq	r2,zero,d5d0 <__pack_d+0x2b8>
    d5b8:	3a45883a 	add	r2,r7,r9
    d5bc:	11cd803a 	cmpltu	r6,r2,r7
    d5c0:	320d883a 	add	r6,r6,r8
    d5c4:	100f883a 	mov	r7,r2
    d5c8:	3011883a 	mov	r8,r6
    d5cc:	0007883a 	mov	r3,zero
    d5d0:	00840034 	movhi	r2,4096
    d5d4:	10bfffc4 	addi	r2,r2,-1
    d5d8:	123fe52e 	bgeu	r2,r8,d570 <__pack_d+0x258>
    d5dc:	00c00044 	movi	r3,1
    d5e0:	003fe306 	br	d570 <__pack_d+0x258>
    d5e4:	0009883a 	mov	r4,zero
    d5e8:	0013883a 	mov	r9,zero
    d5ec:	000b883a 	mov	r5,zero
    d5f0:	003fe406 	br	d584 <__pack_d+0x26c>
    d5f4:	4a47883a 	add	r3,r9,r9
    d5f8:	008007c4 	movi	r2,31
    d5fc:	1105c83a 	sub	r2,r2,r4
    d600:	1886983a 	sll	r3,r3,r2
    d604:	4118d83a 	srl	r12,r8,r4
    d608:	491ad83a 	srl	r13,r9,r4
    d60c:	1b18b03a 	or	r12,r3,r12
    d610:	003fb506 	br	d4e8 <__pack_d+0x1d0>
    d614:	2806d07a 	srli	r3,r5,1
    d618:	008007c4 	movi	r2,31
    d61c:	1105c83a 	sub	r2,r2,r4
    d620:	1896d83a 	srl	r11,r3,r2
    d624:	2914983a 	sll	r10,r5,r4
    d628:	003fb506 	br	d500 <__pack_d+0x1e8>

0000d62c <__fpcmp_parts_d>:
    d62c:	21800017 	ldw	r6,0(r4)
    d630:	00c00044 	movi	r3,1
    d634:	19800a2e 	bgeu	r3,r6,d660 <__fpcmp_parts_d+0x34>
    d638:	28800017 	ldw	r2,0(r5)
    d63c:	1880082e 	bgeu	r3,r2,d660 <__fpcmp_parts_d+0x34>
    d640:	00c00104 	movi	r3,4
    d644:	30c02626 	beq	r6,r3,d6e0 <__fpcmp_parts_d+0xb4>
    d648:	10c02226 	beq	r2,r3,d6d4 <__fpcmp_parts_d+0xa8>
    d64c:	00c00084 	movi	r3,2
    d650:	30c00526 	beq	r6,r3,d668 <__fpcmp_parts_d+0x3c>
    d654:	10c0071e 	bne	r2,r3,d674 <__fpcmp_parts_d+0x48>
    d658:	20800117 	ldw	r2,4(r4)
    d65c:	1000091e 	bne	r2,zero,d684 <__fpcmp_parts_d+0x58>
    d660:	00800044 	movi	r2,1
    d664:	f800283a 	ret
    d668:	10c01a1e 	bne	r2,r3,d6d4 <__fpcmp_parts_d+0xa8>
    d66c:	0005883a 	mov	r2,zero
    d670:	f800283a 	ret
    d674:	22000117 	ldw	r8,4(r4)
    d678:	28800117 	ldw	r2,4(r5)
    d67c:	40800326 	beq	r8,r2,d68c <__fpcmp_parts_d+0x60>
    d680:	403ff726 	beq	r8,zero,d660 <__fpcmp_parts_d+0x34>
    d684:	00bfffc4 	movi	r2,-1
    d688:	f800283a 	ret
    d68c:	20c00217 	ldw	r3,8(r4)
    d690:	28800217 	ldw	r2,8(r5)
    d694:	10fffa16 	blt	r2,r3,d680 <__fpcmp_parts_d+0x54>
    d698:	18800916 	blt	r3,r2,d6c0 <__fpcmp_parts_d+0x94>
    d69c:	21c00417 	ldw	r7,16(r4)
    d6a0:	28c00417 	ldw	r3,16(r5)
    d6a4:	21800317 	ldw	r6,12(r4)
    d6a8:	28800317 	ldw	r2,12(r5)
    d6ac:	19fff436 	bltu	r3,r7,d680 <__fpcmp_parts_d+0x54>
    d6b0:	38c00526 	beq	r7,r3,d6c8 <__fpcmp_parts_d+0x9c>
    d6b4:	38c00236 	bltu	r7,r3,d6c0 <__fpcmp_parts_d+0x94>
    d6b8:	19ffec1e 	bne	r3,r7,d66c <__fpcmp_parts_d+0x40>
    d6bc:	30bfeb2e 	bgeu	r6,r2,d66c <__fpcmp_parts_d+0x40>
    d6c0:	403fe71e 	bne	r8,zero,d660 <__fpcmp_parts_d+0x34>
    d6c4:	003fef06 	br	d684 <__fpcmp_parts_d+0x58>
    d6c8:	11bffa2e 	bgeu	r2,r6,d6b4 <__fpcmp_parts_d+0x88>
    d6cc:	403fe426 	beq	r8,zero,d660 <__fpcmp_parts_d+0x34>
    d6d0:	003fec06 	br	d684 <__fpcmp_parts_d+0x58>
    d6d4:	28800117 	ldw	r2,4(r5)
    d6d8:	103fe11e 	bne	r2,zero,d660 <__fpcmp_parts_d+0x34>
    d6dc:	003fe906 	br	d684 <__fpcmp_parts_d+0x58>
    d6e0:	11bfdd1e 	bne	r2,r6,d658 <__fpcmp_parts_d+0x2c>
    d6e4:	28c00117 	ldw	r3,4(r5)
    d6e8:	20800117 	ldw	r2,4(r4)
    d6ec:	1885c83a 	sub	r2,r3,r2
    d6f0:	f800283a 	ret

0000d6f4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d6f4:	defffd04 	addi	sp,sp,-12
    d6f8:	dfc00215 	stw	ra,8(sp)
    d6fc:	dc400115 	stw	r17,4(sp)
    d700:	dc000015 	stw	r16,0(sp)
    d704:	2021883a 	mov	r16,r4
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d708:	20001d16 	blt	r4,zero,d780 <close+0x8c>
    d70c:	01400304 	movi	r5,12
    d710:	000d0940 	call	d094 <__mulsi3>
    d714:	00c00074 	movhi	r3,1
    d718:	18febe04 	addi	r3,r3,-1288
    d71c:	10c9883a 	add	r4,r2,r3

  if (fd)
    d720:	20001726 	beq	r4,zero,d780 <close+0x8c>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d724:	20800017 	ldw	r2,0(r4)
    d728:	10800417 	ldw	r2,16(r2)
    d72c:	10002126 	beq	r2,zero,d7b4 <close+0xc0>
    d730:	103ee83a 	callr	r2
    d734:	1023883a 	mov	r17,r2

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d738:	8009883a 	mov	r4,r16
    d73c:	000dbec0 	call	dbec <alt_release_fd>
    if (rval < 0)
    d740:	88000216 	blt	r17,zero,d74c <close+0x58>
    d744:	0005883a 	mov	r2,zero
    d748:	00001d06 	br	d7c0 <close+0xcc>

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  return ((alt_errno) ? alt_errno() : &errno);
    d74c:	00800074 	movhi	r2,1
    d750:	10836304 	addi	r2,r2,3468
    d754:	10800017 	ldw	r2,0(r2)
    d758:	1000031e 	bne	r2,zero,d768 <close+0x74>
    d75c:	00c00074 	movhi	r3,1
    d760:	18ca2e04 	addi	r3,r3,10424
    d764:	00000206 	br	d770 <close+0x7c>
    d768:	103ee83a 	callr	r2
    d76c:	1007883a 	mov	r3,r2
    {
      ALT_ERRNO = -rval;
    d770:	0445c83a 	sub	r2,zero,r17
    d774:	18800015 	stw	r2,0(r3)
    d778:	00bfffc4 	movi	r2,-1
    d77c:	00001006 	br	d7c0 <close+0xcc>
    d780:	00800074 	movhi	r2,1
    d784:	10836304 	addi	r2,r2,3468
    d788:	10800017 	ldw	r2,0(r2)
    d78c:	1000031e 	bne	r2,zero,d79c <close+0xa8>
    d790:	00c00074 	movhi	r3,1
    d794:	18ca2e04 	addi	r3,r3,10424
    d798:	00000206 	br	d7a4 <close+0xb0>
    d79c:	103ee83a 	callr	r2
    d7a0:	1007883a 	mov	r3,r2
    }
    return 0;
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d7a4:	00801444 	movi	r2,81
    d7a8:	18800015 	stw	r2,0(r3)
    d7ac:	00bfffc4 	movi	r2,-1
    d7b0:	00000306 	br	d7c0 <close+0xcc>

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d7b4:	8009883a 	mov	r4,r16
    d7b8:	000dbec0 	call	dbec <alt_release_fd>
    d7bc:	0005883a 	mov	r2,zero
  else
  {
    ALT_ERRNO = EBADFD;
    return -1;
  }
}
    d7c0:	dfc00217 	ldw	ra,8(sp)
    d7c4:	dc400117 	ldw	r17,4(sp)
    d7c8:	dc000017 	ldw	r16,0(sp)
    d7cc:	dec00304 	addi	sp,sp,12
    d7d0:	f800283a 	ret

0000d7d4 <alt_dev_null_write>:
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  return len;
}
    d7d4:	3005883a 	mov	r2,r6
    d7d8:	f800283a 	ret

0000d7dc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d7dc:	defffe04 	addi	sp,sp,-8
    d7e0:	dfc00115 	stw	ra,4(sp)
    d7e4:	dc000015 	stw	r16,0(sp)
    d7e8:	2821883a 	mov	r16,r5
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d7ec:	20001016 	blt	r4,zero,d830 <fstat+0x54>
    d7f0:	01400304 	movi	r5,12
    d7f4:	000d0940 	call	d094 <__mulsi3>
    d7f8:	00c00074 	movhi	r3,1
    d7fc:	18febe04 	addi	r3,r3,-1288
    d800:	10c9883a 	add	r4,r2,r3
  
  if (fd)
    d804:	20000a26 	beq	r4,zero,d830 <fstat+0x54>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d808:	20800017 	ldw	r2,0(r4)
    d80c:	10800817 	ldw	r2,32(r2)
    d810:	10000326 	beq	r2,zero,d820 <fstat+0x44>
    {
      return fd->dev->fstat(fd, st);
    d814:	800b883a 	mov	r5,r16
    d818:	103ee83a 	callr	r2
    d81c:	00001006 	br	d860 <fstat+0x84>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d820:	00880004 	movi	r2,8192
    d824:	80800115 	stw	r2,4(r16)
    d828:	0005883a 	mov	r2,zero
    d82c:	00000c06 	br	d860 <fstat+0x84>
    d830:	00800074 	movhi	r2,1
    d834:	10836304 	addi	r2,r2,3468
    d838:	10800017 	ldw	r2,0(r2)
    d83c:	1000031e 	bne	r2,zero,d84c <fstat+0x70>
    d840:	00c00074 	movhi	r3,1
    d844:	18ca2e04 	addi	r3,r3,10424
    d848:	00000206 	br	d854 <fstat+0x78>
    d84c:	103ee83a 	callr	r2
    d850:	1007883a 	mov	r3,r2
      return 0;
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d854:	00801444 	movi	r2,81
    d858:	18800015 	stw	r2,0(r3)
    d85c:	00bfffc4 	movi	r2,-1
    return -1;
  }
}
    d860:	dfc00117 	ldw	ra,4(sp)
    d864:	dc000017 	ldw	r16,0(sp)
    d868:	dec00204 	addi	sp,sp,8
    d86c:	f800283a 	ret

0000d870 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d870:	deffef04 	addi	sp,sp,-68
    d874:	dfc01015 	stw	ra,64(sp)
    d878:	dc000f15 	stw	r16,60(sp)
    d87c:	2021883a 	mov	r16,r4
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d880:	20001116 	blt	r4,zero,d8c8 <isatty+0x58>
    d884:	01400304 	movi	r5,12
    d888:	000d0940 	call	d094 <__mulsi3>
    d88c:	00c00074 	movhi	r3,1
    d890:	18febe04 	addi	r3,r3,-1288
    d894:	10c5883a 	add	r2,r2,r3
  
  if (fd)
    d898:	10000b26 	beq	r2,zero,d8c8 <isatty+0x58>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d89c:	10800017 	ldw	r2,0(r2)
    d8a0:	10800817 	ldw	r2,32(r2)
    d8a4:	1000021e 	bne	r2,zero,d8b0 <isatty+0x40>
    d8a8:	00800044 	movi	r2,1
    d8ac:	00001206 	br	d8f8 <isatty+0x88>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d8b0:	8009883a 	mov	r4,r16
    d8b4:	d80b883a 	mov	r5,sp
    d8b8:	000d7dc0 	call	d7dc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d8bc:	d8800117 	ldw	r2,4(sp)
    d8c0:	10880020 	cmpeqi	r2,r2,8192
    d8c4:	00000c06 	br	d8f8 <isatty+0x88>
    d8c8:	00800074 	movhi	r2,1
    d8cc:	10836304 	addi	r2,r2,3468
    d8d0:	10800017 	ldw	r2,0(r2)
    d8d4:	1000031e 	bne	r2,zero,d8e4 <isatty+0x74>
    d8d8:	00c00074 	movhi	r3,1
    d8dc:	18ca2e04 	addi	r3,r3,10424
    d8e0:	00000206 	br	d8ec <isatty+0x7c>
    d8e4:	103ee83a 	callr	r2
    d8e8:	1007883a 	mov	r3,r2
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d8ec:	00801444 	movi	r2,81
    d8f0:	18800015 	stw	r2,0(r3)
    d8f4:	0005883a 	mov	r2,zero
    return 0;
  }
}
    d8f8:	dfc01017 	ldw	ra,64(sp)
    d8fc:	dc000f17 	ldw	r16,60(sp)
    d900:	dec01104 	addi	sp,sp,68
    d904:	f800283a 	ret

0000d908 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d908:	deffff04 	addi	sp,sp,-4
    d90c:	dfc00015 	stw	ra,0(sp)
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d910:	01000074 	movhi	r4,1
    d914:	21036804 	addi	r4,r4,3488
    d918:	00c00074 	movhi	r3,1
    d91c:	18fca504 	addi	r3,r3,-3436

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
    d920:	20c00926 	beq	r4,r3,d948 <alt_load+0x40>
    d924:	01800074 	movhi	r6,1
    d928:	31836804 	addi	r6,r6,3488
  {
    while( to != end )
    d92c:	19800626 	beq	r3,r6,d948 <alt_load+0x40>
    d930:	01400104 	movi	r5,4
    {
      *to++ = *from++;
    d934:	20800017 	ldw	r2,0(r4)
    d938:	18800015 	stw	r2,0(r3)
    d93c:	1947883a 	add	r3,r3,r5
    d940:	2149883a 	add	r4,r4,r5
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d944:	30fffb1e 	bne	r6,r3,d934 <alt_load+0x2c>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d948:	01000034 	movhi	r4,0
    d94c:	21000804 	addi	r4,r4,32
    d950:	00c00034 	movhi	r3,0
    d954:	18c00804 	addi	r3,r3,32

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
    d958:	20c00926 	beq	r4,r3,d980 <alt_load+0x78>
    d95c:	01800034 	movhi	r6,0
    d960:	31805a04 	addi	r6,r6,360
  {
    while( to != end )
    d964:	19800626 	beq	r3,r6,d980 <alt_load+0x78>
    d968:	01400104 	movi	r5,4
    {
      *to++ = *from++;
    d96c:	20800017 	ldw	r2,0(r4)
    d970:	18800015 	stw	r2,0(r3)
    d974:	1947883a 	add	r3,r3,r5
    d978:	2149883a 	add	r4,r4,r5
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d97c:	30fffb1e 	bne	r6,r3,d96c <alt_load+0x64>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d980:	01000074 	movhi	r4,1
    d984:	213b7f04 	addi	r4,r4,-4612
    d988:	00c00074 	movhi	r3,1
    d98c:	18fb7f04 	addi	r3,r3,-4612

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
    d990:	20c00926 	beq	r4,r3,d9b8 <alt_load+0xb0>
    d994:	01800074 	movhi	r6,1
    d998:	31bca504 	addi	r6,r6,-3436
  {
    while( to != end )
    d99c:	19800626 	beq	r3,r6,d9b8 <alt_load+0xb0>
    d9a0:	01400104 	movi	r5,4
    {
      *to++ = *from++;
    d9a4:	20800017 	ldw	r2,0(r4)
    d9a8:	18800015 	stw	r2,0(r3)
    d9ac:	1947883a 	add	r3,r3,r5
    d9b0:	2149883a 	add	r4,r4,r5
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d9b4:	30fffb1e 	bne	r6,r3,d9a4 <alt_load+0x9c>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d9b8:	000e5180 	call	e518 <alt_dcache_flush_all>
  alt_icache_flush_all();
    d9bc:	000e58c0 	call	e58c <alt_icache_flush_all>
}
    d9c0:	dfc00017 	ldw	ra,0(sp)
    d9c4:	dec00104 	addi	sp,sp,4
    d9c8:	f800283a 	ret

0000d9cc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d9cc:	defffd04 	addi	sp,sp,-12
    d9d0:	dfc00215 	stw	ra,8(sp)
    d9d4:	dc400115 	stw	r17,4(sp)
    d9d8:	dc000015 	stw	r16,0(sp)
    d9dc:	2821883a 	mov	r16,r5
    d9e0:	3023883a 	mov	r17,r6
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d9e4:	2000020e 	bge	r4,zero,d9f0 <lseek+0x24>
    d9e8:	043febc4 	movi	r16,-81
    d9ec:	00001006 	br	da30 <lseek+0x64>
    d9f0:	01400304 	movi	r5,12
    d9f4:	000d0940 	call	d094 <__mulsi3>
    d9f8:	00c00074 	movhi	r3,1
    d9fc:	18febe04 	addi	r3,r3,-1288
    da00:	10c9883a 	add	r4,r2,r3
  
  if (fd) 
    da04:	20001726 	beq	r4,zero,da64 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    da08:	20800017 	ldw	r2,0(r4)
    da0c:	10800717 	ldw	r2,28(r2)
    da10:	1000021e 	bne	r2,zero,da1c <lseek+0x50>
    da14:	043fde84 	movi	r16,-134
    da18:	00000506 	br	da30 <lseek+0x64>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    da1c:	800b883a 	mov	r5,r16
    da20:	880d883a 	mov	r6,r17
    da24:	103ee83a 	callr	r2
  else  
  {
    rc = -EBADFD;
  }

  if (rc < 0)
    da28:	1000100e 	bge	r2,zero,da6c <lseek+0xa0>
    da2c:	1021883a 	mov	r16,r2
    da30:	00800074 	movhi	r2,1
    da34:	10836304 	addi	r2,r2,3468
    da38:	10800017 	ldw	r2,0(r2)
    da3c:	1000031e 	bne	r2,zero,da4c <lseek+0x80>
    da40:	00c00074 	movhi	r3,1
    da44:	18ca2e04 	addi	r3,r3,10424
    da48:	00000206 	br	da54 <lseek+0x88>
    da4c:	103ee83a 	callr	r2
    da50:	1007883a 	mov	r3,r2
  {
    ALT_ERRNO = -rc;
    da54:	0405c83a 	sub	r2,zero,r16
    da58:	18800015 	stw	r2,0(r3)
    da5c:	00bfffc4 	movi	r2,-1
    da60:	00000206 	br	da6c <lseek+0xa0>
    da64:	043febc4 	movi	r16,-81
    da68:	003ff106 	br	da30 <lseek+0x64>
    rc = -1;
  }

  return rc;
}
    da6c:	dfc00217 	ldw	ra,8(sp)
    da70:	dc400117 	ldw	r17,4(sp)
    da74:	dc000017 	ldw	r16,0(sp)
    da78:	dec00304 	addi	sp,sp,12
    da7c:	f800283a 	ret

0000da80 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    da80:	defffe04 	addi	sp,sp,-8
    da84:	dfc00115 	stw	ra,4(sp)
    da88:	dc000015 	stw	r16,0(sp)
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    da8c:	0009883a 	mov	r4,zero
    da90:	000ddb40 	call	ddb4 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    da94:	000ddd40 	call	ddd4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    da98:	01800074 	movhi	r6,1
    da9c:	31bc9404 	addi	r6,r6,-3504
    daa0:	3009883a 	mov	r4,r6
    daa4:	300b883a 	mov	r5,r6
    daa8:	000e7280 	call	e728 <alt_io_redirect>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    daac:	d126db17 	ldw	r4,-25748(gp)
    dab0:	d166dc17 	ldw	r5,-25744(gp)
    dab4:	d1a6dd17 	ldw	r6,-25740(gp)
    dab8:	00001c80 	call	1c8 <main>
    dabc:	1021883a 	mov	r16,r2
  close(STDOUT_FILENO);
    dac0:	01000044 	movi	r4,1
    dac4:	000d6f40 	call	d6f4 <close>
  exit (result);
    dac8:	8009883a 	mov	r4,r16
    dacc:	000ebf80 	call	ebf8 <exit>

0000dad0 <__malloc_lock>:
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
}
    dad0:	f800283a 	ret

0000dad4 <__malloc_unlock>:
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
}
    dad4:	f800283a 	ret

0000dad8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    dad8:	defffd04 	addi	sp,sp,-12
    dadc:	dfc00215 	stw	ra,8(sp)
    dae0:	dc400115 	stw	r17,4(sp)
    dae4:	dc000015 	stw	r16,0(sp)
    dae8:	2821883a 	mov	r16,r5
    daec:	3023883a 	mov	r17,r6
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    daf0:	20002c16 	blt	r4,zero,dba4 <read+0xcc>
    daf4:	01400304 	movi	r5,12
    daf8:	000d0940 	call	d094 <__mulsi3>
    dafc:	00c00074 	movhi	r3,1
    db00:	18febe04 	addi	r3,r3,-1288
    db04:	10c9883a 	add	r4,r2,r3
  
  if (fd)
    db08:	20002626 	beq	r4,zero,dba4 <read+0xcc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    db0c:	20800217 	ldw	r2,8(r4)
    db10:	108000cc 	andi	r2,r2,3
    db14:	00c00044 	movi	r3,1
    db18:	10c01526 	beq	r2,r3,db70 <read+0x98>
    db1c:	20800017 	ldw	r2,0(r4)
    db20:	10800517 	ldw	r2,20(r2)
    db24:	10001226 	beq	r2,zero,db70 <read+0x98>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    db28:	800b883a 	mov	r5,r16
    db2c:	880d883a 	mov	r6,r17
    db30:	103ee83a 	callr	r2
    db34:	1021883a 	mov	r16,r2
    db38:	1000260e 	bge	r2,zero,dbd4 <read+0xfc>
    db3c:	00800074 	movhi	r2,1
    db40:	10836304 	addi	r2,r2,3468
    db44:	10800017 	ldw	r2,0(r2)
    db48:	1000031e 	bne	r2,zero,db58 <read+0x80>
    db4c:	00c00074 	movhi	r3,1
    db50:	18ca2e04 	addi	r3,r3,10424
    db54:	00000206 	br	db60 <read+0x88>
    db58:	103ee83a 	callr	r2
    db5c:	1007883a 	mov	r3,r2
        {
          ALT_ERRNO = -rval;
    db60:	0405c83a 	sub	r2,zero,r16
    db64:	18800015 	stw	r2,0(r3)
    db68:	043fffc4 	movi	r16,-1
    db6c:	00001906 	br	dbd4 <read+0xfc>
    db70:	00800074 	movhi	r2,1
    db74:	10836304 	addi	r2,r2,3468
    db78:	10800017 	ldw	r2,0(r2)
    db7c:	1000031e 	bne	r2,zero,db8c <read+0xb4>
    db80:	00c00074 	movhi	r3,1
    db84:	18ca2e04 	addi	r3,r3,10424
    db88:	00000206 	br	db94 <read+0xbc>
    db8c:	103ee83a 	callr	r2
    db90:	1007883a 	mov	r3,r2
        }
        return rval;
      }
      else
      {
        ALT_ERRNO = EACCES;
    db94:	00800344 	movi	r2,13
    db98:	18800015 	stw	r2,0(r3)
    db9c:	043fffc4 	movi	r16,-1
    dba0:	00000c06 	br	dbd4 <read+0xfc>
    dba4:	00800074 	movhi	r2,1
    dba8:	10836304 	addi	r2,r2,3468
    dbac:	10800017 	ldw	r2,0(r2)
    dbb0:	1000031e 	bne	r2,zero,dbc0 <read+0xe8>
    dbb4:	00c00074 	movhi	r3,1
    dbb8:	18ca2e04 	addi	r3,r3,10424
    dbbc:	00000206 	br	dbc8 <read+0xf0>
    dbc0:	103ee83a 	callr	r2
    dbc4:	1007883a 	mov	r3,r2
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    dbc8:	00801444 	movi	r2,81
    dbcc:	18800015 	stw	r2,0(r3)
    dbd0:	043fffc4 	movi	r16,-1
  }
  return -1;
}
    dbd4:	8005883a 	mov	r2,r16
    dbd8:	dfc00217 	ldw	ra,8(sp)
    dbdc:	dc400117 	ldw	r17,4(sp)
    dbe0:	dc000017 	ldw	r16,0(sp)
    dbe4:	dec00304 	addi	sp,sp,12
    dbe8:	f800283a 	ret

0000dbec <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    dbec:	defffc04 	addi	sp,sp,-16
    dbf0:	dfc00315 	stw	ra,12(sp)
    dbf4:	dc800215 	stw	r18,8(sp)
    dbf8:	dc400115 	stw	r17,4(sp)
    dbfc:	dc000015 	stw	r16,0(sp)
    dc00:	2025883a 	mov	r18,r4
  if (fd > 2)
    dc04:	00800084 	movi	r2,2
    dc08:	11000c0e 	bge	r2,r4,dc3c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
    dc0c:	04400074 	movhi	r17,1
    dc10:	8c7ebe04 	addi	r17,r17,-1288
    dc14:	04000304 	movi	r16,12
    dc18:	800b883a 	mov	r5,r16
    dc1c:	000d0940 	call	d094 <__mulsi3>
    dc20:	1445883a 	add	r2,r2,r17
    dc24:	10000215 	stw	zero,8(r2)
    alt_fd_list[fd].dev      = 0;
    dc28:	9009883a 	mov	r4,r18
    dc2c:	800b883a 	mov	r5,r16
    dc30:	000d0940 	call	d094 <__mulsi3>
    dc34:	1445883a 	add	r2,r2,r17
    dc38:	10000015 	stw	zero,0(r2)
  }
}
    dc3c:	dfc00317 	ldw	ra,12(sp)
    dc40:	dc800217 	ldw	r18,8(sp)
    dc44:	dc400117 	ldw	r17,4(sp)
    dc48:	dc000017 	ldw	r16,0(sp)
    dc4c:	dec00404 	addi	sp,sp,16
    dc50:	f800283a 	ret

0000dc54 <sbrk>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    dc54:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dc58:	00bfff84 	movi	r2,-2
    dc5c:	2884703a 	and	r2,r5,r2
    dc60:	1001703a 	wrctl	status,r2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    dc64:	d0a00d17 	ldw	r2,-32716(gp)
    dc68:	108000c4 	addi	r2,r2,3
    dc6c:	00ffff04 	movi	r3,-4
    dc70:	10c6703a 	and	r3,r2,r3
    dc74:	d0e00d15 	stw	r3,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    dc78:	1909883a 	add	r4,r3,r4
    dc7c:	00820034 	movhi	r2,2048
    dc80:	10800004 	addi	r2,r2,0
    dc84:	1100032e 	bgeu	r2,r4,dc94 <sbrk+0x40>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dc88:	2801703a 	wrctl	status,r5
    dc8c:	00ffffc4 	movi	r3,-1
    dc90:	00000206 	br	dc9c <sbrk+0x48>
    return (caddr_t)-1;
  }
#endif

  prev_heap_end = heap_end; 
  heap_end += incr; 
    dc94:	d1200d15 	stw	r4,-32716(gp)
    dc98:	2801703a 	wrctl	status,r5
#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
} 
    dc9c:	1805883a 	mov	r2,r3
    dca0:	f800283a 	ret

0000dca4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    dca4:	defffd04 	addi	sp,sp,-12
    dca8:	dfc00215 	stw	ra,8(sp)
    dcac:	dc400115 	stw	r17,4(sp)
    dcb0:	dc000015 	stw	r16,0(sp)
    dcb4:	2821883a 	mov	r16,r5
    dcb8:	3023883a 	mov	r17,r6
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dcbc:	20002b16 	blt	r4,zero,dd6c <write+0xc8>
    dcc0:	01400304 	movi	r5,12
    dcc4:	000d0940 	call	d094 <__mulsi3>
    dcc8:	00c00074 	movhi	r3,1
    dccc:	18febe04 	addi	r3,r3,-1288
    dcd0:	10c9883a 	add	r4,r2,r3
  
  if (fd)
    dcd4:	20002526 	beq	r4,zero,dd6c <write+0xc8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    dcd8:	20800217 	ldw	r2,8(r4)
    dcdc:	108000cc 	andi	r2,r2,3
    dce0:	10001526 	beq	r2,zero,dd38 <write+0x94>
    dce4:	20800017 	ldw	r2,0(r4)
    dce8:	10800617 	ldw	r2,24(r2)
    dcec:	10001226 	beq	r2,zero,dd38 <write+0x94>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    dcf0:	800b883a 	mov	r5,r16
    dcf4:	880d883a 	mov	r6,r17
    dcf8:	103ee83a 	callr	r2
    dcfc:	1021883a 	mov	r16,r2
    dd00:	1000260e 	bge	r2,zero,dd9c <write+0xf8>
    dd04:	00800074 	movhi	r2,1
    dd08:	10836304 	addi	r2,r2,3468
    dd0c:	10800017 	ldw	r2,0(r2)
    dd10:	1000031e 	bne	r2,zero,dd20 <write+0x7c>
    dd14:	00c00074 	movhi	r3,1
    dd18:	18ca2e04 	addi	r3,r3,10424
    dd1c:	00000206 	br	dd28 <write+0x84>
    dd20:	103ee83a 	callr	r2
    dd24:	1007883a 	mov	r3,r2
      {
        ALT_ERRNO = -rval;
    dd28:	0405c83a 	sub	r2,zero,r16
    dd2c:	18800015 	stw	r2,0(r3)
    dd30:	043fffc4 	movi	r16,-1
    dd34:	00001906 	br	dd9c <write+0xf8>
    dd38:	00800074 	movhi	r2,1
    dd3c:	10836304 	addi	r2,r2,3468
    dd40:	10800017 	ldw	r2,0(r2)
    dd44:	1000031e 	bne	r2,zero,dd54 <write+0xb0>
    dd48:	00c00074 	movhi	r3,1
    dd4c:	18ca2e04 	addi	r3,r3,10424
    dd50:	00000206 	br	dd5c <write+0xb8>
    dd54:	103ee83a 	callr	r2
    dd58:	1007883a 	mov	r3,r2
      }
      return rval;
    }
    else
    {
      ALT_ERRNO = EACCES;
    dd5c:	00800344 	movi	r2,13
    dd60:	18800015 	stw	r2,0(r3)
    dd64:	043fffc4 	movi	r16,-1
    dd68:	00000c06 	br	dd9c <write+0xf8>
    dd6c:	00800074 	movhi	r2,1
    dd70:	10836304 	addi	r2,r2,3468
    dd74:	10800017 	ldw	r2,0(r2)
    dd78:	1000031e 	bne	r2,zero,dd88 <write+0xe4>
    dd7c:	00c00074 	movhi	r3,1
    dd80:	18ca2e04 	addi	r3,r3,10424
    dd84:	00000206 	br	dd90 <write+0xec>
    dd88:	103ee83a 	callr	r2
    dd8c:	1007883a 	mov	r3,r2
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    dd90:	00801444 	movi	r2,81
    dd94:	18800015 	stw	r2,0(r3)
    dd98:	043fffc4 	movi	r16,-1
  }
  return -1;
}
    dd9c:	8005883a 	mov	r2,r16
    dda0:	dfc00217 	ldw	ra,8(sp)
    dda4:	dc400117 	ldw	r17,4(sp)
    dda8:	dc000017 	ldw	r16,0(sp)
    ddac:	dec00304 	addi	sp,sp,12
    ddb0:	f800283a 	ret

0000ddb4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    ddb4:	deffff04 	addi	sp,sp,-4
    ddb8:	dfc00015 	stw	ra,0(sp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, CPU);
    ddbc:	000ea240 	call	ea24 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    ddc0:	00800044 	movi	r2,1
    ddc4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    ddc8:	dfc00017 	ldw	ra,0(sp)
    ddcc:	dec00104 	addi	sp,sp,4
    ddd0:	f800283a 	ret

0000ddd4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    ddd4:	defffd04 	addi	sp,sp,-12
    ddd8:	dfc00215 	stw	ra,8(sp)
    dddc:	dc400115 	stw	r17,4(sp)
    dde0:	dc000015 	stw	r16,0(sp)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, JTAG_UART);
    dde4:	04400074 	movhi	r17,1
    dde8:	8c7f2804 	addi	r17,r17,-864
    ddec:	8809883a 	mov	r4,r17
    ddf0:	000b883a 	mov	r5,zero
    ddf4:	01800204 	movi	r6,8
    ddf8:	000df780 	call	df78 <altera_avalon_jtag_uart_init>

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    ddfc:	04000074 	movhi	r16,1
    de00:	84036004 	addi	r16,r16,3456
    de04:	893ff604 	addi	r4,r17,-40
    de08:	800b883a 	mov	r5,r16
    de0c:	000e51c0 	call	e51c <alt_dev_llist_insert>
    de10:	01000074 	movhi	r4,1
    de14:	21033604 	addi	r4,r4,3288
    de18:	800b883a 	mov	r5,r16
    de1c:	000e51c0 	call	e51c <alt_dev_llist_insert>
    de20:	01000074 	movhi	r4,1
    de24:	21034104 	addi	r4,r4,3332
    de28:	800b883a 	mov	r5,r16
    de2c:	000e51c0 	call	e51c <alt_dev_llist_insert>
    de30:	01000074 	movhi	r4,1
    de34:	21034c04 	addi	r4,r4,3376
    de38:	800b883a 	mov	r5,r16
    de3c:	000e51c0 	call	e51c <alt_dev_llist_insert>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
    ALTERA_UP_AVALON_PARALLEL_PORT_INIT ( DDA_OPTIONS, DDA_Options);
    ALTERA_UP_AVALON_PARALLEL_PORT_INIT ( GREEN_LEDS, Green_LEDs);
    ALTERA_UP_AVALON_PARALLEL_PORT_INIT ( HEX3_HEX0, HEX3_HEX0);
}
    de40:	dfc00217 	ldw	ra,8(sp)
    de44:	dc400117 	ldw	r17,4(sp)
    de48:	dc000017 	ldw	r16,0(sp)
    de4c:	dec00304 	addi	sp,sp,12
    de50:	f800283a 	ret

0000de54 <altera_avalon_jtag_uart_ioctl_fd>:
    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
}

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    de54:	deffff04 	addi	sp,sp,-4
    de58:	dfc00015 	stw	ra,0(sp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    de5c:	21000017 	ldw	r4,0(r4)
    de60:	21000a04 	addi	r4,r4,40
    de64:	000e12c0 	call	e12c <altera_avalon_jtag_uart_ioctl>
}
    de68:	dfc00017 	ldw	ra,0(sp)
    de6c:	dec00104 	addi	sp,sp,4
    de70:	f800283a 	ret

0000de74 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    de74:	deffff04 	addi	sp,sp,-4
    de78:	dfc00015 	stw	ra,0(sp)
    de7c:	2005883a 	mov	r2,r4
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    de80:	21000017 	ldw	r4,0(r4)
    de84:	21000a04 	addi	r4,r4,40
    de88:	11400217 	ldw	r5,8(r2)
    de8c:	000deec0 	call	deec <altera_avalon_jtag_uart_close>
}
    de90:	dfc00017 	ldw	ra,0(sp)
    de94:	dec00104 	addi	sp,sp,4
    de98:	f800283a 	ret

0000de9c <altera_avalon_jtag_uart_write_fd>:
      fd->fd_flags);
}

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    de9c:	deffff04 	addi	sp,sp,-4
    dea0:	dfc00015 	stw	ra,0(sp)
    dea4:	2005883a 	mov	r2,r4
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    dea8:	21000017 	ldw	r4,0(r4)
    deac:	21000a04 	addi	r4,r4,40
    deb0:	11c00217 	ldw	r7,8(r2)
    deb4:	000e3080 	call	e308 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    deb8:	dfc00017 	ldw	ra,0(sp)
    debc:	dec00104 	addi	sp,sp,4
    dec0:	f800283a 	ret

0000dec4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    dec4:	deffff04 	addi	sp,sp,-4
    dec8:	dfc00015 	stw	ra,0(sp)
    decc:	2005883a 	mov	r2,r4
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    ded0:	21000017 	ldw	r4,0(r4)
    ded4:	21000a04 	addi	r4,r4,40
    ded8:	11c00217 	ldw	r7,8(r2)
    dedc:	000e1a00 	call	e1a0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    dee0:	dfc00017 	ldw	ra,0(sp)
    dee4:	dec00104 	addi	sp,sp,4
    dee8:	f800283a 	ret

0000deec <altera_avalon_jtag_uart_close>:
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    deec:	21800c17 	ldw	r6,48(r4)
    def0:	2950000c 	andi	r5,r5,16384
    def4:	280b003a 	cmpeq	r5,r5,zero
    def8:	00000306 	br	df08 <altera_avalon_jtag_uart_close+0x1c>
    if (flags & O_NONBLOCK) {
    defc:	2800021e 	bne	r5,zero,df08 <altera_avalon_jtag_uart_close+0x1c>
    df00:	00bffd44 	movi	r2,-11
    df04:	f800283a 	ret
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    df08:	20800d17 	ldw	r2,52(r4)
    df0c:	11800326 	beq	r2,r6,df1c <altera_avalon_jtag_uart_close+0x30>
    df10:	20c00917 	ldw	r3,36(r4)
    df14:	20800117 	ldw	r2,4(r4)
    df18:	18bff836 	bltu	r3,r2,defc <altera_avalon_jtag_uart_close+0x10>
    df1c:	0005883a 	mov	r2,zero
      return -EWOULDBLOCK; 
    }
  }

  return 0;
}
    df20:	f800283a 	ret

0000df24 <altera_avalon_jtag_uart_timeout>:
static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    df24:	20800017 	ldw	r2,0(r4)
    df28:	10c00104 	addi	r3,r2,4
    df2c:	18800037 	ldwio	r2,0(r3)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    df30:	01410004 	movi	r5,1024
    df34:	1144703a 	and	r2,r2,r5
    df38:	10000526 	beq	r2,zero,df50 <altera_avalon_jtag_uart_timeout+0x2c>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    df3c:	20800817 	ldw	r2,32(r4)
    df40:	1144b03a 	or	r2,r2,r5
    df44:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    df48:	20000915 	stw	zero,36(r4)
    df4c:	00000606 	br	df68 <altera_avalon_jtag_uart_timeout+0x44>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    df50:	20c00917 	ldw	r3,36(r4)
    df54:	00a00034 	movhi	r2,32768
    df58:	10bfff04 	addi	r2,r2,-4
    df5c:	10c00236 	bltu	r2,r3,df68 <altera_avalon_jtag_uart_timeout+0x44>
    sp->host_inactive++;
    df60:	18800044 	addi	r2,r3,1
    df64:	20800915 	stw	r2,36(r4)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    df68:	00800074 	movhi	r2,1
    df6c:	108a3604 	addi	r2,r2,10456
    df70:	10800017 	ldw	r2,0(r2)
    df74:	f800283a 	ret

0000df78 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    df78:	defffd04 	addi	sp,sp,-12
    df7c:	dfc00215 	stw	ra,8(sp)
    df80:	dc000115 	stw	r16,4(sp)
    df84:	2021883a 	mov	r16,r4
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    df88:	00c00044 	movi	r3,1
    df8c:	20c00815 	stw	r3,32(r4)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    df90:	20800017 	ldw	r2,0(r4)
    df94:	10c00135 	stwio	r3,4(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    df98:	d8000015 	stw	zero,0(sp)
    df9c:	2809883a 	mov	r4,r5
    dfa0:	300b883a 	mov	r5,r6
    dfa4:	01800074 	movhi	r6,1
    dfa8:	31b7fe04 	addi	r6,r6,-8200
    dfac:	800f883a 	mov	r7,r16
    dfb0:	000e6280 	call	e628 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    dfb4:	80000915 	stw	zero,36(r16)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    dfb8:	81000204 	addi	r4,r16,8
    dfbc:	00800074 	movhi	r2,1
    dfc0:	108a3604 	addi	r2,r2,10456
    dfc4:	11400017 	ldw	r5,0(r2)
    dfc8:	01800074 	movhi	r6,1
    dfcc:	31b7c904 	addi	r6,r6,-8412
    dfd0:	800f883a 	mov	r7,r16
    dfd4:	000e4840 	call	e484 <alt_alarm_start>
    dfd8:	1000030e 	bge	r2,zero,dfe8 <altera_avalon_jtag_uart_init+0x70>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    dfdc:	00a00034 	movhi	r2,32768
    dfe0:	10bfffc4 	addi	r2,r2,-1
    dfe4:	80800115 	stw	r2,4(r16)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    dfe8:	dfc00217 	ldw	ra,8(sp)
    dfec:	dc000117 	ldw	r16,4(sp)
    dff0:	dec00304 	addi	sp,sp,12
    dff4:	f800283a 	ret

0000dff8 <altera_avalon_jtag_uart_irq>:
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  unsigned int base = sp->base;
    dff8:	22000017 	ldw	r8,0(r4)
    dffc:	03800104 	movi	r14,4
    e000:	4399883a 	add	r12,r8,r14
    e004:	037ffff4 	movhi	r13,65535
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e008:	62c00037 	ldwio	r11,0(r12)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e00c:	5880c00c 	andi	r2,r11,768
    e010:	10004526 	beq	r2,zero,e128 <altera_avalon_jtag_uart_irq+0x130>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e014:	5880400c 	andi	r2,r11,256
    e018:	10002126 	beq	r2,zero,e0a0 <altera_avalon_jtag_uart_irq+0xa8>
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e01c:	20800a17 	ldw	r2,40(r4)
        if (next == sp->rx_out)
    e020:	10800044 	addi	r2,r2,1
    e024:	1081ffcc 	andi	r2,r2,2047
    e028:	20c00b17 	ldw	r3,44(r4)
    e02c:	10c01626 	beq	r2,r3,e088 <altera_avalon_jtag_uart_irq+0x90>
    e030:	02a00014 	movui	r10,32768
    e034:	02400e04 	movi	r9,56
    e038:	01c00044 	movi	r7,1
    e03c:	0181ffc4 	movi	r6,2047
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e040:	41400037 	ldwio	r5,0(r8)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e044:	2a84703a 	and	r2,r5,r10
    e048:	10000d26 	beq	r2,zero,e080 <altera_avalon_jtag_uart_irq+0x88>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e04c:	20800a17 	ldw	r2,40(r4)
    e050:	1105883a 	add	r2,r2,r4
    e054:	1245883a 	add	r2,r2,r9
    e058:	11400005 	stb	r5,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e05c:	20800a17 	ldw	r2,40(r4)
    e060:	11c5883a 	add	r2,r2,r7
    e064:	1184703a 	and	r2,r2,r6
    e068:	20800a15 	stw	r2,40(r4)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e06c:	20800a17 	ldw	r2,40(r4)
        if (next == sp->rx_out)
    e070:	11c5883a 	add	r2,r2,r7
    e074:	1184703a 	and	r2,r2,r6
    e078:	20c00b17 	ldw	r3,44(r4)
    e07c:	10fff01e 	bne	r2,r3,e040 <altera_avalon_jtag_uart_irq+0x48>

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e080:	2b44703a 	and	r2,r5,r13
    e084:	10000626 	beq	r2,zero,e0a0 <altera_avalon_jtag_uart_irq+0xa8>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e088:	20800817 	ldw	r2,32(r4)
    e08c:	00ffff84 	movi	r3,-2
    e090:	10c4703a 	and	r2,r2,r3
    e094:	20800815 	stw	r2,32(r4)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e098:	60800035 	stwio	r2,0(r12)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e09c:	60800037 	ldwio	r2,0(r12)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e0a0:	5880800c 	andi	r2,r11,512
    e0a4:	103fd826 	beq	r2,zero,e008 <altera_avalon_jtag_uart_irq+0x10>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e0a8:	5b44703a 	and	r2,r11,r13
    e0ac:	100ad43a 	srli	r5,r2,16

      while (space > 0 && sp->tx_out != sp->tx_in)
    e0b0:	283fd526 	beq	r5,zero,e008 <altera_avalon_jtag_uart_irq+0x10>
    e0b4:	20c00d17 	ldw	r3,52(r4)
    e0b8:	20800c17 	ldw	r2,48(r4)
    e0bc:	18801126 	beq	r3,r2,e104 <altera_avalon_jtag_uart_irq+0x10c>
    e0c0:	02420e04 	movi	r9,2104
    e0c4:	01800044 	movi	r6,1
    e0c8:	01c1ffc4 	movi	r7,2047
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e0cc:	20800d17 	ldw	r2,52(r4)
    e0d0:	1105883a 	add	r2,r2,r4
    e0d4:	1245883a 	add	r2,r2,r9
    e0d8:	10800007 	ldb	r2,0(r2)
    e0dc:	40800035 	stwio	r2,0(r8)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e0e0:	20800d17 	ldw	r2,52(r4)
    e0e4:	1185883a 	add	r2,r2,r6
    e0e8:	11c4703a 	and	r2,r2,r7
    e0ec:	20800d15 	stw	r2,52(r4)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e0f0:	298bc83a 	sub	r5,r5,r6
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e0f4:	283fc426 	beq	r5,zero,e008 <altera_avalon_jtag_uart_irq+0x10>
    e0f8:	20c00d17 	ldw	r3,52(r4)
    e0fc:	20800c17 	ldw	r2,48(r4)
    e100:	18bff21e 	bne	r3,r2,e0cc <altera_avalon_jtag_uart_irq+0xd4>
      }

      if (space > 0)
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e104:	20c00817 	ldw	r3,32(r4)
    e108:	00bfff44 	movi	r2,-3
    e10c:	1886703a 	and	r3,r3,r2
    e110:	20c00815 	stw	r3,32(r4)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e114:	20800017 	ldw	r2,0(r4)
    e118:	1385883a 	add	r2,r2,r14
    e11c:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e120:	60800037 	ldwio	r2,0(r12)
    e124:	003fb806 	br	e008 <altera_avalon_jtag_uart_irq+0x10>
    e128:	f800283a 	ret

0000e12c <altera_avalon_jtag_uart_ioctl>:
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  int rc = -ENOTTY;

  switch (req)
    e12c:	009a8044 	movi	r2,27137
    e130:	28800326 	beq	r5,r2,e140 <altera_avalon_jtag_uart_ioctl+0x14>
    e134:	009a8084 	movi	r2,27138
    e138:	2880171e 	bne	r5,r2,e198 <altera_avalon_jtag_uart_ioctl+0x6c>
    e13c:	00000d06 	br	e174 <altera_avalon_jtag_uart_ioctl+0x48>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    e140:	20c00117 	ldw	r3,4(r4)
    e144:	00a00034 	movhi	r2,32768
    e148:	10bfffc4 	addi	r2,r2,-1
    e14c:	18801226 	beq	r3,r2,e198 <altera_avalon_jtag_uart_ioctl+0x6c>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e150:	31800017 	ldw	r6,0(r6)
    e154:	30ffff84 	addi	r3,r6,-2
    e158:	10bfff44 	addi	r2,r2,-3
    e15c:	10c0022e 	bgeu	r2,r3,e168 <altera_avalon_jtag_uart_ioctl+0x3c>
    e160:	01a00034 	movhi	r6,32768
    e164:	31bfff84 	addi	r6,r6,-2
    e168:	21800115 	stw	r6,4(r4)
    e16c:	0005883a 	mov	r2,zero
    e170:	f800283a 	ret
    }
    break;

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e174:	20c00117 	ldw	r3,4(r4)
    e178:	00a00034 	movhi	r2,32768
    e17c:	10bfffc4 	addi	r2,r2,-1
    e180:	18800526 	beq	r3,r2,e198 <altera_avalon_jtag_uart_ioctl+0x6c>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e184:	20800917 	ldw	r2,36(r4)
    e188:	10c5803a 	cmpltu	r2,r2,r3
    e18c:	30800015 	stw	r2,0(r6)
    e190:	0005883a 	mov	r2,zero
    e194:	f800283a 	ret
    e198:	00bff9c4 	movi	r2,-25
  default:
    break;
  }

  return rc;
}
    e19c:	f800283a 	ret

0000e1a0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e1a0:	defff604 	addi	sp,sp,-40
    e1a4:	dfc00915 	stw	ra,36(sp)
    e1a8:	df000815 	stw	fp,32(sp)
    e1ac:	ddc00715 	stw	r23,28(sp)
    e1b0:	dd800615 	stw	r22,24(sp)
    e1b4:	dd400515 	stw	r21,20(sp)
    e1b8:	dd000415 	stw	r20,16(sp)
    e1bc:	dcc00315 	stw	r19,12(sp)
    e1c0:	dc800215 	stw	r18,8(sp)
    e1c4:	dc400115 	stw	r17,4(sp)
    e1c8:	dc000015 	stw	r16,0(sp)
    e1cc:	2025883a 	mov	r18,r4
    e1d0:	282f883a 	mov	r23,r5
    e1d4:	3027883a 	mov	r19,r6
    e1d8:	3839883a 	mov	fp,r7
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e1dc:	0180220e 	bge	zero,r6,e268 <altera_avalon_jtag_uart_read+0xc8>
    e1e0:	b82b883a 	mov	r21,r23
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e1e4:	95800a17 	ldw	r22,40(r18)
      out = sp->rx_out;
    e1e8:	94400b17 	ldw	r17,44(r18)

      if (in >= out)
    e1ec:	b4400236 	bltu	r22,r17,e1f8 <altera_avalon_jtag_uart_read+0x58>
        n = in - out;
    e1f0:	b461c83a 	sub	r16,r22,r17
    e1f4:	00000206 	br	e200 <altera_avalon_jtag_uart_read+0x60>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e1f8:	00820004 	movi	r2,2048
    e1fc:	1461c83a 	sub	r16,r2,r17

      if (n == 0)
    e200:	80000d26 	beq	r16,zero,e238 <altera_avalon_jtag_uart_read+0x98>
        break; /* No more data available */

      if (n > space)
    e204:	9829883a 	mov	r20,r19
    e208:	9c001d36 	bltu	r19,r16,e280 <altera_avalon_jtag_uart_read+0xe0>
        n = space;

      memcpy(ptr, sp->rx_buf + out, n);
    e20c:	91400e04 	addi	r5,r18,56
    e210:	a809883a 	mov	r4,r21
    e214:	2c4b883a 	add	r5,r5,r17
    e218:	800d883a 	mov	r6,r16
    e21c:	0008aec0 	call	8aec <memcpy>
      ptr   += n;
    e220:	ac2b883a 	add	r21,r21,r16
      space -= n;
    e224:	9c27c83a 	sub	r19,r19,r16

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e228:	8445883a 	add	r2,r16,r17
    e22c:	1081ffcc 	andi	r2,r2,2047
    e230:	90800b15 	stw	r2,44(r18)
    }
    while (space > 0);
    e234:	04ffeb16 	blt	zero,r19,e1e4 <altera_avalon_jtag_uart_read+0x44>

    /* If we read any data then return it */
    if (ptr != buffer)
    e238:	adc01c1e 	bne	r21,r23,e2ac <altera_avalon_jtag_uart_read+0x10c>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e23c:	e090000c 	andi	r2,fp,16384
    e240:	10000d1e 	bne	r2,zero,e278 <altera_avalon_jtag_uart_read+0xd8>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e244:	90800a17 	ldw	r2,40(r18)
    e248:	b080031e 	bne	r22,r2,e258 <altera_avalon_jtag_uart_read+0xb8>
    e24c:	90c00917 	ldw	r3,36(r18)
    e250:	90800117 	ldw	r2,4(r18)
    e254:	18bffb36 	bltu	r3,r2,e244 <altera_avalon_jtag_uart_read+0xa4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e258:	90800a17 	ldw	r2,40(r18)
    e25c:	b0800426 	beq	r22,r2,e270 <altera_avalon_jtag_uart_read+0xd0>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e260:	04c0030e 	bge	zero,r19,e270 <altera_avalon_jtag_uart_read+0xd0>
    e264:	003fde06 	br	e1e0 <altera_avalon_jtag_uart_read+0x40>
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
    e268:	3890000c 	andi	r2,r7,16384
    e26c:	1000021e 	bne	r2,zero,e278 <altera_avalon_jtag_uart_read+0xd8>
    e270:	00bffec4 	movi	r2,-5
    e274:	00001806 	br	e2d8 <altera_avalon_jtag_uart_read+0x138>
    e278:	00bffd44 	movi	r2,-11
    e27c:	00001606 	br	e2d8 <altera_avalon_jtag_uart_read+0x138>
        break; /* No more data available */

      if (n > space)
        n = space;

      memcpy(ptr, sp->rx_buf + out, n);
    e280:	91400e04 	addi	r5,r18,56
    e284:	a809883a 	mov	r4,r21
    e288:	894b883a 	add	r5,r17,r5
    e28c:	980d883a 	mov	r6,r19
    e290:	0008aec0 	call	8aec <memcpy>
      ptr   += n;
    e294:	aceb883a 	add	r21,r21,r19
      space -= n;
    e298:	0027883a 	mov	r19,zero

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e29c:	a445883a 	add	r2,r20,r17
    e2a0:	1081ffcc 	andi	r2,r2,2047
    e2a4:	90800b15 	stw	r2,44(r18)
    e2a8:	003fe306 	br	e238 <altera_avalon_jtag_uart_read+0x98>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e2ac:	0009303a 	rdctl	r4,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e2b0:	00bfff84 	movi	r2,-2
    e2b4:	2084703a 	and	r2,r4,r2
    e2b8:	1001703a 	wrctl	status,r2

  if (ptr != buffer)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e2bc:	90800817 	ldw	r2,32(r18)
    e2c0:	10800054 	ori	r2,r2,1
    e2c4:	90800815 	stw	r2,32(r18)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e2c8:	90c00017 	ldw	r3,0(r18)
    e2cc:	18800135 	stwio	r2,4(r3)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e2d0:	2001703a 	wrctl	status,r4
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    return ptr - buffer;
    e2d4:	adc5c83a 	sub	r2,r21,r23
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
  else
    return -EIO;
}
    e2d8:	dfc00917 	ldw	ra,36(sp)
    e2dc:	df000817 	ldw	fp,32(sp)
    e2e0:	ddc00717 	ldw	r23,28(sp)
    e2e4:	dd800617 	ldw	r22,24(sp)
    e2e8:	dd400517 	ldw	r21,20(sp)
    e2ec:	dd000417 	ldw	r20,16(sp)
    e2f0:	dcc00317 	ldw	r19,12(sp)
    e2f4:	dc800217 	ldw	r18,8(sp)
    e2f8:	dc400117 	ldw	r17,4(sp)
    e2fc:	dc000017 	ldw	r16,0(sp)
    e300:	dec00a04 	addi	sp,sp,40
    e304:	f800283a 	ret

0000e308 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e308:	defff804 	addi	sp,sp,-32
    e30c:	dfc00715 	stw	ra,28(sp)
    e310:	dd800615 	stw	r22,24(sp)
    e314:	dd400515 	stw	r21,20(sp)
    e318:	dd000415 	stw	r20,16(sp)
    e31c:	dcc00315 	stw	r19,12(sp)
    e320:	dc800215 	stw	r18,8(sp)
    e324:	dc400115 	stw	r17,4(sp)
    e328:	dc000015 	stw	r16,0(sp)
    e32c:	2021883a 	mov	r16,r4
    e330:	282d883a 	mov	r22,r5
    e334:	3011883a 	mov	r8,r6
    e338:	382b883a 	mov	r21,r7
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e33c:	01800616 	blt	zero,r6,e358 <altera_avalon_jtag_uart_write+0x50>
    e340:	2829883a 	mov	r20,r5
    e344:	00002106 	br	e3cc <altera_avalon_jtag_uart_write+0xc4>
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    return ptr - start;
    e348:	a585c83a 	sub	r2,r20,r22
    e34c:	00004306 	br	e45c <altera_avalon_jtag_uart_write+0x154>
  else if (flags & O_NONBLOCK)
    e350:	00bffd44 	movi	r2,-11
    e354:	00004106 	br	e45c <altera_avalon_jtag_uart_write+0x154>
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e358:	2829883a 	mov	r20,r5
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e35c:	84800c17 	ldw	r18,48(r16)
      out = sp->tx_out;
    e360:	81400d17 	ldw	r5,52(r16)

      if (in < out)
    e364:	9140032e 	bgeu	r18,r5,e374 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e368:	2c85c83a 	sub	r2,r5,r18
    e36c:	11bfffc4 	addi	r6,r2,-1
    e370:	00000606 	br	e38c <altera_avalon_jtag_uart_write+0x84>
      else if (out > 0)
    e374:	28000326 	beq	r5,zero,e384 <altera_avalon_jtag_uart_write+0x7c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e378:	00820004 	movi	r2,2048
    e37c:	148dc83a 	sub	r6,r2,r18
    e380:	00000206 	br	e38c <altera_avalon_jtag_uart_write+0x84>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e384:	0081ffc4 	movi	r2,2047
    e388:	148dc83a 	sub	r6,r2,r18

      if (n == 0)
    e38c:	30002626 	beq	r6,zero,e428 <altera_avalon_jtag_uart_write+0x120>
        break;

      if (n > count)
    e390:	4027883a 	mov	r19,r8
    e394:	3023883a 	mov	r17,r6
    e398:	4180012e 	bgeu	r8,r6,e3a0 <altera_avalon_jtag_uart_write+0x98>
    e39c:	4023883a 	mov	r17,r8
        n = count;

      memcpy(sp->tx_buf + in, ptr, n);
    e3a0:	81020e04 	addi	r4,r16,2104
    e3a4:	2489883a 	add	r4,r4,r18
    e3a8:	a00b883a 	mov	r5,r20
    e3ac:	880d883a 	mov	r6,r17
    e3b0:	0008aec0 	call	8aec <memcpy>
      ptr   += n;
    e3b4:	a469883a 	add	r20,r20,r17
      count -= n;
    e3b8:	9c51c83a 	sub	r8,r19,r17

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e3bc:	9445883a 	add	r2,r18,r17
    e3c0:	1081ffcc 	andi	r2,r2,2047
    e3c4:	80800c15 	stw	r2,48(r16)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e3c8:	023fe416 	blt	zero,r8,e35c <altera_avalon_jtag_uart_write+0x54>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e3cc:	0009303a 	rdctl	r4,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e3d0:	00bfff84 	movi	r2,-2
    e3d4:	2084703a 	and	r2,r4,r2
    e3d8:	1001703a 	wrctl	status,r2
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e3dc:	80800817 	ldw	r2,32(r16)
    e3e0:	10800094 	ori	r2,r2,2
    e3e4:	80800815 	stw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e3e8:	80c00017 	ldw	r3,0(r16)
    e3ec:	18800135 	stwio	r2,4(r3)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e3f0:	2001703a 	wrctl	status,r4
    e3f4:	00000706 	br	e414 <altera_avalon_jtag_uart_write+0x10c>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e3f8:	80800d17 	ldw	r2,52(r16)
    e3fc:	1140031e 	bne	r2,r5,e40c <altera_avalon_jtag_uart_write+0x104>
    e400:	80c00917 	ldw	r3,36(r16)
    e404:	80800117 	ldw	r2,4(r16)
    e408:	18bffb36 	bltu	r3,r2,e3f8 <altera_avalon_jtag_uart_write+0xf0>
        ;
#endif /* __ucosii__ */

      if (out == sp->tx_out)
    e40c:	80800d17 	ldw	r2,52(r16)
    e410:	117fed1e 	bne	r2,r5,e3c8 <altera_avalon_jtag_uart_write+0xc0>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e414:	b53fcc1e 	bne	r22,r20,e348 <altera_avalon_jtag_uart_write+0x40>
    return ptr - start;
  else if (flags & O_NONBLOCK)
    e418:	a890000c 	andi	r2,r21,16384
    e41c:	103fcc1e 	bne	r2,zero,e350 <altera_avalon_jtag_uart_write+0x48>
    e420:	00bffec4 	movi	r2,-5
    e424:	00000d06 	br	e45c <altera_avalon_jtag_uart_write+0x154>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e428:	0009303a 	rdctl	r4,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e42c:	00bfff84 	movi	r2,-2
    e430:	2084703a 	and	r2,r4,r2
    e434:	1001703a 	wrctl	status,r2
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e438:	80800817 	ldw	r2,32(r16)
    e43c:	10800094 	ori	r2,r2,2
    e440:	80800815 	stw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e444:	80c00017 	ldw	r3,0(r16)
    e448:	18800135 	stwio	r2,4(r3)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e44c:	2001703a 	wrctl	status,r4
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
    e450:	a890000c 	andi	r2,r21,16384
    e454:	103fe826 	beq	r2,zero,e3f8 <altera_avalon_jtag_uart_write+0xf0>
    e458:	003fee06 	br	e414 <altera_avalon_jtag_uart_write+0x10c>
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
}
    e45c:	dfc00717 	ldw	ra,28(sp)
    e460:	dd800617 	ldw	r22,24(sp)
    e464:	dd400517 	ldw	r21,20(sp)
    e468:	dd000417 	ldw	r20,16(sp)
    e46c:	dcc00317 	ldw	r19,12(sp)
    e470:	dc800217 	ldw	r18,8(sp)
    e474:	dc400117 	ldw	r17,4(sp)
    e478:	dc000017 	ldw	r16,0(sp)
    e47c:	dec00804 	addi	sp,sp,32
    e480:	f800283a 	ret

0000e484 <alt_alarm_start>:
                     void* context)
{
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  
  if (alt_ticks_per_second ())
    e484:	00800074 	movhi	r2,1
    e488:	108a3604 	addi	r2,r2,10456
    e48c:	10800017 	ldw	r2,0(r2)
    e490:	1000021e 	bne	r2,zero,e49c <alt_alarm_start+0x18>
    e494:	00bfde84 	movi	r2,-134
    e498:	f800283a 	ret
  {
    if (alarm)
    e49c:	2000021e 	bne	r4,zero,e4a8 <alt_alarm_start+0x24>
    e4a0:	00bffa84 	movi	r2,-22
    e4a4:	f800283a 	ret
    {
      alarm->callback = callback;
    e4a8:	21800315 	stw	r6,12(r4)
      alarm->context  = context;
    e4ac:	21c00515 	stw	r7,20(r4)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e4b0:	000f303a 	rdctl	r7,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e4b4:	00bfff84 	movi	r2,-2
    e4b8:	3884703a 	and	r2,r7,r2
    e4bc:	1001703a 	wrctl	status,r2
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e4c0:	00800074 	movhi	r2,1
    e4c4:	108a3704 	addi	r2,r2,10460
    e4c8:	10c00017 	ldw	r3,0(r2)
 
      irq_context = alt_irq_disable_all ();
      
      current_nticks = alt_nticks();
      
      alarm->time = nticks + current_nticks + 1; 
    e4cc:	01800044 	movi	r6,1
    e4d0:	1985883a 	add	r2,r3,r6
    e4d4:	2885883a 	add	r2,r5,r2
    e4d8:	20800215 	stw	r2,8(r4)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e4dc:	10c0022e 	bgeu	r2,r3,e4e8 <alt_alarm_start+0x64>
      {
        alarm->rollover = 1;
    e4e0:	21800405 	stb	r6,16(r4)
    e4e4:	00000106 	br	e4ec <alt_alarm_start+0x68>
      }
      else
      {
        alarm->rollover = 0;
    e4e8:	20000405 	stb	zero,16(r4)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e4ec:	00800074 	movhi	r2,1
    e4f0:	10836604 	addi	r2,r2,3480
    e4f4:	20800115 	stw	r2,4(r4)
  entry->next     = list->next;
    e4f8:	10c00017 	ldw	r3,0(r2)
    e4fc:	20c00015 	stw	r3,0(r4)

  list->next->previous = entry;
    e500:	10c00017 	ldw	r3,0(r2)
    e504:	19000115 	stw	r4,4(r3)
  list->next           = entry;
    e508:	11000015 	stw	r4,0(r2)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e50c:	3801703a 	wrctl	status,r7
    e510:	0005883a 	mov	r2,zero
  }
  else
  {
    return -ENOTSUP;
  }
}
    e514:	f800283a 	ret

0000e518 <alt_dcache_flush_all>:
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    e518:	f800283a 	ret

0000e51c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e51c:	deffff04 	addi	sp,sp,-4
    e520:	dfc00015 	stw	ra,0(sp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e524:	20000226 	beq	r4,zero,e530 <alt_dev_llist_insert+0x14>
    e528:	20800217 	ldw	r2,8(r4)
    e52c:	10000d1e 	bne	r2,zero,e564 <alt_dev_llist_insert+0x48>
    e530:	00800074 	movhi	r2,1
    e534:	10836304 	addi	r2,r2,3468
    e538:	10800017 	ldw	r2,0(r2)
    e53c:	1000031e 	bne	r2,zero,e54c <alt_dev_llist_insert+0x30>
    e540:	00c00074 	movhi	r3,1
    e544:	18ca2e04 	addi	r3,r3,10424
    e548:	00000206 	br	e554 <alt_dev_llist_insert+0x38>
    e54c:	103ee83a 	callr	r2
    e550:	1007883a 	mov	r3,r2
  {
    ALT_ERRNO = EINVAL;
    e554:	00800584 	movi	r2,22
    e558:	18800015 	stw	r2,0(r3)
    e55c:	00bffa84 	movi	r2,-22
    e560:	00000706 	br	e580 <alt_dev_llist_insert+0x64>
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e564:	21400115 	stw	r5,4(r4)
  entry->next     = list->next;
    e568:	28800017 	ldw	r2,0(r5)
    e56c:	20800015 	stw	r2,0(r4)

  list->next->previous = entry;
    e570:	28800017 	ldw	r2,0(r5)
    e574:	11000115 	stw	r4,4(r2)
  list->next           = entry;
    e578:	29000015 	stw	r4,0(r5)
    e57c:	0005883a 	mov	r2,zero
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
    e580:	dfc00017 	ldw	ra,0(sp)
    e584:	dec00104 	addi	sp,sp,4
    e588:	f800283a 	ret

0000e58c <alt_icache_flush_all>:
void alt_icache_flush_all (void)
{
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    e58c:	f800283a 	ret

0000e590 <alt_ic_irq_enabled>:
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    e590:	000530fa 	rdctl	r2,ienable
    e594:	00c00044 	movi	r3,1
    e598:	1946983a 	sll	r3,r3,r5
    e59c:	10c4703a 	and	r2,r2,r3

    return (irq_enabled & (1 << irq)) ? 1: 0;
}
    e5a0:	1004c03a 	cmpne	r2,r2,zero
    e5a4:	f800283a 	ret

0000e5a8 <alt_ic_irq_enable>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e5a8:	000d303a 	rdctl	r6,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e5ac:	00bfff84 	movi	r2,-2
    e5b0:	3084703a 	and	r2,r6,r2
    e5b4:	1001703a 	wrctl	status,r2
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active |= (1 << id);
    e5b8:	00c00074 	movhi	r3,1
    e5bc:	18ca3504 	addi	r3,r3,10452
    e5c0:	19000017 	ldw	r4,0(r3)
    e5c4:	00800044 	movi	r2,1
    e5c8:	1144983a 	sll	r2,r2,r5
    e5cc:	1104b03a 	or	r2,r2,r4
    e5d0:	18800015 	stw	r2,0(r3)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e5d4:	18800017 	ldw	r2,0(r3)
    e5d8:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e5dc:	3001703a 	wrctl	status,r6
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    return alt_irq_enable(irq);
}
    e5e0:	0005883a 	mov	r2,zero
    e5e4:	f800283a 	ret

0000e5e8 <alt_ic_irq_disable>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e5e8:	000d303a 	rdctl	r6,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e5ec:	00bfff84 	movi	r2,-2
    e5f0:	3084703a 	and	r2,r6,r2
    e5f4:	1001703a 	wrctl	status,r2
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active &= ~(1 << id);
    e5f8:	00c00074 	movhi	r3,1
    e5fc:	18ca3504 	addi	r3,r3,10452
    e600:	19000017 	ldw	r4,0(r3)
    e604:	00bfff84 	movi	r2,-2
    e608:	1144183a 	rol	r2,r2,r5
    e60c:	1104703a 	and	r2,r2,r4
    e610:	18800015 	stw	r2,0(r3)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e614:	18800017 	ldw	r2,0(r3)
    e618:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e61c:	3001703a 	wrctl	status,r6
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    return alt_irq_disable(irq);
}
    e620:	0005883a 	mov	r2,zero
    e624:	f800283a 	ret

0000e628 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e628:	defffe04 	addi	sp,sp,-8
    e62c:	dfc00115 	stw	ra,4(sp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    e630:	d8800217 	ldw	r2,8(sp)
    e634:	d8800015 	stw	r2,0(sp)
    e638:	000e6480 	call	e648 <alt_iic_isr_register>
}  
    e63c:	dfc00117 	ldw	ra,4(sp)
    e640:	dec00204 	addi	sp,sp,8
    e644:	f800283a 	ret

0000e648 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e648:	defffe04 	addi	sp,sp,-8
    e64c:	dfc00115 	stw	ra,4(sp)
    e650:	dc000015 	stw	r16,0(sp)
  int rc = -EINVAL;  
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  alt_irq_context status;

  if (id < ALT_NIRQ)
    e654:	008007c4 	movi	r2,31
    e658:	1140020e 	bge	r2,r5,e664 <alt_iic_isr_register+0x1c>
    e65c:	00bffa84 	movi	r2,-22
    e660:	00000f06 	br	e6a0 <alt_iic_isr_register+0x58>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e664:	0021303a 	rdctl	r16,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e668:	00bfff84 	movi	r2,-2
    e66c:	8084703a 	and	r2,r16,r2
    e670:	1001703a 	wrctl	status,r2
     * state.
     */

    status = alt_irq_disable_all();

    alt_irq[id].handler = isr;
    e674:	280490fa 	slli	r2,r5,3
    e678:	00c00074 	movhi	r3,1
    e67c:	18ca8204 	addi	r3,r3,10760
    e680:	10c5883a 	add	r2,r2,r3
    e684:	11800015 	stw	r6,0(r2)
    alt_irq[id].context = isr_context;
    e688:	11c00115 	stw	r7,4(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    e68c:	30000226 	beq	r6,zero,e698 <alt_iic_isr_register+0x50>
    e690:	000e5a80 	call	e5a8 <alt_ic_irq_enable>
    e694:	00000106 	br	e69c <alt_iic_isr_register+0x54>
    e698:	000e5e80 	call	e5e8 <alt_ic_irq_disable>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e69c:	8001703a 	wrctl	status,r16

    alt_irq_enable_all(status);
  }

  return rc; 
}
    e6a0:	dfc00117 	ldw	ra,4(sp)
    e6a4:	dc000017 	ldw	r16,0(sp)
    e6a8:	dec00204 	addi	sp,sp,8
    e6ac:	f800283a 	ret

0000e6b0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    e6b0:	defffd04 	addi	sp,sp,-12
    e6b4:	dfc00215 	stw	ra,8(sp)
    e6b8:	dc400115 	stw	r17,4(sp)
    e6bc:	dc000015 	stw	r16,0(sp)
    e6c0:	2023883a 	mov	r17,r4
  int old;

  old = open (name, flags, mode);
    e6c4:	2809883a 	mov	r4,r5
    e6c8:	300b883a 	mov	r5,r6
    e6cc:	380d883a 	mov	r6,r7
    e6d0:	000e7c00 	call	e7c0 <open>
    e6d4:	1021883a 	mov	r16,r2

  if (old >= 0)
    e6d8:	10000e16 	blt	r2,zero,e714 <alt_open_fd+0x64>
  {
    fd->dev      = alt_fd_list[old].dev;
    e6dc:	1009883a 	mov	r4,r2
    e6e0:	01400304 	movi	r5,12
    e6e4:	000d0940 	call	d094 <__mulsi3>
    e6e8:	00c00074 	movhi	r3,1
    e6ec:	18febe04 	addi	r3,r3,-1288
    e6f0:	10c5883a 	add	r2,r2,r3
    e6f4:	10c00017 	ldw	r3,0(r2)
    e6f8:	88c00015 	stw	r3,0(r17)
    fd->priv     = alt_fd_list[old].priv;
    e6fc:	10c00117 	ldw	r3,4(r2)
    e700:	88c00115 	stw	r3,4(r17)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    e704:	10800217 	ldw	r2,8(r2)
    e708:	88800215 	stw	r2,8(r17)

    alt_release_fd (old);
    e70c:	8009883a 	mov	r4,r16
    e710:	000dbec0 	call	dbec <alt_release_fd>
  }
} 
    e714:	dfc00217 	ldw	ra,8(sp)
    e718:	dc400117 	ldw	r17,4(sp)
    e71c:	dc000017 	ldw	r16,0(sp)
    e720:	dec00304 	addi	sp,sp,12
    e724:	f800283a 	ret

0000e728 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    e728:	defffa04 	addi	sp,sp,-24
    e72c:	dfc00515 	stw	ra,20(sp)
    e730:	dd000415 	stw	r20,16(sp)
    e734:	dcc00315 	stw	r19,12(sp)
    e738:	dc800215 	stw	r18,8(sp)
    e73c:	dc400115 	stw	r17,4(sp)
    e740:	dc000015 	stw	r16,0(sp)
    e744:	2005883a 	mov	r2,r4
    e748:	2827883a 	mov	r19,r5
    e74c:	3029883a 	mov	r20,r6
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    e750:	04000074 	movhi	r16,1
    e754:	843ec104 	addi	r16,r16,-1276
    e758:	04800044 	movi	r18,1
    e75c:	04407fc4 	movi	r17,511
    e760:	8009883a 	mov	r4,r16
    e764:	100b883a 	mov	r5,r2
    e768:	900d883a 	mov	r6,r18
    e76c:	880f883a 	mov	r7,r17
    e770:	000e6b00 	call	e6b0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    e774:	843ffd04 	addi	r16,r16,-12
    e778:	8009883a 	mov	r4,r16
    e77c:	980b883a 	mov	r5,r19
    e780:	000d883a 	mov	r6,zero
    e784:	880f883a 	mov	r7,r17
    e788:	000e6b00 	call	e6b0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    e78c:	81000604 	addi	r4,r16,24
    e790:	a00b883a 	mov	r5,r20
    e794:	900d883a 	mov	r6,r18
    e798:	880f883a 	mov	r7,r17
    e79c:	000e6b00 	call	e6b0 <alt_open_fd>
}  
    e7a0:	dfc00517 	ldw	ra,20(sp)
    e7a4:	dd000417 	ldw	r20,16(sp)
    e7a8:	dcc00317 	ldw	r19,12(sp)
    e7ac:	dc800217 	ldw	r18,8(sp)
    e7b0:	dc400117 	ldw	r17,4(sp)
    e7b4:	dc000017 	ldw	r16,0(sp)
    e7b8:	dec00604 	addi	sp,sp,24
    e7bc:	f800283a 	ret

0000e7c0 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    e7c0:	defff904 	addi	sp,sp,-28
    e7c4:	dfc00615 	stw	ra,24(sp)
    e7c8:	dd400515 	stw	r21,20(sp)
    e7cc:	dd000415 	stw	r20,16(sp)
    e7d0:	dcc00315 	stw	r19,12(sp)
    e7d4:	dc800215 	stw	r18,8(sp)
    e7d8:	dc400115 	stw	r17,4(sp)
    e7dc:	dc000015 	stw	r16,0(sp)
    e7e0:	2029883a 	mov	r20,r4
    e7e4:	2827883a 	mov	r19,r5
    e7e8:	302b883a 	mov	r21,r6
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    e7ec:	01400074 	movhi	r5,1
    e7f0:	29436004 	addi	r5,r5,3456
    e7f4:	000ea2c0 	call	ea2c <alt_find_dev>
    e7f8:	1021883a 	mov	r16,r2
    e7fc:	10000226 	beq	r2,zero,e808 <open+0x48>
    e800:	0025883a 	mov	r18,zero
    e804:	00000a06 	br	e830 <open+0x70>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    e808:	a009883a 	mov	r4,r20
    e80c:	000ea9c0 	call	ea9c <alt_find_file>
    e810:	1021883a 	mov	r16,r2

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    e814:	1000051e 	bne	r2,zero,e82c <open+0x6c>
    e818:	047fffc4 	movi	r17,-1
    e81c:	043ffb44 	movi	r16,-19
    e820:	00002d06 	br	e8d8 <open+0x118>
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    e824:	043ffcc4 	movi	r16,-13
    e828:	00002b06 	br	e8d8 <open+0x118>

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    e82c:	04800044 	movi	r18,1
  {
    if ((index = alt_get_fd (dev)) < 0)
    e830:	8009883a 	mov	r4,r16
    e834:	000eb580 	call	eb58 <alt_get_fd>
    e838:	1023883a 	mov	r17,r2
    e83c:	10003516 	blt	r2,zero,e914 <open+0x154>
    {
      status = index;
    }
    else
    {
      fd = &alt_fd_list[index];
    e840:	1009883a 	mov	r4,r2
    e844:	01400304 	movi	r5,12
    e848:	000d0940 	call	d094 <__mulsi3>
    e84c:	02000074 	movhi	r8,1
    e850:	423ebe04 	addi	r8,r8,-1288
    e854:	1209883a 	add	r4,r2,r8
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    e858:	00900034 	movhi	r2,16384
    e85c:	10bfffc4 	addi	r2,r2,-1
    e860:	9886703a 	and	r3,r19,r2
    e864:	20c00215 	stw	r3,8(r4)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    e868:	9004c03a 	cmpne	r2,r18,zero
    e86c:	1000121e 	bne	r2,zero,e8b8 <open+0xf8>

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    e870:	18900034 	orhi	r2,r3,16384
    e874:	20800215 	stw	r2,8(r4)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    e878:	00800074 	movhi	r2,1
    e87c:	10836204 	addi	r2,r2,3464
    e880:	11c00017 	ldw	r7,0(r2)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    e884:	21800017 	ldw	r6,0(r4)
    e888:	000b883a 	mov	r5,zero
    e88c:	4007883a 	mov	r3,r8
    e890:	02400044 	movi	r9,1
    e894:	02000304 	movi	r8,12
    e898:	18800017 	ldw	r2,0(r3)
    e89c:	1180031e 	bne	r2,r6,e8ac <open+0xec>
    e8a0:	18800217 	ldw	r2,8(r3)
    e8a4:	1000010e 	bge	r2,zero,e8ac <open+0xec>
    e8a8:	193fde1e 	bne	r3,r4,e824 <open+0x64>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    e8ac:	2a4b883a 	add	r5,r5,r9
    e8b0:	1a07883a 	add	r3,r3,r8
    e8b4:	397ff82e 	bgeu	r7,r5,e898 <open+0xd8>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    e8b8:	80800317 	ldw	r2,12(r16)
    e8bc:	10001726 	beq	r2,zero,e91c <open+0x15c>
    e8c0:	a00b883a 	mov	r5,r20
    e8c4:	980d883a 	mov	r6,r19
    e8c8:	a80f883a 	mov	r7,r21
    e8cc:	103ee83a 	callr	r2
    e8d0:	1021883a 	mov	r16,r2
    status = -ENODEV;
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    e8d4:	1000110e 	bge	r2,zero,e91c <open+0x15c>
  {
    alt_release_fd (index);  
    e8d8:	8809883a 	mov	r4,r17
    e8dc:	000dbec0 	call	dbec <alt_release_fd>
    e8e0:	00800074 	movhi	r2,1
    e8e4:	10836304 	addi	r2,r2,3468
    e8e8:	10800017 	ldw	r2,0(r2)
    e8ec:	1000031e 	bne	r2,zero,e8fc <open+0x13c>
    e8f0:	00c00074 	movhi	r3,1
    e8f4:	18ca2e04 	addi	r3,r3,10424
    e8f8:	00000206 	br	e904 <open+0x144>
    e8fc:	103ee83a 	callr	r2
    e900:	1007883a 	mov	r3,r2
    ALT_ERRNO = -status;
    e904:	0405c83a 	sub	r2,zero,r16
    e908:	18800015 	stw	r2,0(r3)
    e90c:	047fffc4 	movi	r17,-1
    e910:	00000206 	br	e91c <open+0x15c>
    e914:	1021883a 	mov	r16,r2
    e918:	003fef06 	br	e8d8 <open+0x118>
  }
  
  /* return the reference upon success */

  return index;
}
    e91c:	8805883a 	mov	r2,r17
    e920:	dfc00617 	ldw	ra,24(sp)
    e924:	dd400517 	ldw	r21,20(sp)
    e928:	dd000417 	ldw	r20,16(sp)
    e92c:	dcc00317 	ldw	r19,12(sp)
    e930:	dc800217 	ldw	r18,8(sp)
    e934:	dc400117 	ldw	r17,4(sp)
    e938:	dc000017 	ldw	r16,0(sp)
    e93c:	dec00704 	addi	sp,sp,28
    e940:	f800283a 	ret

0000e944 <alt_alarm_stop>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e944:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e948:	00bfff84 	movi	r2,-2
    e94c:	2884703a 	and	r2,r5,r2
    e950:	1001703a 	wrctl	status,r2
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    e954:	20c00017 	ldw	r3,0(r4)
    e958:	20800117 	ldw	r2,4(r4)
    e95c:	18800115 	stw	r2,4(r3)
  entry->previous->next = entry->next;
    e960:	20800117 	ldw	r2,4(r4)
    e964:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    e968:	21000115 	stw	r4,4(r4)
  entry->next     = entry;
    e96c:	21000015 	stw	r4,0(r4)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e970:	2801703a 	wrctl	status,r5
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  alt_llist_remove (&alarm->llist);
  alt_irq_enable_all (irq_context);
}
    e974:	f800283a 	ret

0000e978 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    e978:	defffd04 	addi	sp,sp,-12
    e97c:	dfc00215 	stw	ra,8(sp)
    e980:	dc400115 	stw	r17,4(sp)
    e984:	dc000015 	stw	r16,0(sp)
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    e988:	d4200f17 	ldw	r16,-32708(gp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    e98c:	d0a6e017 	ldw	r2,-25728(gp)
    e990:	10800044 	addi	r2,r2,1
    e994:	d0a6e015 	stw	r2,-25728(gp)
    e998:	00001b06 	br	ea08 <alt_tick+0x90>

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  {
    next = (alt_alarm*) alarm->llist.next;
    e99c:	84400017 	ldw	r17,0(r16)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    e9a0:	80800403 	ldbu	r2,16(r16)
    e9a4:	10000326 	beq	r2,zero,e9b4 <alt_tick+0x3c>
    e9a8:	d0a6e017 	ldw	r2,-25728(gp)
    e9ac:	1000011e 	bne	r2,zero,e9b4 <alt_tick+0x3c>
    {
      alarm->rollover = 0;
    e9b0:	80000405 	stb	zero,16(r16)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    e9b4:	d0e6e017 	ldw	r3,-25728(gp)
    e9b8:	80800217 	ldw	r2,8(r16)
    e9bc:	18801136 	bltu	r3,r2,ea04 <alt_tick+0x8c>
    e9c0:	80800403 	ldbu	r2,16(r16)
    e9c4:	10000f1e 	bne	r2,zero,ea04 <alt_tick+0x8c>
    {
      next_callback = alarm->callback (alarm->context);
    e9c8:	80800317 	ldw	r2,12(r16)
    e9cc:	81000517 	ldw	r4,20(r16)
    e9d0:	103ee83a 	callr	r2
    e9d4:	1007883a 	mov	r3,r2

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    e9d8:	1000031e 	bne	r2,zero,e9e8 <alt_tick+0x70>
      {
        alt_alarm_stop (alarm);
    e9dc:	8009883a 	mov	r4,r16
    e9e0:	000e9440 	call	e944 <alt_alarm_stop>
    e9e4:	00000706 	br	ea04 <alt_tick+0x8c>
      }
      else
      {
        alarm->time += next_callback;
    e9e8:	80800217 	ldw	r2,8(r16)
    e9ec:	1885883a 	add	r2,r3,r2
    e9f0:	80800215 	stw	r2,8(r16)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    e9f4:	d0e6e017 	ldw	r3,-25728(gp)
    e9f8:	10c0022e 	bgeu	r2,r3,ea04 <alt_tick+0x8c>
        {
          alarm->rollover = 1;
    e9fc:	00800044 	movi	r2,1
    ea00:	80800405 	stb	r2,16(r16)
    ea04:	8821883a 	mov	r16,r17

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    ea08:	d0a00f04 	addi	r2,gp,-32708
    ea0c:	80bfe31e 	bne	r16,r2,e99c <alt_tick+0x24>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
    ea10:	dfc00217 	ldw	ra,8(sp)
    ea14:	dc400117 	ldw	r17,4(sp)
    ea18:	dc000017 	ldw	r16,0(sp)
    ea1c:	dec00304 	addi	sp,sp,12
    ea20:	f800283a 	ret

0000ea24 <altera_nios2_qsys_irq_init>:
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
    NIOS2_WRITE_IENABLE(0);
    ea24:	000170fa 	wrctl	ienable,zero
}
    ea28:	f800283a 	ret

0000ea2c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    ea2c:	defffb04 	addi	sp,sp,-20
    ea30:	dfc00415 	stw	ra,16(sp)
    ea34:	dcc00315 	stw	r19,12(sp)
    ea38:	dc800215 	stw	r18,8(sp)
    ea3c:	dc400115 	stw	r17,4(sp)
    ea40:	dc000015 	stw	r16,0(sp)
    ea44:	2027883a 	mov	r19,r4
    ea48:	2821883a 	mov	r16,r5
  alt_dev* next = (alt_dev*) llist->next;
    ea4c:	2c400017 	ldw	r17,0(r5)
  alt_32 len;

  len  = strlen(name) + 1;
    ea50:	00014200 	call	1420 <strlen>
    ea54:	14800044 	addi	r18,r2,1
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    ea58:	8c000726 	beq	r17,r16,ea78 <alt_find_dev+0x4c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    ea5c:	89000217 	ldw	r4,8(r17)
    ea60:	980b883a 	mov	r5,r19
    ea64:	900d883a 	mov	r6,r18
    ea68:	0008a780 	call	8a78 <memcmp>
    ea6c:	10000326 	beq	r2,zero,ea7c <alt_find_dev+0x50>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
    ea70:	8c400017 	ldw	r17,0(r17)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    ea74:	847ff91e 	bne	r16,r17,ea5c <alt_find_dev+0x30>
    ea78:	0023883a 	mov	r17,zero
  }
  
  /* No match found */
  
  return NULL;
}
    ea7c:	8805883a 	mov	r2,r17
    ea80:	dfc00417 	ldw	ra,16(sp)
    ea84:	dcc00317 	ldw	r19,12(sp)
    ea88:	dc800217 	ldw	r18,8(sp)
    ea8c:	dc400117 	ldw	r17,4(sp)
    ea90:	dc000017 	ldw	r16,0(sp)
    ea94:	dec00504 	addi	sp,sp,20
    ea98:	f800283a 	ret

0000ea9c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    ea9c:	defff904 	addi	sp,sp,-28
    eaa0:	dfc00615 	stw	ra,24(sp)
    eaa4:	dd400515 	stw	r21,20(sp)
    eaa8:	dd000415 	stw	r20,16(sp)
    eaac:	dcc00315 	stw	r19,12(sp)
    eab0:	dc800215 	stw	r18,8(sp)
    eab4:	dc400115 	stw	r17,4(sp)
    eab8:	dc000015 	stw	r16,0(sp)
    eabc:	2025883a 	mov	r18,r4
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    eac0:	00800074 	movhi	r2,1
    eac4:	10835e04 	addi	r2,r2,3448
    eac8:	14400017 	ldw	r17,0(r2)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    eacc:	102b883a 	mov	r21,r2
    ead0:	88801626 	beq	r17,r2,eb2c <alt_find_file+0x90>
    ead4:	053fffc4 	movi	r20,-1
    ead8:	04c00bc4 	movi	r19,47
  {
    len = strlen(next->name);
    eadc:	8c000217 	ldw	r16,8(r17)
    eae0:	8009883a 	mov	r4,r16
    eae4:	00014200 	call	1420 <strlen>
    eae8:	1007883a 	mov	r3,r2
    
    if (next->name[len-1] == '/')
    eaec:	8085883a 	add	r2,r16,r2
    eaf0:	1505883a 	add	r2,r2,r20
    eaf4:	10800007 	ldb	r2,0(r2)
    eaf8:	14c0011e 	bne	r2,r19,eb00 <alt_find_file+0x64>
    {
      len -= 1;
    eafc:	1d07883a 	add	r3,r3,r20
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    eb00:	1c85883a 	add	r2,r3,r18
    eb04:	10800007 	ldb	r2,0(r2)
    eb08:	14c00126 	beq	r2,r19,eb10 <alt_find_file+0x74>
    eb0c:	1000051e 	bne	r2,zero,eb24 <alt_find_file+0x88>
    eb10:	8009883a 	mov	r4,r16
    eb14:	900b883a 	mov	r5,r18
    eb18:	180d883a 	mov	r6,r3
    eb1c:	0008a780 	call	8a78 <memcmp>
    eb20:	10000326 	beq	r2,zero,eb30 <alt_find_file+0x94>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
    eb24:	8c400017 	ldw	r17,0(r17)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    eb28:	8d7fec1e 	bne	r17,r21,eadc <alt_find_file+0x40>
    eb2c:	0023883a 	mov	r17,zero
  }
  
  /* No match found */
  
  return NULL;     
}
    eb30:	8805883a 	mov	r2,r17
    eb34:	dfc00617 	ldw	ra,24(sp)
    eb38:	dd400517 	ldw	r21,20(sp)
    eb3c:	dd000417 	ldw	r20,16(sp)
    eb40:	dcc00317 	ldw	r19,12(sp)
    eb44:	dc800217 	ldw	r18,8(sp)
    eb48:	dc400117 	ldw	r17,4(sp)
    eb4c:	dc000017 	ldw	r16,0(sp)
    eb50:	dec00704 	addi	sp,sp,28
    eb54:	f800283a 	ret

0000eb58 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    eb58:	defffb04 	addi	sp,sp,-20
    eb5c:	dfc00415 	stw	ra,16(sp)
    eb60:	dcc00315 	stw	r19,12(sp)
    eb64:	dc800215 	stw	r18,8(sp)
    eb68:	dc400115 	stw	r17,4(sp)
    eb6c:	dc000015 	stw	r16,0(sp)
    eb70:	2025883a 	mov	r18,r4
    eb74:	0021883a 	mov	r16,zero
    eb78:	00c00074 	movhi	r3,1
    eb7c:	18febe04 	addi	r3,r3,-1288
    eb80:	04c00074 	movhi	r19,1
    eb84:	9cc36204 	addi	r19,r19,3464
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  {
    if (!alt_fd_list[i].dev)
    eb88:	18800017 	ldw	r2,0(r3)
    eb8c:	10000e1e 	bne	r2,zero,ebc8 <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
    eb90:	8009883a 	mov	r4,r16
    eb94:	01400304 	movi	r5,12
    eb98:	000d0940 	call	d094 <__mulsi3>
    eb9c:	00c00074 	movhi	r3,1
    eba0:	18febe04 	addi	r3,r3,-1288
    eba4:	10c5883a 	add	r2,r2,r3
    eba8:	14800015 	stw	r18,0(r2)
      if (i > alt_max_fd)
    ebac:	98800017 	ldw	r2,0(r19)
    ebb0:	14000216 	blt	r2,r16,ebbc <alt_get_fd+0x64>
    ebb4:	8005883a 	mov	r2,r16
    ebb8:	00000806 	br	ebdc <alt_get_fd+0x84>
      {
        alt_max_fd = i;
    ebbc:	9c000015 	stw	r16,0(r19)
    ebc0:	8005883a 	mov	r2,r16
    ebc4:	00000506 	br	ebdc <alt_get_fd+0x84>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    ebc8:	84000044 	addi	r16,r16,1
    ebcc:	18c00304 	addi	r3,r3,12
    ebd0:	00800804 	movi	r2,32
    ebd4:	80bfec1e 	bne	r16,r2,eb88 <alt_get_fd+0x30>
    ebd8:	00bffa04 	movi	r2,-24
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
}
    ebdc:	dfc00417 	ldw	ra,16(sp)
    ebe0:	dcc00317 	ldw	r19,12(sp)
    ebe4:	dc800217 	ldw	r18,8(sp)
    ebe8:	dc400117 	ldw	r17,4(sp)
    ebec:	dc000017 	ldw	r16,0(sp)
    ebf0:	dec00504 	addi	sp,sp,20
    ebf4:	f800283a 	ret

0000ebf8 <exit>:
    ebf8:	defffe04 	addi	sp,sp,-8
    ebfc:	000b883a 	mov	r5,zero
    ec00:	dc000015 	stw	r16,0(sp)
    ec04:	dfc00115 	stw	ra,4(sp)
    ec08:	2021883a 	mov	r16,r4
    ec0c:	000ec340 	call	ec34 <__call_exitprocs>
    ec10:	00800074 	movhi	r2,1
    ec14:	10835b04 	addi	r2,r2,3436
    ec18:	11000017 	ldw	r4,0(r2)
    ec1c:	20800f17 	ldw	r2,60(r4)
    ec20:	10000126 	beq	r2,zero,ec28 <exit+0x30>
    ec24:	103ee83a 	callr	r2
    ec28:	8009883a 	mov	r4,r16
    ec2c:	000ede40 	call	ede4 <_exit>

0000ec30 <register_fini>:
    ec30:	f800283a 	ret

0000ec34 <__call_exitprocs>:
    ec34:	00800074 	movhi	r2,1
    ec38:	10835b04 	addi	r2,r2,3436
    ec3c:	10800017 	ldw	r2,0(r2)
    ec40:	defff304 	addi	sp,sp,-52
    ec44:	df000b15 	stw	fp,44(sp)
    ec48:	d8800115 	stw	r2,4(sp)
    ec4c:	00800034 	movhi	r2,0
    ec50:	1082be04 	addi	r2,r2,2808
    ec54:	1005003a 	cmpeq	r2,r2,zero
    ec58:	d8800215 	stw	r2,8(sp)
    ec5c:	d8800117 	ldw	r2,4(sp)
    ec60:	dd400815 	stw	r21,32(sp)
    ec64:	dd000715 	stw	r20,28(sp)
    ec68:	10805204 	addi	r2,r2,328
    ec6c:	dfc00c15 	stw	ra,48(sp)
    ec70:	ddc00a15 	stw	r23,40(sp)
    ec74:	dd800915 	stw	r22,36(sp)
    ec78:	dcc00615 	stw	r19,24(sp)
    ec7c:	dc800515 	stw	r18,20(sp)
    ec80:	dc400415 	stw	r17,16(sp)
    ec84:	dc000315 	stw	r16,12(sp)
    ec88:	282b883a 	mov	r21,r5
    ec8c:	2039883a 	mov	fp,r4
    ec90:	d8800015 	stw	r2,0(sp)
    ec94:	2829003a 	cmpeq	r20,r5,zero
    ec98:	d8800117 	ldw	r2,4(sp)
    ec9c:	14405217 	ldw	r17,328(r2)
    eca0:	88001026 	beq	r17,zero,ece4 <__call_exitprocs+0xb0>
    eca4:	ddc00017 	ldw	r23,0(sp)
    eca8:	88800117 	ldw	r2,4(r17)
    ecac:	8c802204 	addi	r18,r17,136
    ecb0:	143fffc4 	addi	r16,r2,-1
    ecb4:	80000916 	blt	r16,zero,ecdc <__call_exitprocs+0xa8>
    ecb8:	05bfffc4 	movi	r22,-1
    ecbc:	a000151e 	bne	r20,zero,ed14 <__call_exitprocs+0xe0>
    ecc0:	8409883a 	add	r4,r16,r16
    ecc4:	2105883a 	add	r2,r4,r4
    ecc8:	1485883a 	add	r2,r2,r18
    eccc:	10c02017 	ldw	r3,128(r2)
    ecd0:	a8c01126 	beq	r21,r3,ed18 <__call_exitprocs+0xe4>
    ecd4:	843fffc4 	addi	r16,r16,-1
    ecd8:	85bff81e 	bne	r16,r22,ecbc <__call_exitprocs+0x88>
    ecdc:	d8800217 	ldw	r2,8(sp)
    ece0:	10003126 	beq	r2,zero,eda8 <__call_exitprocs+0x174>
    ece4:	dfc00c17 	ldw	ra,48(sp)
    ece8:	df000b17 	ldw	fp,44(sp)
    ecec:	ddc00a17 	ldw	r23,40(sp)
    ecf0:	dd800917 	ldw	r22,36(sp)
    ecf4:	dd400817 	ldw	r21,32(sp)
    ecf8:	dd000717 	ldw	r20,28(sp)
    ecfc:	dcc00617 	ldw	r19,24(sp)
    ed00:	dc800517 	ldw	r18,20(sp)
    ed04:	dc400417 	ldw	r17,16(sp)
    ed08:	dc000317 	ldw	r16,12(sp)
    ed0c:	dec00d04 	addi	sp,sp,52
    ed10:	f800283a 	ret
    ed14:	8409883a 	add	r4,r16,r16
    ed18:	88c00117 	ldw	r3,4(r17)
    ed1c:	2105883a 	add	r2,r4,r4
    ed20:	1445883a 	add	r2,r2,r17
    ed24:	18ffffc4 	addi	r3,r3,-1
    ed28:	11800217 	ldw	r6,8(r2)
    ed2c:	1c001526 	beq	r3,r16,ed84 <__call_exitprocs+0x150>
    ed30:	10000215 	stw	zero,8(r2)
    ed34:	303fe726 	beq	r6,zero,ecd4 <__call_exitprocs+0xa0>
    ed38:	00c00044 	movi	r3,1
    ed3c:	1c06983a 	sll	r3,r3,r16
    ed40:	90804017 	ldw	r2,256(r18)
    ed44:	8cc00117 	ldw	r19,4(r17)
    ed48:	1884703a 	and	r2,r3,r2
    ed4c:	10001426 	beq	r2,zero,eda0 <__call_exitprocs+0x16c>
    ed50:	90804117 	ldw	r2,260(r18)
    ed54:	1884703a 	and	r2,r3,r2
    ed58:	10000c1e 	bne	r2,zero,ed8c <__call_exitprocs+0x158>
    ed5c:	2105883a 	add	r2,r4,r4
    ed60:	1485883a 	add	r2,r2,r18
    ed64:	11400017 	ldw	r5,0(r2)
    ed68:	e009883a 	mov	r4,fp
    ed6c:	303ee83a 	callr	r6
    ed70:	88800117 	ldw	r2,4(r17)
    ed74:	98bfc81e 	bne	r19,r2,ec98 <__call_exitprocs+0x64>
    ed78:	b8800017 	ldw	r2,0(r23)
    ed7c:	147fd526 	beq	r2,r17,ecd4 <__call_exitprocs+0xa0>
    ed80:	003fc506 	br	ec98 <__call_exitprocs+0x64>
    ed84:	8c000115 	stw	r16,4(r17)
    ed88:	003fea06 	br	ed34 <__call_exitprocs+0x100>
    ed8c:	2105883a 	add	r2,r4,r4
    ed90:	1485883a 	add	r2,r2,r18
    ed94:	11000017 	ldw	r4,0(r2)
    ed98:	303ee83a 	callr	r6
    ed9c:	003ff406 	br	ed70 <__call_exitprocs+0x13c>
    eda0:	303ee83a 	callr	r6
    eda4:	003ff206 	br	ed70 <__call_exitprocs+0x13c>
    eda8:	88800117 	ldw	r2,4(r17)
    edac:	1000081e 	bne	r2,zero,edd0 <__call_exitprocs+0x19c>
    edb0:	89000017 	ldw	r4,0(r17)
    edb4:	20000726 	beq	r4,zero,edd4 <__call_exitprocs+0x1a0>
    edb8:	b9000015 	stw	r4,0(r23)
    edbc:	8809883a 	mov	r4,r17
    edc0:	0000af80 	call	af8 <free>
    edc4:	bc400017 	ldw	r17,0(r23)
    edc8:	883fb71e 	bne	r17,zero,eca8 <__call_exitprocs+0x74>
    edcc:	003fc506 	br	ece4 <__call_exitprocs+0xb0>
    edd0:	89000017 	ldw	r4,0(r17)
    edd4:	882f883a 	mov	r23,r17
    edd8:	2023883a 	mov	r17,r4
    eddc:	883fb21e 	bne	r17,zero,eca8 <__call_exitprocs+0x74>
    ede0:	003fc006 	br	ece4 <__call_exitprocs+0xb0>

0000ede4 <_exit>:
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    ede4:	20000226 	beq	r4,zero,edf0 <_exit+0xc>
    ALT_SIM_FAIL();
    ede8:	002af070 	cmpltui	zero,zero,43969
    edec:	00000106 	br	edf4 <_exit+0x10>
  } else {
    ALT_SIM_PASS();
    edf0:	002af0b0 	cmpltui	zero,zero,43970
    edf4:	003fff06 	br	edf4 <_exit+0x10>
    edf8:	0000ec30 	cmpltui	zero,zero,944
